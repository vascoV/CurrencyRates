kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.Random access$getRandom$p(kotlinx.coroutines.scheduling.CoroutineScheduler)
androidx.core.os.CancellationSignal: void cancel()
androidx.appcompat.R$attr: int background
kotlin.jvm.internal.PropertyReference1Impl: kotlin.reflect.KDeclarationContainer getOwner()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter jsonValue(java.lang.String)
com.example.revolut.rates.R$color: int abc_primary_text_material_light
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(char[],java.lang.Iterable)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEachIndexed$1
io.reactivex.observers.BaseTestConsumer: boolean awaitTerminalEvent()
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable,int)
io.reactivex.Completable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Action)
androidx.core.widget.TextViewCompat: int AUTO_SIZE_TEXT_TYPE_NONE
kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.core.content.res.TypedArrayUtils: android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int)
com.google.gson.internal.LinkedHashTreeMap
com.example.revolut.rates.R$styleable: int LinearLayoutCompat_showDividers
androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)
dagger.android.support.R$styleable: int ActionBar_subtitle
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
kotlin.UByteArray: byte[] constructor-impl(int)
kotlin.coroutines.experimental.ContinuationInterceptor
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintTop_creator
androidx.appcompat.R$attr: int commitIcon
androidx.appcompat.view.SupportActionModeWrapper: java.lang.Object getTag()
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(boolean[],int)
androidx.legacy.coreutils.R$styleable: int GradientColor_android_centerColor
com.google.gson.annotations.Until
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(float[])
io.reactivex.CompletableEmitter: boolean tryOnError(java.lang.Throwable)
androidx.core.view.animation.PathInterpolatorCompat: android.view.animation.Interpolator create(android.graphics.Path)
com.example.revolut.rates.R$drawable: int notification_tile_bg
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem getItem(int)
kotlin.comparisons.ComparisonsKt___ComparisonsKt: java.lang.Object minOf(java.lang.Object,java.lang.Object,java.util.Comparator)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)
com.example.revolut.rates.R$styleable: int MenuItem_iconTint
com.jakewharton.rxbinding3.widget.RxAdapterView: com.jakewharton.rxbinding3.InitialValueObservable itemSelections(android.widget.AdapterView)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double firstOrNull(double[],kotlin.jvm.functions.Function1)
androidx.appcompat.R$id: int search_mag_icon
io.reactivex.Observable: io.reactivex.Completable switchMapCompletableDelayError(io.reactivex.functions.Function)
androidx.appcompat.app.AppCompatDelegate: void setSupportActionBar(androidx.appcompat.widget.Toolbar)
kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)
com.example.revolut.rates.R$id: int parentPanel
dagger.android.support.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
androidx.recyclerview.widget.SortedList$Callback: boolean areContentsTheSame(java.lang.Object,java.lang.Object)
kotlin.collections.AbstractMap
androidx.annotation.StringDef
androidx.lifecycle.GenericLifecycleObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlin.collections.MapsKt___MapsKt: boolean any(java.util.Map)
kotlin.UnsignedKt: double ulongToDouble(long)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getMaxTextLength()
androidx.databinding.adapters.AbsListViewBindingAdapter$OnScrollStateChanged
androidx.cursoradapter.widget.CursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setArrowScale(float)
androidx.appcompat.view.WindowCallbackWrapper: void onContentChanged()
io.reactivex.internal.operators.flowable.FlowableLastMaybe: FlowableLastMaybe(org.reactivestreams.Publisher)
androidx.core.animation.AnimatorKt$addListener$listener$1: void onAnimationRepeat(android.animation.Animator)
androidx.appcompat.R$styleable: int Toolbar_titleMargin
kotlin.jvm.internal.ClassReference: boolean isOpen()
io.reactivex.internal.util.ListAddBiConsumer: java.util.List apply(java.util.List,java.lang.Object)
androidx.legacy.coreutils.R$attr: int fontProviderCerts
io.reactivex.Single: io.reactivex.Flowable merge(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)
androidx.core.app.NotificationCompat$WearableExtender: NotificationCompat$WearableExtender(android.app.Notification)
kotlin.collections.AbstractMap$values$1: boolean contains(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableTakeLastOne: FlowableTakeLastOne(io.reactivex.Flowable)
kotlin.collections.EmptyList: boolean contains(java.lang.Void)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable)
io.reactivex.Observable: io.reactivex.Single isEmpty()
androidx.slidingpanelayout.R$color: int notification_action_color_filter
androidx.recyclerview.R$id: int end
androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
io.reactivex.internal.schedulers.SingleScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: void fill-K6DWlUc(long[],long,int,int)
kotlin.InitializedLazyImpl: InitializedLazyImpl(java.lang.Object)
dagger.android.support.R$attr: int panelBackground
com.example.revolut.rates.di.AppModule_ProvideRetrofitFactory: java.lang.Object get()
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
okhttp3.Dispatcher: int getMaxRequestsPerHost()
okhttp3.internal.cache.DiskLruCache$Editor: void abortUnlessCommitted()
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState
androidx.core.view.MotionEventCompat: int AXIS_SIZE
com.google.gson.internal.LinkedHashTreeMap: int size()
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean isSpanIndexCacheEnabled()
kotlinx.coroutines.NonCancellable
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_android_ttcIndex
io.reactivex.internal.operators.observable.ObservableRepeatUntil
androidx.core.widget.ListPopupWindowCompat: android.view.View$OnTouchListener createDragToOpenListener(android.widget.ListPopupWindow,android.view.View)
io.reactivex.subjects.ReplaySubject: java.lang.Object[] getValues()
io.reactivex.internal.fuseable.FuseToFlowable: io.reactivex.Flowable fuseToFlowable()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int rightToRight
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(boolean[])
okhttp3.Connection: okhttp3.Protocol protocol()
androidx.recyclerview.widget.SimpleItemAnimator: void onRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setX(int)
dagger.internal.TypedReleasableReferenceManagerDecorator: void restoreStrongReferences()
kotlin.UIntArray: kotlin.collections.UIntIterator iterator()
androidx.recyclerview.widget.LinearLayoutManager: android.graphics.PointF computeScrollVectorForPosition(int)
androidx.legacy.v4.R$attr: int fontWeight
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver
kotlin.reflect.KCallable: java.util.List getParameters()
androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider: android.graphics.PointF computeScrollVectorForPosition(int)
androidx.core.R$styleable: int FontFamily_fontProviderAuthority
com.example.revolut.rates.R$drawable: int icon_rub
dagger.android.DaggerDialogFragment_MembersInjector
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(byte[],int,int,int,java.lang.Object)
androidx.databinding.BaseObservable: void notifyPropertyChanged(int)
androidx.loader.R$dimen: int notification_action_icon_size
io.reactivex.internal.subscribers.BlockingLastSubscriber: void onError(java.lang.Throwable)
androidx.constraintlayout.widget.ConstraintSet: void setGuidelineBegin(int,int)
io.reactivex.subjects.ReplaySubject$SizeBoundReplayBuffer: long serialVersionUID
kotlin.UShortArray: int hashCode()
androidx.fragment.app.FragmentTabHost: void setup()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])
androidx.customview.R$styleable: int[] GradientColorItem
androidx.lifecycle.extensions.R$attr: int layout_dodgeInsetEdges
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCheckable(boolean)
androidx.core.view.ViewCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte lastOrNull-GBYM_sE(byte[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(int[],int)
androidx.appcompat.app.ActionBarDrawerToggle: void onDrawerClosed(android.view.View)
okhttp3.Handshake: okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
androidx.constraintlayout.widget.ConstraintSet: void setAlpha(int,float)
io.reactivex.internal.subscribers.SubscriberResourceWrapper: void setResource(io.reactivex.disposables.Disposable)
androidx.core.app.FrameMetricsAggregator: void add(android.app.Activity)
androidx.drawerlayout.R$id: int right_side
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[])
kotlin.text.Regex: kotlin.text.MatchResult find$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object)
io.reactivex.parallel.ParallelFlowable: void subscribe(org.reactivestreams.Subscriber[])
kotlin.reflect.KCallable: java.util.List getTypeParameters()
io.reactivex.internal.operators.flowable.FlowableRetryPredicate
io.reactivex.processors.UnicastProcessor: io.reactivex.processors.UnicastProcessor create(boolean)
io.reactivex.plugins.RxJavaPlugins: void setNewThreadSchedulerHandler(io.reactivex.functions.Function)
kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)
io.reactivex.Flowable: io.reactivex.Flowable defer(java.util.concurrent.Callable)
okhttp3.internal.Internal: java.net.Socket deduplicate(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean hasFocus()
androidx.core.content.res.ResourcesCompat$FontCallback
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KProperty1$Getter getGetter()
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe
kotlinx.coroutines.EventLoop$Factory: kotlinx.coroutines.CoroutineDispatcher invoke(java.lang.Thread,kotlinx.coroutines.Job)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object firstOrNull(java.util.List)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setTextAppearance(android.content.Context,int)
io.reactivex.internal.operators.flowable.FlowableWindow: FlowableWindow(io.reactivex.Flowable,long,long,int)
io.reactivex.internal.operators.parallel.ParallelReduceFull
androidx.appcompat.R$attr: int layout_anchor
io.reactivex.internal.operators.observable.ObservableRange$RangeDisposable: long serialVersionUID
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
androidx.recyclerview.widget.BatchingListUpdateCallback: BatchingListUpdateCallback(androidx.recyclerview.widget.ListUpdateCallback)
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment VERTICAL_MIDDLE
com.google.gson.stream.JsonWriter: JsonWriter(java.io.Writer)
io.reactivex.internal.operators.completable.CompletableAmb
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder callTimeout(java.time.Duration)
androidx.databinding.adapters.TextViewBindingAdapter$OnTextChanged
androidx.slidingpanelayout.R$dimen: int notification_small_icon_size_as_large
android.support.v4.media.MediaDescriptionCompat: java.lang.String DESCRIPTION_KEY_NULL_BUNDLE_FLAG
androidx.databinding.adapters.AutoCompleteTextViewBindingAdapter$FixText
io.reactivex.internal.operators.single.SingleDelayWithCompletable
okhttp3.internal.connection.StreamAllocation: void noNewStreams()
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$buildContinuationByInvokeCall$continuation$1: IntrinsicsKt__IntrinsicsJvmKt$buildContinuationByInvokeCall$continuation$1(kotlin.coroutines.experimental.Continuation,kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(double[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.appcompat.R$attr: int showAsAction
kotlin.io.FilesKt__UtilsKt: java.io.File resolve(java.io.File,java.io.File)
okhttp3.HttpUrl: java.lang.String fragment()
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PREPARE_FROM_URI
androidx.databinding.ObservableArrayList: java.lang.Object set(int,java.lang.Object)
kotlin.text.StringsKt__StringsKt: boolean startsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
android.support.v4.media.session.PlaybackStateCompat: int getState()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean hideOverflowMenu()
com.google.gson.JsonArray: void add(java.lang.Character)
kotlinx.coroutines.CoroutineContextKt: void resetCoroutineId()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getDrawingOrder()
com.google.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.String,java.lang.Throwable)
androidx.viewpager.R$styleable: int GradientColor_android_gradientRadius
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(short[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.parallel.ParallelCollect: ParallelCollect(io.reactivex.parallel.ParallelFlowable,java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)
io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])
androidx.databinding.ObservableLong: int describeContents()
androidx.appcompat.R$drawable: int abc_list_selector_holo_dark
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Companion Companion
dagger.android.support.DaggerAppCompatActivity: void onCreate(android.os.Bundle)
com.example.revolut.rates.R$style: int Widget_AppCompat_PopupMenu_Overflow
androidx.annotation.Size: long min()
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(float[],int)
androidx.recyclerview.R$id: int left
com.example.revolut.rates.R$drawable: int abc_ic_menu_overflow_material
androidx.databinding.adapters.TextViewBindingAdapter$BeforeTextChanged
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List zipWithNext(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelCoroutine: void invokeOnClose(kotlin.jvm.functions.Function1)
androidx.appcompat.R$attr: int alertDialogTheme
io.reactivex.internal.operators.flowable.FlowablePublish$InnerSubscriber: long serialVersionUID
okhttp3.internal.cache.InternalCache: void trackConditionalCacheHit()
androidx.core.app.AppComponentFactory: android.content.ContentProvider instantiateProviderCompat(java.lang.ClassLoader,java.lang.String)
io.reactivex.Maybe: io.reactivex.Maybe cast(java.lang.Class)
androidx.recyclerview.R$styleable: int RecyclerView_android_descendantFocusability
androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
org.intellij.lang.annotations.JdkConstants: JdkConstants()
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context)
kotlin.ULongArray: void storage$annotations()
io.reactivex.internal.subscribers.BlockingBaseSubscriber: java.lang.Object blockingGet()
androidx.core.util.LruCacheKt$lruCache$3: LruCacheKt$lruCache$3()
com.example.revolut.rates.R$attr: int ratingBarStyle
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver: long serialVersionUID
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: java.lang.Object get(int)
kotlin.reflect.KProperty0
androidx.legacy.coreutils.R$styleable: int ColorStateListItem_android_alpha
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable
io.reactivex.Observable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
kotlin.collections.UShortIterator: java.lang.Object next()
androidx.coordinatorlayout.R$id: int right_icon
androidx.core.ktx.R$attr: int fontProviderCerts
androidx.appcompat.R$style: int Base_Widget_AppCompat_Button_Colored
androidx.appcompat.app.AlertController$AlertParams: boolean mIsSingleChoice
kotlin.coroutines.CombinedContext: java.lang.String toString()
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: void clear()
androidx.core.app.BundleCompat: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER
kotlin.io.TextStreamsKt: java.lang.String readText(java.io.Reader)
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: RecyclerView$LayoutManager$Properties()
androidx.appcompat.R$styleable: int ViewStubCompat_android_id
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: kotlinx.coroutines.internal.LockFreeLinkedListNode newNode
dagger.internal.SetFactory$Builder: dagger.internal.SetFactory build()
androidx.core.graphics.MatrixKt: android.graphics.Matrix translationMatrix$default(float,float,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(long[],kotlin.jvm.functions.Function1)
dagger.android.support.R$attr: int titleMargins
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void instantScrollToPosition(int)
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender setLargeIcon(android.graphics.Bitmap)
android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_REMOVE_QUEUE_ITEM
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionMode
io.reactivex.internal.operators.flowable.FlowableWindowTimed: FlowableWindowTimed(io.reactivex.Flowable,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,int,boolean)
io.reactivex.internal.util.EmptyComponent: void onNext(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
io.reactivex.plugins.RxJavaPlugins: void setOnObservableSubscribe(io.reactivex.functions.BiFunction)
androidx.asynclayoutinflater.R$id
androidx.constraintlayout.widget.ConstraintLayout: java.lang.String VERSION
io.reactivex.internal.operators.flowable.FlowableOnErrorReturn
androidx.appcompat.view.menu.MenuAdapter: long getItemId(int)
kotlin.text.CharsKt__CharJVMKt: kotlin.text.CharCategory getCategory(char)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter CURRENCY
io.reactivex.Flowable: io.reactivex.Flowable concatWith(io.reactivex.SingleSource)
androidx.print.PrintHelper: boolean systemSupportsPrint()
androidx.appcompat.app.AlertDialog: void setView(android.view.View)
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.annotation.AnimRes
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
androidx.core.app.NotificationCompat$WearableExtender: boolean getStartScrollBottom()
androidx.customview.widget.ViewDragHelper$Callback: void onViewPositionChanged(android.view.View,int,int,int,int)
dagger.android.support.R$style: int TextAppearance_AppCompat_Body2
kotlinx.coroutines.EventLoopKt: kotlinx.coroutines.CoroutineDispatcher EventLoop(java.lang.Thread,kotlinx.coroutines.Job)
androidx.appcompat.view.ContextThemeWrapper: void setTheme(int)
com.example.revolut.rates.R$style: int Base_Animation_AppCompat_Dialog
io.reactivex.Flowable: java.lang.Iterable blockingLatest()
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(byte[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double lastOrNull(double[],kotlin.jvm.functions.Function1)
kotlin.text.CharDirectionality$Companion
com.example.revolut.rates.R$attr: int singleChoiceItemLayout
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(char[],char,int,int)
android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onQueueChanged(java.util.List)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: java.lang.Character get(int)
androidx.core.view.accessibility.AccessibilityRecordCompat: androidx.core.view.accessibility.AccessibilityRecordCompat obtain(androidx.core.view.accessibility.AccessibilityRecordCompat)
androidx.constraintlayout.solver.Metrics: java.util.ArrayList problematicLayouts
com.example.revolut.rates.R$id: int expanded_menu
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder getRootMenu()
androidx.core.view.ViewCompat: void setLayerPaint(android.view.View,android.graphics.Paint)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapIndexedTo$1: ChannelsKt__Channels_commonKt$mapIndexedTo$1(kotlin.coroutines.Continuation)
com.jakewharton.rxbinding3.core.R$styleable: int GradientColorItem_android_color
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.R$attr: int windowActionModeOverlay
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget ANNOTATION_CLASS
okio.SegmentedByteString: java.lang.Object writeReplace()
kotlin.UnsignedKt: int uintDivide-J1ME1BU(int,int)
androidx.constraintlayout.solver.widgets.ResolutionDimension: void reset()
androidx.core.content.ContextCompat: ContextCompat()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$groupByTo$3
io.reactivex.observers.SerializedObserver: void onComplete()
androidx.recyclerview.R$styleable: int FontFamilyFont_ttcIndex
io.reactivex.Flowable: io.reactivex.Single elementAt(long,java.lang.Object)
dagger.android.support.R$color: int secondary_text_default_material_dark
okhttp3.HttpUrl$Builder: HttpUrl$Builder()
io.reactivex.subjects.PublishSubject: void onComplete()
dagger.android.support.R$styleable: int AppCompatTextView_autoSizePresetSizes
dagger.android.support.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
androidx.constraintlayout.solver.widgets.ConstraintWidget: int mHorizontalResolution
io.reactivex.internal.subscriptions.DeferredScalarSubscription: boolean isCancelled()
io.reactivex.internal.operators.flowable.FlowableWindowBoundary
io.reactivex.internal.operators.parallel.ParallelFilter: void subscribe(org.reactivestreams.Subscriber[])
androidx.fragment.R$layout: int notification_template_part_time
io.reactivex.Single: io.reactivex.Maybe flatMapMaybe(io.reactivex.functions.Function)
dagger.android.support.R$styleable: int SwitchCompat_switchPadding
com.example.revolut.rates.R$styleable: int[] SearchView
androidx.recyclerview.R$dimen: int notification_top_pad_large_text
androidx.core.util.LruCacheKt$lruCache$4: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)
dagger.android.support.R$drawable: int abc_text_select_handle_left_mtrl_light
androidx.core.graphics.RegionKt: android.graphics.Region or(android.graphics.Region,android.graphics.Region)
io.reactivex.SingleConverter: java.lang.Object apply(io.reactivex.Single)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
kotlinx.coroutines.sync.Mutex: boolean isLocked()
kotlin.collections.ArraysKt___ArraysKt: int[] toIntArray(java.lang.Integer[])
kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)
androidx.loader.R$id: int action_container
androidx.core.view.MotionEventCompat
kotlinx.coroutines.test.TestCoroutineContext: void assertUnhandledException$default(kotlinx.coroutines.test.TestCoroutineContext,java.lang.String,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection toCollection(java.lang.Iterable,java.util.Collection)
kotlinx.coroutines.internal.Symbol: java.lang.String toString()
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter STRING_BUILDER
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
io.reactivex.internal.util.SuppressAnimalSniffer
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Display3
com.google.gson.JsonSyntaxException: JsonSyntaxException(java.lang.String)
dagger.android.support.R$dimen: int abc_text_size_display_3_material
androidx.core.app.NotificationCompat$WearableExtender: int SCREEN_TIMEOUT_SHORT
androidx.databinding.adapters.TabWidgetBindingAdapter
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
io.reactivex.Flowable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer)
kotlin.text.StringsKt___StringsKt: boolean none(java.lang.CharSequence)
com.example.revolut.rates.R$styleable: int SwitchCompat_android_thumb
androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)
kotlin.random.Random: byte[] nextBytes$default(kotlin.random.Random,byte[],int,int,int,java.lang.Object)
kotlin.UShortArray: java.lang.Object[] toArray(java.lang.Object[])
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setExtras(android.os.Bundle)
com.google.gson.JsonStreamParser: JsonStreamParser(java.lang.String)
com.example.revolut.rates.DataBinderMapperImpl: DataBinderMapperImpl()
androidx.fragment.app.ListFragment: android.widget.ListAdapter getListAdapter()
androidx.core.app.NotificationCompat: java.lang.String EXTRA_BACKGROUND_IMAGE_URI
androidx.constraintlayout.solver.Cache: Cache()
androidx.vectordrawable.R$styleable: int CoordinatorLayout_statusBarBackground
androidx.coordinatorlayout.R$dimen: int compat_button_padding_horizontal_material
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_DISPLAY_TITLE
io.reactivex.Notification: io.reactivex.Notification createOnComplete()
androidx.appcompat.R$attr: int itemPadding
androidx.core.view.MotionEventCompat: int ACTION_POINTER_UP
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
kotlin.reflect.KProperty2
kotlin.text.Regex: java.util.List split(java.lang.CharSequence,int)
okhttp3.Dispatcher: int queuedCallsCount()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLast-nggk6HY(short[],int)
com.jakewharton.rxbinding3.view.RxMenuItem: io.reactivex.Observable clicks$default(android.view.MenuItem,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.Delay$DefaultImpls
io.reactivex.Flowable: io.reactivex.Flowable compose(io.reactivex.FlowableTransformer)
androidx.appcompat.widget.SearchView: void onActionViewCollapsed()
androidx.constraintlayout.solver.widgets.Barrier: int BOTTOM
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$elementAtOrElse$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.TypeIntrinsics: void throwCce(java.lang.Object,java.lang.String)
io.reactivex.internal.operators.completable.CompletableDisposeOn: CompletableDisposeOn(io.reactivex.CompletableSource,io.reactivex.Scheduler)
androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle: android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
kotlin.random.Random: byte[] nextBytes(byte[],int,int)
androidx.fragment.app.Fragment: boolean hasOptionsMenu()
androidx.appcompat.app.ActionBar$TabListener: void onTabSelected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction)
kotlinx.coroutines.NonDisposableHandle: java.lang.String toString()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onNestedPreFling(android.view.View,float,float)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setGapStrategy(int)
androidx.recyclerview.widget.ViewBoundsCheck$ViewBounds
androidx.media.MediaBrowserServiceCompat: java.lang.String KEY_SEARCH_RESULTS
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(int,byte)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayShowHomeEnabled(boolean)
androidx.legacy.app.ActionBarDrawerToggle$Delegate: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
kotlin.ranges.ULongRange: int hashCode()
kotlinx.coroutines.CloseableCoroutineDispatcher
androidx.constraintlayout.widget.Constraints$LayoutParams: boolean applyElevation
androidx.appcompat.R$styleable: int DrawerArrowToggle_spinBars
kotlinx.coroutines.internal.LockFreeMPSCQueueCore: boolean close()
com.example.revolut.rates.R$dimen: int abc_action_bar_stacked_tab_max_width
kotlinx.coroutines.channels.ReceiveChannel: boolean cancel(java.lang.Throwable)
androidx.core.widget.NestedScrollView: boolean onNestedPreFling(android.view.View,float,float)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object consumeEach(kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.appcompat.widget.FitWindowsFrameLayout
io.reactivex.Maybe: io.reactivex.Maybe takeUntil(io.reactivex.MaybeSource)
io.reactivex.internal.subscribers.LambdaSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.constraintlayout.solver.widgets.Guideline: Guideline()
io.reactivex.internal.operators.flowable.FlowableDebounce
kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection copy(kotlin.reflect.KVariance,kotlin.reflect.KType)
androidx.core.app.NotificationCompat: java.lang.String getCategory(android.app.Notification)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getY()
com.jakewharton.rxbinding3.widget.RxAbsListView: io.reactivex.Observable scrollEvents(android.widget.AbsListView)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintEnd_toStartOf
dagger.android.support.R$styleable: int Toolbar_android_gravity
io.reactivex.internal.disposables.EmptyDisposable: io.reactivex.internal.disposables.EmptyDisposable[] values()
com.google.gson.JsonPrimitive: byte getAsByte()
io.reactivex.internal.observers.QueueDrainObserver
okhttp3.Challenge: java.lang.String toString()
dagger.internal.ReferenceReleasingProvider: java.lang.Object get()
com.example.revolut.rates.R$styleable: int AppCompatTheme_popupWindowStyle
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()
androidx.slidingpanelayout.R$layout: int notification_template_part_chronometer
androidx.databinding.adapters.AutoCompleteTextViewBindingAdapter$IsValid
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.ActionBar$Tab getTabAt(int)
androidx.databinding.ViewDataBinding: void removeOnRebindCallback(androidx.databinding.OnRebindCallback)
androidx.recyclerview.widget.SimpleItemAnimator: boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt max--ajY-9A(int[])
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String getEffectiveTldPlusOne(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableDoOnEach: FlowableDoOnEach(io.reactivex.Flowable,io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Action)
androidx.legacy.content.WakefulBroadcastReceiver: android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPosition(android.view.View)
okhttp3.ResponseBody: long contentLength()
io.reactivex.internal.operators.observable.ObservableGroupBy: void subscribeActual(io.reactivex.Observer)
androidx.constraintlayout.widget.R$attr: int layout_editor_absoluteY
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Headline
kotlin.coroutines.jvm.internal.DebugProbesKt: kotlin.coroutines.Continuation probeCoroutineCreated(kotlin.coroutines.Continuation)
com.example.revolut.rates.R$drawable: int abc_ic_star_half_black_36dp
io.reactivex.internal.observers.BlockingMultiObserver: java.lang.Object blockingGet(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapTo$1
androidx.legacy.coreui.R$dimen: int notification_content_margin_start
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPassword(boolean)
androidx.appcompat.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getDrawWidth()
com.google.gson.JsonArray: short getAsShort()
dagger.android.support.R$style: int Base_ThemeOverlay_AppCompat
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.core.view.inputmethod.InputConnectionCompat: int INPUT_CONTENT_GRANT_READ_URI_PERMISSION
dagger.android.support.R$styleable: int Toolbar_maxButtonHeight
io.reactivex.internal.operators.parallel.ParallelFromArray: void subscribe(org.reactivestreams.Subscriber[])
kotlin.ranges.URangesKt___URangesKt: short coerceAtLeast-5PvTz6A(short,short)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setStream(android.net.Uri)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,boolean)
dagger.android.support.R$color: int background_floating_material_light
kotlin.collections.MapsKt___MapsKt: java.util.List mapNotNull(java.util.Map,kotlin.jvm.functions.Function1)
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingRight
androidx.loader.R$style
dagger.android.support.R$styleable: int AppCompatTheme_dropDownListViewStyle
androidx.databinding.adapters.SearchViewBindingAdapter: void setOnQueryTextListener(android.widget.SearchView,androidx.databinding.adapters.SearchViewBindingAdapter$OnQueryTextSubmit,androidx.databinding.adapters.SearchViewBindingAdapter$OnQueryTextChange)
kotlin.text.MatcherMatchResult$groups$1: int getSize()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List drop(java.lang.Iterable,int)
kotlin.jvm.internal.ClassReference: void sealedSubclasses$annotations()
okhttp3.internal.ws.RealWebSocket$Streams: RealWebSocket$Streams(boolean,okio.BufferedSource,okio.BufferedSink)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat
dagger.android.support.R$style: int TextAppearance_AppCompat_Headline
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty: MaybeSwitchIfEmpty(io.reactivex.MaybeSource,io.reactivex.MaybeSource)
com.example.revolut.rates.R$styleable: int FontFamilyFont_fontWeight
androidx.appcompat.R$drawable: int abc_list_divider_material
com.example.revolut.rates.R$style: int Widget_AppCompat_RatingBar
io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable$FlatMapCompletableObserver: long serialVersionUID
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.Closed getClosedForSend()
androidx.databinding.adapters.TextViewBindingAdapter: void setCapitalize(android.widget.TextView,android.text.method.TextKeyListener$Capitalize)
io.reactivex.Flowable: io.reactivex.Flowable doOnComplete(io.reactivex.functions.Action)
androidx.customview.R$drawable: int notification_bg_normal
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber: long serialVersionUID
androidx.appcompat.R$attr: int divider
com.jakewharton.rxbinding3.widget.RxCompoundButton: com.jakewharton.rxbinding3.InitialValueObservable checkedChanges(android.widget.CompoundButton)
okhttp3.RequestBody
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings
io.reactivex.internal.operators.maybe.MaybeObserveOn
kotlin.jvm.internal.EnumCompanionObject
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel drop$default(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setVisible(boolean,boolean)
kotlin.collections.ArraysKt___ArraysKt: boolean contains(long[],long)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setEnabled(boolean)
androidx.appcompat.R$style: int Base_Widget_AppCompat_SeekBar
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(boolean[],java.lang.Object[],kotlin.jvm.functions.Function2)
com.example.revolut.rates.R$styleable: int AppCompatTextHelper_android_drawableStart
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewAddEvent: java.lang.String toString()
androidx.constraintlayout.solver.widgets.Guideline
androidx.appcompat.R$style: int Widget_AppCompat_RatingBar
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setCustomView(int)
com.example.revolut.rates.R$styleable: int GradientColor_android_tileMode
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
android.support.v4.media.MediaMetadataCompat: java.lang.String getString(java.lang.String)
androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)
androidx.appcompat.R$dimen: int abc_text_size_medium_material
io.reactivex.internal.operators.completable.CompletableFromSingle
kotlin.sequences.FilteringSequence: FilteringSequence(kotlin.sequences.Sequence,boolean,kotlin.jvm.functions.Function1)
androidx.vectordrawable.R$styleable: int CoordinatorLayout_Layout_layout_keyline
android.support.v4.media.session.MediaSessionCompatApi24$Callback: void onPrepareFromSearch(java.lang.String,android.os.Bundle)
androidx.appcompat.R$dimen: int notification_action_icon_size
kotlinx.coroutines.DefaultExecutorKt: kotlinx.coroutines.Delay getDefaultDelay()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: NotificationCompat$CarExtender$UnreadConversation$Builder(java.lang.String)
dagger.android.support.R$string: int abc_activitychooserview_choose_application
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(float[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2)
okhttp3.WebSocketListener: void onOpen(okhttp3.WebSocket,okhttp3.Response)
kotlin.text.CharCategory: kotlin.text.CharCategory CURRENCY_SYMBOL
androidx.constraintlayout.solver.widgets.Guideline: androidx.constraintlayout.solver.widgets.Rectangle getHead()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
io.reactivex.Flowable: io.reactivex.Flowable error(java.lang.Throwable)
androidx.core.graphics.CanvasKt: void withRotation(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1)
io.reactivex.Observable: io.reactivex.Observable delaySubscription(long,java.util.concurrent.TimeUnit)
io.reactivex.internal.util.OpenHashSet: boolean add(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(int[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.example.revolut.rates.R$styleable: int ConstraintSet_android_layout_width
io.reactivex.Observable: io.reactivex.Completable concatMapCompletable(io.reactivex.functions.Function)
androidx.fragment.app.Fragment: android.content.Context requireContext()
com.jakewharton.rxbinding3.view.MenuItemActionViewCollapseEvent: android.view.MenuItem getMenuItem()
androidx.recyclerview.widget.RecyclerView$Adapter: void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView)
com.example.revolut.rates.databinding.RatesItemBinding: com.example.revolut.rates.databinding.RatesItemBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean,java.lang.Object)
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doOnNext(io.reactivex.functions.Consumer,io.reactivex.functions.BiFunction)
io.reactivex.internal.operators.maybe.MaybeObserveOn: void subscribeActual(io.reactivex.MaybeObserver)
androidx.appcompat.R$attr: int suggestionRowLayout
kotlin.collections.EmptyIterator: void remove()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: int getType()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(float[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.content.res.FontResourcesParserCompat: java.util.List readCerts(android.content.res.Resources,int)
androidx.recyclerview.R$styleable: int FontFamily_fontProviderPackage
kotlin.reflect.KClass$DefaultImpls: void isOpen$annotations()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getActions()
com.example.revolut.rates.R$dimen: int fastscroll_default_thickness
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.core.graphics.PointKt: android.graphics.PointF minus(android.graphics.PointF,float)
androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
io.reactivex.processors.PublishProcessor: boolean hasComplete()
androidx.fragment.R$id: int blocking
okhttp3.Interceptor$Chain: int writeTimeoutMillis()
android.support.v4.media.session.IMediaSession: void previous()
dagger.android.support.R$dimen: int abc_action_bar_default_height_material
io.reactivex.internal.util.QueueDrainHelper
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int bottomToBottom
androidx.databinding.adapters.AdapterViewBindingAdapter$OnItemSelectedComponentListener: void onNothingSelected(android.widget.AdapterView)
androidx.core.view.DragStartHelper: void getTouchPosition(android.graphics.Point)
androidx.appcompat.app.AlertDialog: boolean onKeyDown(int,android.view.KeyEvent)
io.reactivex.internal.queue.SpscArrayQueue
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder client(okhttp3.OkHttpClient)
io.reactivex.processors.PublishProcessor: boolean hasThrowable()
androidx.annotation.IntegerRes
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
io.reactivex.subscribers.TestSubscriber: io.reactivex.observers.BaseTestConsumer assertSubscribed()
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)
kotlin.ranges.IntRange: kotlin.ranges.IntRange$Companion Companion
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction disallowAddToBackStack()
io.reactivex.internal.operators.flowable.FlowableDebounceTimed
kotlin.reflect.KClass: boolean isData()
kotlin.experimental.BitwiseOperationsKt
androidx.fragment.app.FragmentTransitionImpl: void bfsAddViewChildren(java.util.List,android.view.View)
androidx.appcompat.widget.AppCompatSeekBar: void jumpDrawablesToCurrentState()
io.reactivex.internal.operators.observable.ObservableRetryPredicate: ObservableRetryPredicate(io.reactivex.Observable,long,io.reactivex.functions.Predicate)
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer: long serialVersionUID
com.example.revolut.rates.R$drawable: int abc_tab_indicator_material
okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)
androidx.fragment.app.Fragment: boolean getAllowEnterTransitionOverlap()
androidx.databinding.MergedDataBinderMapper: androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View,int)
androidx.fragment.app.FragmentActivity: java.lang.Object getLastCustomNonConfigurationInstance()
io.reactivex.schedulers.Timed: long time()
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function getInitSingleSchedulerHandler()
okhttp3.CertificatePinner
androidx.databinding.ViewDataBinding: android.view.View getRoot()
io.reactivex.internal.operators.flowable.FlowablePublish
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
kotlinx.coroutines.TimeSource
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener)
androidx.localbroadcastmanager.content.LocalBroadcastManager: void sendBroadcastSync(android.content.Intent)
com.example.revolut.rates.R$styleable: int AppCompatTheme_tooltipFrameBackground
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getMovementGranularities()
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener
androidx.fragment.app.FragmentState
com.google.gson.internal.bind.JsonTreeReader: void beginObject()
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(long[],int)
io.reactivex.Single: io.reactivex.Maybe dematerialize(io.reactivex.functions.Function)
androidx.databinding.BindingAdapter
kotlinx.android.extensions.CacheImplementation$Companion: kotlinx.android.extensions.CacheImplementation getDEFAULT()
io.reactivex.internal.util.AtomicThrowable: long serialVersionUID
io.reactivex.internal.util.SorterFunction
kotlin.collections.MapsKt___MapsKt: java.util.List toList(java.util.Map)
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function5)
androidx.core.view.WindowInsetsCompat: int getStableInsetBottom()
io.reactivex.internal.operators.flowable.FlowableBuffer
com.example.revolut.rates.di.AppModule: AppModule(retrofit2.Retrofit)
androidx.viewpager.R$styleable: int FontFamilyFont_android_fontVariationSettings
io.reactivex.functions.IntFunction
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence takeWhile(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
dagger.android.support.R$styleable: int AppCompatSeekBar_tickMarkTintMode
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sortedDescending-GBYM_sE(byte[])
kotlin.Deprecated: kotlin.DeprecationLevel level()
kotlin.ranges.RangesKt___RangesKt: byte coerceIn(byte,byte,byte)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.ranges.IntRange getNextItem()
androidx.core.view.ViewCompat: void setActivated(android.view.View,boolean)
androidx.arch.core.executor.ArchTaskExecutor
okhttp3.Dispatcher: int runningCallsCount()
androidx.appcompat.app.WindowDecorActionBar: void removeTabAt(int)
androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(android.view.View)
android.support.v4.media.session.MediaControllerCompat: boolean isSessionReady()
kotlin.UShortArray: boolean contains(java.lang.Object)
android.support.v4.media.MediaBrowserCompat$CustomActionCallback
kotlin.text.StringsKt__StringsJVMKt: char[] toCharArray$default(java.lang.String,int,int,int,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber: long serialVersionUID
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapSingleObserver: long serialVersionUID
androidx.core.view.MotionEventCompat: int AXIS_RELATIVE_Y
com.example.revolut.rates.R$attr: int thumbTextPadding
kotlinx.coroutines.channels.SendChannel
androidx.appcompat.widget.SearchView$SearchAutoComplete: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,int)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(int,long)
androidx.core.content.PermissionChecker: int PERMISSION_DENIED
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setFilterBitmap(boolean)
io.reactivex.internal.functions.Functions: io.reactivex.functions.Consumer boundedConsumer(int)
kotlinx.coroutines.JobSupport: java.lang.Throwable getCompletionExceptionOrNull()
dagger.android.support.R$layout: int notification_action
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object random(java.lang.Object[],kotlin.random.Random)
kotlin.TuplesKt: kotlin.Pair to(java.lang.Object,java.lang.Object)
com.example.revolut.rates.R$styleable: int AppCompatTextView_autoSizePresetSizes
io.reactivex.internal.operators.single.SingleFlatMap: SingleFlatMap(io.reactivex.SingleSource,io.reactivex.functions.Function)
kotlin.jvm.functions.FunctionN: java.lang.Object invoke(java.lang.Object[])
androidx.core.app.NotificationCompat$BigPictureStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.core.graphics.ColorKt: int component4(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(int[],kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.completable.CompletableFromPublisher
kotlinx.coroutines.Job: kotlinx.coroutines.Job$Key Key
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mNeutralButtonText
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener
androidx.appcompat.R$styleable: int Spinner_android_popupBackground
kotlin.reflect.KClass$DefaultImpls: void isData$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte lastOrNull(byte[],kotlin.jvm.functions.Function1)
androidx.appcompat.R$attr: int titleTextStyle
androidx.customview.R$drawable: int notify_panel_notification_icon_bg
kotlin.ranges.RangesKt___RangesKt: java.lang.Integer toIntExactOrNull(float)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
io.reactivex.internal.operators.maybe.MaybeDoOnTerminate: MaybeDoOnTerminate(io.reactivex.MaybeSource,io.reactivex.functions.Action)
androidx.media.VolumeProviderCompat: void setCurrentVolume(int)
io.reactivex.processors.PublishProcessor: boolean hasSubscribers()
dagger.android.support.R$styleable: int Toolbar_contentInsetStart
androidx.drawerlayout.R$layout: int notification_template_part_time
io.reactivex.internal.operators.maybe.MaybeZipIterable
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$indexOfFirst$1: java.lang.Object invokeSuspend(java.lang.Object)
io.reactivex.internal.operators.single.SingleNever: void subscribeActual(io.reactivex.SingleObserver)
androidx.lifecycle.extensions.R$integer: int status_bar_notification_info_maxnum
okhttp3.internal.NamedRunnable: void execute()
kotlin.sequences.DropSequence
dagger.android.DaggerFragment_MembersInjector: DaggerFragment_MembersInjector(javax.inject.Provider)
androidx.core.util.SparseArrayKt: boolean isEmpty(android.util.SparseArray)
androidx.core.app.NotificationCompat$Extender
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable runOn(io.reactivex.Scheduler,int)
com.example.revolut.rates.R$id: int icon
androidx.appcompat.widget.DecorToolbar: void setDropdownSelectedPosition(int)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.core.R$layout: int notification_template_part_chronometer
io.reactivex.internal.operators.observable.ObservableElementAtMaybe
io.reactivex.internal.operators.flowable.FlowableInterval
androidx.core.app.SharedElementCallback: void onSharedElementsArrived(java.util.List,java.util.List,androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener)
androidx.legacy.coreutils.R$drawable: int notification_template_icon_bg
okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_font
android.support.v4.media.session.MediaControllerCompatApi24$TransportControls: void prepareFromMediaId(java.lang.Object,java.lang.String,android.os.Bundle)
androidx.core.app.ActivityCompat$PermissionCompatDelegate: boolean requestPermissions(android.app.Activity,java.lang.String[],int)
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder superscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: DrawerArrowDrawable(android.content.Context)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener)
kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)
dagger.android.support.R$attr
dagger.android.support.DaggerAppCompatDialogFragment_MembersInjector: void injectMembers(dagger.android.support.DaggerAppCompatDialogFragment)
androidx.legacy.coreui.R$drawable: int notification_template_icon_bg
androidx.constraintlayout.solver.Metrics: long resolutions
androidx.appcompat.R$id
androidx.core.app.NotificationCompat$BigTextStyle: NotificationCompat$BigTextStyle(androidx.core.app.NotificationCompat$Builder)
io.reactivex.Flowable: Flowable()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.databinding.adapters.TextViewBindingAdapter: void setDrawableLeft(android.widget.TextView,android.graphics.drawable.Drawable)
io.reactivex.Maybe: io.reactivex.Maybe filter(io.reactivex.functions.Predicate)
kotlin.collections.MapsKt
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)
androidx.fragment.app.FragmentTransitionImpl: void addTarget(java.lang.Object,android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.Object getInfo()
androidx.recyclerview.widget.AsyncListUtil: void refresh()
com.example.revolut.rates.R$attr: int activityChooserViewStyle
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(char[],java.util.Collection,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_Spinner_Underlined
io.reactivex.internal.operators.observable.ObservableUsing
io.reactivex.schedulers.Timed: java.lang.String toString()
androidx.appcompat.view.menu.BaseMenuPresenter: boolean flagActionItems()
androidx.databinding.adapters.RatingBarBindingAdapter: RatingBarBindingAdapter()
androidx.core.app.NotificationCompat$Action: int getSemanticAction()
io.reactivex.internal.operators.observable.ObservableRetryWhen: ObservableRetryWhen(io.reactivex.ObservableSource,io.reactivex.functions.Function)
okhttp3.FormBody: java.lang.String name(int)
kotlin.properties.Delegates: kotlin.properties.ReadWriteProperty observable(java.lang.Object,kotlin.jvm.functions.Function3)
io.reactivex.internal.operators.flowable.FlowableDoAfterNext: FlowableDoAfterNext(io.reactivex.Flowable,io.reactivex.functions.Consumer)
com.example.revolut.rates.R$dimen: int notification_media_narrow_margin
kotlinx.coroutines.DisposableHandle
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function3)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
androidx.slidingpanelayout.widget.SlidingPaneLayout: void onAttachedToWindow()
androidx.core.util.RangeKt$toClosedRange$1: boolean contains(java.lang.Comparable)
androidx.collection.LruCache: int evictionCount()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setMessage(int)
androidx.appcompat.R$style: int Widget_AppCompat_Button_Small
io.reactivex.internal.operators.maybe.MaybeUsing
io.reactivex.internal.operators.maybe.MaybeDoFinally: void subscribeActual(io.reactivex.MaybeObserver)
androidx.core.graphics.ColorKt: int component3(int)
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver: long serialVersionUID
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getContainerItemSkip()
com.example.revolut.rates.R$style: int ThemeOverlay_AppCompat_ActionBar
io.reactivex.internal.operators.observable.ObservableAllSingle: void subscribeActual(io.reactivex.SingleObserver)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long maxWith(long[],java.util.Comparator)
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher: MaybeTimeoutPublisher(io.reactivex.MaybeSource,org.reactivestreams.Publisher,io.reactivex.MaybeSource)
kotlin.text.StringsKt__StringsKt: java.lang.String padStart(java.lang.String,int,char)
com.google.gson.JsonNull: int hashCode()
kotlin.text.CharsKt__CharJVMKt: kotlin.text.CharDirectionality getDirectionality(char)
androidx.core.util.SparseLongArrayKt$keyIterator$1: void setIndex(int)
androidx.legacy.coreui.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
androidx.appcompat.R$attr: int listDividerAlertDialog
androidx.legacy.coreui.R$styleable: int[] CoordinatorLayout
kotlinx.coroutines.selects.SelectBuilderImpl: void resumeSelectCancellableWithException(java.lang.Throwable)
kotlin.jvm.internal.Ref
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: void fill-WpHrYlw(byte[],byte,int,int)
io.reactivex.internal.queue.SpscLinkedArrayQueue: boolean offer(java.lang.Object,java.lang.Object)
kotlinx.coroutines.DispatchedTask: java.lang.Object takeState()
io.reactivex.Observable: io.reactivex.Observable timeInterval(io.reactivex.Scheduler)
com.example.revolut.rates.R$dimen: int abc_dialog_padding_top_material
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax: io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax[] values()
kotlin.text.StringsKt__StringsKt: kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean)
okhttp3.internal.connection.StreamAllocation
io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(java.lang.Iterable,io.reactivex.functions.Function)
androidx.core.ktx.R$styleable: int[] ColorStateListItem
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View)
kotlinx.coroutines.DispatchedContinuation: void access$set_state$p(kotlinx.coroutines.DispatchedContinuation,java.lang.Object)
okhttp3.Address
androidx.recyclerview.R$dimen: int compat_button_padding_vertical_material
androidx.core.R$attr: int fontProviderCerts
androidx.collection.CircularIntArray: boolean isEmpty()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence windowed$default(kotlin.sequences.Sequence,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
io.reactivex.internal.schedulers.NewThreadWorker: io.reactivex.internal.schedulers.ScheduledRunnable scheduleActual(java.lang.Runnable,long,java.util.concurrent.TimeUnit,io.reactivex.internal.disposables.DisposableContainer)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadMessage(java.lang.String)
androidx.core.view.ViewKt: void doOnNextLayout(android.view.View,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentController: void dispatchPause()
androidx.fragment.app.FragmentActivity: void onPause()
androidx.appcompat.R$styleable: int ViewStubCompat_android_inflatedId
androidx.appcompat.widget.Toolbar: void setContentInsetsRelative(int,int)
androidx.core.util.SparseLongArrayKt$keyIterator$1
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver$OtherObserver: long serialVersionUID
android.support.v4.media.session.MediaSessionCompat$Callback
androidx.appcompat.app.WindowDecorActionBar: void setIcon(int)
android.support.v4.media.session.MediaSessionCompat: void setActive(boolean)
androidx.constraintlayout.solver.LinearSystem: void addGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)
androidx.viewpager.R$attr: int font
com.jakewharton.rxbinding3.widget.TextViewEditorActionEvent: boolean equals(java.lang.Object)
dagger.android.support.R$styleable: int AppCompatTheme_actionModePasteDrawable
androidx.databinding.adapters.FrameLayoutBindingAdapter
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingStart()
androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[])
okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)
android.support.v4.media.MediaDescriptionCompat: java.lang.CharSequence getTitle()
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(long[],long,int,int,int,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableElementAtSingle: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.flowable.FlowableAutoConnect: FlowableAutoConnect(io.reactivex.flowables.ConnectableFlowable,int,io.reactivex.functions.Consumer)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder enableComplexMapKeySerialization()
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1: CollectionsKt__CollectionsKt$binarySearchBy$1(kotlin.jvm.functions.Function1,java.lang.Comparable)
io.reactivex.Flowable: io.reactivex.Flowable window(java.util.concurrent.Callable,int)
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.experimental.Continuation createCoroutineUnchecked(kotlin.jvm.functions.Function1,kotlin.coroutines.experimental.Continuation)
androidx.fragment.app.Fragment: java.lang.Object getSharedElementReturnTransition()
com.example.revolut.rates.R$string: int abc_font_family_subhead_material
com.example.revolut.rates.R$layout: int abc_dialog_title_material
okio.DeflaterSink
androidx.databinding.ObservableFloat: long serialVersionUID
androidx.appcompat.R$styleable: int[] AppCompatTextView
androidx.appcompat.widget.TintTypedArray: android.content.res.Resources getResources()
com.example.revolut.rates.R$style: int Widget_AppCompat_ActionBar_TabText
okhttp3.WebSocket: okhttp3.Request request()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: java.lang.Double get(int)
dagger.android.support.R$color: int bright_foreground_disabled_material_dark
dagger.android.support.R$styleable: int AlertDialog_android_layout
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setHotspotBounds(int,int,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: int lastIndexOf-VKZWuLQ(long)
androidx.appcompat.R$drawable: int abc_scrubber_primary_mtrl_alpha
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
okio.Buffer: okio.Buffer$UnsafeCursor readUnsafe(okio.Buffer$UnsafeCursor)
io.reactivex.internal.subscriptions.AsyncSubscription: void setSubscription(org.reactivestreams.Subscription)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
kotlin.jvm.internal.MutablePropertyReference0Impl: MutablePropertyReference0Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
androidx.databinding.ListChangeRegistry
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentAction(int)
androidx.arch.core.executor.ArchTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
kotlin.ULong: boolean equals-impl(long,java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout: void onViewRemoved(android.view.View)
androidx.core.app.ComponentActivity: ComponentActivity()
androidx.core.content.res.TypedArrayKt: android.graphics.drawable.Drawable getDrawableOrThrow(android.content.res.TypedArray,int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
dagger.android.support.R$id: int end
androidx.legacy.v4.R$attr: int keylines
androidx.appcompat.view.ActionMode: void setTag(java.lang.Object)
io.reactivex.parallel.ParallelFailureHandling: io.reactivex.parallel.ParallelFailureHandling valueOf(java.lang.String)
io.reactivex.internal.operators.observable.ObservableCountSingle: ObservableCountSingle(io.reactivex.ObservableSource)
androidx.appcompat.widget.ListPopupWindow: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
androidx.core.app.NotificationCompat: int DEFAULT_ALL
androidx.appcompat.widget.DecorToolbar: void setCollapsible(boolean)
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent copy(android.view.View,int,int,int,int,int,int,int,int)
androidx.databinding.adapters.SearchViewBindingAdapter: void setOnSuggestListener(android.widget.SearchView,androidx.databinding.adapters.SearchViewBindingAdapter$OnSuggestionSelect,androidx.databinding.adapters.SearchViewBindingAdapter$OnSuggestionClick)
androidx.recyclerview.widget.LinearLayoutManager: boolean canScrollVertically()
io.reactivex.android.schedulers.AndroidSchedulers: io.reactivex.Scheduler from(android.os.Looper)
androidx.legacy.v4.R$id: int action_image
kotlin.jvm.internal.FloatCompanionObject
kotlin.text.RegexOption: kotlin.text.RegexOption UNIX_LINES
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: long serialVersionUID
androidx.asynclayoutinflater.R$style: int TextAppearance_Compat_Notification_Line2
androidx.media.R$id: int italic
kotlin.collections.unsigned.UArraysKt___UArraysKt: void indices$annotations(byte[])
androidx.appcompat.R$styleable: int ActionBar_icon
androidx.appcompat.widget.DecorContentParent: boolean hasLogo()
dagger.android.support.R$layout: int abc_list_menu_item_layout
androidx.appcompat.widget.ActionBarOverlayLayout: void setMenuPrepared()
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: void invoke(kotlinx.coroutines.selects.SelectClause2,kotlin.jvm.functions.Function2)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(kotlin.Pair[])
androidx.databinding.adapters.TextViewBindingAdapter: void setShadowDy(android.widget.TextView,float)
io.reactivex.Maybe: io.reactivex.Maybe timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.constraintlayout.solver.widgets.ConstraintWidget: java.util.ArrayList getAnchors()
androidx.constraintlayout.solver.widgets.ConstraintAnchor: int USER_CREATOR
kotlin.collections.AbstractList: java.lang.Object get(int)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapIndexedTo$3: ChannelsKt__Channels_commonKt$mapIndexedTo$3(kotlin.coroutines.Continuation)
androidx.fragment.app.DialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
com.google.gson.JsonParser
okhttp3.internal.Internal: void setCache(okhttp3.OkHttpClient$Builder,okhttp3.internal.cache.InternalCache)
androidx.core.os.BuildCompat: boolean isAtLeastN()
androidx.appcompat.widget.ToolbarWidgetWrapper: int getDropdownSelectedPosition()
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuView mMenuView
com.example.revolut.rates.R$styleable: int ActionBar_icon
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int verticalChainStyle
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean doViewsOverlap(android.view.View,android.view.View)
com.example.revolut.rates.data.model.CurrencyResponse: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(boolean[])
androidx.fragment.app.Fragment: int hashCode()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong[] toTypedArray-QwZRm1k(long[])
okhttp3.CacheControl: int minFreshSeconds()
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintGuide_percent
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationY(float)
android.support.v4.media.session.MediaSessionCompat: void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback)
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.channels.AbstractChannel$enqueueReceive$$inlined$addLastIfPrevAndIf$1
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SET_TEXT
io.reactivex.internal.util.BackpressureHelper: long add(java.util.concurrent.atomic.AtomicLong,long)
dagger.android.support.R$styleable: int AppCompatTheme_buttonBarStyle
android.support.v4.media.RatingCompat
okhttp3.CacheControl: boolean noCache()
androidx.vectordrawable.R$id: int start
kotlin.jvm.internal.MutablePropertyReference2Impl: java.lang.Object get(java.lang.Object,java.lang.Object)
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
androidx.lifecycle.extensions.R$styleable: int[] GradientColor
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(char[])
androidx.appcompat.app.WindowDecorActionBar: void setSelectedNavigationItem(int)
androidx.appcompat.R$id: int search_voice_btn
dagger.android.support.R$styleable: int MenuItem_android_icon
androidx.appcompat.R$style: int Animation_AppCompat_Dialog
androidx.appcompat.R$attr: int textAppearanceSearchResultTitle
io.reactivex.internal.util.ListAddBiConsumer
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Display3
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION
io.reactivex.internal.operators.observable.ObservableRefCount: void subscribeActual(io.reactivex.Observer)
kotlin.text.StringsKt__StringsKt: java.lang.String trimEnd(java.lang.String,char[])
kotlinx.coroutines.channels.ConflatedChannel: boolean isBufferAlwaysFull()
androidx.core.app.SharedElementCallback: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
androidx.documentfile.provider.DocumentFile: androidx.documentfile.provider.DocumentFile findFile(java.lang.String)
io.reactivex.internal.operators.maybe.MaybeOnErrorNext: void subscribeActual(io.reactivex.MaybeObserver)
androidx.fragment.app.FragmentHostCallback: void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
androidx.databinding.CallbackRegistry$NotifierCallback: CallbackRegistry$NotifierCallback()
androidx.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_dark
androidx.recyclerview.widget.RecyclerView: void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
com.example.revolut.rates.R$drawable: int icon_hrk
io.reactivex.Flowable: io.reactivex.Flowable mergeWith(io.reactivex.CompletableSource)
kotlin.jvm.internal.FunctionReference: int hashCode()
androidx.appcompat.R$dimen: int notification_subtext_size
kotlin.collections.AbstractMap: void clear()
com.example.revolut.rates.R$drawable: int abc_list_longpressed_holo
kotlinx.coroutines.CoroutineContextKt: java.lang.String DEBUG_PROPERTY_VALUE_OFF
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat obtain(int,float,float,float)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext)
androidx.core.widget.NestedScrollView: boolean fullScroll(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicWidth()
com.jakewharton.rxbinding3.widget.SeekBarProgressChangeEvent: SeekBarProgressChangeEvent(android.widget.SeekBar,int,boolean)
androidx.legacy.coreui.R$drawable: int notification_bg_low_pressed
kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.ContinuationInterceptor$Key Key
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator then(java.util.Comparator,java.util.Comparator)
com.example.revolut.rates.R$color: int tooltip_background_light
kotlin.collections.AbstractMutableList: void add(int,java.lang.Object)
kotlin.text.Charsets: java.nio.charset.Charset UTF32_LE()
androidx.core.widget.NestedScrollView: void addView(android.view.View)
io.reactivex.internal.operators.maybe.MaybeFromAction: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.schedulers.TestScheduler: long now(java.util.concurrent.TimeUnit)
androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)
androidx.customview.R$drawable
androidx.slidingpanelayout.R$styleable: int ColorStateListItem_android_alpha
com.example.revolut.rates.R$id: int scrollIndicatorDown
androidx.viewpager.R$styleable: int GradientColor_android_type
androidx.coordinatorlayout.R$id: int actions
androidx.fragment.app.FragmentManager: int POP_BACK_STACK_INCLUSIVE
io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiPredicate)
dagger.android.support.R$dimen: int abc_select_dialog_padding_start_material
io.reactivex.disposables.Disposables: io.reactivex.disposables.Disposable fromAction(io.reactivex.functions.Action)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)
android.support.v4.media.session.ParcelableVolumeInfo
com.jakewharton.rxbinding3.widget.TextViewEditorActionEvent: java.lang.String toString()
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setActionView(android.view.View)
okhttp3.HttpUrl: java.net.URL url()
android.support.v4.media.session.PlaybackStateCompat$ShuffleMode
io.reactivex.android.MainThreadDisposable: boolean isDisposed()
com.example.revolut.rates.R$color: int abc_color_highlight_material
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
androidx.lifecycle.extensions.R$drawable
androidx.lifecycle.ServiceLifecycleDispatcher
kotlinx.coroutines.scheduling.TasksKt: int BLOCKING_DEFAULT_PARALLELISM
androidx.core.view.DisplayCutoutCompat: int getSafeInsetRight()
kotlin.jvm.internal.Ref$IntRef
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPaneTitle()
androidx.versionedparcelable.VersionedParcelize: boolean isCustom()
androidx.core.os.UserManagerCompat
androidx.versionedparcelable.VersionedParcel: void writeArray(java.lang.Object[],int)
androidx.core.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int)
io.reactivex.internal.disposables.DisposableHelper: boolean isDisposed(io.reactivex.disposables.Disposable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ranges.IntRange getIndices-rL5Bavg(short[])
okio.BufferedSource: java.lang.String readUtf8Line()
io.reactivex.Observable: io.reactivex.Observable timeInterval(java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isValidConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
androidx.collection.SimpleArrayMap: SimpleArrayMap(androidx.collection.SimpleArrayMap)
io.reactivex.internal.operators.observable.ObservableSequenceEqual
androidx.vectordrawable.R$styleable: int[] FontFamilyFont
androidx.core.os.TraceCompat: void beginSection(java.lang.String)
androidx.core.transition.TransitionKt: android.transition.Transition$TransitionListener doOnResume(android.transition.Transition,kotlin.jvm.functions.Function1)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void updateResolutionNodes()
com.example.revolut.rates.R$id: int action_menu_presenter
kotlin.jvm.internal.PropertyReference2Impl: java.lang.Object get(java.lang.Object,java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.String removeSurrounding(java.lang.String,java.lang.CharSequence)
dagger.android.support.R$styleable: int AppCompatTextView_android_textAppearance
com.google.gson.Gson: com.google.gson.internal.Excluder excluder()
androidx.core.R$styleable: int GradientColor_android_centerColor
androidx.asynclayoutinflater.R$dimen: int notification_small_icon_background_padding
com.example.revolut.rates.R$attr: int iconifiedByDefault
io.reactivex.internal.subscribers.BlockingSubscriber: BlockingSubscriber(java.util.Queue)
io.reactivex.internal.operators.observable.ObservableDoOnEach: void subscribeActual(io.reactivex.Observer)
io.reactivex.observers.SafeObserver
android.support.v4.media.MediaDescriptionCompat: long BT_FOLDER_TYPE_PLAYLISTS
kotlinx.coroutines.NonCancellable: boolean isCompleted()
kotlin.text.StringsKt___StringsKt$groupingBy$1
androidx.collection.LongSparseArray: long keyAt(int)
androidx.appcompat.R$dimen: int notification_big_circle_margin
androidx.core.util.LongSparseArrayKt$valueIterator$1: int getIndex()
com.example.revolut.rates.R$integer: int abc_config_activityShortDur
com.example.revolut.rates.R$styleable: int MenuGroup_android_enabled
androidx.appcompat.view.menu.ActionMenuItemView: boolean needsDividerBefore()
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber: long serialVersionUID
androidx.core.ktx.R$dimen: int compat_notification_large_icon_max_height
io.reactivex.internal.operators.completable.CompletableErrorSupplier: void subscribeActual(io.reactivex.CompletableObserver)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
kotlin.jvm.internal.StringCompanionObject: kotlin.jvm.internal.StringCompanionObject INSTANCE
com.example.revolut.rates.R$styleable: int MenuItem_actionViewClass
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: long serialVersionUID
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: ReflectiveTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder,com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory)
kotlinx.coroutines.channels.ClosedReceiveChannelException
androidx.appcompat.view.menu.MenuBuilder: void setOptionalIconsVisible(boolean)
com.example.revolut.rates.R$drawable: int abc_ic_menu_share_mtrl_alpha
kotlin.ULongArray: boolean equals(java.lang.Object)
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: UnbiasedSelectBuilderImpl(kotlin.coroutines.Continuation)
io.reactivex.internal.operators.completable.CompletableCache
androidx.collection.LruCache: java.lang.Object create(java.lang.Object)
androidx.constraintlayout.widget.R$attr: int layout_constraintHeight_min
io.reactivex.internal.operators.observable.ObservableWithLatestFrom
androidx.loader.content.Loader: boolean isAbandoned()
io.reactivex.subjects.SingleSubject: java.lang.Throwable getThrowable()
kotlin.text.RegexKt$fromInt$$inlined$apply$lambda$1: boolean invoke(java.lang.Enum)
com.example.revolut.rates.R$styleable: int[] ColorStateListItem
androidx.appcompat.R$styleable: int AppCompatTheme_borderlessButtonStyle
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
okio.BufferedSource: boolean rangeEquals(long,okio.ByteString)
io.reactivex.Maybe: io.reactivex.Maybe map(io.reactivex.functions.Function)
okhttp3.internal.http2.Http2Codec: void cancel()
com.example.revolut.rates.R$attr: int fastScrollHorizontalThumbDrawable
dagger.android.support.R$style: int Theme_AppCompat_DayNight_Dialog
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_RC4_128_MD5
io.reactivex.internal.operators.flowable.FlowableReduceMaybe
androidx.core.util.LogWriter: void flush()
androidx.appcompat.R$styleable: int SwitchCompat_switchTextAppearance
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_fontStyle
io.reactivex.internal.operators.observable.ObservableFromIterable: void subscribeActual(io.reactivex.Observer)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3)
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.Number)
kotlinx.coroutines.GlobalScope: kotlin.coroutines.CoroutineContext getCoroutineContext()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: int indexOf(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: boolean isActionButton()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
com.jakewharton.rxbinding3.widget.AdapterViewItemSelectionEvent: long getId()
io.reactivex.Completable: io.reactivex.Completable ambWith(io.reactivex.CompletableSource)
androidx.core.R$dimen: int notification_small_icon_background_padding
kotlinx.coroutines.JobKt: boolean cancel$default(kotlin.coroutines.CoroutineContext,java.lang.Throwable,int,java.lang.Object)
kotlin.collections.ShortIterator: void remove()
kotlinx.coroutines.ExecutorCoroutineDispatcherBase: void scheduleResumeAfterDelay(long,java.util.concurrent.TimeUnit,kotlinx.coroutines.CancellableContinuation)
kotlinx.coroutines.channels.BroadcastChannel$DefaultImpls
kotlin.random.XorWowRandom: int nextInt()
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.jakewharton.rxbinding3.widget.SeekBarProgressChangeEvent
okhttp3.internal.http2.Http2Connection: int openStreamCount()
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(long[],kotlin.jvm.functions.Function1)
androidx.core.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)
androidx.core.app.NotificationManagerCompat: void notify(java.lang.String,int,android.app.Notification)
com.google.gson.FieldNamingPolicy
androidx.appcompat.view.menu.ActionMenuItemView
kotlin.ResultKt
io.reactivex.internal.operators.maybe.MaybeTimer$TimerDisposable: long serialVersionUID
androidx.appcompat.R$anim: int abc_slide_in_top
kotlinx.coroutines.CompletionHandlerBase
androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)
androidx.drawerlayout.R$attr: int fontWeight
org.reactivestreams.Subscription: void cancel()
com.jakewharton.rxbinding3.core.R$attr: int fontProviderAuthority
okio.ForwardingSink: void write(okio.Buffer,long)
androidx.core.R$drawable: int notification_bg_low_normal
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.customview.R$color: int ripple_material_light
kotlinx.coroutines.ExecutorsKt
io.reactivex.internal.schedulers.ExecutorScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
dagger.android.support.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
okhttp3.Cache: boolean isClosed()
kotlin.UShortArray: boolean equals-impl0(short[],short[])
kotlin.random.AbstractPlatformRandom: int nextBits(int)
kotlin.text.CharCategory: kotlin.text.CharCategory SURROGATE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isCheckable()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onActive()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isClickable()
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber: long serialVersionUID
io.reactivex.observers.TestObserver: io.reactivex.observers.TestObserver assertNotSubscribed()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: void onAuthenticationHelp(int,java.lang.CharSequence)
com.example.revolut.rates.R$styleable: int MenuView_android_windowAnimationStyle
androidx.core.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)
io.reactivex.internal.observers.DeferredScalarDisposable: boolean isEmpty()
androidx.legacy.v4.R$styleable: int[] GradientColor
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_CAPTIONING_ENABLED
com.example.revolut.rates.R$styleable: int ConstraintSet_chainUseRtl
androidx.core.view.MenuCompat: void setShowAsAction(android.view.MenuItem,int)
kotlin.jvm.internal.PrimitiveSpreadBuilder: int getSize(java.lang.Object)
okhttp3.WebSocket: boolean send(java.lang.String)
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout: void addToSolver(androidx.constraintlayout.solver.LinearSystem)
androidx.lifecycle.extensions.R$styleable: int FontFamilyFont_android_font
kotlin.text.StringsKt___StringsKt: java.util.List windowed(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_SPLIT_SCREEN_DIVIDER
kotlinx.coroutines.internal.LockFreeLinkedListKt: int FAILURE
androidx.appcompat.R$string: int search_menu_title
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Menu
androidx.constraintlayout.widget.ConstraintSet: void setApplyElevation(int,boolean)
kotlin.text.UStringsKt: kotlin.UShort toUShortOrNull(java.lang.String)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.lang.Object[] copyToArrayOfAny(java.lang.Object[],boolean)
kotlin.collections.ArraysKt___ArraysKt: int[] sliceArray(int[],kotlin.ranges.IntRange)
androidx.core.app.NotificationManagerCompat: void notify(int,android.app.Notification)
android.support.v4.media.MediaMetadataCompatApi21$Builder: java.lang.Object newInstance()
android.support.v4.media.session.MediaSessionCompat: MediaSessionCompat(android.content.Context,java.lang.String,android.os.Bundle)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] sortedArrayDescending-rL5Bavg(short[])
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
androidx.media.MediaBrowserProtocol: java.lang.String DATA_MEDIA_ITEM_LIST
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
androidx.databinding.adapters.AdapterViewBindingAdapter: void setSelectedItemPosition(android.widget.AdapterView,int,android.widget.Adapter)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_rotationY
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
io.reactivex.internal.operators.observable.ObservableSkipWhile: void subscribeActual(io.reactivex.Observer)
androidx.annotation.RequiresPermission
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_RIGHT
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder onlyIfCached()
io.reactivex.disposables.CompositeDisposable: boolean delete(io.reactivex.disposables.Disposable)
kotlin.UInt: int SIZE_BITS
androidx.core.R$dimen: int notification_large_icon_width
kotlin.ranges.IntProgressionIterator: int nextInt()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean isRunning()
androidx.databinding.adapters.RadioGroupBindingAdapter: void setCheckedButton(android.widget.RadioGroup,int)
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER_SEPARATOR
androidx.print.PrintHelper: void setOrientation(int)
androidx.appcompat.R$dimen: int abc_text_size_headline_material
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
okhttp3.internal.cache.InternalCache: void update(okhttp3.Response,okhttp3.Response)
kotlin.collections.ArraysKt___ArraysKt: short[] toShortArray(java.lang.Short[])
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
androidx.loader.R$styleable: int FontFamily_fontProviderFetchTimeout
okhttp3.MultipartBody: okhttp3.MediaType MIXED
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterIndexedTo$3: ChannelsKt__Channels_commonKt$filterIndexedTo$3(kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence flattenSequenceOfIterable(kotlin.sequences.Sequence)
io.reactivex.internal.operators.single.SingleFromUnsafeSource: SingleFromUnsafeSource(io.reactivex.SingleSource)
dagger.android.support.R$drawable: int notification_template_icon_bg
io.reactivex.Flowable: io.reactivex.Completable concatMapCompletable(io.reactivex.functions.Function,int)
androidx.lifecycle.ViewModelProvider$NewInstanceFactory: ViewModelProvider$NewInstanceFactory()
androidx.databinding.adapters.RatingBarBindingAdapter
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hideOverflowMenu()
io.reactivex.processors.BehaviorProcessor: void subscribeActual(org.reactivestreams.Subscriber)
androidx.legacy.coreui.R$id: int line3
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewRemoveEvent: android.view.ViewGroup component1()
androidx.customview.widget.ViewDragHelper: boolean isEdgeTouched(int,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void onDetachedFromWindow()
kotlin.collections.MapsKt__MapWithDefaultKt: java.util.Map withDefaultMutable(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: boolean any(java.lang.Object[])
androidx.vectordrawable.R$styleable: int FontFamilyFont_fontStyle
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ListView_Menu
kotlinx.coroutines.channels.Channel$Factory: kotlinx.coroutines.channels.Channel invoke(int)
androidx.databinding.adapters.ProgressBarBindingAdapter
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain()
androidx.slidingpanelayout.widget.SlidingPaneLayout: void smoothSlideOpen()
io.reactivex.schedulers.TestScheduler: void advanceTimeBy(long,java.util.concurrent.TimeUnit)
io.reactivex.Completable: io.reactivex.Completable cache()
androidx.appcompat.R$drawable: int abc_scrubber_control_off_mtrl_alpha
io.reactivex.internal.util.QueueDrainHelper: boolean postCompleteRequest(long,org.reactivestreams.Subscriber,java.util.Queue,java.util.concurrent.atomic.AtomicLong,io.reactivex.functions.BooleanSupplier)
androidx.appcompat.R$dimen: int highlight_alpha_material_light
kotlin.collections.ArraysKt___ArraysKt: char first(char[],kotlin.jvm.functions.Function1)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory
androidx.lifecycle.LifecycleRegistry: void markState(androidx.lifecycle.Lifecycle$State)
kotlin.collections.GroupingKt
com.jakewharton.rxbinding3.widget.TextViewEditorActionEvent: com.jakewharton.rxbinding3.widget.TextViewEditorActionEvent copy$default(com.jakewharton.rxbinding3.widget.TextViewEditorActionEvent,android.widget.TextView,int,android.view.KeyEvent,int,java.lang.Object)
androidx.viewpager.widget.ViewPager: void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer)
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int getLegacyAudioStream(java.lang.Object)
kotlin.collections.AbstractIterator: void computeNext()
com.google.gson.JsonArray
com.jakewharton.rxbinding3.widget.RxAutoCompleteTextView: io.reactivex.Observable itemClickEvents(android.widget.AutoCompleteTextView)
com.jakewharton.rxbinding3.view.ViewScrollChangeEvent: com.jakewharton.rxbinding3.view.ViewScrollChangeEvent copy(android.view.View,int,int,int,int)
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: int HINT_SCROLL_ASC
com.example.revolut.rates.R$styleable: int[] ConstraintSet
androidx.swiperefreshlayout.widget.CircularProgressDrawable$ProgressDrawableSize
android.support.v4.media.session.MediaControllerCompat$Callback
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver: long serialVersionUID
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer clearTimeout()
androidx.appcompat.R$style: int TextAppearance_AppCompat_Large
androidx.databinding.ViewStubProxy: boolean isInflated()
androidx.appcompat.R$styleable: int SwitchCompat_thumbTint
kotlin.collections.AbstractMutableMap: java.util.Collection getValues()
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_layout_anchor
com.example.revolut.rates.databinding.RatesItemBinding: com.example.revolut.rates.databinding.RatesItemBinding inflate(android.view.LayoutInflater,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableWindowTimed: ObservableWindowTimed(io.reactivex.ObservableSource,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,int,boolean)
androidx.constraintlayout.widget.R$attr: int layout_constraintBottom_toBottomOf
io.reactivex.internal.operators.observable.ObservableCount
kotlin.jvm.internal.FloatSpreadBuilder: int getSize(float[])
kotlin.collections.MapsKt__MapsKt: java.util.LinkedHashMap linkedMapOf(kotlin.Pair[])
kotlin.random.AbstractPlatformRandom: double nextDouble()
androidx.constraintlayout.widget.R$attr: int layout_constraintWidth_default
kotlin.text.StringsKt___StringsKt: java.lang.String takeWhile(java.lang.String,kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt__MapsKt: java.lang.Object getOrElseNullable(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0)
androidx.core.provider.FontsContractCompat$FontRequestCallback$FontRequestFailReason
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed: void subscribeActual(org.reactivestreams.Subscriber)
android.support.v4.os.IResultReceiver$Stub: IResultReceiver$Stub()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShortcut(char,char,int,int)
androidx.versionedparcelable.VersionedParcel: void writeLongArray(long[])
io.reactivex.internal.util.ListAddBiConsumer: java.lang.Object apply(java.lang.Object,java.lang.Object)
android.support.v4.media.session.MediaControllerCompat$Callback: void onQueueChanged(java.util.List)
dagger.android.support.R$dimen: int abc_action_bar_content_inset_with_nav
androidx.asynclayoutinflater.R$styleable: int FontFamily_fontProviderCerts
dagger.android.support.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)
kotlinx.coroutines.Job: boolean start()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSize(int)
okhttp3.Response: java.lang.String header(java.lang.String)
androidx.appcompat.app.ActionBar: void setSubtitle(int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(java.time.Duration)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(java.lang.Object[])
dagger.android.support.R$attr: int isLightTheme
androidx.media.MediaBrowserProtocol: java.lang.String DATA_SEARCH_QUERY
com.example.revolut.rates.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
okio.BufferedSink: long writeAll(okio.Source)
androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowPending()
kotlin.text.StringsKt__StringsKt$iterator$1
kotlin.text.StringsKt___StringsKt: java.lang.Character getOrNull(java.lang.CharSequence,int)
kotlinx.coroutines.JobSupport: boolean start()
androidx.constraintlayout.widget.R$attr: int layout_constrainedHeight
com.jakewharton.rxbinding3.view.ViewAttachDetachedEvent: android.view.View getView()
kotlin.collections.MovingSubList
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: void onComplete()
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(int[],java.util.Comparator)
androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.Person getPerson()
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] getDataOnlyRemoteInputs()
com.example.revolut.rates.R$style: int Widget_AppCompat_SearchView_ActionBar
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(boolean[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_ANNOUNCEMENT
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setType(java.lang.String)
kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls
io.reactivex.Completable: io.reactivex.Completable mergeArrayDelayError(io.reactivex.CompletableSource[])
androidx.appcompat.R$layout: int abc_action_bar_up_container
okhttp3.ResponseBody: okio.BufferedSource source()
androidx.appcompat.view.menu.MenuBuilder: android.view.View getHeaderView()
okhttp3.EventListener: void responseBodyStart(okhttp3.Call)
dagger.android.support.R$styleable: int AppCompatTheme_colorButtonNormal
androidx.recyclerview.R$styleable: int CoordinatorLayout_Layout_layout_anchor
kotlin.collections.AbstractCollection: boolean containsAll(java.util.Collection)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle addMessage(androidx.core.app.NotificationCompat$MessagingStyle$Message)
okhttp3.internal.cache.DiskLruCache$Snapshot: long getLength(int)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Body1
io.reactivex.Flowable: io.reactivex.parallel.ParallelFlowable parallel(int,int)
androidx.recyclerview.R$attr: int fontProviderFetchTimeout
kotlin.ranges.CharRange: CharRange(char,char)
androidx.lifecycle.ReportFragment
io.reactivex.CompletableConverter: java.lang.Object apply(io.reactivex.Completable)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject getCryptoObject()
dagger.android.support.R$styleable: int AlertDialog_listItemLayout
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int BASELINE
androidx.lifecycle.extensions.R$id: int blocking
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(double[],double,int,int,int,java.lang.Object)
com.example.revolut.rates.R$id: int dimensions
androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageScrollStateChanged(int)
kotlin.collections.UArraysKt: kotlin.ULong[] toTypedArray-QwZRm1k(long[])
androidx.viewpager.widget.PagerAdapter
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(double[],java.util.Comparator)
androidx.appcompat.R$id: int action_mode_close_button
io.reactivex.internal.subscribers.ForEachWhileSubscriber: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.Request: java.util.List headers(java.lang.String)
androidx.appcompat.widget.DropDownListView: int measureHeightOfChildrenCompat(int,int,int,int,int)
androidx.databinding.ViewDataBinding: java.lang.Object getFromList(android.util.LongSparseArray,int)
com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)
androidx.appcompat.widget.PopupMenu$OnDismissListener
io.reactivex.internal.subscribers.BasicFuseableSubscriber: void request(long)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getNestedScrollAxes()
kotlin.sequences.SubSequence$iterator$1: void setPosition(int)
com.example.revolut.rates.R$color: int material_grey_800
androidx.appcompat.view.menu.MenuItemImpl: android.content.Intent getIntent()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void addTransition(int,int,android.graphics.drawable.Drawable,boolean)
io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource[],io.reactivex.functions.Function)
io.reactivex.internal.operators.observable.ObservableOnErrorReturn: void subscribeActual(io.reactivex.Observer)
retrofit2.Retrofit
androidx.core.content.res.ComplexColorCompat
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short minBy(short[],kotlin.jvm.functions.Function1)
androidx.core.util.SparseArrayKt: void forEach(android.util.SparseArray,kotlin.jvm.functions.Function2)
kotlin.TypeAliasesKt
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
dagger.android.support.R$attr: int actionModeCopyDrawable
io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function4)
kotlinx.coroutines.ChildJob: java.lang.String toString()
androidx.slidingpanelayout.R$style: int TextAppearance_Compat_Notification
androidx.appcompat.R$styleable: int ViewBackgroundHelper_backgroundTintMode
androidx.viewpager.R$drawable: int notify_panel_notification_icon_bg
androidx.core.view.inputmethod.InputContentInfoCompat: android.net.Uri getLinkUri()
kotlin.TypeAliasesKt: void Exception$annotations()
kotlin.io.FileTreeWalk: kotlin.io.FileTreeWalk onFail(kotlin.jvm.functions.Function2)
android.support.v4.app.INotificationSideChannel$Stub$Proxy
androidx.legacy.coreui.R$drawable: int notification_icon_background
androidx.appcompat.view.ActionBarPolicy: int getEmbeddedMenuWidthLimit()
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableIterator(java.lang.Object)
androidx.core.app.NotificationCompat$Style
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver: long serialVersionUID
kotlin.ParameterName: java.lang.String name()
io.reactivex.subjects.AsyncSubject: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
androidx.core.view.NestedScrollingChild: boolean dispatchNestedPreFling(float,float)
okhttp3.Response$Builder
androidx.core.transition.TransitionKt$addListener$5: androidx.core.transition.TransitionKt$addListener$5 INSTANCE
com.example.revolut.rates.R$color: int switch_thumb_disabled_material_light
okhttp3.HttpUrl: java.util.List queryParameterValues(java.lang.String)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$fold$1: ChannelsKt__Channels_commonKt$fold$1(kotlin.coroutines.Continuation)
com.example.revolut.rates.R$string: int abc_font_family_body_1_material
kotlinx.coroutines.CancellableContinuationKt: void removeOnCancellation(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable,int)
androidx.recyclerview.widget.PagerSnapHelper: int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength NONE
okhttp3.internal.connection.RouteException: java.io.IOException getFirstConnectException()
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter getAdapter()
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarTabTextStyle
androidx.core.view.MotionEventCompat: int AXIS_TILT
androidx.constraintlayout.widget.Constraints: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
io.reactivex.Flowable: io.reactivex.Flowable intervalRange(long,long,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$1: void onTransitionResume(android.transition.Transition)
androidx.coordinatorlayout.R$styleable: int GradientColor_android_gradientRadius
androidx.appcompat.widget.DecorContentParent: boolean isOverflowMenuShowing()
androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageScrolled(int,float,int)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$foldIndexed$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.fragment.app.Fragment: boolean getRetainInstance()
androidx.appcompat.app.AlertController$AlertParams: android.database.Cursor mCursor
io.reactivex.internal.subscriptions.EmptySubscription: java.lang.String toString()
io.reactivex.SingleObserver: void onError(java.lang.Throwable)
android.support.v4.media.session.MediaSessionCompat$QueueItem: long getQueueId()
okio.Buffer: okio.Buffer copyTo(okio.Buffer,long,long)
io.reactivex.internal.operators.single.SingleDefer: void subscribeActual(io.reactivex.SingleObserver)
androidx.constraintlayout.widget.ConstraintSet: void setRotation(int,float)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleYBy(float)
com.jakewharton.rxbinding3.core.R$dimen: int notification_small_icon_background_padding
dagger.android.support.R$style: int Base_Widget_AppCompat_RatingBar
kotlin.UIntArray: int hashCode-impl(int[])
io.reactivex.functions.Consumer: void accept(java.lang.Object)
dagger.android.support.R$style: int TextAppearance_AppCompat_Title
org.intellij.lang.annotations.Flow: boolean targetIsContainer()
androidx.core.app.NotificationCompat$MessagingStyle$Message: NotificationCompat$MessagingStyle$Message(java.lang.CharSequence,long,java.lang.CharSequence)
androidx.core.ktx.R$id: int tag_unhandled_key_event_manager
com.example.revolut.rates.R$attr: int subtitleTextColor
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearchBy(java.util.List,java.lang.Comparable,int,int,kotlin.jvm.functions.Function1)
dagger.android.HasFragmentInjector
kotlinx.coroutines.CompletedExceptionally
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
androidx.slidingpanelayout.R$styleable: int GradientColor_android_gradientRadius
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KMutableProperty$Setter getSetter()
androidx.appcompat.app.ActionBarDrawerToggle: void onConfigurationChanged(android.content.res.Configuration)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
androidx.appcompat.widget.ListPopupWindow: long getSelectedItemId()
androidx.coordinatorlayout.R$id: int top
kotlin.reflect.KTypeParameter: kotlin.reflect.KVariance getVariance()
androidx.databinding.adapters.ViewGroupBindingAdapter$OnAnimationEnd
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSource source
com.jakewharton.rxbinding3.core.R$attr
androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.sequences.SequencesKt__SequencesJVMKt: SequencesKt__SequencesJVMKt()
io.reactivex.internal.operators.flowable.FlowableTake: FlowableTake(io.reactivex.Flowable,long)
io.reactivex.disposables.CompositeDisposable: boolean addAll(io.reactivex.disposables.Disposable[])
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle: void subscribeActual(org.reactivestreams.Subscriber)
kotlinx.coroutines.internal.AtomicDesc
androidx.appcompat.R$attr: int thumbTextPadding
okio.Buffer: long completeSegmentByteCount()
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme)
androidx.core.view.ViewCompat: void setAutofillHints(android.view.View,java.lang.String[])
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.Single: io.reactivex.observers.TestObserver test(boolean)
dagger.android.support.R$style: int Widget_AppCompat_ListMenuView
androidx.core.view.ViewKt: int getMarginTop(android.view.View)
androidx.core.view.ScrollingView: int computeVerticalScrollOffset()
androidx.recyclerview.widget.SimpleItemAnimator: void onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.app.ActionBar$Tab
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List slice(java.util.List,kotlin.ranges.IntRange)
kotlinx.coroutines.sync.Mutex: java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.RoundedBitmapDrawable: boolean isCircular()
kotlinx.coroutines.scheduling.TasksKt: int CORE_POOL_SIZE
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replaceFirst$default(java.lang.String,char,char,boolean,int,java.lang.Object)
io.reactivex.subjects.AsyncSubject: java.lang.Object[] getValues(java.lang.Object[])
androidx.legacy.app.ActionBarDrawerToggle$Delegate: android.graphics.drawable.Drawable getThemeUpIndicator()
androidx.appcompat.app.AppCompatDialog: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.collection.CircularArray: void addLast(java.lang.Object)
kotlinx.coroutines.sync.MutexImpl: boolean isLocked()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerSlide(android.view.View,float)
androidx.core.widget.ScrollerCompat: void startScroll(int,int,int,int)
androidx.constraintlayout.widget.ConstraintLayout: void onLayout(boolean,int,int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(java.lang.Object[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)
kotlin.collections.AbstractMap$values$1: int getSize()
kotlin.collections.AbstractMap$Companion: boolean entryEquals$kotlin_stdlib(java.util.Map$Entry,java.lang.Object)
com.google.gson.stream.JsonReader: boolean isLenient()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List chunked(java.lang.Iterable,int)
com.google.gson.JsonPrimitive: boolean isString()
androidx.appcompat.R$styleable: int[] ActionBarLayout
com.example.revolut.rates.R$styleable: int RecyclerView_spanCount
io.reactivex.internal.operators.flowable.FlowablePublishClassic: int publishBufferSize()
kotlin.contracts.ExperimentalContracts
kotlin.UnsignedKt: long ulongRemainder-eb3DHEI(long,long)
com.example.revolut.rates.R$dimen: int abc_action_button_min_width_material
androidx.core.graphics.MatrixKt: android.graphics.Matrix scaleMatrix(float,float)
io.reactivex.internal.operators.completable.CompletableFromUnsafeSource
io.reactivex.Observable: io.reactivex.Observable sorted(java.util.Comparator)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement
androidx.customview.widget.ExploreByTouchHelper: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.databinding.library.baseAdapters.BuildConfig: java.lang.String FLAVOR
dagger.android.support.R$layout: int notification_media_cancel_action
com.example.revolut.rates.R$attr: int layout_insetEdge
android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewRemoveEvent: boolean equals(java.lang.Object)
android.support.v4.media.MediaMetadataCompat: void writeToParcel(android.os.Parcel,int)
kotlin.UInt: int constructor-impl(int)
io.reactivex.internal.operators.observable.ObservablePublish: io.reactivex.ObservableSource source()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.customview.widget.ViewDragHelper: boolean isPointerDown(int)
io.reactivex.internal.operators.flowable.FlowableAnySingle
com.example.revolut.rates.di.AppModule_ProvideRatesApiFactory: com.example.revolut.rates.di.AppModule_ProvideRatesApiFactory create(com.example.revolut.rates.di.AppModule)
com.google.gson.internal.bind.ArrayTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
dagger.android.support.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
io.reactivex.plugins.RxJavaPlugins: void setOnFlowableAssembly(io.reactivex.functions.Function)
androidx.constraintlayout.widget.ConstraintLayout: void fillMetrics(androidx.constraintlayout.solver.Metrics)
io.reactivex.Flowable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate)
androidx.fragment.R$attr: int fontProviderQuery
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber$SwitchMapMaybeObserver: long serialVersionUID
androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)
kotlin.UByte: byte constructor-impl(byte)
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: long serialVersionUID
io.reactivex.Flowable: io.reactivex.Flowable doAfterNext(io.reactivex.functions.Consumer)
androidx.databinding.BindingAdapter: java.lang.String[] value()
kotlinx.coroutines.channels.TickerMode: TickerMode(java.lang.String,int)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel flatMap$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.text.StringsKt___StringsKt: char reduceIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function3)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setArrowHeadLength(float)
androidx.coordinatorlayout.R$drawable: int notify_panel_notification_icon_bg
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken getArray(java.lang.reflect.Type)
androidx.viewpager.R$id: int line1
io.reactivex.internal.operators.maybe.MaybeObserveOn: MaybeObserveOn(io.reactivex.MaybeSource,io.reactivex.Scheduler)
dagger.internal.DoubleCheck: java.lang.Object reentrantCheck(java.lang.Object,java.lang.Object)
androidx.coordinatorlayout.R$id: int action_divider
androidx.core.view.ViewCompat: float getPivotY(android.view.View)
io.reactivex.internal.operators.observable.ObservableThrottleLatest: void subscribeActual(io.reactivex.Observer)
kotlin.ranges.IntRange$Companion: IntRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
dagger.android.support.R$styleable: int CompoundButton_android_button
androidx.slidingpanelayout.R$styleable: int FontFamily_fontProviderCerts
io.reactivex.internal.operators.flowable.FlowableInternalHelper: java.util.concurrent.Callable replayCallable(io.reactivex.Flowable)
kotlinx.coroutines.DefaultTimeSource: void registerTimeLoopThread()
dagger.android.support.R$styleable: int ActionBar_customNavigationLayout
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_NONE
androidx.appcompat.R$styleable: int ActionBar_displayOptions
android.support.v4.media.session.IMediaControllerCallback
retrofit2.KotlinExtensions$await$2$2
kotlinx.coroutines.DispatchedKt: kotlinx.coroutines.internal.Symbol access$getUNDEFINED$p()
androidx.databinding.ObservableFloat: void writeToParcel(android.os.Parcel,int)
io.reactivex.internal.operators.maybe.MaybeFromCompletable
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable: void subscribeActual(org.reactivestreams.Subscriber)
dagger.android.support.R$attr: int buttonBarButtonStyle
dagger.android.support.R$styleable: int DrawerArrowToggle_arrowShaftLength
io.reactivex.internal.operators.observable.ObservableBuffer$BufferSkipObserver: long serialVersionUID
androidx.appcompat.widget.ActivityChooserModel$ActivitySorter: void sort(android.content.Intent,java.util.List,java.util.List)
androidx.core.view.ViewPropertyAnimatorListener: void onAnimationStart(android.view.View)
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mPositiveButtonText
io.reactivex.Observable: io.reactivex.Observable window(long,long,java.util.concurrent.TimeUnit)
dagger.android.support.R$dimen
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
androidx.constraintlayout.solver.widgets.Guideline: void setGuidePercent(int)
androidx.appcompat.app.WindowDecorActionBar: void hide()
androidx.core.database.CursorKt: java.lang.Double getDoubleOrNull(android.database.Cursor,int)
androidx.loader.content.CursorLoader: void setUri(android.net.Uri)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfter(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
kotlin.text.StringsKt__StringsKt: boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,int,boolean)
dagger.android.support.R$attr: int colorControlActivated
kotlin.text.StringsKt___StringsKt: double sumByDouble(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.TintContextWrapper: android.content.Context wrap(android.content.Context)
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle: io.reactivex.Flowable fuseToFlowable()
kotlinx.coroutines.Deferred$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Deferred,kotlin.coroutines.CoroutineContext)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter ATOMIC_BOOLEAN
androidx.legacy.v4.R$styleable: int[] FontFamily
io.reactivex.Completable: io.reactivex.Completable unsubscribeOn(io.reactivex.Scheduler)
io.reactivex.Flowable: io.reactivex.Flowable mergeWith(org.reactivestreams.Publisher)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.media.session.MediaButtonReceiver: android.app.PendingIntent buildMediaButtonPendingIntent(android.content.Context,long)
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.recyclerview.widget.ItemTouchHelper: int ANIMATION_TYPE_DRAG
com.google.gson.stream.JsonReader: double nextDouble()
androidx.constraintlayout.solver.Metrics: long maxRows
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int anchorGravity
androidx.coordinatorlayout.R$styleable: int[] FontFamily
androidx.core.app.NotificationCompat: int VISIBILITY_PUBLIC
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.Job,kotlin.jvm.functions.Function2)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int GAP_HANDLING_LAZY
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeTaskLaunchBehind()
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addLastIfPrevAndIf(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver: long serialVersionUID
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription: long serialVersionUID
kotlin.ranges.UIntRange: java.lang.String toString()
androidx.viewpager.widget.PagerAdapter: int POSITION_UNCHANGED
androidx.slidingpanelayout.R$layout: int notification_template_icon_group
kotlin.jvm.internal.ClassReference: void isCompanion$annotations()
io.reactivex.internal.operators.observable.ObservableDematerialize
okio.ForwardingTimeout: void throwIfReached()
androidx.lifecycle.extensions.R$styleable: int[] FontFamily
kotlin.internal.RequireKotlinVersionKind: kotlin.internal.RequireKotlinVersionKind LANGUAGE_VERSION
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainAll(java.util.Collection,java.lang.Object[])
io.reactivex.plugins.RxJavaPlugins: void setScheduleHandler(io.reactivex.functions.Function)
androidx.vectordrawable.R$id: int text
dagger.android.support.R$styleable: int AppCompatTheme_actionModeCopyDrawable
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)
android.support.v4.media.session.IMediaSession: void prepareFromMediaId(java.lang.String,android.os.Bundle)
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable layoutChanges(android.view.View)
androidx.customview.widget.ViewDragHelper: void setMinVelocity(float)
org.jetbrains.annotations.NotNull: java.lang.String value()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setColorFilter(int,android.graphics.PorterDuff$Mode)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResumeWithException(java.lang.Throwable)
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable map(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
io.reactivex.Maybe: io.reactivex.Maybe unsafeCreate(io.reactivex.MaybeSource)
kotlin.ranges.LongRange: LongRange(long,long)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$maxBy$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.recyclerview.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
dagger.android.support.R$style: int Widget_AppCompat_ActionButton_CloseMode
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function getOnConnectableObservableAssembly()
dagger.android.support.R$drawable: int abc_ic_search_api_material
com.example.revolut.rates.R$styleable: int FontFamily_fontProviderCerts
androidx.legacy.coreui.R$style: int Widget_Support_CoordinatorLayout
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(double[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(double[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.graphics.PictureKt
io.reactivex.Flowable: io.reactivex.Flowable timestamp(java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(double[],java.lang.Iterable)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onNestedFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean)
kotlin.io.ConstantsKt: int MINIMUM_BLOCK_SIZE
kotlinx.coroutines.JobSupport: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)
androidx.appcompat.R$color: int abc_primary_text_material_dark
androidx.cursoradapter.widget.CursorAdapter: void onContentChanged()
io.reactivex.internal.operators.flowable.FlowableInternalHelper: io.reactivex.functions.Action subscriberOnComplete(org.reactivestreams.Subscriber)
androidx.lifecycle.extensions.R$styleable: int GradientColor_android_startY
androidx.fragment.R$id: int notification_main_column_container
androidx.appcompat.R$styleable: int MenuItem_android_titleCondensed
io.reactivex.Flowable: io.reactivex.Flowable retry(long,io.reactivex.functions.Predicate)
io.reactivex.internal.operators.flowable.FlowableSingle
androidx.media.R$style: int TextAppearance_Compat_Notification_Media
kotlin.collections.ArraysKt___ArraysJvmKt: char[] copyInto$default(char[],char[],int,int,int,int,java.lang.Object)
com.example.revolut.rates.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.Boolean)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.ListPopupWindow: void setVerticalOffset(int)
com.google.gson.internal.$Gson$Types: java.lang.String typeToString(java.lang.reflect.Type)
kotlin.UIntArray: java.lang.Object[] toArray()
androidx.core.os.HandlerKt$postDelayed$runnable$1: void run()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List takeWhile(java.lang.Iterable,kotlin.jvm.functions.Function1)
okhttp3.internal.connection.RouteDatabase
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: int indexOf(java.lang.Object)
androidx.lifecycle.extensions.R$styleable: int FontFamily_fontProviderFetchStrategy
io.reactivex.internal.observers.LambdaObserver: boolean hasCustomOnError()
kotlinx.coroutines.ExecutorCoroutineDispatcherBase: java.lang.Object delay(long,java.util.concurrent.TimeUnit,kotlin.coroutines.Continuation)
kotlin.Result: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableFromCallable: FlowableFromCallable(java.util.concurrent.Callable)
androidx.databinding.ObservableList$OnListChangedCallback: void onItemRangeMoved(androidx.databinding.ObservableList,int,int,int)
androidx.fragment.R$style: int TextAppearance_Compat_Notification_Time
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getAdapterPosition()
io.reactivex.Observable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintTop_toTopOf
androidx.recyclerview.R$attr: int spanCount
kotlinx.android.extensions.LayoutContainer
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable: void subscribeActual(io.reactivex.CompletableObserver)
androidx.customview.R$dimen: int compat_notification_large_icon_max_width
io.reactivex.internal.operators.observable.ObservableError: void subscribeActual(io.reactivex.Observer)
android.support.v4.media.session.MediaControllerCompat: int getShuffleMode()
android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onMetadataChanged(java.lang.Object)
kotlin.io.FilesKt__UtilsKt: java.io.File relativeToOrNull(java.io.File,java.io.File)
androidx.databinding.ViewDataBinding: void setTo(double[],int,double)
org.reactivestreams.Subscription
kotlinx.coroutines.CancellableContinuation: boolean isCompleted()
kotlinx.coroutines.CancellableContinuation: void resumeUndispatched(kotlinx.coroutines.CoroutineDispatcher,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableItem
androidx.legacy.v4.R$styleable: int FontFamilyFont_android_fontStyle
io.reactivex.Maybe: io.reactivex.Maybe doFinally(io.reactivex.functions.Action)
kotlinx.coroutines.CoroutineName$Key: CoroutineName$Key(kotlin.jvm.internal.DefaultConstructorMarker)
com.example.revolut.rates.R$dimen: int abc_dropdownitem_icon_width
androidx.swiperefreshlayout.widget.CircularProgressDrawable: int[] getColorSchemeColors()
android.support.v4.media.session.IMediaControllerCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.fragment.R$layout: int notification_template_icon_group
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: SlidingWindowKt$windowedSequence$$inlined$Sequence$1(kotlin.sequences.Sequence,int,int,boolean,boolean)
io.reactivex.SingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)
androidx.customview.widget.ViewDragHelper: void cancel()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: FingerprintManagerCompat$CryptoObject(javax.crypto.Mac)
kotlin.coroutines.experimental.CoroutineContext$Element: kotlin.coroutines.experimental.CoroutineContext$Element get(kotlin.coroutines.experimental.CoroutineContext$Key)
dagger.android.support.R$styleable: int[] ActionMenuView
androidx.legacy.v4.R$id: int notification_background
androidx.core.graphics.CanvasKt: void withSkew(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1)
androidx.core.content.res.TypedArrayUtils: int getResourceId(android.content.res.TypedArray,int,int,int)
com.jakewharton.rxbinding3.core.R$id: int action_text
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getMaxHeight()
androidx.viewpager.R$style: int Widget_Compat_NotificationActionText
androidx.appcompat.R$id: int message
dagger.android.support.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
androidx.core.widget.TintableCompoundButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.constraintlayout.solver.LinearSystem: void fillMetrics(androidx.constraintlayout.solver.Metrics)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder serializeNulls()
com.jakewharton.rxbinding3.widget.AdapterViewItemSelectionEvent: AdapterViewItemSelectionEvent(android.widget.AdapterView,android.view.View,int,long)
kotlinx.coroutines.internal.ThreadSafeHeap: int size
androidx.databinding.InverseBindingMethods: androidx.databinding.InverseBindingMethod[] value()
androidx.core.animation.AnimatorKt$addListener$1: androidx.core.animation.AnimatorKt$addListener$1 INSTANCE
androidx.appcompat.view.menu.MenuPopupHelper: int getGravity()
com.google.gson.JsonStreamParser: JsonStreamParser(java.io.Reader)
androidx.lifecycle.ProcessLifecycleOwner
androidx.cursoradapter.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,boolean)
io.reactivex.Maybe: io.reactivex.Maybe doAfterSuccess(io.reactivex.functions.Consumer)
io.reactivex.internal.operators.flowable.FlowableConcatArray: FlowableConcatArray(org.reactivestreams.Publisher[],boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()
io.reactivex.internal.util.ErrorMode: io.reactivex.internal.util.ErrorMode valueOf(java.lang.String)
dagger.android.support.R$id: int time
androidx.constraintlayout.solver.Metrics: long maxVariables
androidx.constraintlayout.solver.widgets.ConstraintWidget: void createObjectVariables(androidx.constraintlayout.solver.LinearSystem)
androidx.recyclerview.widget.LinearLayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
okhttp3.internal.cache.DiskLruCache: java.io.File getDirectory()
androidx.appcompat.R$attr: int contentInsetEndWithActions
kotlin.ranges.ULongProgression: kotlin.ranges.ULongProgression$Companion Companion
kotlin.LazyKt__LazyKt: LazyKt__LazyKt()
androidx.vectordrawable.R$dimen: int notification_right_icon_size
kotlin.Unit: kotlin.Unit INSTANCE
androidx.core.app.ActivityOptionsCompat: java.lang.String EXTRA_USAGE_TIME_REPORT_PACKAGES
androidx.vectordrawable.R$styleable: int GradientColor_android_startColor
androidx.lifecycle.LifecycleService: androidx.lifecycle.Lifecycle getLifecycle()
androidx.appcompat.R$attr: int listPreferredItemHeightSmall
com.example.revolut.rates.R$drawable: int abc_edit_text_material
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object mapIndexedTo(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
retrofit2.Converter
io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher)
androidx.core.internal.view.SupportSubMenu
kotlin.coroutines.jvm.internal.CompletedContinuation: void resumeWith(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List take(java.lang.Iterable,int)
androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int)
io.reactivex.exceptions.Exceptions: java.lang.RuntimeException propagate(java.lang.Throwable)
retrofit2.http.Field
io.reactivex.Observable: io.reactivex.Observable buffer(int,int)
io.reactivex.internal.queue.SpscLinkedArrayQueue: java.lang.Object poll()
androidx.appcompat.R$styleable: int MenuGroup_android_visible
androidx.databinding.InverseMethod: java.lang.String value()
androidx.core.widget.NestedScrollView: boolean shouldDelayChildPressedState()
androidx.databinding.ObservableLong: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.RecyclerView: void onScrollStateChanged(int)
kotlin.random.RandomKt
androidx.appcompat.app.ActionBar$Tab: int getPosition()
com.example.revolut.rates.base.BaseViewModel: BaseViewModel()
com.example.revolut.rates.BuildConfig: java.lang.String FLAVOR
androidx.appcompat.R$styleable: int AppCompatTheme_listPopupWindowStyle
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintBottom_toTopOf
com.google.gson.internal.GsonBuildConfig
androidx.core.view.ViewKt$doOnLayout$$inlined$doOnNextLayout$1
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: void request(long)
io.reactivex.processors.AsyncProcessor: java.lang.Object getValue()
kotlinx.coroutines.DelayKt: kotlinx.coroutines.Delay getDelay(kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysKt: char last(char[],kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle: ObservableReduceSeedSingle(io.reactivex.ObservableSource,java.lang.Object,io.reactivex.functions.BiFunction)
kotlin.text.RegexKt: int access$toInt(java.lang.Iterable)
kotlinx.coroutines.DeferredKt: kotlinx.coroutines.Deferred async(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
io.reactivex.Observable: int bufferSize()
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_barrierDirection
kotlin.io.TextStreamsKt
kotlinx.coroutines.CancelHandler
io.reactivex.observers.ResourceCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(long[],java.util.Collection,kotlin.jvm.functions.Function2)
com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory$BodyCallAdapter$adapt$2: void onFailure(retrofit2.Call,java.lang.Throwable)
androidx.core.R$style: int TextAppearance_Compat_Notification_Time
androidx.databinding.DataBinderMapper
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope TESTS
androidx.recyclerview.widget.RecyclerView: long NO_ID
androidx.appcompat.view.menu.ExpandedMenuView: void initialize(androidx.appcompat.view.menu.MenuBuilder)
androidx.coordinatorlayout.R$id: int notification_background
io.reactivex.Completable: io.reactivex.Completable repeatWhen(io.reactivex.functions.Function)
io.reactivex.Observable: io.reactivex.Observable concatMapEagerDelayError(io.reactivex.functions.Function,int,int,boolean)
kotlin.random.URandomKt: void checkULongRangeBounds-eb3DHEI(long,long)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object groupBy(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.appcompat.R$id: int line1
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setSpanCount(int)
androidx.constraintlayout.solver.widgets.WidgetContainer: void layout()
io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty: void subscribeActual(org.reactivestreams.Subscriber)
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_ADVERTISEMENT
kotlin.sequences.TransformingIndexedSequence$iterator$1: void remove()
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
dagger.android.support.R$id: int action_menu_divider
androidx.core.app.NotificationCompat$Action$Builder
android.support.v4.media.session.PlaybackStateCompat: long PLAYBACK_POSITION_UNKNOWN
okhttp3.CacheControl: boolean isPublic()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: java.lang.Comparable coerceIn(java.lang.Comparable,kotlin.ranges.ClosedRange)
androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat load(android.content.res.Resources,int)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable$ArrowDirection
io.reactivex.internal.operators.observable.ObservableFlattenIterable
io.reactivex.Observable: io.reactivex.Observable takeUntil(io.reactivex.functions.Predicate)
io.reactivex.internal.subscribers.FutureSubscriber: void onError(java.lang.Throwable)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object mapTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.jvm.internal.CallableReference: boolean isOpen()
io.reactivex.Observable: io.reactivex.Observable retry(long)
io.reactivex.internal.observers.BasicFuseableObserver: boolean offer(java.lang.Object)
androidx.databinding.adapters.ViewGroupBindingAdapter$OnAnimationRepeat
dagger.android.support.R$styleable: int ColorStateListItem_android_alpha
dagger.android.support.R$drawable: int abc_ratingbar_small_material
androidx.drawerlayout.widget.DrawerLayout: boolean onKeyDown(int,android.view.KeyEvent)
kotlin.jvm.functions.Function14: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.databinding.library.baseAdapters.BR: int _all
androidx.lifecycle.OnLifecycleEvent
kotlin.collections.MapsKt__MapsKt: java.util.Map minus(java.util.Map,java.lang.Iterable)
io.reactivex.Single: io.reactivex.Flowable concatEager(org.reactivestreams.Publisher)
androidx.databinding.adapters.ViewBindingAdapter: void setPaddingStart(android.view.View,float)
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getDefault()
android.support.v4.media.session.PlaybackStateCompat: int STATE_FAST_FORWARDING
dagger.android.support.R$style: int Base_Widget_AppCompat_Button_Small
androidx.appcompat.R$styleable: int AppCompatTheme_imageButtonStyle
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character min(char[])
kotlin.ranges.RangesKt___RangesKt: java.lang.Short toShortExactOrNull(double)
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable keys(android.view.View)
androidx.databinding.adapters.TextViewBindingAdapter$AfterTextChanged
androidx.legacy.v4.R$attr: int fontProviderFetchStrategy
androidx.appcompat.R$style: int Theme_AppCompat_Light_DarkActionBar
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionBar_TabView
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
androidx.media.R$style: int TextAppearance_Compat_Notification_Line2
androidx.recyclerview.R$drawable: int notification_template_icon_bg
com.example.revolut.rates.R$attr: int subtitleTextAppearance
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary: FlowableBufferExactBoundary(io.reactivex.Flowable,org.reactivestreams.Publisher,java.util.concurrent.Callable)
kotlin.collections.TypeAliasesKt: void LinkedHashSet$annotations()
io.reactivex.Flowable: io.reactivex.Flowable throttleFirst(long,java.util.concurrent.TimeUnit)
kotlin.sequences.DropWhileSequence: DropWhileSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
io.reactivex.internal.functions.Functions: io.reactivex.functions.BiConsumer toMapKeySelector(io.reactivex.functions.Function)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getMinimumWidth()
io.reactivex.internal.subscriptions.ArrayCompositeSubscription: boolean isDisposed()
androidx.core.transition.TransitionKt$addListener$3: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.channels.BroadcastChannel$Factory: kotlinx.coroutines.channels.BroadcastChannel invoke(int)
com.jakewharton.rxbinding3.core.R$drawable: int notification_template_icon_low_bg
kotlinx.coroutines.TimeSource: java.lang.Runnable trackTask(java.lang.Runnable)
io.reactivex.exceptions.UndeliverableException
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_startX
retrofit2.http.PartMap
androidx.loader.R$dimen: int compat_notification_large_icon_max_width
io.reactivex.internal.functions.Functions: java.util.concurrent.Callable createArrayList(int)
androidx.core.text.PrecomputedTextCompat: char charAt(int)
kotlin.collections.AbstractMap: void putAll(java.util.Map)
androidx.databinding.ViewStubProxy: ViewStubProxy(android.view.ViewStub)
io.reactivex.internal.operators.maybe.MaybeFilterSingle
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object elementAt(java.lang.Iterable,int)
androidx.appcompat.view.WindowCallbackWrapper: boolean onSearchRequested(android.view.SearchEvent)
io.reactivex.Single: io.reactivex.Observable flatMapObservable(io.reactivex.functions.Function)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object mapIndexedNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
androidx.fragment.R$attr: int fontStyle
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mFreeze
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate
com.example.revolut.rates.R$drawable: int abc_control_background_material
kotlin.collections.ArraysKt__ArraysKt: java.util.List flatten(java.lang.Object[][])
androidx.viewpager.widget.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)
androidx.drawerlayout.R$id: int italic
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object firstOrNull(java.lang.Iterable)
android.support.v4.media.MediaDescriptionCompat: android.graphics.Bitmap getIconBitmap()
android.support.v4.media.session.PlaybackStateCompat$Builder
kotlin.ULong: boolean equals-impl0(long,long)
com.example.revolut.rates.R$drawable: int abc_cab_background_top_mtrl_alpha
kotlin.ranges.URangesKt___URangesKt: int coerceIn-wuiCnnA(int,kotlin.ranges.ClosedRange)
io.reactivex.internal.operators.flowable.FlowableGroupBy: FlowableGroupBy(io.reactivex.Flowable,io.reactivex.functions.Function,io.reactivex.functions.Function,int,boolean,io.reactivex.functions.Function)
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setLabel(java.lang.CharSequence)
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_startX
androidx.fragment.app.DialogFragment: void dismiss()
io.reactivex.Observable: io.reactivex.Observable throttleWithTimeout(long,java.util.concurrent.TimeUnit)
io.reactivex.internal.operators.flowable.FlowableCreate
kotlin.collections.AbstractSet$Companion: int unorderedHashCode$kotlin_stdlib(java.util.Collection)
androidx.appcompat.widget.TintTypedArray: java.lang.String getPositionDescription()
com.example.revolut.rates.R$styleable: int AppCompatTheme_windowFixedHeightMinor
kotlinx.coroutines.channels.SendElement: kotlinx.coroutines.CancellableContinuation cont
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener: void onDrawerStateChanged(int)
androidx.core.text.HtmlCompat: int FROM_HTML_MODE_COMPACT
io.reactivex.processors.PublishProcessor: boolean offer(java.lang.Object)
kotlin.random.Random: kotlin.random.Random access$getDefaultRandom$cp()
kotlin.ranges.ULongRange: kotlin.ULong getEndInclusive()
kotlin.collections.SetsKt___SetsKt: java.util.Set plus(java.util.Set,java.lang.Iterable)
androidx.recyclerview.widget.RecyclerView$State: void remove(int)
org.intellij.lang.annotations.Flow: boolean sourceIsContainer()
kotlin.collections.ArraysKt___ArraysKt: int sum(byte[])
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewRemoveEvent: android.view.View component2()
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowing()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationIcon(int)
com.google.gson.internal.bind.DateTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
dagger.android.support.DaggerAppCompatActivity_MembersInjector: void injectMembers(dagger.android.support.DaggerAppCompatActivity)
androidx.core.app.AppOpsManagerCompat: int noteProxyOp(android.content.Context,java.lang.String,java.lang.String)
okhttp3.HttpUrl: java.lang.String encodedUsername()
com.example.revolut.rates.R$styleable: int RecycleListView_paddingBottomNoButtons
androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: CoroutineScheduler$WorkerState(java.lang.String,int)
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)
okio.Source: long read(okio.Buffer,long)
com.example.revolut.rates.R$attr: int content
io.reactivex.Maybe: io.reactivex.Maybe timeout(io.reactivex.MaybeSource,io.reactivex.MaybeSource)
androidx.appcompat.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: androidx.core.provider.FontRequest getRequest()
com.google.gson.JsonDeserializationContext
kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope plus(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext)
androidx.recyclerview.widget.AsyncListUtil$DataCallback
kotlinx.coroutines.CoroutineContextKt: void DefaultDispatcher$annotations()
io.reactivex.parallel.ParallelFailureHandling: io.reactivex.parallel.ParallelFailureHandling SKIP
io.reactivex.Flowable: io.reactivex.Flowable window(long,long,java.util.concurrent.TimeUnit)
androidx.appcompat.R$id: int group_divider
kotlin.text.CharCategory: kotlin.text.CharCategory MODIFIER_LETTER
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.example.revolut.rates.R$styleable: int ConstraintSet_android_rotationY
io.reactivex.internal.operators.single.SingleToFlowable
androidx.core.graphics.ColorUtils
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)
com.example.revolut.rates.R$attr: int selectableItemBackgroundBorderless
io.reactivex.internal.util.ObservableQueueDrain: boolean done()
kotlinx.coroutines.ThreadContextElement: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(char[],java.lang.Object[])
androidx.drawerlayout.R$id: int info
android.support.v4.media.MediaBrowserCompat$CustomActionCallback: void onProgressUpdate(java.lang.String,android.os.Bundle,android.os.Bundle)
androidx.appcompat.R$id: int progress_horizontal
androidx.core.app.JobIntentService
io.reactivex.internal.operators.observable.ObservableIgnoreElements
io.reactivex.flowables.ConnectableFlowable: io.reactivex.disposables.Disposable connect()
kotlin.collections.IndexingIterable
dagger.internal.SetBuilder
android.support.v4.media.session.MediaControllerCompat: android.os.Bundle getExtras()
androidx.viewpager.widget.ViewPager: int SCROLL_STATE_SETTLING
androidx.vectordrawable.R$string: int status_bar_notification_info_overflow
com.example.revolut.rates.R$drawable: int abc_seekbar_track_material
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_OBJECT
kotlinx.coroutines.JobKt: kotlinx.coroutines.DisposableHandle disposeOnCompletion(kotlinx.coroutines.Job,kotlinx.coroutines.DisposableHandle)
kotlin.reflect.KTypeParameter: java.util.List getUpperBounds()
androidx.recyclerview.widget.GridLayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)
com.example.revolut.rates.R$string: int abc_font_family_caption_material
androidx.databinding.adapters.ViewBindingAdapter: int FADING_EDGE_HORIZONTAL
io.reactivex.internal.functions.Functions: java.lang.Runnable EMPTY_RUNNABLE
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setStartEndTrim(float,float)
dagger.android.support.DaggerFragment: dagger.android.AndroidInjector supportFragmentInjector()
androidx.databinding.ObservableParcelable: int describeContents()
android.support.v4.media.session.PlaybackStateCompat$MediaKeyAction
androidx.core.ktx.R$drawable
androidx.appcompat.app.ActionBar: int getSelectedNavigationIndex()
com.example.revolut.rates.R$drawable: int abc_btn_switch_to_on_mtrl_00012
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.flowable.FlowableFromObservable
androidx.collection.SimpleArrayMap: java.lang.String toString()
androidx.databinding.library.BuildConfig: BuildConfig()
io.reactivex.internal.operators.observable.ObservableOnErrorNext
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setBarLength(float)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context)
com.example.revolut.rates.R$style: int Base_V7_Widget_AppCompat_EditText
io.reactivex.internal.operators.completable.CompletableSubscribeOn: CompletableSubscribeOn(io.reactivex.CompletableSource,io.reactivex.Scheduler)
kotlin.collections.CollectionsKt__MutableCollectionsKt: CollectionsKt__MutableCollectionsKt()
androidx.annotation.StringDef: boolean open()
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.core.graphics.RectKt: int component4(android.graphics.Rect)
io.reactivex.Completable: io.reactivex.Completable create(io.reactivex.CompletableOnSubscribe)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(float[],java.lang.Iterable)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2: int compare(java.lang.Object,java.lang.Object)
io.reactivex.internal.functions.Functions: io.reactivex.functions.Function timestampWith(java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterTo$3
androidx.recyclerview.widget.LinearSmoothScroller: int getVerticalSnapPreference()
kotlin.collections.EmptyList: boolean addAll(java.util.Collection)
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActivityChooserView
androidx.fragment.app.FragmentController: void doLoaderStop(boolean)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
androidx.lifecycle.extensions.R$styleable: int FontFamilyFont_fontWeight
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind[] values()
kotlin.collections.MapsKt__MapsKt: java.util.Map mapKeys(java.util.Map,kotlin.jvm.functions.Function1)
androidx.appcompat.app.AppCompatActivity: android.content.Intent getSupportParentActivityIntent()
dagger.android.support.R$style: int TextAppearance_AppCompat_Medium
androidx.lifecycle.ReportFragment: void onDestroy()
com.example.revolut.rates.R$id: int default_activity_button
kotlin.text.StringsKt__StringsJVMKt: byte[] encodeToByteArray(java.lang.String,int,int,boolean)
androidx.vectordrawable.R$styleable: int GradientColor_android_centerX
kotlinx.coroutines.channels.ConflatedBroadcastChannel: boolean isClosedForSend()
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)
androidx.databinding.MergedDataBinderMapper: MergedDataBinderMapper()
com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent: java.lang.CharSequence component2()
androidx.core.view.PointerIconCompat: int TYPE_COPY
kotlinx.coroutines.DefaultTimeSource
androidx.versionedparcelable.VersionedParcel: void writeLong(long,int)
kotlinx.coroutines.Delay: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.util.concurrent.TimeUnit,java.lang.Runnable)
io.reactivex.internal.util.ListAddBiConsumer: io.reactivex.internal.util.ListAddBiConsumer[] values()
androidx.media.R$drawable: int notification_action_background
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean isStateful()
kotlin.collections.EmptyList: java.util.List subList(int,int)
androidx.core.view.ViewPropertyAnimatorListenerAdapter: ViewPropertyAnimatorListenerAdapter()
io.reactivex.Observable: io.reactivex.Observable doOnDispose(io.reactivex.functions.Action)
kotlin.jvm.internal.MutablePropertyReference0
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int)
com.example.revolut.rates.R$attr: int listPopupWindowStyle
io.reactivex.Flowable: io.reactivex.Flowable rangeLong(long,long)
androidx.appcompat.R$id: int search_bar
okhttp3.OkHttpClient: int readTimeoutMillis()
androidx.viewpager.widget.PagerAdapter: int getCount()
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_POINTER
androidx.core.view.InputDeviceCompat: int SOURCE_JOYSTICK
kotlin.io.TextStreamsKt: kotlin.sequences.Sequence lineSequence(java.io.BufferedReader)
androidx.constraintlayout.solver.ArrayLinkedVariables: void display()
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.databinding.ObservableFloat: int describeContents()
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)
com.example.revolut.rates.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
androidx.core.R$attr: int ttcIndex
dagger.android.support.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: void addNode(java.lang.Object)
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: int getRight()
io.reactivex.internal.operators.single.SingleDoAfterSuccess
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_UNDEFINED
kotlin.ranges.CharProgression: CharProgression(char,char,int)
androidx.vectordrawable.R$id: int action_divider
androidx.core.app.ActivityOptionsCompat
androidx.core.graphics.drawable.DrawableKt: void updateBounds$default(android.graphics.drawable.Drawable,int,int,int,int,int,java.lang.Object)
androidx.appcompat.R$color: int abc_background_cache_hint_selector_material_dark
dagger.android.internal.AndroidInjectionKeys
kotlin.collections.AbstractSet: kotlin.collections.AbstractSet$Companion Companion
androidx.appcompat.R$style: int TextAppearance_AppCompat_Display2
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget LOCAL_VARIABLE
kotlin.jvm.internal.Intrinsics: int compare(long,long)
io.reactivex.internal.operators.completable.CompletableFromPublisher: void subscribeActual(io.reactivex.CompletableObserver)
androidx.legacy.coreutils.R$dimen: int notification_right_side_padding_top
androidx.appcompat.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback: void addTile(int,androidx.recyclerview.widget.TileList$Tile)
com.example.revolut.rates.R$attr: int layoutManager
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_USER_RATING
androidx.core.os.BuildCompat: boolean isAtLeastOMR1()
kotlin.collections.ArraysKt___ArraysKt: int sum(short[])
kotlinx.coroutines.DefaultTimeSource: void unpark(java.lang.Thread)
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.Cache getCache()
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher: MaybeDelaySubscriptionOtherPublisher(io.reactivex.MaybeSource,org.reactivestreams.Publisher)
androidx.core.ktx.R$styleable: int GradientColor_android_startY
com.example.revolut.rates.R$id: int expand_activities_button
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo()
androidx.appcompat.view.menu.MenuItemImpl: boolean hasSubMenu()
androidx.appcompat.R$attr: int preserveIconSpacing
dagger.multibindings.LongKey
com.example.revolut.rates.R$id: int currency_value
androidx.core.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int)
okhttp3.internal.http.HttpDate: java.util.Date parse(java.lang.String)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1)
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$2: kotlin.coroutines.experimental.CoroutineContext getContext()
androidx.recyclerview.widget.SortedList: void endBatchedUpdates()
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable,io.reactivex.functions.Function)
kotlin.jvm.internal.MutablePropertyReference2: kotlin.reflect.KProperty2$Getter getGetter()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object filterNotTo(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.vectordrawable.R$styleable: int FontFamilyFont_android_ttcIndex
io.reactivex.Observable: io.reactivex.Observable interval(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.viewpager.widget.PagerTitleStrip: void onLayout(boolean,int,int,int,int)
kotlin.jvm.internal.CallableReference: boolean isSuspend()
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,boolean,int)
kotlin.internal.OnlyInputTypes
kotlin.sequences.FilteringSequence: java.util.Iterator iterator()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe
kotlin.jvm.internal.PropertyReference0Impl: java.lang.String getName()
androidx.appcompat.app.WindowDecorActionBar$TabImpl: java.lang.CharSequence getText()
io.reactivex.subjects.BehaviorSubject: boolean hasValue()
androidx.core.text.util.LinkifyCompat
kotlin.collections.MapsKt__MapsKt: java.util.Map filterKeys(java.util.Map,kotlin.jvm.functions.Function1)
androidx.appcompat.R$attr: int buttonTint
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function9)
io.reactivex.internal.util.QueueDrainHelper: void drainMaxLoop(io.reactivex.internal.fuseable.SimplePlainQueue,org.reactivestreams.Subscriber,boolean,io.reactivex.disposables.Disposable,io.reactivex.internal.util.QueueDrain)
kotlin.sequences.SequencesKt___SequencesKt$minus$3
kotlin.UByteArray: java.lang.String toString()
io.reactivex.Observable: io.reactivex.Observable window(java.util.concurrent.Callable,int)
io.reactivex.Completable: io.reactivex.Completable mergeDelayError(org.reactivestreams.Publisher,int)
androidx.appcompat.R$styleable: int Toolbar_buttonGravity
kotlin.UShortArray: boolean equals(java.lang.Object)
androidx.constraintlayout.widget.ConstraintSet: int MATCH_CONSTRAINT
androidx.appcompat.R
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(double[],java.lang.Object[])
okhttp3.WebSocketListener
com.example.revolut.rates.R$attr: int layout_constraintLeft_toLeftOf
android.support.v4.app.INotificationSideChannel
androidx.recyclerview.widget.ItemTouchHelper$Callback: float getSwipeVelocityThreshold(float)
androidx.appcompat.R$dimen: int abc_action_bar_stacked_max_height
androidx.lifecycle.ViewModelProviderKt
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_TabView
io.reactivex.Observable: io.reactivex.Observable serialize()
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int UNDEFINED_DURATION
kotlinx.coroutines.channels.AbstractChannel: java.lang.Object receiveOrNull(kotlin.coroutines.Continuation)
androidx.recyclerview.widget.LinearLayoutManager: void setStackFromEnd(boolean)
androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)
androidx.fragment.app.FragmentManager$BackStackEntry: int getBreadCrumbTitleRes()
okio.BufferedSource: long readAll(okio.Sink)
androidx.viewpager.widget.ViewPager: void onAttachedToWindow()
androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner()
dagger.android.support.R$style: int Widget_AppCompat_ActionBar
com.google.gson.JsonIOException
com.example.revolut.rates.R$styleable: int SwitchCompat_thumbTintMode
kotlin.jvm.internal.Reflection: kotlin.reflect.KType nullableTypeOf(java.lang.Class,kotlin.reflect.KTypeProjection[])
androidx.appcompat.R$style: int Widget_AppCompat_RatingBar_Indicator
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()
androidx.constraintlayout.solver.widgets.WidgetContainer: WidgetContainer()
okio.Options
androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int,int)
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1
io.reactivex.disposables.SerialDisposable
androidx.core.ktx.R$dimen: int notification_right_icon_size
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintBottom_toBottomOf
androidx.fragment.app.FragmentPagerAdapter: void finishUpdate(android.view.ViewGroup)
kotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,kotlin.Pair[])
io.reactivex.internal.observers.DisposableLambdaObserver: void onError(java.lang.Throwable)
kotlinx.coroutines.test.TestCoroutineContext: java.util.List access$getUncaughtExceptions$p(kotlinx.coroutines.test.TestCoroutineContext)
androidx.viewpager.widget.ViewPager: void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
androidx.core.view.ViewKt$doOnLayout$$inlined$doOnNextLayout$1: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
io.reactivex.exceptions.ProtocolViolationException: ProtocolViolationException(java.lang.String)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)
kotlin.io.NoSuchFileException: NoSuchFileException(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.loader.R$styleable: int FontFamilyFont_fontWeight
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet)
androidx.media.AudioAttributesCompat: int USAGE_VOICE_COMMUNICATION
androidx.appcompat.R$attr: int colorBackgroundFloating
androidx.databinding.ObservableDouble: ObservableDouble(androidx.databinding.Observable[])
io.reactivex.Flowable: io.reactivex.Flowable concatMapEager(io.reactivex.functions.Function)
android.support.v4.media.MediaBrowserCompat$MediaItem: android.support.v4.media.MediaBrowserCompat$MediaItem fromMediaItem(java.lang.Object)
dagger.android.support.R$style: int Widget_AppCompat_ActionBar_TabText
kotlin.collections.AbstractMap: kotlin.collections.AbstractMap$Companion Companion
androidx.databinding.library.baseAdapters.R
androidx.core.app.NotificationCompat$Builder: int getPriority()
kotlin.random.Random$Companion
com.example.revolut.rates.common.ConstantsKt
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float firstOrNull(float[])
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setY(int)
io.reactivex.internal.operators.single.SingleFlatMapCompletable: void subscribeActual(io.reactivex.CompletableObserver)
androidx.core.content.res.FontResourcesParserCompat
dagger.android.support.R$style: int Widget_AppCompat_ActionButton
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(java.lang.Object[],java.lang.Iterable)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int right
com.example.revolut.rates.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
kotlinx.coroutines.Cancelling: Cancelling(kotlinx.coroutines.CancelledContinuation)
androidx.annotation.FloatRange: double from()
androidx.constraintlayout.widget.R$attr: int layout_constraintHeight_percent
androidx.recyclerview.widget.RecyclerView: void dispatchSaveInstanceState(android.util.SparseArray)
kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()
androidx.slidingpanelayout.R$layout: int notification_action_tombstone
io.reactivex.Completable: io.reactivex.Completable defer(java.util.concurrent.Callable)
androidx.coordinatorlayout.R$dimen: int notification_small_icon_background_padding
dagger.android.DaggerDialogFragment_MembersInjector: DaggerDialogFragment_MembersInjector(javax.inject.Provider)
com.jakewharton.rxbinding3.core.R$style: int TextAppearance_Compat_Notification
io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.FlowableSubscriber: void onSubscribe(org.reactivestreams.Subscription)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState TERMINATED
androidx.media.R$layout: int notification_template_media_custom
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(int[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.vectordrawable.R
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()
androidx.core.util.LruCacheKt$lruCache$4: java.lang.Object create(java.lang.Object)
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: io.reactivex.observers.BaseTestConsumer$TestWaitStrategy valueOf(java.lang.String)
androidx.appcompat.widget.ScrollingTabContainerView: void updateTab(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(double[])
io.reactivex.internal.operators.flowable.FlowableToListSingle
androidx.lifecycle.LiveData: java.lang.Object getValue()
androidx.viewpager.widget.ViewPager: int SCROLL_STATE_DRAGGING
androidx.media.MediaBrowserProtocol: int CLIENT_MSG_SEARCH
androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)
kotlinx.coroutines.ResumeModeKt: void resumeUninterceptedMode(kotlin.coroutines.Continuation,java.lang.Object,int)
io.reactivex.Observable: io.reactivex.Observable throttleLatest(long,java.util.concurrent.TimeUnit)
androidx.core.util.LongSparseArrayKt$valueIterator$1
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(char[])
com.jakewharton.rxbinding3.widget.RxSearchView: com.jakewharton.rxbinding3.InitialValueObservable queryTextChangeEvents(android.widget.SearchView)
androidx.core.R$styleable: int FontFamilyFont_ttcIndex
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_ALBUM
com.google.gson.JsonArray: boolean getAsBoolean()
androidx.customview.widget.ExploreByTouchHelper: void invalidateVirtualView(int)
io.reactivex.Observable: io.reactivex.Observable repeatWhen(io.reactivex.functions.Function)
kotlin.collections.AbstractIterator: AbstractIterator()
androidx.lifecycle.extensions.R$dimen: int notification_subtext_size
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification_Title
io.reactivex.Maybe: io.reactivex.Single switchIfEmpty(io.reactivex.SingleSource)
com.google.gson.TypeAdapter: java.lang.Object fromJsonTree(com.google.gson.JsonElement)
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: ViewModelProvider$AndroidViewModelFactory(android.app.Application)
okio.Buffer: java.lang.String toString()
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setRtl(boolean)
com.example.revolut.rates.R$drawable: int notification_action_background
androidx.fragment.R$id: int chronometer
io.reactivex.internal.operators.observable.AbstractObservableWithUpstream: io.reactivex.ObservableSource source()
com.example.revolut.rates.R$dimen: int abc_text_size_medium_material
kotlinx.coroutines.channels.SubscriptionReceiveChannel
com.jakewharton.rxbinding3.view.MenuItemActionViewCollapseEvent: MenuItemActionViewCollapseEvent(android.view.MenuItem)
dagger.android.support.DaggerApplication
androidx.swiperefreshlayout.R$drawable: int notification_bg_normal_pressed
io.reactivex.internal.operators.maybe.MaybeIgnoreElement
io.reactivex.internal.operators.observable.ObservableBlockingSubscribe: void subscribe(io.reactivex.ObservableSource,io.reactivex.Observer)
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
kotlinx.coroutines.test.TestCoroutineContext: kotlinx.coroutines.internal.ThreadSafeHeap access$getQueue$p(kotlinx.coroutines.test.TestCoroutineContext)
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int)
androidx.appcompat.R$style: int Base_Widget_AppCompat_ListView
androidx.appcompat.R$styleable: int MenuItem_android_icon
retrofit2.Retrofit: retrofit2.CallAdapter callAdapter(java.lang.reflect.Type,java.lang.annotation.Annotation[])
androidx.media.app.NotificationCompat$MediaStyle
com.jakewharton.rxbinding3.core.R$drawable: int notification_bg_low_pressed
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)
org.reactivestreams.Processor
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getMinWidth()
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getItemViewType()
dagger.android.support.R$styleable: int MenuItem_android_orderInCategory
com.example.revolut.rates.R$attr: int popupTheme
androidx.lifecycle.extensions.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.internal.schedulers.TrampolineScheduler instance()
io.reactivex.internal.operators.flowable.FlowableInternalHelper: io.reactivex.functions.Function zipIterable(io.reactivex.functions.Function)
androidx.vectordrawable.R$id: int actions
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setNumericShortcut(char)
androidx.customview.R$styleable: int FontFamilyFont_ttcIndex
androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(boolean[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
androidx.appcompat.R$style: int Widget_AppCompat_SearchView_ActionBar
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeSplitBackground
androidx.core.view.NestedScrollingChild: boolean dispatchNestedScroll(int,int,int,int,int[])
dagger.android.support.R$style: int Widget_AppCompat_ListView_DropDown
com.jakewharton.rxbinding3.view.ViewAttachDetachedEvent: boolean equals(java.lang.Object)
com.example.revolut.rates.R$attr: int switchPadding
androidx.core.R$id
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA256
kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty2 mutableProperty2(kotlin.jvm.internal.MutablePropertyReference2)
androidx.core.provider.FontsContractCompat$Columns: java.lang.String FILE_ID
androidx.core.view.ViewCompat: int OVER_SCROLL_NEVER
androidx.databinding.ViewDataBinding: char getFromArray(char[],int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState
io.reactivex.internal.operators.observable.ObservableTake: ObservableTake(io.reactivex.ObservableSource,long)
androidx.core.view.accessibility.AccessibilityRecordCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getSource()
io.reactivex.internal.operators.single.SingleFlatMapPublisher: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.ClosedRange,short)
androidx.recyclerview.widget.RecyclerView$Adapter: void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.recyclerview.widget.LinearLayoutManager: void setSmoothScrollbarEnabled(boolean)
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String getDataMimeType()
okhttp3.internal.ws.RealWebSocket: boolean send(okio.ByteString)
io.reactivex.Maybe: io.reactivex.Maybe ambArray(io.reactivex.MaybeSource[])
androidx.fragment.app.FragmentController
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] plus(boolean[],boolean[])
androidx.drawerlayout.R$id: int action_image
io.reactivex.internal.schedulers.ImmediateThinScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)
androidx.swiperefreshlayout.R$dimen: int compat_notification_large_icon_max_width
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KProperty$Getter getGetter()
androidx.appcompat.view.WindowCallbackWrapper: void onDetachedFromWindow()
com.google.gson.TypeAdapter
okio.Buffer: okio.BufferedSink writeIntLe(int)
kotlinx.coroutines.internal.ThreadSafeHeap: boolean addLastIf(kotlinx.coroutines.internal.ThreadSafeHeapNode,kotlin.jvm.functions.Function0)
androidx.core.text.PrecomputedTextCompat$Params: boolean equals(java.lang.Object)
kotlin.text.Typography: char degree
androidx.appcompat.widget.ActionBarOverlayLayout: void dismissPopups()
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle)
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.versionedparcelable.VersionedParcel$ParcelException
androidx.loader.R$color
androidx.coordinatorlayout.widget.CoordinatorLayout: void dispatchDependentViewsChanged(android.view.View)
androidx.databinding.ObservableFloat
androidx.appcompat.widget.DecorToolbar: boolean hasExpandedActionView()
androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(long[],java.lang.Object[],kotlin.jvm.functions.Function2)
com.jakewharton.rxbinding3.core.R$dimen
androidx.appcompat.widget.TintTypedArray: int getDimensionPixelSize(int,int)
kotlin.jvm.internal.PackageReference: PackageReference(java.lang.Class,java.lang.String)
kotlinx.coroutines.DefaultExecutor
androidx.fragment.app.FragmentActivity: void supportStartPostponedEnterTransition()
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: java.lang.Object initSelectResult()
com.google.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: boolean isEmpty()
io.reactivex.internal.operators.single.SingleToObservable
androidx.core.view.ViewCompat: int getAccessibilityLiveRegion(android.view.View)
kotlin.ranges.RangesKt___RangesKt: long random(kotlin.ranges.LongRange,kotlin.random.Random)
androidx.appcompat.R$dimen: int abc_alert_dialog_button_dimen
androidx.core.view.PointerIconCompat: int TYPE_CONTEXT_MENU
io.reactivex.internal.subscribers.BlockingFirstSubscriber: void onNext(java.lang.Object)
androidx.appcompat.R$attr: int seekBarStyle
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback: boolean canChildScrollUp(androidx.swiperefreshlayout.widget.SwipeRefreshLayout,android.view.View)
io.reactivex.Flowable: io.reactivex.Flowable onErrorReturn(io.reactivex.functions.Function)
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_RatingBar
android.support.v4.media.session.IMediaSession$Stub
androidx.constraintlayout.widget.R$styleable: int[] LinearConstraintLayout
androidx.databinding.BindingMethod: java.lang.Class type()
io.reactivex.functions.Predicate
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function getInitIoSchedulerHandler()
kotlinx.coroutines.scheduling.TasksKt: long IDLE_WORKER_KEEP_ALIVE_NS
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setActivity(android.content.ComponentName)
androidx.media.AudioAttributesCompat: int USAGE_NOTIFICATION_EVENT
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget mFirstMatchConstraintWidget
androidx.core.graphics.PathKt: android.graphics.Path minus(android.graphics.Path,android.graphics.Path)
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Display4
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_Solid
kotlinx.coroutines.sync.Mutex: boolean holdsLock(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableReplay: io.reactivex.flowables.ConnectableFlowable create(io.reactivex.Flowable,int)
android.support.v4.media.RatingCompat$Style
androidx.core.util.SparseIntArrayKt$valueIterator$1: int nextInt()
com.example.revolut.rates.R$id: int decor_content_parent
kotlin.jvm.internal.TypeIntrinsics: java.util.Iterator asMutableIterator(java.lang.Object,java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybeDelayError(io.reactivex.functions.Function)
androidx.constraintlayout.solver.widgets.WidgetContainer: WidgetContainer(int,int,int,int)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder create(android.content.Context)
okhttp3.internal.proxy.NullProxySelector
dagger.android.support.R$attr: int toolbarNavigationButtonStyle
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean canApplyTheme()
io.reactivex.internal.util.BlockingIgnoringReceiver: java.lang.Throwable error
androidx.versionedparcelable.ParcelImpl: androidx.versionedparcelable.VersionedParcelable getVersionedParcel()
androidx.appcompat.R$attr: int windowFixedHeightMajor
kotlin.jvm.internal.ClassBasedDeclarationContainer
kotlin.collections.EmptyIterator: kotlin.collections.EmptyIterator INSTANCE
com.example.revolut.rates.R$layout: int abc_list_menu_item_radio
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int editorAbsoluteX
kotlinx.coroutines.channels.ArrayChannel: ArrayChannel(int)
com.example.revolut.rates.R$color: int material_grey_850
androidx.legacy.v4.R$dimen: int notification_right_side_padding_top
androidx.legacy.coreutils.R$id: int right_icon
kotlin.random.AbstractPlatformRandom: AbstractPlatformRandom()
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getDimensionBehaviour(int)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean)
io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.widget.NestedScrollView: void requestDisallowInterceptTouchEvent(boolean)
dagger.android.support.R$styleable: int MenuView_android_itemBackground
androidx.media.R$dimen
androidx.swiperefreshlayout.R$attr: int fontWeight
androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_GROUPS
com.example.revolut.rates.R$styleable: int AppCompatTheme_listDividerAlertDialog
androidx.media.R$id: int media_actions
dagger.internal.DaggerCollections
io.reactivex.Completable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Action,io.reactivex.functions.Consumer)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable)
android.support.v4.media.session.MediaSessionCompat$SessionFlags
kotlin.collections.AbstractList: java.lang.Object set(int,java.lang.Object)
dagger.android.support.R$style: int Base_Widget_AppCompat_EditText
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: androidx.core.app.RemoteInput getRemoteInput()
androidx.appcompat.R$attr: int elevation
io.reactivex.Completable: Completable()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReplyAction(android.app.PendingIntent,androidx.core.app.RemoteInput)
androidx.legacy.v4.R$integer: int cancel_button_image_alpha
androidx.core.view.ViewCompat: void setLabelFor(android.view.View,int)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(int[],int,int,int,int,java.lang.Object)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
io.reactivex.internal.operators.flowable.FlowableLimit
androidx.appcompat.widget.MenuPopupWindow
com.example.revolut.rates.R$id: int action_bar
kotlin.reflect.KTypeProjection: int hashCode()
androidx.legacy.coreui.R$id: int action_image
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependents(android.view.View)
androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)
androidx.recyclerview.widget.OrientationHelper: int getTotalSpace()
com.example.revolut.rates.R$style: int Widget_AppCompat_EditText
dagger.android.support.R$attr: int queryBackground
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function3)
dagger.android.support.R$dimen: int notification_action_icon_size
androidx.core.util.LongSparseArrayKt: void putAll(android.util.LongSparseArray,android.util.LongSparseArray)
com.jakewharton.rxbinding3.widget.AdapterViewItemClickEvent: long getId()
kotlinx.coroutines.JobSupport: void onCancellationInternal$kotlinx_coroutines_core(kotlinx.coroutines.CompletedExceptionally)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addInvisibleAction(int,java.lang.CharSequence,android.app.PendingIntent)
androidx.media.MediaBrowserServiceCompat: int RESULT_PROGRESS_UPDATE
okhttp3.internal.http2.Header: okio.ByteString PSEUDO_PREFIX
androidx.vectordrawable.R$styleable: int GradientColor_android_startX
androidx.core.app.NotificationCompat: java.lang.String EXTRA_MESSAGING_STYLE_USER
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object single(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
okhttp3.EventListener: void connectStart(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy)
androidx.databinding.ObservableLong: long serialVersionUID
androidx.recyclerview.widget.RecyclerView$State: java.lang.String toString()
io.reactivex.SingleTransformer: io.reactivex.SingleSource apply(io.reactivex.Single)
kotlin.coroutines.CombinedContext: CombinedContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance()
io.reactivex.subscribers.SerializedSubscriber: void onNext(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(double[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float)
io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,boolean)
kotlinx.coroutines.channels.ProduceKt
com.jakewharton.rxbinding3.widget.AdapterViewItemSelectionEvent: com.jakewharton.rxbinding3.widget.AdapterViewItemSelectionEvent copy(android.widget.AdapterView,android.view.View,int,long)
io.reactivex.internal.operators.observable.ObservableDoOnLifecycle: ObservableDoOnLifecycle(io.reactivex.Observable,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-rL5Bavg(short[])
kotlin.UByteArray: java.lang.Object[] toArray()
androidx.legacy.v4.R$attr: int fontStyle
androidx.databinding.InverseBindingListener
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
androidx.media.app.NotificationCompat$MediaStyle: android.support.v4.media.session.MediaSessionCompat$Token getMediaSession(android.app.Notification)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void setChangeDuration(long)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addActions(java.util.List)
androidx.fragment.app.DialogFragment: DialogFragment()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object last(java.lang.Iterable)
androidx.core.R$styleable: int FontFamily_fontProviderPackage
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(short[],kotlin.jvm.functions.Function1)
io.reactivex.Flowable: io.reactivex.Flowable doOnLifecycle(io.reactivex.functions.Consumer,io.reactivex.functions.LongConsumer,io.reactivex.functions.Action)
io.reactivex.internal.functions.Functions: io.reactivex.functions.Consumer REQUEST_MAX
com.jakewharton.rxbinding3.widget.RxAdapterView: io.reactivex.Observable itemLongClickEvents$default(android.widget.AdapterView,kotlin.jvm.functions.Function1,int,java.lang.Object)
okhttp3.internal.io.FileSystem: okio.Sink appendingSink(java.io.File)
com.example.revolut.rates.R$attr: int lastBaselineToBottomHeight
kotlin.random.AbstractPlatformRandom: byte[] nextBytes(byte[])
androidx.core.app.NotificationCompat: java.lang.String EXTRA_LARGE_ICON_BIG
kotlinx.android.parcel.Parceler$DefaultImpls
androidx.asynclayoutinflater.R$style: int TextAppearance_Compat_Notification_Title
dagger.android.HasServiceInjector
kotlin.comparisons.UComparisonsKt___UComparisonsKt: UComparisonsKt___UComparisonsKt()
io.reactivex.internal.operators.single.SingleCache: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function getOnMaybeAssembly()
androidx.arch.core.util.Function: java.lang.Object apply(java.lang.Object)
kotlin.text.StringsKt__StringBuilderKt: java.lang.Appendable append(java.lang.Appendable,java.lang.CharSequence[])
io.reactivex.Flowable: io.reactivex.Flowable zipWith(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean)
androidx.constraintlayout.widget.R$attr: int layout_constraintLeft_toLeftOf
androidx.core.widget.AutoSizeableTextView: int getAutoSizeStepGranularity()
androidx.legacy.v4.R$id: int info
kotlin.collections.FloatIterator: java.lang.Float next()
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_MAX
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void setMoveDuration(long)
androidx.core.util.LruCacheKt$lruCache$1: int invoke(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.parallel.ParallelRunOn$RunOnConditionalSubscriber: long serialVersionUID
okio.Timeout: long timeoutNanos()
com.jakewharton.rxbinding3.widget.SeekBarStopChangeEvent: int hashCode()
androidx.appcompat.widget.ScrollingTabContainerView: void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
androidx.appcompat.app.ActionBarDrawerToggle: void onDrawerStateChanged(int)
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mOnClickListener
dagger.android.support.R$styleable: int AppCompatTheme_checkboxStyle
io.reactivex.internal.operators.observable.ObservableSerialized: void subscribeActual(io.reactivex.Observer)
okhttp3.OkHttpClient: boolean followRedirects()
io.reactivex.internal.operators.maybe.MaybeJust
io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable
androidx.legacy.coreutils.R$id: int forever
androidx.core.R$layout: int notification_action_tombstone
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams()
androidx.coordinatorlayout.R$dimen: int notification_top_pad
io.reactivex.internal.operators.flowable.FlowableCreate: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
kotlinx.coroutines.internal.LockFreeMPSCQueue: java.lang.Object removeFirstOrNull()
kotlinx.coroutines.channels.Channel$Factory: int CONFLATED
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadMessage(okio.ByteString)
com.example.revolut.rates.R$attr: int colorAccent
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
androidx.databinding.CallbackRegistry: CallbackRegistry(androidx.databinding.CallbackRegistry$NotifierCallback)
com.example.revolut.rates.R$anim: R$anim()
io.reactivex.internal.fuseable.FuseToMaybe
androidx.annotation.StyleRes
io.reactivex.plugins.RxJavaPlugins: void setOnCompletableAssembly(io.reactivex.functions.Function)
io.reactivex.processors.FlowableProcessor: io.reactivex.processors.FlowableProcessor toSerialized()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toList(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
com.example.revolut.rates.R$string: int abc_activitychooserview_choose_application
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sorted-QwZRm1k(long[])
dagger.android.support.R$id: int beginning
io.reactivex.internal.functions.Functions: io.reactivex.functions.Consumer notificationOnError(io.reactivex.functions.Consumer)
kotlin.jvm.internal.PrimitiveSpreadBuilder: void addSpread(java.lang.Object)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
androidx.core.graphics.RectKt: int component1(android.graphics.Rect)
com.example.revolut.rates.R$attr: int queryBackground
kotlinx.coroutines.CoroutineId: kotlinx.coroutines.CoroutineId copy$default(kotlinx.coroutines.CoroutineId,long,int,java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith(java.lang.String,java.lang.String,int,boolean)
com.example.revolut.rates.databinding.ActivityMainBinding: com.example.revolut.rates.viewmodel.CurrenciesViewModel mViewModel
androidx.asynclayoutinflater.R$id: int notification_main_column
androidx.recyclerview.widget.ItemTouchHelper$Callback: void onChildDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean)
com.example.revolut.rates.R$drawable: int abc_list_pressed_holo_dark
androidx.appcompat.R$styleable: int FontFamily_fontProviderCerts
androidx.fragment.R$attr: int layout_keyline
kotlinx.coroutines.CancellableContinuationImpl: void resumeUndispatched(kotlinx.coroutines.CoroutineDispatcher,java.lang.Object)
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1
androidx.swiperefreshlayout.R$id: int tag_unhandled_key_event_manager
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(byte[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
okio.Okio: okio.Sink sink(java.nio.file.Path,java.nio.file.OpenOption[])
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(kotlin.Pair[],java.util.Map)
androidx.legacy.coreui.R$dimen: int notification_top_pad_large_text
kotlin.jvm.functions.Function8: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.Cancelling: kotlinx.coroutines.CancelledContinuation cancel
com.example.revolut.rates.R$styleable: int[] CoordinatorLayout_Layout
kotlinx.coroutines.internal.LockFreeLinkedListNode$describeRemove$1: java.lang.Object updatedNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.customview.R$id: int line1
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List filterIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.DropDownListView: void onDetachedFromWindow()
androidx.slidingpanelayout.R$dimen: int notification_subtext_size
android.support.v4.media.session.MediaControllerCompat$Callback: void onCaptioningEnabledChanged(boolean)
okhttp3.internal.http2.Http2Codec: void finishRequest()
androidx.core.util.LruCacheKt$lruCache$2: LruCacheKt$lruCache$2()
io.reactivex.internal.operators.flowable.FlowableRange$RangeConditionalSubscription: long serialVersionUID
kotlin.collections.AbstractList$Companion: void checkRangeIndexes$kotlin_stdlib(int,int,int)
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
androidx.core.widget.TintableImageSourceView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
androidx.appcompat.app.AppCompatDialog: AppCompatDialog(android.content.Context,int)
kotlin.jvm.internal.Intrinsics: void throwAssert(java.lang.String)
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver: long serialVersionUID
kotlin.random.URandomKt: int nextUInt(kotlin.random.Random)
androidx.core.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)
androidx.appcompat.widget.ActivityChooserView: void setInitialActivityCount(int)
androidx.recyclerview.widget.SortedList$BatchedCallback: void onMoved(int,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int getAnchorId()
androidx.fragment.R$dimen: int notification_media_narrow_margin
androidx.core.util.SparseLongArrayKt: kotlin.collections.LongIterator valueIterator(android.util.SparseLongArray)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder secure()
androidx.recyclerview.widget.GridLayoutManager: void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.swiperefreshlayout.R$styleable: int FontFamily_fontProviderCerts
kotlin.ranges.ClosedFloatingPointRange$DefaultImpls: boolean isEmpty(kotlin.ranges.ClosedFloatingPointRange)
com.google.gson.annotations.Until: double value()
androidx.fragment.app.Fragment: void startActivity(android.content.Intent)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(float[],int,int,int,java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar: void setSubtitle(java.lang.CharSequence)
com.example.revolut.rates.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
androidx.appcompat.R$drawable: int abc_switch_track_mtrl_alpha
io.reactivex.observers.ResourceObserver: void add(io.reactivex.disposables.Disposable)
androidx.documentfile.provider.DocumentFile: boolean delete()
com.jakewharton.rxbinding3.widget.AdapterViewItemSelectionEvent: android.widget.AdapterView component1()
androidx.core.transition.TransitionKt$addListener$3
androidx.core.app.Person: java.lang.String getKey()
androidx.databinding.ViewDataBinding: boolean getFromArray(boolean[],int)
dagger.android.support.R$style: int Base_Widget_AppCompat_ListView_Menu
androidx.core.view.ViewCompat: boolean hasTransientState(android.view.View)
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.Job,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)
androidx.appcompat.widget.SwitchCompat: void toggle()
kotlinx.coroutines.EventLoopBase: long processNextEvent()
okhttp3.Response$Builder: okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String)
io.reactivex.internal.util.ListAddBiConsumer: io.reactivex.functions.BiFunction instance()
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean isOverflowButton
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe: ObservableFlatMapMaybe(io.reactivex.ObservableSource,io.reactivex.functions.Function,boolean)
dagger.android.support.R$drawable: int notification_bg_low
io.reactivex.internal.operators.flowable.FlowableHide: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(int[],kotlin.jvm.functions.Function1)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: int getPosition()
kotlinx.coroutines.internal.LockFreeMPSCQueueCore: int ADD_CLOSED
androidx.appcompat.widget.ForwardingListener: void onViewDetachedFromWindow(android.view.View)
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: long serialVersionUID
androidx.appcompat.view.ContextThemeWrapper: android.content.res.AssetManager getAssets()
kotlin.jvm.internal.PropertyReference2: PropertyReference2()
androidx.collection.ArraySet: boolean containsAll(java.util.Collection)
kotlin.coroutines.experimental.jvm.internal.CoroutineImpl: void resume(java.lang.Object)
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.schedulers.SingleScheduler: io.reactivex.disposables.Disposable schedulePeriodicallyDirect(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
io.reactivex.Completable: io.reactivex.Completable fromCallable(java.util.concurrent.Callable)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertResult(java.lang.Object[])
io.reactivex.Completable: io.reactivex.Completable fromPublisher(org.reactivestreams.Publisher)
com.jakewharton.rxbinding3.widget.RxSeekBar: com.jakewharton.rxbinding3.InitialValueObservable changes(android.widget.SeekBar)
androidx.appcompat.view.menu.SubMenuBuilder
kotlin.jvm.internal.TypeIntrinsics: java.util.ListIterator asMutableListIterator(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(boolean[])
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.ClosedRange,float)
androidx.appcompat.app.WindowDecorActionBar: boolean hasLogo()
androidx.core.R$dimen: int notification_content_margin_start
androidx.appcompat.R$styleable: int AlertDialog_singleChoiceItemLayout
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(double[],kotlin.ranges.IntRange)
androidx.customview.R$drawable: int notification_template_icon_bg
androidx.drawerlayout.R$styleable: int[] FontFamilyFont
androidx.core.view.accessibility.AccessibilityRecordCompat: void setToIndex(int)
androidx.databinding.ObservableShort: ObservableShort(androidx.databinding.Observable[])
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_goneMarginBottom
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getInternalDrawBottom()
io.reactivex.Completable: io.reactivex.Completable concat(org.reactivestreams.Publisher,int)
org.intellij.lang.annotations.JdkConstants$InputEventMask
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setDateFormat(int,int)
com.jakewharton.rxbinding3.widget.AdapterViewNothingSelectionEvent: boolean equals(java.lang.Object)
androidx.legacy.coreui.R$dimen: int compat_button_padding_vertical_material
com.example.revolut.rates.R$styleable: int Toolbar_titleMarginEnd
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel map$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
android.support.v4.media.session.MediaControllerCompat: void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int)
androidx.core.content.FileProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
io.reactivex.subjects.SingleSubject
androidx.constraintlayout.widget.Constraints$LayoutParams: Constraints$LayoutParams(int,int)
androidx.databinding.InverseBindingMethod
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber: long serialVersionUID
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associate$1: java.lang.Object invokeSuspend(java.lang.Object)
com.jakewharton.rxbinding3.core.R$layout: int notification_template_part_time
kotlinx.coroutines.channels.AbstractChannelKt: java.lang.Object SELECT_STARTED
io.reactivex.internal.operators.flowable.FlowableTimeInterval
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
androidx.appcompat.app.ActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab)
kotlinx.coroutines.internal.LockFreeMPSCQueueCore$Companion: java.lang.Object access$withState(kotlinx.coroutines.internal.LockFreeMPSCQueueCore$Companion,long,kotlin.jvm.functions.Function2)
androidx.appcompat.app.ActionBar: boolean isTitleTruncated()
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isCanceled()
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence takeLast(java.lang.CharSequence,int)
org.reactivestreams.Subscriber: void onError(java.lang.Throwable)
io.reactivex.Completable: io.reactivex.Completable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.app.AppCompatDelegate: boolean isHandleNativeActionModesEnabled()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
io.reactivex.internal.operators.single.SingleFlatMapMaybe: void subscribeActual(io.reactivex.MaybeObserver)
com.example.revolut.rates.R$drawable: int icon_pln
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.ClosedRange,long)
androidx.core.app.FrameMetricsAggregator: int INPUT_DURATION
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionDropDownStyle
io.reactivex.internal.operators.flowable.FlowableBufferBoundary: FlowableBufferBoundary(io.reactivex.Flowable,org.reactivestreams.Publisher,io.reactivex.functions.Function,java.util.concurrent.Callable)
androidx.appcompat.view.menu.MenuItemImpl: boolean expandActionView()
com.google.gson.JsonSyntaxException: JsonSyntaxException(java.lang.String,java.lang.Throwable)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeAtImpl(int)
androidx.media.R$id: int info
kotlinx.coroutines.DeferredKt: kotlinx.coroutines.Deferred async(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
okhttp3.internal.http.HttpCodec: okhttp3.Response$Builder readResponseHeaders(boolean)
androidx.appcompat.widget.DecorToolbar: void setDisplayOptions(int)
androidx.core.util.SparseIntArrayKt$valueIterator$1
kotlin.coroutines.experimental.CoroutineContext$Element: kotlin.coroutines.experimental.CoroutineContext minusKey(kotlin.coroutines.experimental.CoroutineContext$Key)
com.example.revolut.rates.R$style: int Widget_AppCompat_ListView_Menu
androidx.core.util.SparseBooleanArrayKt$valueIterator$1: void setIndex(int)
kotlin.jvm.JvmPackageName
io.reactivex.internal.operators.flowable.FlowableGroupBy
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8: java.util.Iterator iterator()
io.reactivex.Single: io.reactivex.Flowable concatArray(io.reactivex.SingleSource[])
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_EMAIL
kotlinx.coroutines.channels.ChannelCoroutine: boolean cancel(java.lang.Throwable)
androidx.appcompat.widget.AppCompatEditText
io.reactivex.internal.operators.observable.ObservableInternalHelper: io.reactivex.functions.Consumer observerOnNext(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableMap: void subscribeActual(org.reactivestreams.Subscriber)
com.jakewharton.rxbinding3.core.R$id: int icon
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable getCurrent()
androidx.core.view.inputmethod.EditorInfoCompat: int IME_FLAG_NO_PERSONALIZED_LEARNING
com.example.revolut.rates.R$layout: int abc_alert_dialog_button_bar_material
androidx.databinding.ViewDataBinding$PropertyChangedInverseListener: ViewDataBinding$PropertyChangedInverseListener(int)
kotlin.jvm.JvmSuppressWildcards
io.reactivex.internal.operators.flowable.FlowableTakeLastOne
androidx.fragment.app.FragmentActivity: void onStart()
dagger.android.support.R$drawable: int abc_btn_radio_to_on_mtrl_000
io.reactivex.Observable: io.reactivex.Observable concatMapMaybe(io.reactivex.functions.Function)
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_SMALL
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection TOP_DOWN
kotlinx.coroutines.JobSupport: int getOnCancelMode$kotlinx_coroutines_core()
androidx.appcompat.widget.SearchView: void onActionViewExpanded()
okhttp3.internal.Util: byte[] EMPTY_BYTE_ARRAY
androidx.appcompat.app.AlertDialog: AlertDialog(android.content.Context)
androidx.appcompat.view.StandaloneActionMode: StandaloneActionMode(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean)
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
androidx.legacy.coreui.R$styleable: int FontFamilyFont_fontStyle
androidx.constraintlayout.solver.widgets.ConstraintTableLayout
okhttp3.EventListener: void connectFailed(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol,java.io.IOException)
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.Constraints$LayoutParams generateLayoutParams(android.util.AttributeSet)
io.reactivex.Maybe: io.reactivex.Flowable concat(org.reactivestreams.Publisher)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sortedDescending-rL5Bavg(short[])
io.reactivex.internal.operators.flowable.FlowableDetach: FlowableDetach(io.reactivex.Flowable)
kotlin.collections.ArraysKt___ArraysKt: short[] sortedArrayDescending(short[])
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo
io.reactivex.processors.FlowableProcessor: FlowableProcessor()
io.reactivex.internal.operators.completable.CompletableMerge
kotlin.collections.CollectionsKt___CollectionsKt: int indexOfFirst(java.util.List,kotlin.jvm.functions.Function1)
kotlin.jvm.PurelyImplements
okhttp3.Dispatcher
com.example.revolut.rates.R$styleable: int RecyclerView_android_descendantFocusability
androidx.drawerlayout.R$styleable: int GradientColor_android_type
androidx.coordinatorlayout.R$styleable: int[] CoordinatorLayout_Layout
androidx.constraintlayout.solver.widgets.ConstraintWidget: int mY
androidx.appcompat.app.WindowDecorActionBar: void setHomeActionContentDescription(int)
androidx.swiperefreshlayout.R$dimen: int notification_content_margin_start
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Display2
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintHeight_min
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable draws(android.view.View)
okhttp3.Interceptor$Chain: okhttp3.Connection connection()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)
dagger.android.support.R$styleable: int AppCompatTheme_android_windowIsFloating
io.reactivex.internal.subscribers.BoundedSubscriber: void onComplete()
androidx.core.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver: long serialVersionUID
com.example.revolut.rates.R$styleable: int[] RecyclerView
androidx.constraintlayout.solver.widgets.Guideline: java.util.ArrayList getAnchors()
android.support.v4.media.session.MediaSessionCompat$Token: java.lang.Object getToken()
dagger.android.support.R$styleable: int AppCompatTheme_actionModeCloseDrawable
io.reactivex.Maybe: io.reactivex.Maybe fromCallable(java.util.concurrent.Callable)
dagger.android.support.R$attr: int textAppearanceSmallPopupMenu
com.example.revolut.rates.R$attr: int overlapAnchor
androidx.appcompat.R$styleable: int MenuItem_iconTintMode
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: UArraysKt___UArraysJvmKt()
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintTop_creator
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void registerAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
kotlin.LazyKt__LazyJVMKt: kotlin.Lazy lazy(java.lang.Object,kotlin.jvm.functions.Function0)
androidx.constraintlayout.widget.Placeholder: void setContentId(int)
com.example.revolut.rates.R$dimen: int abc_text_size_body_1_material
androidx.core.util.SparseLongArrayKt: boolean containsKey(android.util.SparseLongArray,int)
androidx.legacy.coreutils.R$styleable: int GradientColor_android_centerX
okio.BufferedSource: long readLongLe()
androidx.fragment.app.FragmentContainer: boolean onHasView()
androidx.coordinatorlayout.R$dimen: int notification_top_pad_large_text
androidx.versionedparcelable.VersionedParcel: void writeDouble(double)
dagger.internal.ProviderOfLazy: javax.inject.Provider create(javax.inject.Provider)
com.example.revolut.rates.R$drawable: int abc_ic_star_half_black_16dp
kotlin.sequences.TakeSequence$iterator$1
androidx.databinding.ObservableDouble: int describeContents()
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_MALFORMED_QUERY
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$5
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object access$getState$p(kotlinx.coroutines.selects.SelectBuilderImpl)
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocusable(boolean)
androidx.media.app.NotificationCompat$MediaStyle: androidx.media.app.NotificationCompat$MediaStyle setShowCancelButton(boolean)
androidx.loader.R$id: int chronometer
android.support.v4.media.session.PlaybackStateCompat$RepeatMode
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection BOTTOM_UP
kotlin.collections.UArraysKt: long random-JzugnMA(long[],kotlin.random.Random)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setCustomView(android.view.View)
androidx.core.util.LruCacheKt$lruCache$4: int sizeOf(java.lang.Object,java.lang.Object)
androidx.databinding.PropertyChangeRegistry: PropertyChangeRegistry()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean isRefreshing()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(byte,int)
androidx.swiperefreshlayout.R$dimen: int notification_main_column_padding_top
androidx.core.app.BundleCompat
androidx.core.view.NestedScrollingChild: boolean dispatchNestedFling(float,float,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean minWith(boolean[],java.util.Comparator)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
io.reactivex.internal.subscriptions.SubscriptionHelper: boolean replace(java.util.concurrent.atomic.AtomicReference,org.reactivestreams.Subscription)
androidx.databinding.DataBinderMapper: androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View[],int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-F7u83W8(long[],java.lang.Iterable)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)
com.example.revolut.rates.R$integer: R$integer()
androidx.core.view.InputDeviceCompat: int SOURCE_TOUCHPAD
androidx.asynclayoutinflater.R$styleable: int[] GradientColorItem
androidx.databinding.ObservableFloat: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.selects.SelectClause2 getOnSend()
androidx.legacy.coreui.R$drawable: int notification_tile_bg
io.reactivex.internal.operators.flowable.FlowableZipIterable: FlowableZipIterable(io.reactivex.Flowable,java.lang.Iterable,io.reactivex.functions.BiFunction)
androidx.databinding.ObservableByte: android.os.Parcelable$Creator CREATOR
com.google.gson.internal.bind.JsonTreeReader: void close()
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(char[],kotlin.jvm.functions.Function1)
dagger.android.support.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
androidx.coordinatorlayout.widget.CoordinatorLayout: void onMeasureChild(android.view.View,int,int,int,int)
io.reactivex.Completable: io.reactivex.Flowable toFlowable()
androidx.databinding.adapters.TabHostBindingAdapter: void setCurrentTabTag(android.widget.TabHost,java.lang.String)
androidx.lifecycle.LifecycleOwner
androidx.databinding.adapters.TableLayoutBindingAdapter: void setShrinkColumns(android.widget.TableLayout,java.lang.CharSequence)
io.reactivex.internal.subscriptions.BasicIntQueueSubscription: boolean offer(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(char[])
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onLevelChange(int)
dagger.android.support.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
androidx.core.app.NotificationCompat$InboxStyle: NotificationCompat$InboxStyle(androidx.core.app.NotificationCompat$Builder)
androidx.versionedparcelable.VersionedParcel: long readLong(long,int)
androidx.customview.widget.ViewDragHelper: boolean canScroll(android.view.View,boolean,int,int,int,int)
android.support.v4.media.session.PlaybackStateCompat: long ACTION_SET_SHUFFLE_MODE
io.reactivex.internal.operators.completable.CompletableCache: void subscribeActual(io.reactivex.CompletableObserver)
okhttp3.internal.ws.RealWebSocket: void onReadClose(int,java.lang.String)
kotlin.jvm.internal.Ref$BooleanRef
kotlin.text.Typography: char euro
androidx.core.widget.ListViewAutoScrollHelper: boolean canTargetScrollVertically(int)
dagger.android.support.DaggerFragment_MembersInjector: dagger.MembersInjector create(javax.inject.Provider)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.core.view.ViewCompat: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int)
org.jetbrains.annotations.NonNls
io.reactivex.internal.observers.CallbackCompletableObserver: void accept(java.lang.Throwable)
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewAddEvent: android.view.View getChild()
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void setMaxRecycledViews(int,int)
kotlinx.coroutines.scheduling.CoroutineScheduler: int access$getCorePoolSize$p(kotlinx.coroutines.scheduling.CoroutineScheduler)
kotlin.jvm.internal.BooleanSpreadBuilder
androidx.core.os.ParcelableCompatCreatorCallbacks: java.lang.Object[] newArray(int)
io.reactivex.Observable: io.reactivex.Observable retry(long,io.reactivex.functions.Predicate)
android.support.v4.media.session.IMediaSession: void playFromUri(android.net.Uri,android.os.Bundle)
androidx.appcompat.R$dimen: int notification_main_column_padding_top
kotlin.text.StringsKt___StringsKt: java.lang.String dropWhile(java.lang.String,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintStart_toStartOf
androidx.fragment.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String getBridgeTag()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility INTERNAL
androidx.appcompat.widget.ActionMenuPresenter$SavedState
androidx.legacy.coreui.R$attr: int fontProviderFetchTimeout
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxyAuthenticator(okhttp3.Authenticator)
io.reactivex.Flowable: io.reactivex.Flowable timeInterval(io.reactivex.Scheduler)
androidx.databinding.ViewDataBinding$OnStartListener: void onStart()
androidx.legacy.coreui.R$integer: int status_bar_notification_info_maxnum
androidx.appcompat.R$styleable: int ActionBar_backgroundStacked
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: CoordinatorLayout$SavedState(android.os.Parcelable)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
androidx.viewpager.widget.PagerAdapter: java.lang.Object instantiateItem(android.view.View,int)
androidx.swiperefreshlayout.R$id: int notification_main_column_container
io.reactivex.ObservableEmitter: void setDisposable(io.reactivex.disposables.Disposable)
okio.ForwardingTimeout: okio.Timeout clearDeadline()
androidx.appcompat.R$styleable: int AppCompatTheme_checkboxStyle
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintBottom_toTopOf
okio.Buffer: long indexOf(byte)
androidx.core.text.HtmlKt
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
io.reactivex.Observable: java.lang.Iterable blockingLatest()
kotlin.text.UStringsKt: java.lang.String toString-V7xB4Y4(int,int)
androidx.appcompat.R$style: int Widget_AppCompat_PopupMenu
androidx.core.util.Preconditions: float checkArgumentInRange(float,float,float,java.lang.String)
kotlin.coroutines.experimental.SafeContinuation: void resume(java.lang.Object)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_placeholder_emptyVisibility
dagger.android.support.R$style: int Base_V22_Theme_AppCompat
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender clearPages()
kotlin.reflect.KClass: boolean equals(java.lang.Object)
androidx.legacy.coreui.R$dimen: int notification_big_circle_margin
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int)
okio.Options: okio.ByteString get(int)
io.reactivex.processors.BehaviorProcessor: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.R$dimen: int abc_text_size_body_1_material
androidx.viewpager.widget.ViewPager: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
okio.HashingSink: okio.HashingSink hmacSha256(okio.Sink,okio.ByteString)
io.reactivex.internal.schedulers.ImmediateThinScheduler: io.reactivex.disposables.Disposable schedulePeriodicallyDirect(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
com.jakewharton.rxbinding3.view.MenuItemActionViewCollapseEvent: com.jakewharton.rxbinding3.view.MenuItemActionViewCollapseEvent copy(android.view.MenuItem)
io.reactivex.internal.util.AppendOnlyLinkedArrayList$NonThrowingPredicate: boolean test(java.lang.Object)
io.reactivex.annotations.BackpressureKind: io.reactivex.annotations.BackpressureKind UNBOUNDED_IN
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter NUMBER
kotlin.coroutines.experimental.jvm.internal.CoroutineImpl: kotlin.coroutines.experimental.CoroutineContext getContext()
android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onQueueTitleChanged(java.lang.CharSequence)
io.reactivex.Flowable: io.reactivex.Flowable dematerialize(io.reactivex.functions.Function)
androidx.fragment.app.Fragment
androidx.appcompat.R$color
com.example.revolut.rates.R$style: int Base_AlertDialog_AppCompat
kotlin.jvm.internal.InlineMarker: void finallyStart(int)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigDecimal toBigDecimalOrNull(java.lang.String)
androidx.appcompat.R$styleable: int[] StateListDrawableItem
io.reactivex.Observable: io.reactivex.Observable error(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.util.List asList--ajY-9A(int[])
androidx.core.graphics.ImageDecoderKt$decodeBitmap$1: void onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
dagger.android.support.R$style: int Widget_AppCompat_PopupMenu
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(char[],int)
okhttp3.Request: okhttp3.CacheControl cacheControl()
androidx.appcompat.app.AppCompatActivity: void onStart()
kotlin.collections.ArraysKt___ArraysJvmKt: int[] plus(int[],int[])
androidx.constraintlayout.widget.R$attr: int layout_constraintBottom_creator
dagger.android.support.R$styleable: int Toolbar_contentInsetLeft
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object all(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.UByteArray: kotlin.UByteArray box-impl(byte[])
io.reactivex.Flowable: io.reactivex.Flowable concatArrayEager(int,int,org.reactivestreams.Publisher[])
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object indexOfLast(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
android.support.v4.media.RatingCompat: android.support.v4.media.RatingCompat newStarRating(int,float)
kotlin.UByteArray: int getSize-impl(byte[])
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender clone()
io.reactivex.Flowable: io.reactivex.Flowable skip(long)
kotlin.jvm.functions.Function19: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-EtDCXyQ(short[],short,int,int)
io.reactivex.Flowable: io.reactivex.Single single(java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void scrollToPositionWithOffset(int,int)
androidx.core.util.PairKt
io.reactivex.plugins.RxJavaPlugins: void onError(java.lang.Throwable)
com.example.revolut.rates.databinding.ActivityMainBindingImpl: ActivityMainBindingImpl(androidx.databinding.DataBindingComponent,android.view.View)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: INotificationSideChannel$Stub$Proxy(android.os.IBinder)
android.support.v4.media.RatingCompat$StarStyle
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(double[],double,int,int)
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollExtent()
androidx.appcompat.app.ActionBar: void setNavigationMode(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte minWith(byte[],java.util.Comparator)
android.support.v4.media.MediaBrowserCompat$CustomActionCallback: void onResult(java.lang.String,android.os.Bundle,android.os.Bundle)
kotlinx.coroutines.channels.SendChannel: kotlinx.coroutines.selects.SelectClause2 getOnSend()
androidx.core.graphics.ColorUtils: int blendARGB(int,int,float)
androidx.drawerlayout.widget.DrawerLayout: void requestLayout()
kotlin.sequences.TakeSequence$iterator$1: java.util.Iterator getIterator()
androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)
androidx.appcompat.widget.ActionBarContextView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
com.jakewharton.rxbinding3.view.ViewScrollChangeEvent: int getScrollX()
androidx.slidingpanelayout.R$attr: int alpha
io.reactivex.Completable: io.reactivex.Completable onErrorComplete(io.reactivex.functions.Predicate)
com.example.revolut.rates.R$color: int primary_text_default_material_light
kotlin.text.StringsKt___StringsKt: java.lang.Character firstOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.appcompat.app.ActionBar$Tab: java.lang.CharSequence getContentDescription()
kotlin.PreconditionsKt__AssertionsJVMKt: PreconditionsKt__AssertionsJVMKt()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationY(float)
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function7)
androidx.swiperefreshlayout.R$dimen: int notification_small_icon_background_padding
kotlinx.coroutines.channels.RendezvousChannel: boolean isBufferEmpty()
androidx.appcompat.graphics.drawable.DrawableContainer: int getOpacity()
androidx.core.util.SparseIntArrayKt: int getSize(android.util.SparseIntArray)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.ColorFilter getColorFilter()
androidx.collection.ArraySet: java.lang.Object valueAt(int)
kotlin.jvm.internal.ByteSpreadBuilder
com.example.revolut.rates.R$id: int chronometer
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(short[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: boolean endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)
dagger.android.ServiceKey
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context)
kotlin.jvm.internal.PackageReference: java.util.Collection getMembers()
com.example.revolut.rates.R$drawable: int notification_icon_background
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter beginArray()
androidx.appcompat.widget.TintTypedArray: void recycle()
okhttp3.internal.publicsuffix.PublicSuffixDatabase
kotlin.sequences.DropWhileSequence: kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.DropWhileSequence)
kotlin.UShortKt
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] copyInto$default(boolean[],boolean[],int,int,int,int,java.lang.Object)
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationStart(android.animation.Animator)
io.reactivex.observables.ConnectableObservable: io.reactivex.Observable refCount()
io.reactivex.Single: io.reactivex.Single doFinally(io.reactivex.functions.Action)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)
androidx.appcompat.R$attr: int tooltipText
androidx.appcompat.R$styleable: int Toolbar_logoDescription
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
kotlin.jvm.internal.Intrinsics: boolean areEqual(double,java.lang.Double)
dagger.android.support.R$style: int Base_Widget_AppCompat_PopupMenu
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-K6DWlUc(long[],long,int,int)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer awaitCount(int,java.lang.Runnable,long)
com.jakewharton.rxbinding3.core.R$drawable: int notification_icon_background
dagger.android.support.R$styleable: int AppCompatTheme_panelMenuListWidth
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.ReceiveOrClosed sendBuffered(java.lang.Object)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.R$styleable: int MenuView_android_headerBackground
androidx.appcompat.widget.SearchView$OnSuggestionListener: boolean onSuggestionSelect(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer minBy(int[],kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int PARENT_ID
androidx.core.ktx.R$id: int icon
dagger.android.support.R$styleable: int SearchView_iconifiedByDefault
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(char[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.text.TextDirectionHeuristicCompat
io.reactivex.internal.operators.flowable.FlowableOnErrorNext
kotlin.text.StringsKt__StringsJVMKt: java.lang.String concatToString(char[])
androidx.core.app.AppComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)
com.example.revolut.rates.di.Injector$Companion: com.example.revolut.rates.di.AppComponent getAppComponent()
androidx.appcompat.R$styleable: int MenuView_android_itemTextAppearance
com.jakewharton.rxbinding3.core.R$attr: int fontVariationSettings
dagger.android.support.R$styleable: int MenuItem_android_id
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)
androidx.core.provider.FontsContractCompat$FontInfo: int getTtcIndex()
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemRangeChanged(int,int)
dagger.android.ReleaseReferencesAt
androidx.recyclerview.R$styleable: int GradientColor_android_endColor
androidx.core.internal.view.SupportMenuItem: androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider)
androidx.core.app.NotificationCompat$Action: java.lang.CharSequence getTitle()
com.example.revolut.rates.R$styleable: int[] ButtonBarLayout
androidx.databinding.adapters.ViewGroupBindingAdapter$OnAnimationEnd: void onAnimationEnd(android.view.animation.Animation)
io.reactivex.internal.operators.observable.ObservableWindow
kotlin.coroutines.experimental.CoroutineContext$Element: kotlin.coroutines.experimental.CoroutineContext$Key getKey()
androidx.appcompat.view.StandaloneActionMode: android.view.Menu getMenu()
androidx.core.content.MimeTypeFilter
dagger.android.support.R$attr: int windowActionBar
androidx.core.app.FrameMetricsAggregator: int EVERY_DURATION
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback
androidx.appcompat.widget.ActionBarContextView: void dismissPopupMenus()
io.reactivex.internal.operators.single.SingleDoFinally
dagger.android.support.R$color: int secondary_text_disabled_material_dark
io.reactivex.Flowable: io.reactivex.Flowable concatMapEager(io.reactivex.functions.Function,int,int)
kotlin.io.FileSystemException: FileSystemException(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.legacy.coreui.R$styleable: int FontFamilyFont_android_fontWeight
kotlinx.coroutines.internal.AtomicKt
dagger.android.support.R$string: int abc_action_bar_up_description
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence asSequence(java.lang.CharSequence)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLights(int,int,int)
com.example.revolut.rates.R$attr: int actionBarDivider
okhttp3.Challenge: Challenge(java.lang.String,java.util.Map)
kotlinx.coroutines.ThreadPoolDispatcher: java.util.concurrent.Executor getExecutor()
androidx.core.view.ViewCompat: float getTranslationZ(android.view.View)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: long serialVersionUID
okio.AsyncTimeout: boolean exit()
kotlinx.coroutines.LazyDeferredKt: void LazyDeferred$annotations()
androidx.appcompat.R$attr: int goIcon
io.reactivex.internal.util.NotificationLite: boolean isDisposable(java.lang.Object)
androidx.media.R$id: int line1
androidx.appcompat.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.jakewharton.rxbinding3.view.MenuItemActionViewCollapseEvent: int hashCode()
kotlinx.coroutines.channels.AbstractChannel: boolean isBufferEmpty()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintCircleAngle
androidx.core.util.SparseArrayKt$valueIterator$1: void setIndex(int)
androidx.appcompat.R$string: int abc_menu_function_shortcut_label
androidx.appcompat.R$color: int dim_foreground_disabled_material_dark
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel)
dagger.android.support.R$drawable: int abc_ic_ab_back_material
kotlinx.coroutines.CoroutineExceptionHandlerKt: void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable,kotlinx.coroutines.Job)
kotlinx.coroutines.internal.JsName: java.lang.String name()
dagger.android.support.R$drawable: int abc_textfield_default_mtrl_alpha
androidx.appcompat.app.ActionBar: int NAVIGATION_MODE_STANDARD
okhttp3.internal.io.FileSystem: void delete(java.io.File)
androidx.core.net.TrafficStatsCompat: void incrementOperationCount(int,int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean isRemoved()
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintCircleRadius
kotlinx.coroutines.selects.SelectBuilderImpl: void disposeOnSelect(kotlinx.coroutines.DisposableHandle)
io.reactivex.internal.operators.flowable.FlowableSkip: FlowableSkip(io.reactivex.Flowable,long)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
androidx.legacy.coreutils.R$styleable: int ColorStateListItem_android_color
com.example.revolut.rates.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_SHA
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
io.reactivex.internal.util.NotificationLite: boolean isSubscription(java.lang.Object)
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mIgnoreConsumed
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doOnRequest(io.reactivex.functions.LongConsumer)
io.reactivex.internal.operators.observable.ObservableDelay: ObservableDelay(io.reactivex.ObservableSource,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: long serialVersionUID
io.reactivex.Observable: io.reactivex.Single single(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(byte,short)
kotlin.UShortArray: void storage$annotations()
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferCloseSubscriber: long serialVersionUID
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean addAll(java.util.Collection,java.lang.Object[])
kotlinx.coroutines.channels.RendezvousChannel: boolean isBufferFull()
androidx.appcompat.R$id: int tag_unhandled_key_event_manager
kotlin.collections.SlidingWindowKt: java.util.Iterator windowedIterator(java.util.Iterator,int,int,boolean,boolean)
kotlin.ranges.RangesKt___RangesKt: double coerceAtLeast(double,double)
io.reactivex.internal.operators.maybe.MaybeIsEmptySingle
androidx.media.MediaBrowserServiceCompat: void onCustomAction(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$Result)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void dispatchAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_Light_PopupMenu
okhttp3.Dispatcher: Dispatcher()
androidx.collection.LongSparseArray: int size()
io.reactivex.Observable: io.reactivex.Observable takeUntil(io.reactivex.ObservableSource)
com.example.revolut.rates.R$styleable: int View_android_focusable
kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.CoroutineDispatcher toCoroutineDispatcher(java.util.concurrent.Executor)
androidx.appcompat.app.ActionBar: boolean closeOptionsMenu()
kotlin.collections.SetsKt__SetsJVMKt: java.util.TreeSet sortedSetOf(java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-QwZRm1k(long[])
androidx.vectordrawable.R$layout: int notification_template_custom_big
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte min-GBYM_sE(byte[])
kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$scheduleResumeAfterDelay$$inlined$Runnable$1: void run()
retrofit2.converter.gson.GsonConverterFactory: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
kotlin.collections.ArraysKt___ArraysKt: int sumBy(char[],kotlin.jvm.functions.Function1)
com.google.gson.JsonSerializationContext: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setColumnAlignment(int,int)
kotlin.collections.ArraysKt___ArraysKt: long[] toLongArray(java.lang.Long[])
androidx.drawerlayout.R$drawable: int notify_panel_notification_icon_bg
kotlinx.coroutines.JobSupport: boolean makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object,int)
kotlin.collections.ArraysKt___ArraysJvmKt: short[] copyInto$default(short[],short[],int,int,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(float[],kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.flowable.FlowableConcatMap: void subscribeActual(org.reactivestreams.Subscriber)
com.example.revolut.rates.data.model.CurrencyResponse: int hashCode()
androidx.recyclerview.widget.LinearLayoutManager: boolean isLayoutRTL()
androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)
androidx.core.util.LongSparseArrayKt$keyIterator$1
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toMutableList(java.util.Collection)
androidx.viewpager.R$attr
io.reactivex.internal.util.NotificationLite: boolean isError(java.lang.Object)
androidx.constraintlayout.solver.SolverVariable: int STRENGTH_FIXED
io.reactivex.internal.subscribers.BoundedSubscriber: void request(long)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.io.FilePathComponents: java.lang.String toString()
kotlin.jvm.internal.MagicApiIntrinsics: int intMagicApiCall(int,long,long,java.lang.Object)
kotlin.reflect.KProperty$DefaultImpls: void isLateinit$annotations()
io.reactivex.internal.util.ExceptionHelper: java.lang.String timeoutMessage(long,java.util.concurrent.TimeUnit)
androidx.appcompat.R$styleable: int MenuItem_actionViewClass
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List reversed(java.lang.Iterable)
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget PROPERTY
androidx.appcompat.R$style: int Animation_AppCompat_Tooltip
com.jakewharton.rxbinding3.view.ViewAttachEvent: android.view.View getView()
kotlin.math.MathKt__MathJVMKt: int getSign(int)
kotlin.collections.AbstractCollection: java.lang.Object[] toArray()
okhttp3.internal.cache.CacheInterceptor
io.reactivex.plugins.RxJavaPlugins: void setOnConnectableFlowableAssembly(io.reactivex.functions.Function)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Display4
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(float[],kotlin.jvm.functions.Function1)
io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function)
androidx.recyclerview.widget.OrientationHelper
org.intellij.lang.annotations.Flow: java.lang.String THIS_TARGET
dagger.android.support.R$attr: int selectableItemBackground
com.example.revolut.rates.R$attr: int layout_constraintEnd_toStartOf
kotlinx.coroutines.DispatchedContinuation: kotlin.coroutines.CoroutineContext getContext()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constrainedHeight
io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,boolean)
io.reactivex.internal.disposables.DisposableContainer: boolean remove(io.reactivex.disposables.Disposable)
androidx.appcompat.view.menu.ActionMenuItem: android.content.Intent getIntent()
com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory$Companion: CoroutineCallAdapterFactory$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduceIndexed(java.lang.Iterable,kotlin.jvm.functions.Function3)
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent: com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent copy(android.widget.AbsListView,int,int,int,int)
com.example.revolut.rates.R$style: int ThemeOverlay_AppCompat
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()
androidx.collection.ArraySet
io.reactivex.internal.operators.observable.ObservableDoOnLifecycle: void subscribeActual(io.reactivex.Observer)
dagger.android.support.AndroidSupportInjection
androidx.viewpager.R$integer
dagger.android.support.R$attr: int homeAsUpIndicator
androidx.core.app.NotificationCompat$MessagingStyle: java.lang.CharSequence getConversationTitle()
androidx.core.content.res.TypedArrayUtils: int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
androidx.viewpager.R$styleable: int FontFamily_fontProviderPackage
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(float[],kotlin.jvm.functions.Function1)
io.reactivex.internal.observers.LambdaObserver: boolean isDisposed()
okhttp3.internal.cache.InternalCache
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat wrap(java.lang.Object)
dagger.android.support.R$string: int abc_shareactionprovider_share_with
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_alpha
io.reactivex.internal.disposables.EmptyDisposable: io.reactivex.internal.disposables.EmptyDisposable valueOf(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableOnErrorNext$OnErrorNextSubscriber: long serialVersionUID
io.reactivex.internal.operators.completable.CompletableDetach: CompletableDetach(io.reactivex.CompletableSource)
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(float[],java.lang.Iterable,kotlin.jvm.functions.Function2)
com.example.revolut.rates.R$attr: int layout_goneMarginTop
androidx.swiperefreshlayout.R$id: int async
io.reactivex.internal.operators.observable.ObservableMergeWithSingle: ObservableMergeWithSingle(io.reactivex.Observable,io.reactivex.SingleSource)
androidx.drawerlayout.R$drawable: int notification_tile_bg
kotlin.TuplesKt
androidx.legacy.coreui.R$styleable: int GradientColor_android_startY
kotlin.collections.ArraysKt___ArraysKt: float random(float[],kotlin.random.Random)
kotlinx.coroutines.scheduling.NanoTimeSource
kotlin.math.MathKt__MathJVMKt: int roundToInt(double)
androidx.loader.R$id: int right_icon
com.example.revolut.rates.R$drawable: int abc_item_background_holo_light
okhttp3.FormBody: int size()
javax.inject.Provider: java.lang.Object get()
kotlin.UIntArray: int[] unbox-impl()
androidx.appcompat.R$style: int TextAppearance_AppCompat_Title
androidx.core.view.ViewCompat: int TYPE_TOUCH
androidx.appcompat.R$styleable: int StateListDrawable_android_constantSize
androidx.core.util.SparseArrayKt
io.reactivex.subjects.AsyncSubject: boolean hasObservers()
dagger.android.support.R$styleable: int MenuItem_android_titleCondensed
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(long[],java.lang.Iterable)
dagger.android.support.R$styleable: int AppCompatTextView_autoSizeTextType
androidx.appcompat.R$styleable: int GradientColor_android_startX
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])
androidx.appcompat.graphics.drawable.DrawableWrapper
io.reactivex.subjects.Subject: Subject()
kotlinx.coroutines.ExceptionsKt
androidx.constraintlayout.widget.ConstraintSet: int BOTTOM
io.reactivex.internal.operators.observable.ObservableSwitchMap
androidx.core.graphics.CanvasKt: void withScale$default(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.google.gson.internal.PreJava9DateFormatProvider: java.text.DateFormat getUSDateTimeFormat(int,int)
androidx.collection.ArraySet: boolean removeAll(androidx.collection.ArraySet)
com.example.revolut.rates.R$drawable: int abc_btn_radio_to_on_mtrl_000
kotlin.Metadata
androidx.core.R$integer
androidx.appcompat.R$styleable: int TextAppearance_textAllCaps
dagger.android.support.R$color: int primary_material_light
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_SET_SHUFFLE_MODE
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Headline
androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int)
kotlinx.coroutines.internal.Concurrent_commonKt
okhttp3.internal.http.HttpHeaders: int parseSeconds(java.lang.String,int)
android.support.v4.media.MediaDescriptionCompat: java.lang.String EXTRA_DOWNLOAD_STATUS
io.reactivex.internal.operators.maybe.MaybeToObservable: void subscribeActual(io.reactivex.Observer)
io.reactivex.Single: io.reactivex.Single fromFuture(java.util.concurrent.Future,io.reactivex.Scheduler)
androidx.appcompat.app.WindowDecorActionBar: void onConfigurationChanged(android.content.res.Configuration)
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: long serialVersionUID
org.intellij.lang.annotations.Flow: java.lang.String source()
androidx.media.AudioAttributesImplBaseParcelizer
androidx.appcompat.R$styleable: int AppCompatTheme_listMenuViewStyle
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(boolean[],int)
androidx.appcompat.app.ActionBar: int getNavigationMode()
androidx.core.app.NotificationCompat$Builder: NotificationCompat$Builder(android.content.Context)
kotlin.jvm.internal.Intrinsics: void checkHasClass(java.lang.String)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_MD5
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)
dagger.android.support.R$color: int material_blue_grey_800
androidx.appcompat.R$attr: int collapseIcon
androidx.legacy.v4.R$dimen: int notification_big_circle_margin
io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function6)
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
kotlin.collections.UArraySortingKt: void sortArray--ajY-9A(int[])
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float getArrowHeadLength()
io.reactivex.internal.subscribers.LambdaSubscriber: void onNext(java.lang.Object)
kotlin.coroutines.experimental.SafeContinuation: void resumeWithException(java.lang.Throwable)
com.example.revolut.rates.R$style: int Base_V21_Theme_AppCompat_Light
androidx.appcompat.R$styleable: int[] LinearLayoutCompat
androidx.databinding.ObservableInt: long serialVersionUID
androidx.recyclerview.R$styleable
androidx.appcompat.view.SupportActionModeWrapper: void setTag(java.lang.Object)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setActivationDelay(int)
androidx.databinding.ObservableField: java.lang.Object get()
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(int[],kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.lang.Float toFloatOrNull(java.lang.String)
androidx.core.ktx.R$id: int line1
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
io.reactivex.internal.operators.flowable.FlowableWindowTimed: void subscribeActual(org.reactivestreams.Subscriber)
android.support.v4.media.MediaMetadataCompatApi21$Builder: void putString(java.lang.Object,java.lang.String,java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable scan(io.reactivex.functions.BiFunction)
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
dagger.android.support.R$attr: int expandActivityOverflowButtonDrawable
androidx.recyclerview.R$id: int action_image
kotlin.sequences.SequencesKt__SequencesKt$Sequence$1: java.util.Iterator iterator()
kotlin.collections.ShortIterator: java.lang.Object next()
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: java.util.List getIncomingEdges(java.lang.Object)
dagger.android.support.R$layout: int abc_popup_menu_header_item_layout
kotlin.coroutines.experimental.migration.CoroutinesMigrationKt: kotlin.coroutines.experimental.ContinuationInterceptor toExperimentalContinuationInterceptor(kotlin.coroutines.ContinuationInterceptor)
kotlin.Result: boolean equals-impl0(java.lang.Object,java.lang.Object)
com.example.revolut.rates.R$dimen: int tooltip_horizontal_padding
androidx.core.view.ViewPropertyAnimatorListener: void onAnimationEnd(android.view.View)
androidx.appcompat.R$color: int button_material_dark
com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent: com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent copy(android.widget.TextView,java.lang.CharSequence,int,int,int)
androidx.customview.widget.ViewDragHelper: int STATE_DRAGGING
kotlin.coroutines.experimental.SafeContinuation: kotlin.coroutines.experimental.SafeContinuation$Companion Companion
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
io.reactivex.internal.operators.maybe.MaybeFromRunnable: MaybeFromRunnable(java.lang.Runnable)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(float[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.annotation.AnyRes
io.reactivex.internal.operators.flowable.FlowableFromArray
androidx.appcompat.widget.ShareActionProvider: ShareActionProvider(android.content.Context)
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier: void subscribeActual(io.reactivex.Observer)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.Closed: java.lang.Throwable getSendException()
io.reactivex.internal.subscriptions.ScalarSubscription: int requestFusion(int)
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapImmediate: long serialVersionUID
androidx.appcompat.widget.TintTypedArray: boolean hasValue(int)
io.reactivex.internal.operators.observable.ObservableReduceWithSingle: ObservableReduceWithSingle(io.reactivex.ObservableSource,java.util.concurrent.Callable,io.reactivex.functions.BiFunction)
androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)
androidx.swiperefreshlayout.R$styleable
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_placeholder_content
dagger.android.ReleaseReferencesAtCreator: dagger.android.ReleaseReferencesAt createReleaseReferencesAt(int)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender clearActions()
androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.legacy.coreui.R$color: int notification_action_color_filter
com.google.gson.JsonPrimitive: boolean getAsBoolean()
androidx.documentfile.provider.DocumentFile: boolean exists()
androidx.recyclerview.widget.StaggeredGridLayoutManager
androidx.core.internal.view.SupportMenuItem: androidx.core.view.ActionProvider getSupportActionProvider()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
kotlin.reflect.KTypeProjection: kotlin.reflect.KType getType()
android.support.v4.media.MediaMetadataCompat$Builder: MediaMetadataCompat$Builder(android.support.v4.media.MediaMetadataCompat,int)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
okhttp3.internal.connection.RouteSelector
androidx.vectordrawable.R$id: int end
androidx.lifecycle.extensions.R$drawable: int notification_template_icon_bg
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.slidingpanelayout.R$dimen: int compat_button_padding_vertical_material
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: int hashCode()
com.example.revolut.rates.R$attr: int titleTextStyle
androidx.loader.R$styleable: int GradientColor_android_endColor
com.example.revolut.rates.databinding.ActivityMainBindingImpl: void setViewModel(com.example.revolut.rates.viewmodel.CurrenciesViewModel)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$none$3: java.lang.Object invokeSuspend(java.lang.Object)
dagger.android.support.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
kotlin.collections.AbstractList: java.lang.Object remove(int)
androidx.appcompat.R$id: int submit_area
com.example.revolut.rates.R$attr: int alertDialogTheme
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
androidx.legacy.v4.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
androidx.fragment.app.FragmentController: void dispatchDestroyView()
dagger.android.support.R$attr: int autoCompleteTextViewStyle
androidx.coordinatorlayout.widget.CoordinatorLayout: void onAttachedToWindow()
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Large_Inverse
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment BOTTOM
dagger.android.support.R$string: int abc_font_family_caption_material
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(char[])
androidx.print.PrintHelper: int COLOR_MODE_MONOCHROME
androidx.media.R$dimen: int compat_notification_large_icon_max_height
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_3DES_EDE_CBC_SHA
androidx.core.util.SparseArrayKt$keyIterator$1
androidx.viewpager.R$dimen: int notification_big_circle_margin
io.reactivex.processors.ReplayProcessor$Node: long serialVersionUID
kotlin.collections.CollectionsKt__ReversedViewsKt: int access$reversePositionIndex(java.util.List,int)
androidx.appcompat.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
okhttp3.Cookie: boolean hostOnly()
androidx.appcompat.widget.AppCompatTextView
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getRoot()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(short[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.customview.R$styleable: int FontFamilyFont_android_font
dagger.android.support.R$string: int abc_shareactionprovider_share_with_application
androidx.recyclerview.widget.OrientationHelper: int getMode()
com.example.revolut.rates.R$attr: int contentDescription
com.jakewharton.rxbinding3.widget.RxSeekBar: com.jakewharton.rxbinding3.InitialValueObservable systemChanges(android.widget.SeekBar)
kotlin.annotation.AnnotationRetention
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(androidx.appcompat.widget.Toolbar$LayoutParams)
dagger.android.support.R$style: int Theme_AppCompat_Light
kotlin.sequences.TakeSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TakeSequence)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
dagger.android.support.R$attr: int measureWithLargestChild
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorPauseListener doOnPause(android.animation.Animator,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax: void accept(org.reactivestreams.Subscription)
kotlinx.coroutines.CancellableContinuationImpl: void resumeUndispatchedWithException(kotlinx.coroutines.CoroutineDispatcher,java.lang.Throwable)
kotlin.random.URandomKt: byte[] nextUBytes(kotlin.random.Random,int)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadPong(okio.ByteString)
dagger.android.support.R$styleable: int TextAppearance_android_fontFamily
dagger.android.support.R$dimen: int abc_control_corner_material
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KProperty0$Getter getGetter()
androidx.core.widget.EdgeEffectCompat: void setSize(int,int)
androidx.vectordrawable.R$id: int forever
androidx.viewpager.R$id: int title
com.google.gson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)
kotlin.collections.UArraysKt
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: int indexOf(java.lang.Object)
dagger.android.support.R$color: int notification_material_background_media_default_color
androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_SUBTREE
com.example.revolut.rates.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2)
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector: MaybeFlatMapBiSelector(io.reactivex.MaybeSource,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber: long serialVersionUID
io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)
androidx.slidingpanelayout.widget.SlidingPaneLayout: void onRestoreInstanceState(android.os.Parcelable)
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context,android.util.AttributeSet)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: int lastIndexOf(boolean)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.Appendable appendln(java.lang.Appendable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(java.lang.Object[],kotlin.jvm.functions.Function2)
androidx.core.ktx.R$attr: int alpha
androidx.lifecycle.extensions.R$drawable: int notification_bg_low_pressed
androidx.core.graphics.drawable.IconCompat$IconType
kotlinx.coroutines.scheduling.TasksKt: long WORK_STEALING_TIME_RESOLUTION_NS
android.support.v4.media.session.PlaybackStateCompat: long ACTION_REWIND
kotlin.text.MatcherMatchResult$groups$1: boolean contains(kotlin.text.MatchGroup)
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver: long serialVersionUID
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_PARAGRAPH
io.reactivex.Maybe: io.reactivex.Flowable merge(io.reactivex.MaybeSource,io.reactivex.MaybeSource)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
okhttp3.Connection: okhttp3.Route route()
androidx.appcompat.R$attr: int colorControlActivated
dagger.android.support.R$attr: int alertDialogTheme
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowPending()
androidx.recyclerview.R$styleable: int FontFamilyFont_fontVariationSettings
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer min(int[])
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowing()
androidx.core.app.ShareCompat$IntentReader: java.lang.String getHtmlText()
io.reactivex.internal.observers.ForEachWhileObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okio.ByteString: okio.ByteString sha1()
androidx.customview.widget.ViewDragHelper: int STATE_IDLE
kotlin.random.Random$Default: byte[] nextBytes(int)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.core.app.FrameMetricsAggregator: int DELAY_INDEX
androidx.recyclerview.widget.AsyncDifferConfig$Builder: androidx.recyclerview.widget.AsyncDifferConfig$Builder setMainThreadExecutor(java.util.concurrent.Executor)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory CALENDAR_FACTORY
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt min--ajY-9A(int[])
io.reactivex.Completable: io.reactivex.Completable onErrorComplete()
io.reactivex.internal.operators.flowable.FlowableToList
io.reactivex.MaybeSource
dagger.android.support.R$drawable: int notification_bg_low_pressed
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
dagger.android.support.R$styleable: int SwitchCompat_trackTintMode
io.reactivex.functions.Action: void run()
kotlinx.coroutines.AbstractCoroutine: void onStart()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT
androidx.appcompat.app.AppCompatActivity: void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int)
dagger.internal.MembersInjectors
io.reactivex.internal.schedulers.SchedulerPoolFactory: java.util.concurrent.ScheduledExecutorService create(java.util.concurrent.ThreadFactory)
retrofit2.http.PUT: java.lang.String value()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int)
retrofit2.Converter$Factory
androidx.core.app.ServiceCompat$StopForegroundFlags
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[])
androidx.core.util.LogWriter: void close()
okio.ByteString: okio.ByteString decodeHex(java.lang.String)
androidx.databinding.DataBindingUtil: java.lang.String convertBrIdToString(int)
com.example.revolut.rates.R$styleable: int TextAppearance_android_textColor
androidx.constraintlayout.widget.R$attr: int layout_constraintBaseline_creator
dagger.android.support.R$styleable: int AppCompatTheme_editTextBackground
com.example.revolut.rates.R$styleable: int LinearLayoutCompat_android_weightSum
kotlin.io.FileTreeWalk$FileTreeWalkIterator$WhenMappings
androidx.loader.R$attr: int fontProviderPackage
androidx.appcompat.app.AppCompatDialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
kotlin.sequences.DropSequence: kotlin.sequences.Sequence drop(int)
kotlinx.coroutines.internal.AtomicOp: java.lang.Object prepare(java.lang.Object)
androidx.core.view.PointerIconCompat: int TYPE_NO_DROP
androidx.customview.R$attr: int fontProviderAuthority
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker: void dispose()
io.reactivex.internal.operators.maybe.MaybeFromSingle: void subscribeActual(io.reactivex.MaybeObserver)
com.example.revolut.rates.R$styleable: int AppCompatTheme_tooltipForegroundColor
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean getPadding(android.graphics.Rect)
com.example.revolut.rates.R$styleable: int SearchView_searchHintIcon
io.reactivex.Flowable: io.reactivex.Flowable concatArrayDelayError(org.reactivestreams.Publisher[])
androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
androidx.core.graphics.ColorUtils: int HSLToColor(float[])
androidx.constraintlayout.widget.Placeholder: Placeholder(android.content.Context)
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext)
kotlin.collections.MapAccessorsKt
androidx.media.MediaBrowserProtocol: java.lang.String DATA_CALLING_UID
androidx.asynclayoutinflater.R$dimen: int compat_button_padding_horizontal_material
io.reactivex.internal.operators.completable.CompletableFromRunnable: CompletableFromRunnable(java.lang.Runnable)
com.google.gson.GsonBuilder: com.google.gson.Gson create()
kotlinx.coroutines.RunnableKt
androidx.appcompat.widget.AppCompatRatingBar
androidx.databinding.MapChangeRegistry: MapChangeRegistry()
kotlin.jvm.internal.ShortSpreadBuilder: short[] toArray()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getOpacity()
androidx.recyclerview.R$attr: int fontProviderFetchStrategy
okhttp3.internal.http2.ErrorCode
kotlin.io.FilesKt__FilePathComponentsKt: FilesKt__FilePathComponentsKt()
dagger.android.support.R$color: int abc_tint_switch_track
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback: void onError(java.lang.String,android.os.Bundle)
androidx.constraintlayout.widget.R$attr: int layout_goneMarginRight
androidx.legacy.v4.R$id: int tag_transition_group
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarTheme
com.google.gson.JsonArray: com.google.gson.JsonArray deepCopy()
androidx.constraintlayout.widget.ConstraintLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getOrientation()
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.app.NotificationCompat$Action$SemanticAction
kotlin.reflect.KTypeParameter: java.lang.String getName()
okio.Buffer: int read(byte[])
dagger.android.support.R$anim: int abc_slide_in_top
androidx.core.app.RemoteInput: java.util.Set getAllowedDataTypes()
io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
androidx.appcompat.view.ActionMode$Callback: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence chunkedSequence(java.lang.CharSequence,int)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
androidx.drawerlayout.R$dimen: int notification_content_margin_start
androidx.recyclerview.widget.LinearSnapHelper: android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager)
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier
androidx.core.graphics.RectKt: android.graphics.RectF plus(android.graphics.RectF,float)
androidx.appcompat.R$styleable: int AppCompatTheme_buttonStyleSmall
kotlin.jvm.KotlinReflectionNotSupportedError: KotlinReflectionNotSupportedError(java.lang.Throwable)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence onEach(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.swiperefreshlayout.R$styleable: int GradientColorItem_android_offset
kotlinx.coroutines.DeferredKt: kotlinx.coroutines.Deferred async$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: boolean onGenericMotionEvent(android.view.MotionEvent)
androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(double[],kotlin.jvm.functions.Function1)
io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)
com.jakewharton.rxbinding3.widget.RxTextView: com.jakewharton.rxbinding3.InitialValueObservable afterTextChangeEvents(android.widget.TextView)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
org.intellij.lang.annotations.JdkConstants$AdjustableOrientation
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable map(io.reactivex.functions.Function,io.reactivex.parallel.ParallelFailureHandling)
okhttp3.CertificatePinner: java.lang.String pin(java.security.cert.Certificate)
io.reactivex.internal.operators.flowable.FlowableFlatMap: io.reactivex.FlowableSubscriber subscribe(org.reactivestreams.Subscriber,io.reactivex.functions.Function,boolean,int,int)
androidx.core.graphics.ColorUtils: int LABToColor(double,double,double)
androidx.fragment.app.FragmentTransitionImpl: boolean isNullOrEmpty(java.util.List)
androidx.recyclerview.widget.LinearLayoutManager: boolean getRecycleChildrenOnDetach()
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int)
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutFallbackMaybeObserver: long serialVersionUID
androidx.fragment.app.FragmentManager: void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] values()
androidx.collection.CircularArray: void clear()
kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1: java.lang.Object prepare(java.lang.Object)
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver: long serialVersionUID
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionModeBackground
androidx.legacy.coreui.R$dimen: int compat_button_padding_horizontal_material
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.menu.MenuBuilder: void setOverrideVisibleItems(boolean)
androidx.collection.CircularIntArray: int get(int)
okhttp3.Response: java.util.List challenges()
androidx.recyclerview.widget.OrientationHelper: int VERTICAL
kotlinx.coroutines.AwaitKt: java.lang.Object joinAll(java.util.Collection,kotlin.coroutines.Continuation)
androidx.core.view.NestedScrollingChild2: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int[] findFirstVisibleItemPositions(int[])
com.example.revolut.rates.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
androidx.annotation.VisibleForTesting: int PRIVATE
io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function9)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_goneMarginStart
kotlin.collections.AbstractMap$keys$1$iterator$1: void remove()
androidx.recyclerview.widget.SortedList$Callback: int compare(java.lang.Object,java.lang.Object)
kotlin.reflect.KClass$DefaultImpls: void isFinal$annotations()
com.example.revolut.rates.view.adapter.CurrenciesAdapter$CurrenciesViewHolder: android.widget.EditText access$getCurrencyAmountEditText$p(com.example.revolut.rates.view.adapter.CurrenciesAdapter$CurrenciesViewHolder)
androidx.fragment.app.Fragment: void onPause()
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
io.reactivex.internal.operators.flowable.FlowableInterval$IntervalSubscriber: long serialVersionUID
androidx.appcompat.view.menu.MenuPopupHelper: android.widget.ListView getListView()
androidx.lifecycle.extensions.R$styleable
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List take-r7IrZao(long[],int)
okio.Buffer: okio.Buffer readFrom(java.io.InputStream,long)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterIndexedTo$1
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mMessage
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.vectordrawable.R$drawable: int notification_action_background
androidx.appcompat.view.menu.ActionMenuItemView: void onClick(android.view.View)
androidx.appcompat.view.SupportActionModeWrapper: SupportActionModeWrapper(android.content.Context,androidx.appcompat.view.ActionMode)
android.support.v4.media.session.MediaControllerCompatApi24$TransportControls: void prepare(java.lang.Object)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.DrawableUtils: android.graphics.Rect INSETS_NONE
androidx.media.R$dimen: int compat_notification_large_icon_max_width
com.example.revolut.rates.R$dimen: int subtitle_outline_width
androidx.core.view.MenuKt$children$1: java.util.Iterator iterator()
androidx.core.content.FileProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)
kotlin.coroutines.CombinedContext: java.lang.Object writeReplace()
dagger.android.AndroidInjector$Builder: dagger.android.AndroidInjector build()
io.reactivex.internal.operators.maybe.MaybeMap
io.reactivex.internal.util.NotificationLite: java.lang.Throwable getError(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setDismissable(boolean)
androidx.fragment.R$style: int Widget_Compat_NotificationActionContainer
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(int[],java.util.Collection)
androidx.loader.content.Loader: void onContentChanged()
kotlin.collections.ArraysKt___ArraysKt: double average(int[])
io.reactivex.internal.operators.observable.ObservableFlatMapSingle: ObservableFlatMapSingle(io.reactivex.ObservableSource,io.reactivex.functions.Function,boolean)
kotlin.UByte: int compareTo(java.lang.Object)
io.reactivex.observables.ConnectableObservable: io.reactivex.Observable refCount(int)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory URI_FACTORY
kotlinx.coroutines.sync.MutexKt$withLock$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.legacy.v4.R$styleable
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDrawX(int)
com.example.revolut.rates.R$attr: int radioButtonStyle
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)
kotlin.properties.Delegates
com.example.revolut.rates.R$attr: int editTextColor
androidx.fragment.app.Fragment: java.lang.Object getSharedElementEnterTransition()
androidx.loader.content.AsyncTaskLoader
kotlin.jvm.internal.BooleanCompanionObject
okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)
android.support.v4.media.session.PlaybackStateCompat: float getPlaybackSpeed()
com.jakewharton.rxbinding3.widget.SearchViewQueryTextEvent
androidx.core.app.ShareCompat$IntentReader: android.content.ComponentName getCallingActivity()
dagger.android.support.R$id: int submit_area
androidx.legacy.coreui.R$id: int icon_group
io.reactivex.internal.operators.maybe.MaybeIgnoreElement: MaybeIgnoreElement(io.reactivex.MaybeSource)
androidx.loader.content.Loader: void registerOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
com.jakewharton.rxbinding3.core.R$attr: int fontProviderPackage
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Body1
androidx.appcompat.R$attr: int backgroundTint
io.reactivex.internal.subscriptions.SubscriptionHelper: io.reactivex.internal.subscriptions.SubscriptionHelper valueOf(java.lang.String)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintTop_toBottomOf
com.example.revolut.rates.R$color: int colorPrimaryDark
io.reactivex.internal.schedulers.SchedulerWhen: void dispose()
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment BOTTOM
io.reactivex.internal.operators.observable.ObservableTakeWhile
androidx.databinding.ViewDataBinding: void setTo(android.util.LongSparseArray,int,java.lang.Object)
com.jakewharton.rxbinding3.core.R$dimen: int notification_large_icon_width
androidx.customview.widget.ExploreByTouchHelper: ExploreByTouchHelper(android.view.View)
dagger.android.support.R$drawable: int abc_tab_indicator_mtrl_alpha
android.support.v4.media.session.PlaybackStateCompat
io.reactivex.internal.operators.parallel.ParallelReduceFull: void subscribeActual(org.reactivestreams.Subscriber)
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_ART
io.reactivex.processors.BehaviorProcessor: boolean offer(java.lang.Object)
kotlin.collections.UArraySortingKt: void sortArray-rL5Bavg(short[])
androidx.databinding.ViewDataBinding: short parse(java.lang.String,short)
com.google.gson.JsonPrimitive: java.math.BigDecimal getAsBigDecimal()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noTransform()
com.example.revolut.rates.R$drawable: int notification_template_icon_bg
io.reactivex.internal.operators.observable.ObserverResourceWrapper: void onSubscribe(io.reactivex.disposables.Disposable)
kotlin.sequences.TransformingSequence: java.util.Iterator iterator()
androidx.core.app.NotificationManagerCompat: java.lang.String ACTION_BIND_SIDE_CHANNEL
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function4)
kotlin.coroutines.SafeContinuation: SafeContinuation(kotlin.coroutines.Continuation)
dagger.internal.ReferenceReleasingProviderManager: void addProvider(dagger.internal.ReferenceReleasingProvider)
io.reactivex.subjects.ReplaySubject: io.reactivex.subjects.ReplaySubject createWithTime(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.exceptions.CompositeException: java.util.List getExceptions()
dagger.android.support.R$attr: int textAppearanceSearchResultTitle
kotlinx.coroutines.Job$DefaultImpls: kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.customview.widget.ViewDragHelper: int EDGE_LEFT
androidx.constraintlayout.solver.widgets.Analyzer
androidx.recyclerview.widget.DiffUtil$DiffResult: void dispatchUpdatesTo(androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.fragment.app.FragmentActivity: void onResume()
kotlin.collections.ArraysKt___ArraysKt: void reverse(long[])
io.reactivex.internal.operators.observable.ObservableTakeLast$TakeLastObserver: long serialVersionUID
androidx.constraintlayout.solver.widgets.ResolutionNode: void invalidateAnchors()
androidx.constraintlayout.solver.widgets.Guideline: void setGuideBegin(int)
androidx.core.animation.AnimatorKt$addPauseListener$1: AnimatorKt$addPauseListener$1()
io.reactivex.internal.operators.flowable.FlowableFlattenIterable: void subscribeActual(org.reactivestreams.Subscriber)
androidx.fragment.app.FragmentStatePagerAdapter: FragmentStatePagerAdapter(androidx.fragment.app.FragmentManager)
com.google.gson.internal.UnsafeAllocator: java.lang.Object newInstance(java.lang.Class)
androidx.lifecycle.MediatorLiveData
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Observable onAssembly(io.reactivex.Observable)
okhttp3.Dispatcher: int getMaxRequests()
androidx.annotation.IntRange
androidx.appcompat.R$attr: int actionModeCloseDrawable
androidx.recyclerview.widget.OrientationHelper: int getModeInOther()
androidx.customview.R$attr
okhttp3.RequestBody: void writeTo(okio.BufferedSink)
io.reactivex.internal.operators.flowable.FlowableEmpty: java.lang.Object call()
io.reactivex.internal.operators.observable.ObservableCollectSingle: io.reactivex.Observable fuseToObservable()
io.reactivex.internal.operators.flowable.FlowableCreate$LatestAsyncEmitter: long serialVersionUID
kotlin.jvm.internal.Lambda: int getArity()
androidx.core.content.PermissionChecker
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat getChild(int)
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableBottom
androidx.constraintlayout.widget.Guideline: Guideline(android.content.Context)
androidx.recyclerview.R$styleable: int CoordinatorLayout_statusBarBackground
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDimensionRatio(java.lang.String)
androidx.media.R$color: int primary_text_default_material_dark
androidx.constraintlayout.widget.R$attr: int layout_optimizationLevel
androidx.core.util.Preconditions: long checkArgumentNonnegative(long)
okio.GzipSource: GzipSource(okio.Source)
com.google.gson.JsonDeserializer: java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)
androidx.core.app.AppLaunchChecker
dagger.android.support.R$id: int showHome
androidx.databinding.adapters.SearchViewBindingAdapter$OnSuggestionSelect: boolean onSuggestionSelect(int)
kotlin.coroutines.experimental.AbstractCoroutineContextElement
kotlin.comparisons.UComparisonsKt___UComparisonsKt: int minOf-J1ME1BU(int,int)
com.example.revolut.rates.R$color: R$color()
io.reactivex.internal.operators.observable.ObservableReplay: io.reactivex.observables.ConnectableObservable create(io.reactivex.ObservableSource,int)
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(double[],kotlin.jvm.functions.Function2)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons RESUMED
io.reactivex.internal.operators.observable.ObservableFilter: ObservableFilter(io.reactivex.ObservableSource,io.reactivex.functions.Predicate)
androidx.core.graphics.BitmapCompat: boolean hasMipMap(android.graphics.Bitmap)
androidx.core.widget.NestedScrollView: int getScrollRange()
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_ActionBar
io.reactivex.Flowable: io.reactivex.Flowable sorted(java.util.Comparator)
androidx.core.view.PointerIconCompat: int TYPE_VERTICAL_TEXT
android.support.v4.media.session.MediaSessionCompat$Callback: boolean onMediaButtonEvent(android.content.Intent)
okio.Sink: okio.Timeout timeout()
kotlin.io.FilesKt__FileReadWriteKt: void forEachLine(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.observable.ObservableSingleSingle
androidx.appcompat.R$styleable: int TextAppearance_android_textColorLink
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasurementCacheEnabled(boolean)
androidx.appcompat.view.menu.MenuItemImpl
com.example.revolut.rates.R$string: int abc_font_family_button_material
io.reactivex.internal.observers.DisposableLambdaObserver: boolean isDisposed()
dagger.android.support.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
kotlin.collections.LongIterator: void remove()
io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)
androidx.recyclerview.widget.OrientationHelper: void onLayoutComplete()
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_android_font
kotlin.collections.ArraysKt___ArraysKt: boolean all(boolean[],kotlin.jvm.functions.Function1)
androidx.appcompat.app.AppCompatActivity: void onTitleChanged(java.lang.CharSequence,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(boolean[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.text.StringsKt___StringsKt: java.util.Map associate(java.lang.CharSequence,kotlin.jvm.functions.Function1)
dagger.android.support.R$dimen: int abc_edit_text_inset_bottom_material
kotlin.jvm.internal.LongCompanionObject
androidx.core.transition.TransitionKt$addListener$4: androidx.core.transition.TransitionKt$addListener$4 INSTANCE
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: long serialVersionUID
okio.HashingSink: okio.HashingSink sha256(okio.Sink)
io.reactivex.internal.operators.observable.ObservableRange: ObservableRange(int,int)
androidx.appcompat.R$attr: int buttonGravity
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
dagger.android.support.R$styleable: int AppCompatSeekBar_tickMarkTint
dagger.internal.SingleCheck: java.lang.Object get()
kotlin.jvm.internal.ShortCompanionObject: int SIZE_BITS
androidx.legacy.v4.R$layout: int notification_template_lines_media
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(char[])
androidx.core.ktx.R$dimen: int notification_right_side_padding_top
com.example.revolut.rates.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
androidx.media.R$id: int cancel_action
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_fontWeight
androidx.appcompat.R$id: int chronometer
com.jakewharton.rxbinding3.core.R
androidx.cursoradapter.widget.CursorAdapter: CursorAdapter(android.content.Context,android.database.Cursor,boolean)
kotlin.jvm.internal.CollectionToArray
kotlin.jvm.internal.MagicApiIntrinsics: java.lang.Object anyMagicApiCall(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget mLast
com.example.revolut.rates.R$style: int Base_V28_Theme_AppCompat
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: RecyclerView$SmoothScroller$Action(int,int)
androidx.appcompat.view.menu.MenuPresenter: android.os.Parcelable onSaveInstanceState()
com.example.revolut.rates.R$style: int Base_Theme_AppCompat_DialogWhenLarge
androidx.core.util.AtomicFileKt: java.lang.String readText$default(android.util.AtomicFile,java.nio.charset.Charset,int,java.lang.Object)
androidx.core.app.ShareCompat$IntentReader: boolean isShareIntent()
retrofit2.Retrofit: retrofit2.Retrofit$Builder newBuilder()
com.example.revolut.rates.R$id: int search_plate
dagger.android.support.R$style: int TextAppearance_AppCompat_Display4
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(float[],float,int,int)
okhttp3.EventListener: void responseHeadersEnd(okhttp3.Call,okhttp3.Response)
io.reactivex.internal.operators.flowable.FlowableOnErrorNext: FlowableOnErrorNext(io.reactivex.Flowable,io.reactivex.functions.Function,boolean)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroup(java.lang.String)
io.reactivex.internal.operators.maybe.MaybeIsEmptySingle: MaybeIsEmptySingle(io.reactivex.MaybeSource)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)
androidx.appcompat.view.menu.MenuItemImpl: boolean isExclusiveCheckable()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onHoverEvent(android.view.MotionEvent)
com.example.revolut.rates.R$attr: int fontProviderCerts
kotlin.collections.CollectionsKt__CollectionsKt: void throwIndexOverflow()
androidx.appcompat.view.menu.MenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.core.text.TextUtilsCompat
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
io.reactivex.internal.util.QueueDrain: long produced(long)
kotlinx.coroutines.channels.AbstractChannelKt: java.lang.Object NULL_VALUE
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
okhttp3.internal.connection.StreamAllocation: StreamAllocation(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.Call,okhttp3.EventListener,java.lang.Object)
io.reactivex.internal.operators.completable.CompletableConcatArray: void subscribeActual(io.reactivex.CompletableObserver)
dagger.android.support.R$dimen: int abc_text_size_menu_header_material
androidx.recyclerview.widget.RecyclerView$Recycler: java.util.List getScrapList()
kotlin.text.Typography: char ellipsis
dagger.android.support.R$attr: int textAppearanceListItem
androidx.appcompat.app.AppCompatActivity: void setContentView(int)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Double max(kotlin.sequences.Sequence)
androidx.asynclayoutinflater.R$drawable: int notification_bg_normal
androidx.core.view.DisplayCutoutCompat: int hashCode()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode getAffectedNode()
kotlin.collections.ArraysKt___ArraysKt: int indexOf(short[],short)
io.reactivex.Maybe: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
io.reactivex.internal.operators.observable.ObservableToList: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.app.AppCompatActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.core.content.res.TypedArrayUtils: boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)
kotlinx.coroutines.sync.MutexImpl
okhttp3.internal.http.RetryAndFollowUpInterceptor
okio.BufferedSource: byte readByte()
androidx.legacy.v4.R$id: int normal
androidx.appcompat.R$styleable: int LinearLayoutCompat_divider
com.jakewharton.rxbinding3.core.R$styleable
androidx.media.R$styleable: int[] FontFamilyFont
kotlin.coroutines.experimental.migration.CoroutinesMigrationKt: kotlin.coroutines.Continuation toContinuation(kotlin.coroutines.experimental.Continuation)
dagger.android.support.R$id: int listMode
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay()
androidx.constraintlayout.solver.widgets.Barrier: void setBarrierType(int)
kotlin.Result$Failure: java.lang.String toString()
androidx.appcompat.app.ActionBar: androidx.appcompat.app.ActionBar$Tab newTab()
okhttp3.internal.connection.RealConnection: void connect(int,int,int,int,boolean,okhttp3.Call,okhttp3.EventListener)
androidx.customview.R$attr: int fontProviderFetchTimeout
androidx.core.graphics.PathKt
androidx.appcompat.view.menu.MenuBuilder: java.lang.CharSequence getHeaderTitle()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(char[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(char[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.appcompat.app.AppCompatActivity: void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
dagger.android.support.R$styleable: int MenuItem_android_onClick
android.support.v4.media.session.MediaSessionCompat: void setRatingType(int)
androidx.core.view.ActionProvider: void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener)
com.example.revolut.rates.R$styleable: int MenuItem_android_visible
com.example.revolut.rates.R$color: int button_material_dark
androidx.vectordrawable.graphics.drawable.ArgbEvaluator
androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed: void subscribeActual(org.reactivestreams.Subscriber)
okhttp3.Cache: java.lang.String key(okhttp3.HttpUrl)
kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String m()
androidx.customview.widget.ViewDragHelper: int getTouchSlop()
androidx.recyclerview.R$id: int line1
kotlin.collections.ArraysKt___ArraysKt: double[] sliceArray(double[],kotlin.ranges.IntRange)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableScalarXMap
io.reactivex.internal.operators.single.SingleContains: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.flowable.FlowableLastMaybe: void subscribeActual(io.reactivex.MaybeObserver)
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(byte[],int)
kotlin.jvm.internal.ClassReference: java.lang.String getQualifiedName()
androidx.core.os.CancellationSignal$OnCancelListener: void onCancel()
androidx.localbroadcastmanager.content.LocalBroadcastManager: boolean sendBroadcast(android.content.Intent)
io.reactivex.internal.operators.observable.ObservableSampleTimed
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean isNestedScrollingEnabled()
kotlinx.coroutines.ScheduledKt: java.lang.Object withTimeout(long,java.util.concurrent.TimeUnit,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.core.util.Preconditions: void checkArgument(boolean)
io.reactivex.Flowable: io.reactivex.Flowable throttleLast(long,java.util.concurrent.TimeUnit)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float max(java.lang.Float[])
kotlin.sequences.SequencesKt___SequencesKt: boolean none(kotlin.sequences.Sequence)
kotlinx.coroutines.Deferred: java.lang.Object await(kotlin.coroutines.Continuation)
dagger.android.support.R$anim: int abc_shrink_fade_out_from_bottom
kotlinx.coroutines.JobSupport: JobSupport(boolean)
androidx.core.util.SparseIntArrayKt: void putAll(android.util.SparseIntArray,android.util.SparseIntArray)
kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry minBy(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(float[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.recyclerview.widget.TileList$Tile: int mItemCount
kotlin.collections.AbstractMap$keys$1
androidx.customview.R$styleable: int GradientColor_android_gradientRadius
androidx.asynclayoutinflater.R$id: int text
androidx.appcompat.graphics.drawable.DrawableWrapper: int getIntrinsicWidth()
androidx.core.app.ShareCompat$IntentReader: android.net.Uri getStream()
kotlin.ArrayIntrinsicsKt
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: ConstraintLayout$LayoutParams(int,int)
androidx.viewpager.R$id: int right_side
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(char[],kotlin.jvm.functions.Function2)
io.reactivex.internal.operators.single.SingleObserveOn: SingleObserveOn(io.reactivex.SingleSource,io.reactivex.Scheduler)
androidx.core.view.accessibility.AccessibilityEventCompat: int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
kotlin.jvm.internal.MutablePropertyReference2: kotlin.reflect.KProperty$Getter getGetter()
com.example.revolut.rates.R$id: int action_bar_activity_content
androidx.appcompat.R$styleable: int[] LinearLayoutCompat_Layout
com.jakewharton.rxbinding3.widget.SearchViewQueryTextEvent: boolean equals(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop: FlowableOnBackpressureDrop(io.reactivex.Flowable)
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()
okio.BufferedSource: short readShortLe()
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_MOVED
androidx.core.os.HandlerKt: java.lang.Runnable postDelayed$default(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0,int,java.lang.Object)
androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Display3
okhttp3.TlsVersion: java.lang.String javaName()
androidx.asynclayoutinflater.R$id: int icon
com.jakewharton.rxbinding3.widget.SearchViewQueryTextEvent: boolean component3()
kotlin.collections.ArraysKt___ArraysKt: boolean single(boolean[],kotlin.jvm.functions.Function1)
io.reactivex.internal.subscribers.BoundedSubscriber: void cancel()
dagger.android.AndroidInjectionModule
androidx.core.view.ViewCompat: void setTranslationY(android.view.View,float)
io.reactivex.internal.operators.flowable.FlowableIgnoreElements
kotlin.ranges.ClosedFloatingPointRange$DefaultImpls
androidx.appcompat.R$attr: int thickness
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ButtonBar
androidx.appcompat.R$color: int dim_foreground_disabled_material_light
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List minus(java.lang.Iterable,java.lang.Iterable)
io.reactivex.internal.operators.single.SingleZipIterable: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.processors.ReplayProcessor: io.reactivex.processors.ReplayProcessor createWithSize(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
androidx.appcompat.widget.ActionMenuView$ActionMenuChildView: boolean needsDividerAfter()
kotlin.collections.MapsKt__MapsJVMKt: java.lang.Object getOrPut(java.util.concurrent.ConcurrentMap,java.lang.Object,kotlin.jvm.functions.Function0)
androidx.recyclerview.widget.LinearSnapHelper: LinearSnapHelper()
androidx.cursoradapter.widget.CursorAdapter: int mRowIDColumn
kotlinx.android.extensions.CacheImplementation$Companion
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1
io.reactivex.Maybe: io.reactivex.Maybe onErrorComplete(io.reactivex.functions.Predicate)
kotlin.ranges.IntProgression: java.lang.String toString()
androidx.lifecycle.extensions.R$attr: int layout_behavior
dagger.android.support.R$styleable: int MenuItem_numericModifiers
io.reactivex.Flowable: io.reactivex.Flowable concatDelayError(org.reactivestreams.Publisher)
io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther: void subscribeActual(io.reactivex.Observer)
okhttp3.Challenge: okhttp3.Challenge withCharset(java.nio.charset.Charset)
io.reactivex.internal.schedulers.SchedulerMultiWorkerSupport$WorkerCallback
androidx.loader.R$styleable: int FontFamily_fontProviderAuthority
androidx.databinding.adapters.ViewBindingAdapter: void setBackground(android.view.View,android.graphics.drawable.Drawable)
androidx.recyclerview.R$attr: int fastScrollVerticalTrackDrawable
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_translationZ
androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)
androidx.versionedparcelable.ParcelUtils: android.os.Parcelable toParcelable(androidx.versionedparcelable.VersionedParcelable)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: RecyclerView$SmoothScroller$Action(int,int,int,android.view.animation.Interpolator)
androidx.appcompat.R$string: int abc_font_family_display_1_material
com.example.revolut.rates.R$id: int custom
androidx.fragment.app.ListFragment: ListFragment()
kotlinx.coroutines.internal.ThreadLocalElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintBaseline_toBaselineOf
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutOtherMaybeObserver: long serialVersionUID
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintBottom_creator
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexedNotNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
androidx.core.widget.NestedScrollView: void measureChild(android.view.View,int,int)
kotlinx.coroutines.JobCancellationException: JobCancellationException(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job)
com.example.revolut.rates.R$layout: int select_dialog_singlechoice_material
androidx.core.app.NotificationBuilderWithBuilderAccessor: android.app.Notification$Builder getBuilder()
io.reactivex.internal.operators.maybe.MaybeDelay: void subscribeActual(io.reactivex.MaybeObserver)
androidx.core.graphics.RegionKt: android.graphics.Region xor(android.graphics.Region,android.graphics.Rect)
io.reactivex.functions.BooleanSupplier: boolean getAsBoolean()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationBy(float)
com.google.gson.FieldAttributes: java.lang.reflect.Type getDeclaredType()
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
androidx.appcompat.view.menu.MenuPopupHelper: void dismiss()
androidx.core.R$styleable: int ColorStateListItem_android_color
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9(char[])
kotlin.text.StringsKt___StringsKt: int indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object minBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_ttcIndex
okhttp3.internal.Util: int indexOfControlOrNonAscii(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(java.lang.Object[],kotlin.jvm.functions.Function2)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintEnd_toEndOf
dagger.internal.ReferenceReleasingProvider
kotlin.internal.PlatformImplementations
kotlin.collections.EmptyList: java.util.ListIterator listIterator()
kotlin.properties.ObservableProperty
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.BiFunction getOnFlowableSubscribe()
com.jakewharton.rxbinding3.widget.SeekBarStopChangeEvent: com.jakewharton.rxbinding3.widget.SeekBarStopChangeEvent copy$default(com.jakewharton.rxbinding3.widget.SeekBarStopChangeEvent,android.widget.SeekBar,int,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object first(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysJvmKt: long[] copyOfRange(long[],int,int)
com.google.gson.JsonDeserializer
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER_TERMINATOR
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutOtherMaybeObserver: long serialVersionUID
androidx.appcompat.R$styleable: int AppCompatTheme_colorError
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_SYSTEM
androidx.core.view.MenuItemCompat: android.view.View getActionView(android.view.MenuItem)
androidx.databinding.adapters.RatingBarBindingAdapter: void setRating(android.widget.RatingBar,float)
androidx.core.text.HtmlCompat: int TO_HTML_PARAGRAPH_LINES_CONSECUTIVE
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: int getOldTop()
androidx.appcompat.text.AllCapsTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)
io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,org.reactivestreams.Publisher)
androidx.fragment.app.FragmentTransitionImpl: void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
io.reactivex.internal.operators.observable.ObservableFromPublisher
io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber: long serialVersionUID
androidx.drawerlayout.R$layout: int notification_action
kotlinx.coroutines.CompletableDeferred$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.CompletableDeferred,kotlin.coroutines.CoroutineContext$Key)
kotlin.jvm.internal.MutablePropertyReference2Impl: void set(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
androidx.databinding.library.baseAdapters.DataBinderMapperImpl: androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View,int)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setGapSize(float)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduceRight(java.util.List,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.FunctionReferenceImpl: java.lang.String getSignature()
androidx.fragment.app.FragmentContainer: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
androidx.core.internal.view.SupportMenu: void setGroupDividerEnabled(boolean)
dagger.internal.SetFactory: dagger.internal.SetFactory$Builder builder(int,int)
androidx.legacy.v4.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.core.os.HandlerCompat: boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long)
retrofit2.Converter$Factory: java.lang.Class getRawType(java.lang.reflect.Type)
kotlinx.coroutines.internal.AtomicOp: boolean tryDecide(java.lang.Object)
dagger.android.support.R$string: int abc_font_family_title_material
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(int[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.appcompat.R$attr: int checkedTextViewStyle
androidx.appcompat.R$style: int TextAppearance_AppCompat_Button
okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection)
io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate
androidx.appcompat.widget.Toolbar
kotlin.reflect.KProperty$Getter
androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType getConnectionType()
kotlin.jvm.internal.LocalVariableReference: kotlin.reflect.KDeclarationContainer getOwner()
okhttp3.Response: int code()
kotlin.jvm.internal.ByteCompanionObject
dagger.android.support.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
androidx.recyclerview.widget.SnapHelper: int[] calculateScrollDistance(int,int)
androidx.recyclerview.widget.DiffUtil$Callback: DiffUtil$Callback()
androidx.legacy.coreui.R$styleable: int CoordinatorLayout_keylines
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.View getCustomView()
dagger.android.DispatchingAndroidInjector
io.reactivex.internal.subscriptions.DeferredScalarSubscription: boolean isEmpty()
androidx.swiperefreshlayout.R$dimen: int notification_right_icon_size
org.jetbrains.annotations.Nls
androidx.appcompat.R$id: int split_action_bar
kotlin.UByte: boolean equals(java.lang.Object)
androidx.swiperefreshlayout.R$drawable: int notification_tile_bg
androidx.appcompat.R$attr: int titleTextColor
io.reactivex.disposables.RunnableDisposable: long serialVersionUID
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: int getSize()
kotlin.collections.EmptyIterator: void add(java.lang.Object)
androidx.recyclerview.widget.SimpleItemAnimator: void onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.constraintlayout.widget.ConstraintSet: int CHAIN_SPREAD
kotlinx.coroutines.internal.LockFreeMPMCQueue: int getSize()
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier: void subscribeActual(io.reactivex.Observer)
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder subscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.util.SortedSet toSortedSet(kotlin.sequences.Sequence)
io.reactivex.Flowable: io.reactivex.Flowable onErrorResumeNext(io.reactivex.functions.Function)
androidx.core.graphics.ColorKt: int component1(int)
androidx.core.app.NotificationCompat$InboxStyle: androidx.core.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(long[],kotlin.jvm.functions.Function1)
android.support.v4.media.session.MediaSessionCompat$Token: void writeToParcel(android.os.Parcel,int)
android.support.v4.media.session.IMediaSession$Stub: android.os.IBinder asBinder()
androidx.core.graphics.RegionKt: android.graphics.Region unaryMinus(android.graphics.Region)
io.reactivex.Observable: io.reactivex.Observable lift(io.reactivex.ObservableOperator)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.example.revolut.rates.R$drawable: int abc_cab_background_internal_bg
androidx.core.graphics.ImageDecoderKt: android.graphics.drawable.Drawable decodeDrawable(android.graphics.ImageDecoder$Source,kotlin.jvm.functions.Function3)
androidx.core.util.SparseArrayKt: java.lang.Object getOrDefault(android.util.SparseArray,int,java.lang.Object)
androidx.appcompat.app.AlertDialog: android.widget.ListView getListView()
androidx.lifecycle.extensions.R$id: int italic
kotlin.collections.ArraysKt___ArraysKt: double average(long[])
androidx.appcompat.R$id: int contentPanel
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float)
okhttp3.internal.connection.RealConnection: okhttp3.Route route()
androidx.appcompat.R$layout
androidx.appcompat.widget.MenuPopupWindow: void setTouchModal(boolean)
androidx.lifecycle.MethodCallsLogger
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_MASK
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: int indexOf(java.lang.Object)
androidx.appcompat.R$style: int Base_V21_Theme_AppCompat_Dialog
retrofit2.http.Query
io.reactivex.Observable: io.reactivex.Observable throttleLatest(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
kotlin.system.ProcessKt
okhttp3.Headers: int hashCode()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)
dagger.android.support.R$attr: int dropdownListPreferredItemHeight
kotlinx.coroutines.scheduling.CoroutineScheduler: CoroutineScheduler(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory
io.reactivex.Observable: io.reactivex.Observable onErrorReturnItem(java.lang.Object)
dagger.android.support.R$id: int search_plate
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_ACCESSIBILITY_FOCUSED
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfterLast$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object)
dagger.android.support.R$color: int abc_tint_spinner
androidx.appcompat.R$layout: int notification_template_custom_big
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long getAddDuration()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle)
io.reactivex.internal.disposables.ListCompositeDisposable: boolean add(io.reactivex.disposables.Disposable)
io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function)
io.reactivex.Maybe: io.reactivex.Maybe doOnEvent(io.reactivex.functions.BiConsumer)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
androidx.appcompat.R$style: int TextAppearance_Compat_Notification_Line2
com.example.revolut.rates.R$id: int group_divider
androidx.appcompat.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
dagger.android.support.R$color: int abc_background_cache_hint_selector_material_dark
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(float[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__ReversedViewsKt: int access$reverseElementIndex(java.util.List,int)
androidx.coordinatorlayout.R$id: int tag_unhandled_key_listeners
androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_NO
kotlinx.coroutines.Delay
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence sequenceOf(java.lang.Object[])
androidx.databinding.ViewDataBinding: java.lang.Object getFromArray(java.lang.Object[],int)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float matchConstraintPercentWidth
dagger.android.support.R$style: int TextAppearance_AppCompat_Body1
io.reactivex.Flowable: io.reactivex.Maybe lastElement()
androidx.vectordrawable.R$drawable: int notification_bg_low_pressed
kotlin.text.CharsKt__CharKt: boolean equals(char,char,boolean)
io.reactivex.Observable: io.reactivex.Observable wrap(io.reactivex.ObservableSource)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Consumer getErrorHandler()
okhttp3.MultipartBody: okhttp3.MediaType ALTERNATIVE
androidx.appcompat.R$style: int Widget_AppCompat_Button_Borderless
androidx.appcompat.widget.DecorContentParent: boolean isOverflowMenuShowPending()
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int getPadding()
kotlin.ranges.RangesKt___RangesKt: float coerceAtMost(float,float)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL
androidx.annotation.Nullable
androidx.appcompat.R$style: int TextAppearance_AppCompat_Small
com.example.revolut.rates.R$id: int action_mode_bar
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object offerSelectInternal(java.lang.Object,kotlinx.coroutines.selects.SelectInstance)
androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()
androidx.core.graphics.RegionKt: android.graphics.Region plus(android.graphics.Region,android.graphics.Region)
androidx.core.ktx.R$color: int ripple_material_light
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.viewpager.widget.PagerTabStrip: boolean getDrawFullUnderline()
io.reactivex.internal.operators.maybe.MaybeDoOnTerminate: void subscribeActual(io.reactivex.MaybeObserver)
androidx.media.MediaBrowserServiceCompat$Result: void detach()
androidx.appcompat.widget.Toolbar: void onRtlPropertiesChanged(int)
io.reactivex.disposables.SerialDisposable: SerialDisposable(io.reactivex.disposables.Disposable)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alphaBy(float)
androidx.appcompat.widget.AbsActionBarView: boolean isOverflowMenuShowPending()
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_TEXT_SELECTION_CHANGED
kotlin.text.RegexKt: kotlin.text.MatchResult access$matchEntire(java.util.regex.Matcher,java.lang.CharSequence)
okio.Okio: okio.BufferedSource buffer(okio.Source)
androidx.appcompat.R$styleable: int ActionBar_contentInsetStart
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(boolean[],boolean,int,int,int,java.lang.Object)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setDisabledMessage(java.lang.CharSequence)
androidx.annotation.FloatRange: double to()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(boolean[],java.util.Comparator)
kotlin.text.Typography: char amp
androidx.fragment.app.DialogFragment: int show(androidx.fragment.app.FragmentTransaction,java.lang.String)
kotlin.coroutines.jvm.internal.CompletedContinuation: kotlin.coroutines.CoroutineContext getContext()
androidx.slidingpanelayout.R$dimen: int notification_top_pad
com.example.revolut.rates.R$styleable: int SwitchCompat_trackTint
androidx.fragment.app.FragmentHostCallback: boolean onHasView()
kotlinx.coroutines.test.TestCoroutineContext: long advanceTimeBy$default(kotlinx.coroutines.test.TestCoroutineContext,long,java.util.concurrent.TimeUnit,int,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe$ConcatWithSubscriber: long serialVersionUID
androidx.appcompat.app.AppCompatActivity: void invalidateOptionsMenu()
androidx.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_light
androidx.customview.R$dimen: int notification_media_narrow_margin
android.support.v4.media.MediaBrowserCompat$MediaItem$Flags
androidx.slidingpanelayout.R$color
com.google.gson.internal.bind.ArrayTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
io.reactivex.internal.operators.flowable.FlowableAmb$AmbInnerSubscriber: long serialVersionUID
io.reactivex.internal.util.EndConsumerHelper: java.lang.String composeMessage(java.lang.String)
androidx.databinding.adapters.AdapterViewBindingAdapter$OnItemSelected: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
androidx.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_dark
okhttp3.internal.cache.CacheStrategy$Factory
kotlin.collections.TypeAliasesKt: void HashMap$annotations()
com.example.revolut.rates.R$layout: int notification_template_big_media
io.reactivex.internal.observers.BlockingObserver
com.example.revolut.rates.R$dimen: int abc_seekbar_track_progress_height_material
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: io.reactivex.flowables.GroupedFlowable poll()
kotlin.io.ByteStreamsKt: byte[] readBytes(java.io.InputStream,int)
com.example.revolut.rates.R$color: int switch_thumb_material_light
com.example.revolut.rates.R$styleable: int Toolbar_contentInsetEndWithActions
androidx.appcompat.R$styleable: int MenuItem_actionLayout
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.customview.widget.ViewDragHelper$Callback: int clampViewPositionHorizontal(android.view.View,int,int)
kotlinx.coroutines.CommonPool: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)
androidx.swiperefreshlayout.R$color: int ripple_material_light
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ListView
androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View)
io.reactivex.exceptions.UndeliverableException: UndeliverableException(java.lang.Throwable)
androidx.appcompat.R$dimen: int abc_dialog_fixed_width_minor
io.reactivex.internal.operators.observable.ObservableScan: void subscribeActual(io.reactivex.Observer)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short maxBy(short[],kotlin.jvm.functions.Function1)
androidx.core.R$attr: int font
androidx.databinding.MergedDataBinderMapper: void addMapper(androidx.databinding.DataBinderMapper)
com.example.revolut.rates.di.AppModule_ProvideRatesApiFactory: java.lang.Object get()
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()
androidx.customview.widget.ViewDragHelper$Callback: boolean tryCaptureView(android.view.View,int)
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector
androidx.coordinatorlayout.widget.DirectedAcyclicGraph
androidx.appcompat.R$styleable: int[] GradientColorItem
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(float[],kotlin.jvm.functions.Function1)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintWidth_min
kotlin.jvm.internal.Intrinsics: void needClassReification()
dagger.android.support.R$color: int material_grey_850
androidx.databinding.ViewDataBinding: boolean updateRegistration(int,androidx.databinding.ObservableMap)
io.reactivex.processors.PublishProcessor: void onNext(java.lang.Object)
androidx.appcompat.R$styleable: int Toolbar_contentInsetRight
kotlin.text.Regex: boolean matches(java.lang.CharSequence)
kotlin.random.Random: double nextDouble(double)
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.viewpager.widget.ViewPager: android.os.Parcelable onSaveInstanceState()
androidx.core.content.ContentValuesKt: android.content.ContentValues contentValuesOf(kotlin.Pair[])
androidx.appcompat.app.AppCompatDelegate: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
io.reactivex.Completable: io.reactivex.Completable repeat(long)
io.reactivex.internal.operators.observable.ObservableConcatMapEager: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.subscribers.BlockingSubscriber: void onComplete()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(int[])
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4
androidx.appcompat.app.WindowDecorActionBar: void setHomeAsUpIndicator(int)
androidx.loader.app.LoaderManager: void enableDebugLogging(boolean)
com.example.revolut.rates.R$styleable: int AppCompatTheme_dialogCornerRadius
androidx.databinding.adapters.SearchViewBindingAdapter$OnQueryTextChange
org.intellij.lang.annotations.JdkConstants$HorizontalAlignment
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder immutable()
com.example.revolut.rates.R$string: int abc_action_bar_up_description
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean onLevelChange(int)
androidx.media.R$styleable: int GradientColor_android_endY
kotlin.UInt: boolean equals-impl(int,java.lang.Object)
androidx.constraintlayout.solver.Metrics: long graphOptimizer
androidx.core.widget.NestedScrollView: void onMeasure(int,int)
kotlin.collections.AbstractMutableList: java.lang.Object removeAt(int)
androidx.constraintlayout.widget.ConstraintSet: void setTranslation(int,float,float)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)
kotlin.UShortArray: boolean containsAll-impl(short[],java.util.Collection)
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_15
okio.ByteString: java.lang.String string(java.nio.charset.Charset)
io.reactivex.internal.subscribers.FutureSubscriber: void onComplete()
kotlin.UIntArray: int[] constructor-impl(int)
okhttp3.Address: java.util.List protocols()
androidx.recyclerview.widget.SortedList$BatchedCallback
kotlin.jvm.internal.PropertyReference1: kotlin.reflect.KProperty$Getter getGetter()
androidx.appcompat.R$style: int TextAppearance_AppCompat_Display1
androidx.core.app.ActivityOptionsCompat: void requestUsageTimeReport(android.app.PendingIntent)
androidx.appcompat.R$styleable: int AppCompatTheme_seekBarStyle
io.reactivex.internal.operators.observable.ObservableSkip
kotlinx.coroutines.CoroutineContextKt: java.lang.String COROUTINES_SCHEDULER_PROPERTY_NAME
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getIntrinsicWidth()
kotlin.text.RegexKt$fromInt$$inlined$apply$lambda$1
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
dagger.android.support.R$id: int src_over
dagger.android.support.R$color: int secondary_text_default_material_light
androidx.appcompat.R$attr: int alphabeticModifiers
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void setDuration(int)
dagger.android.DaggerFragment
androidx.core.graphics.PointKt: android.graphics.PointF toPointF(android.graphics.Point)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence filterNot(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler initComputationScheduler(java.util.concurrent.Callable)
kotlin.collections.ArraysKt___ArraysKt: double averageOfInt(java.lang.Integer[])
io.reactivex.Single: io.reactivex.Single timeout(long,java.util.concurrent.TimeUnit)
androidx.core.app.NotificationCompat$Extender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)
io.reactivex.internal.observers.QueueDrainObserver: boolean done
androidx.appcompat.widget.AbsActionBarView: void animateToVisibility(int)
androidx.slidingpanelayout.R$attr: int fontProviderFetchStrategy
androidx.customview.R$styleable: int GradientColor_android_endColor
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorIterable: void subscribeActual(io.reactivex.CompletableObserver)
androidx.appcompat.R$styleable: int Spinner_android_prompt
com.example.revolut.rates.R$styleable: int ActionBar_contentInsetEnd
androidx.appcompat.R$style: int Platform_V25_AppCompat
androidx.loader.R$styleable: int GradientColorItem_android_color
dagger.android.support.R$attr: int buttonTintMode
androidx.collection.LruCache: int createCount()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_goneMarginStart
kotlin.text.Charsets: java.nio.charset.Charset UTF_16LE
io.reactivex.Observable: java.lang.Object blockingLast()
androidx.appcompat.R$color: int abc_hint_foreground_material_dark
androidx.core.widget.AutoScrollHelper: AutoScrollHelper(android.view.View)
androidx.appcompat.widget.ListPopupWindow: void dismiss()
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(java.lang.Object[])
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int getMaxVolume(java.lang.Object)
androidx.appcompat.R$dimen: int abc_text_size_display_4_material
androidx.appcompat.view.menu.MenuItemWrapperICS: void setShowAsAction(int)
com.example.revolut.rates.R$anim: int abc_tooltip_exit
okhttp3.internal.ws.WebSocketProtocol: java.lang.String acceptHeader(java.lang.String)
io.reactivex.plugins.RxJavaPlugins: void setErrorHandler(io.reactivex.functions.Consumer)
okhttp3.CipherSuite: java.lang.String javaName()
androidx.core.util.SparseLongArrayKt: boolean remove(android.util.SparseLongArray,int,long)
com.example.revolut.rates.R$style: int Widget_AppCompat_Button_Colored
kotlin.collections.CollectionsKt___CollectionsKt: char[] toCharArray(java.util.Collection)
androidx.databinding.adapters.Converters
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
kotlin.collections.AbstractMap: java.util.Collection getValues()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitle(int)
androidx.core.graphics.drawable.BitmapDrawableKt
androidx.loader.R$color: int notification_action_color_filter
kotlin.text.StringsKt__IndentKt: java.lang.String replaceIndent(java.lang.String,java.lang.String)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
androidx.media.R$dimen: int subtitle_outline_width
androidx.swiperefreshlayout.R$drawable: int notification_template_icon_bg
com.example.revolut.rates.R$string: int abc_menu_enter_shortcut_label
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: int HOST_VIEW_ID
kotlin.collections.CollectionsKt___CollectionsKt: void sortBy(java.util.List,kotlin.jvm.functions.Function1)
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
androidx.appcompat.view.menu.ActionMenuItem: int getItemId()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_ACCESSIBILITY_FOCUS
androidx.appcompat.app.AlertDialog$Builder
androidx.appcompat.R$color: int abc_tint_seek_thumb
com.example.revolut.rates.R$attr: int popupWindowStyle
androidx.fragment.R$styleable: int FontFamily_fontProviderFetchTimeout
kotlinx.coroutines.sync.MutexKt: java.lang.Object withLock(kotlinx.coroutines.sync.Mutex,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.slidingpanelayout.R$styleable: int[] GradientColorItem
com.example.revolut.rates.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
androidx.core.widget.ScrollerCompat
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setBufferedPosition(long)
androidx.constraintlayout.solver.widgets.ResolutionAnchor: float getResolvedValue()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_ARRAY
dagger.android.support.R$dimen: int abc_action_button_min_width_material
androidx.coordinatorlayout.R$dimen
kotlinx.coroutines.selects.SelectBuilderImpl: SelectBuilderImpl(kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListKt: void LIST_EMPTY$annotations()
io.reactivex.Completable: io.reactivex.Single materialize()
com.jakewharton.rxbinding3.view.MenuItemActionViewCollapseEvent
dagger.android.support.R$layout: int abc_screen_toolbar
androidx.media.MediaBrowserCompatUtils
androidx.core.util.SparseIntArrayKt$keyIterator$1: void setIndex(int)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addAction(androidx.core.app.NotificationCompat$Action)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Body1
androidx.customview.widget.FocusStrategy$CollectionAdapter: java.lang.Object get(java.lang.Object,int)
androidx.media.MediaBrowserProtocol: int CLIENT_VERSION_1
androidx.constraintlayout.solver.widgets.ConstraintWidget: void disconnectUnlockedWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.viewpager.R$string
androidx.appcompat.R$styleable: int AlertDialog_listLayout
com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory$BodyCallAdapter$adapt$2: void onResponse(retrofit2.Call,retrofit2.Response)
kotlin.ranges.CharProgression: char getLast()
androidx.core.os.BuildCompat: boolean isAtLeastO()
kotlinx.coroutines.internal.SystemPropsKt: int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object)
androidx.coordinatorlayout.R$attr: int layout_behavior
androidx.lifecycle.LiveData: void onInactive()
kotlin.ranges.IntRange: boolean contains(int)
io.reactivex.internal.observers.QueueDrainObserver: boolean fastEnter()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)
androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$1: void onTransitionStart(android.transition.Transition)
androidx.core.database.sqlite.SQLiteDatabaseKt
androidx.fragment.app.FragmentHostCallback: boolean onHasWindowAnimations()
kotlinx.coroutines.TimeSource: void unTrackTask()
androidx.versionedparcelable.VersionedParcel: double readDouble()
androidx.lifecycle.extensions.R$color
io.reactivex.internal.operators.observable.ObservableAllSingle: io.reactivex.Observable fuseToObservable()
androidx.legacy.v4.R$id: int end_padder
androidx.core.R$layout: int notification_template_icon_group
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.ranges.IntRange
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary: ObservableBufferExactBoundary(io.reactivex.ObservableSource,io.reactivex.ObservableSource,java.util.concurrent.Callable)
androidx.recyclerview.R$drawable: int notification_tile_bg
kotlin.text.Regex
dagger.android.support.R$style: int Base_V7_Theme_AppCompat_Light
io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)
androidx.core.app.Person
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: void extendRangeInto(int[],int[],int)
androidx.appcompat.app.ActionBar$LayoutParams
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setVerticalGrowth(boolean)
androidx.versionedparcelable.VersionedParcel: double[] readDoubleArray(double[],int)
io.reactivex.internal.operators.single.SingleMaterialize
androidx.coordinatorlayout.R$dimen: int compat_control_corner_material
kotlinx.coroutines.JobSupport: boolean makeCompleting$kotlinx_coroutines_core(java.lang.Object)
androidx.core.animation.AnimatorKt$doOnCancel$$inlined$addListener$1: void onAnimationEnd(android.animation.Animator)
okio.Buffer: java.lang.String readString(java.nio.charset.Charset)
com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent: java.lang.CharSequence getText()
com.example.revolut.rates.R$style: int Widget_AppCompat_PopupWindow
okhttp3.Response: java.util.List headers(java.lang.String)
androidx.appcompat.R$drawable: int abc_list_selector_disabled_holo_dark
androidx.appcompat.R$dimen: int abc_action_bar_icon_vertical_padding_material
kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0)
com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent: android.widget.TextView component1()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: IntrinsicsKt__IntrinsicsJvmKt()
androidx.recyclerview.widget.ItemTouchHelper$Callback: androidx.recyclerview.widget.ItemTouchUIUtil getDefaultUIUtil()
kotlinx.coroutines.scheduling.Task: void run()
androidx.appcompat.R$color: int background_floating_material_light
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback
io.reactivex.internal.operators.flowable.FlowableZip
androidx.documentfile.provider.DocumentFile: androidx.documentfile.provider.DocumentFile fromFile(java.io.File)
retrofit2.http.HEAD: java.lang.String value()
okhttp3.HttpUrl: int defaultPort(java.lang.String)
androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode)
dagger.android.support.R$attr: int multiChoiceItemLayout
com.google.gson.JsonPrimitive: java.lang.Number getAsNumber()
androidx.constraintlayout.solver.widgets.Guideline: int HORIZONTAL
com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory
dagger.android.support.R$attr: int contentInsetStartWithNavigation
com.example.revolut.rates.R$dimen: int abc_edit_text_inset_bottom_material
dagger.android.support.R$attr: int voiceIcon
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstIf(kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$attr: int layout_constraintTop_toBottomOf
io.reactivex.internal.operators.observable.ObservableSkipLastTimed: ObservableSkipLastTimed(io.reactivex.ObservableSource,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int,boolean)
dagger.android.support.R$attr: int activityChooserViewStyle
io.reactivex.Observable: io.reactivex.Single toList()
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_PROGRESS
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintContentIntentLaunchesActivity(boolean)
okhttp3.Cookie: int hashCode()
com.example.revolut.rates.R$id: int packed
androidx.annotation.IntDef: boolean open()
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_PopupMenu
kotlinx.coroutines.NonCancellable: kotlin.sequences.Sequence getChildren()
dagger.android.support.R$attr: int listLayout
kotlinx.android.parcel.IgnoredOnParcel
androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()
androidx.appcompat.widget.ListPopupWindow: int getAnimationStyle()
kotlin.collections.ArraysKt___ArraysKt: boolean none(int[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.SwitchCompat
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
io.reactivex.internal.operators.observable.ObservableWithLatestFrom: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber: long serialVersionUID
androidx.viewpager.widget.ViewPager: boolean canScroll(android.view.View,boolean,int,int,int)
androidx.loader.content.Loader$ForceLoadContentObserver: void onChange(boolean)
io.reactivex.internal.operators.single.SingleToFlowable$SingleToFlowableObserver: long serialVersionUID
io.reactivex.Maybe: io.reactivex.Maybe retryUntil(io.reactivex.functions.BooleanSupplier)
kotlin.jvm.internal.MutablePropertyReference2: kotlin.reflect.KMutableProperty2$Setter getSetter()
io.reactivex.Observable: io.reactivex.Observable concatMapSingle(io.reactivex.functions.Function)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.legacy.coreui.R$dimen: int notification_top_pad
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_LOCKED_CLOSED
io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver: long serialVersionUID
kotlin.TypeAliasesKt: void AssertionError$annotations()
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollRange()
androidx.fragment.R$id: int notification_background
kotlin.ranges.URangesKt___URangesKt: byte coerceAtLeast-Kr8caGY(byte,byte)
kotlinx.coroutines.channels.BroadcastChannel: boolean cancel(java.lang.Throwable)
com.example.revolut.rates.R$styleable: int SearchView_queryHint
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong lastOrNull-QwZRm1k(long[])
okio.Okio: okio.Sink sink(java.net.Socket)
androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
kotlin.HashCodeKt
androidx.core.ktx.R$dimen: int compat_button_inset_vertical_material
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: RecyclerViewAccessibilityDelegate$ItemDelegate(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
androidx.core.database.sqlite.SQLiteDatabaseKt: java.lang.Object transaction(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1)
com.jakewharton.rxbinding3.core.R$color: int notification_icon_bg_color
androidx.core.graphics.drawable.IconCompat: byte[] mData
kotlinx.coroutines.AbstractContinuation: void invokeOnCancellation(kotlin.jvm.functions.Function1)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder pingInterval(long,java.util.concurrent.TimeUnit)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Inverse
kotlinx.coroutines.DeferredKt: kotlinx.coroutines.Deferred async$default(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlinx.coroutines.Job,kotlin.jvm.functions.Function2,int,java.lang.Object)
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_SearchView
dagger.android.support.R$styleable: int AppCompatSeekBar_android_thumb
io.reactivex.internal.operators.flowable.FlowableSingle$SingleElementSubscriber: long serialVersionUID
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: float weight
dagger.android.DaggerFragment_MembersInjector: void injectMembers(java.lang.Object)
kotlinx.coroutines.internal.LockFreeMPMCQueueNode: LockFreeMPMCQueueNode()
androidx.slidingpanelayout.R$id: int actions
io.reactivex.Flowable: io.reactivex.Flowable concatMap(io.reactivex.functions.Function)
androidx.recyclerview.R$styleable: int GradientColorItem_android_color
kotlin.ranges.LongProgression: kotlin.ranges.LongProgression$Companion Companion
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String)
kotlin.sequences.GeneratorSequence$iterator$1: void remove()
androidx.databinding.ObservableArrayList
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_layout_marginRight
androidx.core.widget.AutoSizeableTextView
androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,java.io.InputStream)
androidx.core.R$styleable: int GradientColor_android_startX
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeRemoved(int,int)
androidx.core.internal.view.SupportMenu
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: long serialVersionUID
androidx.vectordrawable.R$id: int icon
okhttp3.internal.connection.RouteSelector: RouteSelector(okhttp3.Address,okhttp3.internal.connection.RouteDatabase,okhttp3.Call,okhttp3.EventListener)
okhttp3.OkHttpClient
kotlin.collections.EmptyList: java.lang.Object[] toArray()
io.reactivex.internal.operators.single.SingleDoOnSubscribe: void subscribeActual(io.reactivex.SingleObserver)
com.google.gson.stream.JsonReader: JsonReader(java.io.Reader)
kotlin.ULongArray: boolean contains(java.lang.Object)
io.reactivex.internal.util.AppendOnlyLinkedArrayList$NonThrowingPredicate
androidx.legacy.coreui.R$id: int tag_unhandled_key_event_manager
androidx.appcompat.R$dimen: int abc_action_button_min_height_material
io.reactivex.internal.fuseable.FuseToMaybe: io.reactivex.Maybe fuseToMaybe()
androidx.core.view.NestedScrollingChildHelper: void onDetachedFromWindow()
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(androidx.drawerlayout.widget.DrawerLayout$LayoutParams)
com.google.gson.JsonElement: double getAsDouble()
com.example.revolut.rates.view.adapter.CurrenciesAdapter: com.example.revolut.rates.view.adapter.CurrenciesAdapter$CurrenciesViewHolder onCreateViewHolder(android.view.ViewGroup,int)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter FLOAT
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection mapIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.Pair
kotlin.collections.UCollectionsKt___UCollectionsKt: UCollectionsKt___UCollectionsKt()
dagger.android.support.R$styleable: int AppCompatTheme_buttonBarButtonStyle
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: boolean retry(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object)
org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender setUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int getVolumeControl(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean[] toBooleanArray(java.lang.Boolean[])
androidx.core.widget.EdgeEffectCompat
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: void invoke(kotlinx.coroutines.selects.SelectClause0,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.ShortSpreadBuilder: int getSize(short[])
io.reactivex.Single: io.reactivex.Single lift(io.reactivex.SingleOperator)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void recycle()
kotlin.ULongArrayKt
io.reactivex.internal.operators.flowable.FlowableConcatMapEager: FlowableConcatMapEager(io.reactivex.Flowable,io.reactivex.functions.Function,int,int,io.reactivex.internal.util.ErrorMode)
com.jakewharton.rxbinding3.view.MenuItemActionViewExpandEvent: com.jakewharton.rxbinding3.view.MenuItemActionViewExpandEvent copy(android.view.MenuItem)
androidx.core.graphics.TypefaceCompatApi26Impl
okhttp3.internal.connection.RouteDatabase: void failed(okhttp3.Route)
kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 access$getOnLeave$p(kotlin.io.FileTreeWalk)
android.support.v4.media.session.MediaSessionCompat$Token: boolean equals(java.lang.Object)
dagger.android.support.DaggerAppCompatDialogFragment_MembersInjector
dagger.android.support.R$attr: int arrowHeadLength
kotlinx.coroutines.ThreadPoolDispatcherKt: kotlinx.coroutines.ThreadPoolDispatcher newSingleThreadContext(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable subscribeOn(io.reactivex.Scheduler)
okhttp3.Headers: okhttp3.Headers of(java.util.Map)
dagger.android.support.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
androidx.drawerlayout.R$styleable: int GradientColorItem_android_color
androidx.appcompat.R$styleable: int ActionMode_subtitleTextStyle
androidx.appcompat.app.WindowDecorActionBar: void dispatchMenuVisibilityChanged(boolean)
kotlin.collections.ArraysKt__ArraysKt: kotlin.Pair unzip(kotlin.Pair[])
io.reactivex.SingleEmitter: void onSuccess(java.lang.Object)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
androidx.core.graphics.MatrixKt: android.graphics.Matrix rotationMatrix(float,float,float)
io.reactivex.internal.operators.observable.ObservableDematerialize: ObservableDematerialize(io.reactivex.ObservableSource,io.reactivex.functions.Function)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(long[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.selects.SelectUnbiasedKt
androidx.core.graphics.drawable.RoundedBitmapDrawable: void onBoundsChange(android.graphics.Rect)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory CLASS_FACTORY
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onDetachedFromLayoutParams()
androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.example.revolut.rates.RatesApp: RatesApp()
androidx.core.view.ViewGroupKt: android.view.View get(android.view.ViewGroup,int)
kotlin.UByteArray: void set-VurrAj0(byte[],int,byte)
androidx.lifecycle.extensions.R$id: int end
io.reactivex.Flowable: io.reactivex.Flowable window(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(long,short)
dagger.android.support.R$drawable: int abc_text_select_handle_right_mtrl_dark
io.reactivex.internal.operators.flowable.FlowablePublishClassic: org.reactivestreams.Publisher publishSource()
androidx.appcompat.R$id: int icon_group
kotlin.collections.UIntIterator: void remove()
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.recyclerview.widget.DefaultItemAnimator
androidx.appcompat.widget.DropDownListView: int INVALID_POSITION
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void run()
androidx.core.widget.TextViewCompat: android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle
androidx.appcompat.R$styleable: int AppCompatTheme_editTextStyle
io.reactivex.SingleEmitter: boolean tryOnError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber: long serialVersionUID
io.reactivex.Flowable: io.reactivex.Maybe elementAt(long)
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float)
com.example.revolut.rates.R$attr: int fontStyle
androidx.appcompat.R$styleable: int FontFamily_fontProviderQuery
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float getArrowShaftLength()
kotlinx.coroutines.DebugKt: java.lang.String toDebugString(kotlin.coroutines.Continuation)
okhttp3.CacheControl: boolean noTransform()
kotlin.ranges.ClosedRange: boolean isEmpty()
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour()
io.reactivex.internal.disposables.EmptyDisposable: void error(java.lang.Throwable,io.reactivex.SingleObserver)
io.reactivex.internal.operators.observable.ObservableDebounceTimed: ObservableDebounceTimed(io.reactivex.ObservableSource,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.lifecycle.extensions.R$dimen: int notification_small_icon_background_padding
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference: java.lang.Object callStackTrace
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.asynclayoutinflater.R$layout
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintHeight_percent
dagger.android.DaggerApplication: dagger.android.AndroidInjector activityInjector()
androidx.legacy.coreutils.R$attr
androidx.core.hardware.display.DisplayManagerCompat: androidx.core.hardware.display.DisplayManagerCompat getInstance(android.content.Context)
kotlin.sequences.TakeWhileSequence$iterator$1
io.reactivex.Flowable: io.reactivex.Flowable buffer(org.reactivestreams.Publisher,java.util.concurrent.Callable)
kotlin.reflect.KParameter
androidx.fragment.app.Fragment: boolean getUserVisibleHint()
androidx.databinding.library.R
io.reactivex.subjects.ReplaySubject: void cleanupBuffer()
io.reactivex.Observable: io.reactivex.Observable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.internal.operators.observable.ObservableHide: ObservableHide(io.reactivex.ObservableSource)
com.google.gson.JsonPrimitive: boolean isBoolean()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: java.lang.Integer get(int)
androidx.core.R$style: int Widget_Compat_NotificationActionText
dagger.android.support.R$id: int add
io.reactivex.internal.operators.single.SingleOnErrorReturn: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.R$styleable: int AppCompatTextView_textAllCaps
okhttp3.HttpUrl: java.lang.String queryParameter(java.lang.String)
androidx.loader.R$styleable: int GradientColor_android_centerX
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
kotlinx.coroutines.BlockingEventLoop
kotlin.SafePublicationLazyImpl: java.lang.Object writeReplace()
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilMainObserver: long serialVersionUID
androidx.core.animation.AnimatorKt$addPauseListener$listener$1
androidx.core.util.SparseIntArrayKt: boolean containsValue(android.util.SparseIntArray,int)
okhttp3.internal.http2.Header: okio.ByteString RESPONSE_STATUS
kotlinx.coroutines.scheduling.NonBlockingContext: kotlinx.coroutines.scheduling.NonBlockingContext INSTANCE
kotlin.collections.ArraysKt___ArraysKt: float sumOfFloat(java.lang.Float[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLast-qFRl0hI(int[],int)
androidx.databinding.ObservableInt: android.os.Parcelable$Creator CREATOR
androidx.annotation.GuardedBy
androidx.legacy.app.ActionBarDrawerToggle: ActionBarDrawerToggle(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,boolean,int,int,int)
androidx.recyclerview.R$attr: int layout_behavior
androidx.coordinatorlayout.R$styleable: int GradientColor_android_endY
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: JobSupport$addLastAtomic$$inlined$addLastIf$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.JobSupport,java.lang.Object)
com.example.revolut.rates.R$styleable: int AppCompatTheme_editTextBackground
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.legacy.coreui.R$styleable: int GradientColor_android_endColor
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener
androidx.core.app.NotificationCompat$InboxStyle: androidx.core.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence)
kotlin.sequences.FilteringSequence
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(int[])
io.reactivex.Maybe: io.reactivex.Maybe using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)
io.reactivex.internal.operators.maybe.MaybeCallbackObserver
io.reactivex.CompletableEmitter: void setCancellable(io.reactivex.functions.Cancellable)
okhttp3.internal.http.StatusLine: java.lang.String toString()
dagger.android.ActivityKey: java.lang.Class value()
com.example.revolut.rates.R$styleable: int DrawerArrowToggle_barLength
androidx.core.animation.AnimatorKt$addListener$listener$1: void onAnimationStart(android.animation.Animator)
io.reactivex.subjects.CompletableSubject: java.lang.Throwable getThrowable()
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$2: void resume(java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int[] findLastCompletelyVisibleItemPositions(int[])
kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.ExecutorCoroutineDispatcher asCoroutineDispatcher(java.util.concurrent.ExecutorService)
androidx.lifecycle.extensions.R$styleable: int ColorStateListItem_alpha
androidx.appcompat.widget.PopupMenu: void setOnDismissListener(androidx.appcompat.widget.PopupMenu$OnDismissListener)
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver$InnerObserver: long serialVersionUID
androidx.fragment.R$attr: int layout_anchorGravity
kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,long)
kotlin.collections.MapsKt__MapsJVMKt: java.util.SortedMap toSortedMap(java.util.Map,java.util.Comparator)
androidx.slidingpanelayout.R$styleable: int[] FontFamilyFont
dagger.android.support.R$style: int Base_Widget_AppCompat_ButtonBar
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean openPane()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterNot(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.recyclerview.widget.LinearLayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
okhttp3.Cookie$Builder: okhttp3.Cookie build()
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.lang.String getType()
androidx.core.text.PrecomputedTextCompat: int nextSpanTransition(int,int,java.lang.Class)
kotlin.coroutines.experimental.migration.CoroutinesMigrationKt: kotlin.jvm.functions.Function2 toExperimentalSuspendFunction(kotlin.jvm.functions.Function2)
android.support.v4.media.MediaMetadataCompat: long getLong(java.lang.String)
androidx.core.database.CursorKt: byte[] getBlobOrNull(android.database.Cursor,int)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: byte maxOf-Kr8caGY(byte,byte)
okhttp3.Address: java.net.ProxySelector proxySelector()
kotlin.collections.ArraysKt___ArraysKt: int count(double[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ShareActionProvider: void setShareIntent(android.content.Intent)
com.example.revolut.rates.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
androidx.core.graphics.ColorUtils: void RGBToHSL(int,int,int,float[])
io.reactivex.subjects.MaybeSubject$MaybeDisposable: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableError
com.jakewharton.rxbinding3.core.R$color: int ripple_material_light
androidx.media.R$dimen: int notification_subtext_size
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableMapEntry(java.lang.Object)
androidx.legacy.v4.R$styleable: int FontFamilyFont_font
com.example.revolut.rates.databinding.RatesItemBindingImpl: boolean hasPendingBindings()
dagger.android.DaggerApplication: dagger.android.AndroidInjector serviceInjector()
okio.Buffer: okio.Buffer writeShort(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong maxWith-zrEWJaI(long[],java.util.Comparator)
androidx.coordinatorlayout.R$id: int text2
androidx.legacy.coreui.R$attr: int layout_anchorGravity
kotlin.collections.AbstractMap: boolean containsValue(java.lang.Object)
dagger.android.support.R$attr: int contentInsetLeft
androidx.appcompat.R$layout: int abc_list_menu_item_icon
kotlin.ranges.CharRange: java.lang.String toString()
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT_EMBEDDING
com.example.revolut.rates.R$color: int bright_foreground_inverse_material_light
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
androidx.legacy.coreutils.R$color
com.google.gson.JsonElement: JsonElement()
io.reactivex.internal.operators.mixed.MaterializeSingleObserver: void onSuccess(java.lang.Object)
androidx.coordinatorlayout.R$styleable
androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_FOLLOW_SYSTEM
kotlinx.coroutines.CoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
androidx.appcompat.app.ActionBarDrawerToggle: boolean isDrawerSlideAnimationEnabled()
androidx.core.text.StringKt: java.lang.String htmlEncode(java.lang.String)
io.reactivex.internal.operators.observable.ObservableCreate$CreateEmitter: long serialVersionUID
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Caption
com.example.revolut.rates.R$style: int Widget_AppCompat_PopupMenu
okhttp3.CookieJar: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
androidx.databinding.OnRebindCallback
dagger.android.support.R$styleable: int AppCompatTheme_colorControlNormal
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.R$color: int secondary_text_default_material_light
kotlin.jvm.internal.MutablePropertyReference0: MutablePropertyReference0()
kotlin.sequences.TransformingIndexedSequence: TransformingIndexedSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlin.text.Regex$Companion
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Small_Inverse
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onContentScrollStopped()
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(byte[],kotlin.jvm.functions.Function1)
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: boolean beforeDownstream()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalChainStyle(int)
androidx.appcompat.widget.DecorToolbar: void setTitle(java.lang.CharSequence)
com.jakewharton.rxbinding3.view.ViewScrollChangeEvent: android.view.View getView()
androidx.appcompat.widget.ActionBarContextView: boolean canShowOverflowMenu()
androidx.core.view.NestedScrollingParent: int getNestedScrollAxes()
io.reactivex.internal.schedulers.IoScheduler
androidx.appcompat.R$dimen: int abc_button_padding_vertical_material
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.selects.SelectClause2 getOnSend()
androidx.appcompat.R$id: int action_bar_container
androidx.viewpager.widget.ViewPager$PageTransformer: void transformPage(android.view.View,float)
io.reactivex.schedulers.TestScheduler: void triggerActions()
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.drawable.Drawable getIcon()
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintHorizontal_weight
io.reactivex.Flowable: io.reactivex.Flowable unsubscribeOn(io.reactivex.Scheduler)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(boolean[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.Toolbar: void onMeasure(int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View,int)
kotlin.collections.EmptySet: int size()
io.reactivex.Observable: io.reactivex.Observable concatMapMaybeDelayError(io.reactivex.functions.Function)
io.reactivex.internal.operators.observable.ObservableDoOnEach
dagger.android.support.R$dimen: int abc_button_inset_vertical_material
dagger.android.support.R$layout: int abc_action_mode_close_item_material
dagger.android.support.R$attr: int imageButtonStyle
io.reactivex.internal.operators.maybe.MaybeIsEmpty
com.example.revolut.rates.R$attr
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(long[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.databinding.ObservableList
androidx.vectordrawable.R$dimen: int notification_content_margin_start
dagger.android.support.DaggerAppCompatDialogFragment
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper()
okhttp3.internal.tls.TrustRootIndex
com.jakewharton.rxbinding3.widget.RxAdapterView: io.reactivex.Observable itemClicks(android.widget.AdapterView)
androidx.coordinatorlayout.R$dimen: int notification_small_icon_size_as_large
androidx.core.view.ViewCompat: void setX(android.view.View,float)
com.example.revolut.rates.R$style: int TextAppearance_Compat_Notification
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.view.ActionProvider getSupportActionProvider()
kotlin.collections.ArraysKt___ArraysJvmKt: long[] copyInto(long[],long[],int,int,int)
androidx.core.transition.TransitionKt$addListener$listener$1: void onTransitionStart(android.transition.Transition)
kotlinx.coroutines.internal.ContextScope: kotlin.coroutines.CoroutineContext getCoroutineContext()
com.google.gson.internal.bind.TreeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
okhttp3.Route: java.lang.String toString()
androidx.appcompat.widget.AppCompatEditText: void setTextAppearance(android.content.Context,int)
dagger.android.support.R$color: int material_grey_50
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
kotlin.comparisons.ComparisonsKt
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxySelector(java.net.ProxySelector)
androidx.core.transition.TransitionKt$addListener$5: void invoke(android.transition.Transition)
androidx.appcompat.app.AppCompatCallback: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: int lastIndexOf(long)
androidx.appcompat.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object getDesignInformation(int,java.lang.Object)
androidx.constraintlayout.widget.Barrier: boolean allowsGoneWidget()
io.reactivex.Notification: io.reactivex.Notification createOnError(java.lang.Throwable)
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource[],io.reactivex.functions.Function,int)
androidx.appcompat.widget.LinearLayoutCompat: boolean shouldDelayChildPressedState()
androidx.slidingpanelayout.R$id: int blocking
com.jakewharton.rxbinding3.core.R$id: int text2
androidx.media.VolumeProviderCompat: void onAdjustVolume(int)
androidx.core.os.HandlerKt$postDelayed$runnable$1
androidx.core.widget.TextViewCompat: int getFirstBaselineToTopHeight(android.widget.TextView)
dagger.android.support.R$drawable: int abc_btn_colored_material
kotlin.collections.ArraysKt___ArraysJvmKt: void sortWith(java.lang.Object[],java.util.Comparator)
com.example.revolut.rates.base.BaseNotifier
io.reactivex.Observable: io.reactivex.Observable timeInterval()
androidx.appcompat.view.menu.MenuBuilder: void clear()
dagger.android.support.R$id: int action_bar_title
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintLeft_creator
androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT_OVERRIDE
io.reactivex.Flowable: io.reactivex.Flowable concatEager(org.reactivestreams.Publisher)
kotlinx.android.extensions.CacheImplementation: kotlinx.android.extensions.CacheImplementation access$getDEFAULT$cp()
io.reactivex.internal.operators.flowable.FlowableLastSingle: FlowableLastSingle(org.reactivestreams.Publisher,java.lang.Object)
androidx.core.view.ViewGroupKt: void forEach(android.view.ViewGroup,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(int[],kotlin.jvm.functions.Function1)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int LEFT
androidx.databinding.library.BuildConfig: java.lang.String BUILD_TYPE
kotlinx.coroutines.selects.SelectInstance
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
androidx.documentfile.provider.DocumentFile: androidx.documentfile.provider.DocumentFile fromTreeUri(android.content.Context,android.net.Uri)
dagger.internal.SetBuilder: dagger.internal.SetBuilder addAll(java.util.Collection)
dagger.android.support.R$id: int action_image
dagger.android.support.R$style: int Base_V21_Theme_AppCompat_Dialog
kotlin.collections.CollectionsKt___CollectionsKt: double[] toDoubleArray(java.util.Collection)
com.example.revolut.rates.R$styleable: int ConstraintSet_android_layout_marginStart
io.reactivex.internal.operators.flowable.FlowableSkip
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel withIndex(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext)
androidx.databinding.ViewDataBinding: int parse(java.lang.String,int)
io.reactivex.subjects.PublishSubject
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte getOrNull-PpDY95g(byte[],int)
androidx.appcompat.app.ActionBar: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.DecorToolbar: boolean canShowOverflowMenu()
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener: void onAccessibilityStateChanged(boolean)
androidx.fragment.app.FragmentTransaction: FragmentTransaction()
okio.Buffer: okio.Buffer copyTo(java.io.OutputStream,long,long)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.collection.LruCache: void resize(int)
com.example.revolut.rates.R$attr: int layout_constraintStart_toStartOf
com.jakewharton.rxbinding3.core.R$dimen: int notification_small_icon_size_as_large
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int)
androidx.constraintlayout.widget.ConstraintSet: void centerVertically(int,int,int,int,int,int,int,float)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_MD5
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap)
androidx.legacy.app.ActionBarDrawerToggle: void setDrawerIndicatorEnabled(boolean)
okhttp3.RequestBody: long contentLength()
com.example.revolut.rates.R$styleable: int ActionBar_contentInsetEndWithActions
kotlin.coroutines.AbstractCoroutineContextElement
okhttp3.FormBody
com.google.gson.TypeAdapterFactory
androidx.core.view.ViewCompat: android.view.View requireViewById(android.view.View,int)
okhttp3.HttpUrl$Builder: java.lang.String toString()
kotlinx.coroutines.CoroutineExceptionHandlerKt: kotlinx.coroutines.CoroutineExceptionHandler CoroutineExceptionHandler(kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentActivity: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CANCEL
androidx.appcompat.text.AllCapsTransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)
androidx.constraintlayout.widget.ConstraintSet: void addToHorizontalChainRTL(int,int,int)
androidx.appcompat.widget.Toolbar: android.os.Parcelable onSaveInstanceState()
androidx.core.view.ViewCompat: void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)
androidx.databinding.DataBindingUtil: androidx.databinding.ViewDataBinding inflate(android.view.LayoutInflater,int,android.view.ViewGroup,boolean,androidx.databinding.DataBindingComponent)
io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver: long serialVersionUID
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addDisappearingView(android.view.View,int)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_android_maxWidth
io.reactivex.internal.operators.flowable.FlowableDoOnEach
androidx.lifecycle.extensions.R$styleable: int FontFamilyFont_fontStyle
androidx.media.R$drawable: int notification_icon_background
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: ActivityChooserModel$HistoricalRecord(android.content.ComponentName,long,float)
androidx.core.ktx.R$dimen
kotlinx.coroutines.channels.ChannelCoroutine: boolean isFull()
androidx.core.app.NotificationCompat$Builder: long getWhenIfShowing()
androidx.core.widget.TintableCompoundButton: android.content.res.ColorStateList getSupportButtonTintList()
io.reactivex.internal.observers.QueueDrainObserver: java.lang.Throwable error
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object consume(kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function1)
io.reactivex.Maybe: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)
kotlinx.coroutines.selects.SelectBuilderImpl: boolean trySelect(java.lang.Object)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter beginArray()
dagger.android.support.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
androidx.databinding.adapters.TextViewBindingAdapter: void setDrawableStart(android.widget.TextView,android.graphics.drawable.Drawable)
androidx.loader.content.CursorLoader: void deliverResult(java.lang.Object)
okio.Buffer$UnsafeCursor: Buffer$UnsafeCursor()
kotlinx.coroutines.JobSupport: void initParentJobInternal$kotlinx_coroutines_core(kotlinx.coroutines.Job)
androidx.appcompat.R$attr: int fontFamily
android.support.v4.media.MediaDescriptionCompat: long STATUS_NOT_DOWNLOADED
androidx.drawerlayout.R
androidx.appcompat.widget.DecorToolbar: int getDropdownItemCount()
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
dagger.android.support.R$drawable: int abc_list_selector_background_transition_holo_dark
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int)
androidx.media.R$dimen: int compat_button_padding_vertical_material
kotlin.jvm.internal.Intrinsics: void throwUndefinedForReified()
androidx.appcompat.view.SupportActionModeWrapper: void setTitleOptionalHint(boolean)
io.reactivex.internal.util.EmptyComponent: io.reactivex.internal.util.EmptyComponent INSTANCE
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(int[])
io.reactivex.internal.subscriptions.SubscriptionHelper: void cancel()
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1: int compare(java.lang.Object,java.lang.Object)
io.reactivex.Single: io.reactivex.Flowable repeatUntil(io.reactivex.functions.BooleanSupplier)
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent
androidx.recyclerview.widget.TileList$Tile: TileList$Tile(java.lang.Class,int)
androidx.appcompat.R$attr: int measureWithLargestChild
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection filterTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.ClosedRange,byte)
dagger.android.support.R$style: int Base_Widget_AppCompat_RatingBar_Small
androidx.core.view.ViewPropertyAnimatorUpdateListener
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
androidx.databinding.adapters.ViewBindingAdapter: int FADING_EDGE_NONE
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView)
androidx.appcompat.view.ActionMode: java.lang.CharSequence getSubtitle()
androidx.loader.content.Loader: void deliverCancellation()
okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)
okhttp3.MediaType: java.lang.String toString()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroupSummary(boolean)
androidx.lifecycle.extensions.R$style: int TextAppearance_Compat_Notification_Title
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(short[])
androidx.appcompat.view.menu.ListMenuPresenter
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.lang.Iterable,java.lang.Object[])
androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
io.reactivex.Single: io.reactivex.Flowable flattenAsFlowable(io.reactivex.functions.Function)
androidx.core.app.SharedElementCallback: void onSharedElementStart(java.util.List,java.util.List,java.util.List)
kotlin.collections.ArraysKt___ArraysKt: void sortByDescending(java.lang.Object[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int SearchView_android_imeOptions
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_WITH_TEXT
androidx.appcompat.widget.TintTypedArray: boolean getBoolean(int,boolean)
androidx.appcompat.view.menu.MenuItemWrapperICS
androidx.legacy.v4.R$drawable: int notification_action_background
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(double[],kotlin.jvm.functions.Function1)
android.support.v4.media.session.MediaControllerCompat: java.lang.CharSequence getQueueTitle()
androidx.appcompat.widget.FitWindowsFrameLayout: boolean fitSystemWindows(android.graphics.Rect)
androidx.core.provider.FontsContractCompat$FontInfo: int getWeight()
io.reactivex.Single: io.reactivex.Single ambWith(io.reactivex.SingleSource)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setWrapWidth(int)
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createErrorVariable(int,java.lang.String)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVerticalChainStyle()
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trimEnd(java.lang.CharSequence,char[])
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.WidgetContainer getRootWidgetContainer()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isSmoothScrolling()
androidx.databinding.ViewDataBinding: void addOnRebindCallback(androidx.databinding.OnRebindCallback)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: boolean contains(java.lang.Object)
androidx.databinding.library.BuildConfig: java.lang.String FLAVOR
androidx.constraintlayout.solver.widgets.Guideline: int getRelativeBegin()
okhttp3.internal.connection.StreamAllocation: okhttp3.Address address
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: AccessibilityNodeProviderCompat(java.lang.Object)
androidx.appcompat.widget.AppCompatDrawableManager: AppCompatDrawableManager()
androidx.fragment.app.FragmentTransitionImpl: void removeTarget(java.lang.Object,android.view.View)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String decodeToString(byte[],int,int,boolean)
com.example.revolut.rates.R$dimen: int currency_image_width_height
androidx.appcompat.view.menu.SubMenuBuilder: java.lang.String getActionViewStatesKey()
io.reactivex.internal.observers.BasicFuseableObserver: boolean offer(java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: java.lang.Object onPrepare(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PLAY_FROM_MEDIA_ID
io.reactivex.Observable: io.reactivex.Observable throttleFirst(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: boolean isEmpty()
io.reactivex.Single: io.reactivex.Single fromPublisher(org.reactivestreams.Publisher)
androidx.fragment.app.FragmentTransaction: int TRANSIT_UNSET
io.reactivex.MaybeObserver: void onError(java.lang.Throwable)
androidx.recyclerview.R$styleable: int[] GradientColorItem
androidx.annotation.IntDef
io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybe(io.reactivex.functions.Function,int)
io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)
io.reactivex.internal.operators.observable.ObservableRangeLong: void subscribeActual(io.reactivex.Observer)
dagger.android.support.R$id: int action_context_bar
androidx.core.provider.FontsContractCompat$Columns: java.lang.String WEIGHT
androidx.print.PrintHelper: void printBitmap(java.lang.String,android.graphics.Bitmap)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: RecyclerView$ItemAnimator$ItemHolderInfo()
androidx.core.graphics.PointKt: android.graphics.Point toPoint(android.graphics.PointF)
kotlin.collections.CollectionsKt___CollectionsKt: float[] toFloatArray(java.util.Collection)
io.reactivex.internal.functions.ObjectHelper
androidx.appcompat.widget.ListPopupWindow: int getWidth()
androidx.appcompat.widget.Toolbar: boolean onHoverEvent(android.view.MotionEvent)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void stopNestedScroll()
io.reactivex.internal.operators.completable.CompletableFromAction
dagger.internal.DelegateFactory: void setDelegatedProvider(javax.inject.Provider)
com.example.revolut.rates.DataBinderMapperImpl: int getLayoutId(java.lang.String)
okhttp3.internal.http2.Http2Connection$Listener: okhttp3.internal.http2.Http2Connection$Listener REFUSE_INCOMING_STREAMS
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer maxWith(int[],java.util.Comparator)
io.reactivex.internal.disposables.ResettableConnectable
androidx.fragment.R$styleable: int GradientColor_android_gradientRadius
kotlin.collections.ArraysKt___ArraysKt: short reduceRightIndexed(short[],kotlin.jvm.functions.Function3)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller)
android.support.v4.media.MediaBrowserCompat$MediaItem: java.lang.String getMediaId()
io.reactivex.subscribers.DisposableSubscriber: void request(long)
dagger.android.support.R$styleable: int AlertDialog_listLayout
com.example.revolut.rates.R$id: int checkbox
androidx.core.util.DebugUtils
io.reactivex.Flowable: io.reactivex.Flowable groupJoin(org.reactivestreams.Publisher,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(boolean[],kotlin.jvm.functions.Function1)
androidx.appcompat.R$dimen: int abc_dialog_padding_top_material
androidx.customview.R$dimen: int notification_action_text_size
androidx.appcompat.graphics.drawable.DrawableWrapper: int getIntrinsicHeight()
androidx.appcompat.R$styleable: int MenuItem_android_checked
androidx.appcompat.R$styleable: int[] MenuView
androidx.appcompat.R$style: int Theme_AppCompat_NoActionBar
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associate$1
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable,java.util.Map)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)
androidx.drawerlayout.R$styleable: int GradientColor_android_startX
io.reactivex.Flowable: io.reactivex.Flowable take(long,java.util.concurrent.TimeUnit)
io.reactivex.Observable: io.reactivex.Observable mergeWith(io.reactivex.SingleSource)
androidx.databinding.ViewDataBinding: void setTo(androidx.collection.LongSparseArray,int,java.lang.Object)
androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$1
kotlinx.coroutines.Delay: java.lang.Object delay(long,java.util.concurrent.TimeUnit,kotlin.coroutines.Continuation)
androidx.appcompat.R$id: int home
dagger.android.support.R$styleable: int MenuItem_android_alphabeticShortcut
dagger.android.support.R$attr: int backgroundTint
kotlin.coroutines.experimental.CoroutineContext$DefaultImpls: kotlin.coroutines.experimental.CoroutineContext plus(kotlin.coroutines.experimental.CoroutineContext,kotlin.coroutines.experimental.CoroutineContext)
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean,int)
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableListIterator(java.lang.Object)
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.sync.Empty access$getEmptyLocked$p()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Iterable withIndex-rL5Bavg(short[])
io.reactivex.internal.operators.single.SingleDoAfterTerminate: SingleDoAfterTerminate(io.reactivex.SingleSource,io.reactivex.functions.Action)
io.reactivex.internal.subscriptions.ScalarSubscription: void cancel()
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOfNotNull(java.lang.Object)
dagger.android.support.R$styleable: int SwitchCompat_thumbTintMode
androidx.cursoradapter.widget.CursorAdapter: long getItemId(int)
com.google.gson.JsonElement: short getAsShort()
kotlin.jvm.internal.TypeIntrinsics: java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int,java.lang.String)
androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeWithDefaults(int)
kotlinx.coroutines.channels.SendElement: java.lang.String toString()
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setContentDescription(int)
com.google.gson.internal.bind.TimeTypeAdapter
kotlin.jvm.internal.PropertyReference2: kotlin.reflect.KProperty$Getter getGetter()
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1
androidx.databinding.adapters.AdapterViewBindingAdapter: void setSelection(android.widget.AdapterView,int,android.widget.Adapter)
io.reactivex.observers.DisposableSingleObserver: boolean isDisposed()
dagger.android.support.R$attr: int listPreferredItemPaddingRight
kotlinx.coroutines.ThreadPoolDispatcherKt: kotlin.coroutines.CoroutineContext newSingleThreadContext(java.lang.String,kotlinx.coroutines.Job)
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
kotlin.random.XorWowRandom: XorWowRandom(int,int)
kotlinx.coroutines.sync.MutexKt
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe
com.google.gson.JsonArray: long getAsLong()
androidx.core.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)
androidx.appcompat.R$layout: int abc_popup_menu_item_layout
androidx.customview.widget.ViewDragHelper: boolean continueSettling(boolean)
androidx.core.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)
kotlin.TypeAliasesKt: void IndexOutOfBoundsException$annotations()
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)
io.reactivex.internal.operators.observable.ObservableConcatWithSingle: void subscribeActual(io.reactivex.Observer)
dagger.android.support.R$attr: int navigationContentDescription
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat
androidx.core.util.SparseLongArrayKt$valueIterator$1: long nextLong()
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer withTag(java.lang.CharSequence)
androidx.databinding.adapters.SeekBarBindingAdapter$OnProgressChanged
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany: void subscribeActual(io.reactivex.Observer)
androidx.legacy.coreutils.R$dimen: int notification_large_icon_width
androidx.appcompat.widget.SearchView: void clearFocus()
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom: FlowableWithLatestFrom(io.reactivex.Flowable,io.reactivex.functions.BiFunction,org.reactivestreams.Publisher)
androidx.fragment.app.Fragment: void onDestroyView()
androidx.loader.R$id: int right_side
kotlinx.coroutines.Job
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_fontStyle
androidx.fragment.R$attr: int layout_insetEdge
androidx.fragment.app.FragmentController: boolean dispatchOptionsItemSelected(android.view.MenuItem)
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,boolean,int)
androidx.core.widget.NestedScrollView$SavedState
dagger.android.support.R$styleable: int AppCompatTheme_alertDialogTheme
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3(short[])
androidx.viewpager.widget.PagerTabStrip: void setTabIndicatorColorResource(int)
androidx.legacy.coreui.R$dimen: int notification_small_icon_background_padding
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean,int,int)
io.reactivex.Flowable: io.reactivex.Flowable merge(java.lang.Iterable)
dagger.android.support.R$style: int Platform_V21_AppCompat
kotlin.io.TextStreamsKt: byte[] readBytes(java.net.URL)
androidx.core.util.LongSparseArrayKt: kotlin.collections.LongIterator keyIterator(android.util.LongSparseArray)
dagger.android.support.R$styleable: int AppCompatTheme_colorControlHighlight
androidx.core.net.ConnectivityManagerCompat: int getRestrictBackgroundStatus(android.net.ConnectivityManager)
androidx.databinding.adapters.SearchViewBindingAdapter$OnQueryTextSubmit: boolean onQueryTextSubmit(java.lang.String)
androidx.core.transition.TransitionKt$addListener$listener$1: void onTransitionEnd(android.transition.Transition)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(int)
kotlin.coroutines.experimental.CoroutineContext$Key
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence chunked(kotlin.sequences.Sequence,int,kotlin.jvm.functions.Function1)
androidx.core.os.ParcelableCompatCreatorCallbacks: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
kotlin.text.MatchResult: java.lang.String getValue()
com.example.revolut.rates.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget mFirstVisibleWidget
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
dagger.android.support.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
androidx.core.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean singleOrNull(boolean[])
kotlin.properties.Delegates: kotlin.properties.Delegates INSTANCE
io.reactivex.internal.subscribers.InnerQueuedSubscriber: long serialVersionUID
kotlin.ranges.ClosedRange$DefaultImpls: boolean isEmpty(kotlin.ranges.ClosedRange)
androidx.appcompat.app.ActionBar$Tab: int INVALID_POSITION
android.support.v4.media.session.IMediaSession: android.os.Bundle getExtras()
androidx.recyclerview.R$drawable: int notification_template_icon_low_bg
androidx.constraintlayout.widget.ConstraintLayout: android.view.View getViewById(int)
androidx.constraintlayout.solver.widgets.ResolutionNode: void didResolve()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong firstOrNull-QwZRm1k(long[])
kotlin.UShort: kotlin.UShort box-impl(short)
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[])
com.example.revolut.rates.R$color: int material_deep_teal_200
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence windowed$default(kotlin.sequences.Sequence,int,int,boolean,int,java.lang.Object)
io.reactivex.internal.observers.LambdaObserver
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface findFromCache(android.content.res.Resources,int,int)
dagger.android.support.R$styleable: int AppCompatTheme_colorError
kotlin.UnsignedKt: double uintToDouble(int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalDimension(int,int)
androidx.appcompat.R$drawable: int abc_ratingbar_material
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(char[],java.lang.Iterable)
dagger.android.support.R$styleable: int ViewBackgroundHelper_backgroundTintMode
dagger.android.support.R$style: int Base_V23_Theme_AppCompat_Light
androidx.core.app.NotificationCompat$CarExtender: int getColor()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduceRightIndexed(java.lang.Object[],kotlin.jvm.functions.Function3)
dagger.android.support.R$styleable: int AppCompatTheme_seekBarStyle
org.intellij.lang.annotations.MagicConstant: long[] intValues()
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
androidx.appcompat.widget.AbsActionBarView: boolean canShowOverflowMenu()
io.reactivex.internal.operators.observable.ObservableReplay: io.reactivex.observables.ConnectableObservable createFrom(io.reactivex.ObservableSource)
kotlin.jvm.Synchronized
androidx.core.graphics.RectKt: android.graphics.Rect or(android.graphics.Rect,android.graphics.Rect)
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void skipToPrevious(java.lang.Object)
androidx.appcompat.app.AlertController$AlertParams: int mCheckedItem
androidx.recyclerview.widget.SnapHelper
androidx.appcompat.widget.ActivityChooserView: void setDefaultActionButtonContentDescription(int)
androidx.appcompat.R$attr: int buttonPanelSideLayout
org.intellij.lang.annotations.Language
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PROGRESS
com.example.revolut.rates.R$color: int primaryLightColor
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemRangeChanged(int,int,java.lang.Object)
androidx.appcompat.R$styleable: int GradientColor_android_endColor
androidx.appcompat.widget.DecorToolbar: void initIndeterminateProgress()
kotlin.ranges.ULongRange: ULongRange(long,long,kotlin.jvm.internal.DefaultConstructorMarker)
okio.ByteString: boolean rangeEquals(int,byte[],int,int)
okio.DeflaterSink: java.lang.String toString()
kotlin.jvm.internal.Ref$IntRef: Ref$IntRef()
android.support.v4.media.MediaDescriptionCompat: void writeToParcel(android.os.Parcel,int)
com.example.revolut.rates.R$style: int CurrencyTextStyle
androidx.core.view.MotionEventCompat: int AXIS_RELATIVE_X
com.example.revolut.rates.R$attr: int spinBars
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_SearchResult
kotlin.ULongArray: int getSize()
okio.AsyncTimeout: okio.Source source(okio.Source)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getLayer()
androidx.core.R$drawable: int notification_template_icon_bg
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_UNSPECIFIED
io.reactivex.Observable: io.reactivex.Observable concatMapIterable(io.reactivex.functions.Function)
kotlin.collections.AbstractList: java.util.Iterator iterator()
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: long serialVersionUID
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTooltipText()
com.example.revolut.rates.R$attr: int buttonStyle
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filterIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE
com.jakewharton.rxbinding3.widget.RxAdapterView: io.reactivex.Observable itemLongClicks$default(android.widget.AdapterView,kotlin.jvm.functions.Function0,int,java.lang.Object)
androidx.appcompat.R$style: int Base_Widget_AppCompat_ProgressBar
io.reactivex.internal.operators.single.SingleFlatMap: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.view.ViewGroupKt: boolean isNotEmpty(android.view.ViewGroup)
androidx.databinding.adapters.ViewGroupBindingAdapter$OnChildViewAdded: void onChildViewAdded(android.view.View,android.view.View)
androidx.viewpager.R$styleable: int[] GradientColorItem
kotlin.collections.EmptyMap: java.lang.Object readResolve()
androidx.core.graphics.drawable.DrawableCompat: int getAlpha(android.graphics.drawable.Drawable)
okhttp3.HttpUrl: java.lang.String encodedQuery()
io.reactivex.internal.operators.completable.CompletableNever: void subscribeActual(io.reactivex.CompletableObserver)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setVisibility(int)
android.support.v4.media.session.MediaControllerCompat$TransportControls: void playFromSearch(java.lang.String,android.os.Bundle)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(int[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action build()
kotlin.reflect.KTypeParameter: boolean isReified()
okio.BufferedSink
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(char[],int,int)
androidx.core.graphics.RectKt: android.graphics.Rect plus(android.graphics.Rect,int)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object first(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.coordinatorlayout.R$attr: int fontProviderFetchStrategy
com.example.revolut.rates.R$id: int ALT
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: boolean equals(java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int matchConstraintMinHeight
dagger.android.support.R$color: int highlighted_text_material_dark
dagger.android.support.R$attr: int buttonStyleSmall
io.reactivex.internal.operators.maybe.MaybeFromFuture: void subscribeActual(io.reactivex.MaybeObserver)
kotlin.text.StringsKt__StringsKt: java.lang.String trim(java.lang.String,kotlin.jvm.functions.Function1)
okio.InflaterSource: long read(okio.Buffer,long)
androidx.core.view.NestedScrollingParent2: void onStopNestedScroll(android.view.View,int)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHintText(java.lang.CharSequence)
io.reactivex.Single: io.reactivex.Single onErrorReturnItem(java.lang.Object)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mFrom
androidx.appcompat.app.AppCompatDelegate: boolean requestWindowFeature(int)
dagger.android.support.R$string: int abc_action_mode_done
okio.ByteString: int indexOf(byte[],int)
androidx.appcompat.R$attr: int titleMarginEnd
kotlinx.coroutines.scheduling.Task: Task(java.lang.Runnable,long,kotlinx.coroutines.scheduling.TaskContext)
androidx.recyclerview.widget.ItemTouchHelper: int ANIMATION_TYPE_SWIPE_SUCCESS
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeMinTextSize
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context)
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean)
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable: void subscribeActual(io.reactivex.CompletableObserver)
com.example.revolut.rates.R$id: int tag_unhandled_key_event_manager
androidx.recyclerview.widget.LinearSmoothScroller: void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
androidx.core.util.LongSparseArrayKt: boolean remove(android.util.LongSparseArray,long,java.lang.Object)
com.example.revolut.rates.R$attr: int actionModeSplitBackground
androidx.appcompat.widget.AppCompatEditText: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
kotlin.sequences.SequencesKt___SequencesKt$minus$2: java.util.Iterator iterator()
kotlin.jvm.internal.MutablePropertyReference2: MutablePropertyReference2()
androidx.constraintlayout.widget.R$attr: int layout_constraintCircleAngle
io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)
kotlinx.coroutines.Job$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.Job,java.lang.Object,kotlin.jvm.functions.Function2)
okhttp3.Response: okhttp3.Headers headers()
okhttp3.internal.cache.InternalCache: okhttp3.internal.cache.CacheRequest put(okhttp3.Response)
kotlin.internal.UProgressionUtilKt: int getProgressionLastElement-Nkh28Cs(int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(float[],kotlin.jvm.functions.Function1)
io.reactivex.Maybe: io.reactivex.Maybe onErrorResumeNext(io.reactivex.functions.Function)
kotlin.sequences.SubSequence$iterator$1
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.String)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY
androidx.slidingpanelayout.R$id: int normal
io.reactivex.internal.subscriptions.DeferredScalarSubscription: int requestFusion(int)
com.example.revolut.rates.R$drawable: int abc_spinner_textfield_background_material
androidx.media.R$styleable: int GradientColor_android_endColor
androidx.loader.content.Loader: void abandon()
androidx.drawerlayout.widget.DrawerLayout: void onDetachedFromWindow()
kotlin.math.MathKt__MathJVMKt: MathKt__MathJVMKt()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$groupByTo$1
com.example.revolut.rates.R$styleable: int AppCompatTextHelper_android_drawableRight
androidx.annotation.RequiresFeature: java.lang.String enforcement()
io.reactivex.internal.operators.observable.ObservableConcatMap: void subscribeActual(io.reactivex.Observer)
androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
kotlin.coroutines.ContinuationKt: void coroutineContext$annotations()
androidx.swiperefreshlayout.R$string
okhttp3.Cookie: java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers)
androidx.appcompat.R$attr: int barLength
androidx.appcompat.R$attr: int titleMargins
com.google.gson.internal.LinkedTreeMap: int size()
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler createNewThreadScheduler(java.util.concurrent.ThreadFactory)
com.google.gson.FieldAttributes: java.lang.Class getDeclaringClass()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void onBoundsChange(android.graphics.Rect)
kotlinx.coroutines.channels.TickerChannelsKt$WhenMappings
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$groupByTo$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,kotlin.coroutines.Continuation)
com.example.revolut.rates.R$dimen: int abc_control_padding_material
androidx.appcompat.widget.SwitchCompat: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
io.reactivex.Observable: io.reactivex.Observable concatEager(io.reactivex.ObservableSource)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List reversed--ajY-9A(int[])
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object[])
kotlinx.coroutines.test.TestCoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintWidth_max
io.reactivex.internal.operators.flowable.FlowableBlockingSubscribe
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe$ConcatWithObserver: long serialVersionUID
io.reactivex.internal.operators.completable.CompletableDisposeOn
androidx.appcompat.widget.ListPopupWindow: void setModal(boolean)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapIndexedTo$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
kotlinx.coroutines.TimeSource: void unregisterTimeLoopThread()
com.google.gson.JsonElement: java.math.BigInteger getAsBigInteger()
io.reactivex.observers.ResourceObserver: void onSubscribe(io.reactivex.disposables.Disposable)
kotlin.collections.Grouping: java.lang.Object keyOf(java.lang.Object)
io.reactivex.Emitter: void onNext(java.lang.Object)
androidx.core.view.ViewPropertyAnimatorCompat: android.view.animation.Interpolator getInterpolator()
kotlin.sequences.IndexingSequence$iterator$1
io.reactivex.plugins.RxJavaPlugins: void setOnCompletableSubscribe(io.reactivex.functions.BiFunction)
kotlin.text.StringsKt__StringsJVMKt: boolean isBlank(java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
kotlin.TypeAliasesKt: void ClassCastException$annotations()
androidx.appcompat.R$dimen: int abc_action_bar_default_padding_start_material
kotlin.jvm.internal.PropertyReference1Impl: java.lang.String getName()
dagger.android.support.R$integer
okio.ByteString: java.nio.ByteBuffer asByteBuffer()
okhttp3.internal.http.RequestLine
kotlin.sequences.USequencesKt___USequencesKt: int sumOfUInt(kotlin.sequences.Sequence)
kotlin.UByteKt
com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()
androidx.media.R$style: int TextAppearance_Compat_Notification_Title
io.reactivex.internal.operators.single.SingleDelayWithPublisher: SingleDelayWithPublisher(io.reactivex.SingleSource,org.reactivestreams.Publisher)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter LOCALE
io.reactivex.internal.operators.single.SingleCache: void onError(java.lang.Throwable)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$last$3
androidx.core.ktx.R$styleable: int GradientColor_android_gradientRadius
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow createRowWithAngle(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
kotlin.collections.ArraysKt___ArraysKt: double averageOfLong(java.lang.Long[])
kotlin.collections.UCollectionsKt___UCollectionsKt: long sumOfULong(java.lang.Iterable)
com.jakewharton.rxbinding3.core.R$styleable: int FontFamily_fontProviderQuery
androidx.core.view.NestedScrollingParent: void onStopNestedScroll(android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getHintText()
androidx.media.MediaBrowserServiceCompat$BrowserRoot: java.lang.String EXTRA_RECENT
dagger.android.support.R$id: int middle
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_NEVER
kotlinx.coroutines.channels.TickerChannelsKt$WhenMappings: int[] $EnumSwitchMapping$0
retrofit2.Response: retrofit2.Response success(java.lang.Object,okhttp3.Headers)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain(androidx.core.view.accessibility.AccessibilityWindowInfoCompat)
okhttp3.FormBody: long contentLength()
com.example.revolut.rates.R$style: int Base_Theme_AppCompat_CompactMenu
androidx.legacy.v4.R$id: int right
com.jakewharton.rxbinding3.widget.AdapterViewItemSelectionEvent: com.jakewharton.rxbinding3.widget.AdapterViewItemSelectionEvent copy$default(com.jakewharton.rxbinding3.widget.AdapterViewItemSelectionEvent,android.widget.AdapterView,android.view.View,int,long,int,java.lang.Object)
com.example.revolut.rates.R$layout: int abc_alert_dialog_material
androidx.customview.R$id: int tag_transition_group
com.example.revolut.rates.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder expiresAt(long)
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_MIN
androidx.core.ktx.R$id: int action_image
okio.GzipSink: GzipSink(okio.Sink)
androidx.core.graphics.RectKt: android.graphics.Rect minus(android.graphics.Rect,int)
com.example.revolut.rates.R$style: int Base_ThemeOverlay_AppCompat_Light
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
io.reactivex.internal.operators.completable.CompletableLift: void subscribeActual(io.reactivex.CompletableObserver)
androidx.loader.content.CursorLoader: void onCanceled(java.lang.Object)
kotlin.coroutines.experimental.EmptyCoroutineContext: kotlin.coroutines.experimental.EmptyCoroutineContext INSTANCE
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float,long)
dagger.android.support.R$styleable: int AlertDialog_buttonPanelSideLayout
com.example.revolut.rates.R$drawable: int abc_ic_clear_material
androidx.core.provider.FontRequest
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$groupByTo$3: ChannelsKt__Channels_commonKt$groupByTo$3(kotlin.coroutines.Continuation)
androidx.databinding.adapters.ListenerUtil
androidx.core.graphics.PathUtils
com.example.revolut.rates.R$style: int Widget_AppCompat_CompoundButton_CheckBox
androidx.legacy.coreui.R$attr: int fontWeight
dagger.android.support.R$styleable: int MenuItem_actionLayout
android.support.v4.media.MediaDescriptionCompat
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: boolean contains(short)
androidx.core.view.ViewGroupCompat: void setTransitionGroup(android.view.ViewGroup,boolean)
androidx.appcompat.app.WindowDecorActionBar$TabImpl
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_LOCKED_OPEN
com.example.revolut.rates.R$attr: int barrierAllowsGoneWidgets
io.reactivex.internal.operators.observable.ObservableElementAt: ObservableElementAt(io.reactivex.ObservableSource,long,java.lang.Object,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(char[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(char[],kotlin.jvm.functions.Function1)
io.reactivex.observers.ResourceObserver: ResourceObserver()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShortcut(char,char,int,int)
androidx.recyclerview.R$attr: int layout_anchorGravity
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode takeAffectedNode(kotlinx.coroutines.internal.OpDescriptor)
io.reactivex.Emitter
kotlin.UByteArray: boolean contains(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: void onComplete()
androidx.fragment.app.FragmentTransaction: int commit()
android.support.v4.media.session.IMediaSession: java.lang.CharSequence getQueueTitle()
android.support.v4.media.session.MediaSessionCompat$Token: void setSessionToken2Bundle(android.os.Bundle)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(double[],int,int,int,java.lang.Object)
okio.ByteString: okio.ByteString substring(int,int)
androidx.legacy.coreutils.R$id: int actions
io.reactivex.Observable: java.lang.Object to(io.reactivex.functions.Function)
androidx.fragment.app.Fragment: boolean isAdded()
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
kotlinx.coroutines.CancelledContinuation
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment()
androidx.core.view.ViewCompat: int OVER_SCROLL_IF_CONTENT_SCROLLS
androidx.core.app.FrameMetricsAggregator: int LAYOUT_MEASURE_DURATION
androidx.appcompat.R$style: int Base_Theme_AppCompat_Dialog_Alert
androidx.appcompat.widget.ActionBarContainer
com.example.revolut.rates.R$style: int Widget_AppCompat_Button
kotlinx.coroutines.EventLoopBase$DelayedTask: void rescheduleOnShutdown()
io.reactivex.Flowable: io.reactivex.Flowable merge(java.lang.Iterable,int)
com.google.gson.internal.Streams: java.io.Writer writerForAppendable(java.lang.Appendable)
dagger.android.support.R$id: int action_bar_spinner
android.support.v4.media.session.MediaControllerCompatApi24$TransportControls
androidx.media.MediaBrowserServiceCompat$BrowserRoot: java.lang.String getRootId()
androidx.core.text.PrecomputedTextCompat: int getSpanEnd(java.lang.Object)
androidx.appcompat.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
io.reactivex.processors.MulticastProcessor: java.lang.Throwable getThrowable()
kotlin.collections.ArraysKt___ArraysJvmKt: short[] copyOfRange(short[],int,int)
androidx.drawerlayout.widget.DrawerLayout: boolean onTouchEvent(android.view.MotionEvent)
kotlin.sequences.DropTakeSequence: kotlin.sequences.Sequence take(int)
androidx.core.text.HtmlKt: android.text.Spanned parseAsHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)
dagger.android.support.R$attr: int contentInsetEndWithActions
dagger.Module: java.lang.Class[] subcomponents()
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void sortWith(java.util.List,java.util.Comparator)
dagger.internal.MapBuilder
com.google.gson.JsonObject: com.google.gson.JsonArray getAsJsonArray(java.lang.String)
kotlin.random.Random$Companion: int nextBits(int)
androidx.appcompat.R$dimen: int notification_top_pad_large_text
androidx.loader.content.CursorLoader: void onStartLoading()
kotlin.jvm.internal.TypeReference$WhenMappings: int[] $EnumSwitchMapping$0
io.reactivex.Single: io.reactivex.Single using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(boolean[],java.lang.Object[])
androidx.core.widget.NestedScrollView: void onAttachedToWindow()
androidx.recyclerview.widget.SimpleItemAnimator: void onChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
androidx.asynclayoutinflater.R$drawable: int notification_icon_background
io.reactivex.internal.operators.flowable.FlowableAny
io.reactivex.subscribers.TestSubscriber: io.reactivex.subscribers.TestSubscriber assertNotSubscribed()
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
dagger.android.support.R$style: int TextAppearance_AppCompat_Subhead_Inverse
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.util.Collection filterIsInstanceTo(java.lang.Iterable,java.util.Collection,java.lang.Class)
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_DEFAULT
dagger.android.support.R$color: int bright_foreground_inverse_material_light
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()
dagger.android.DispatchingAndroidInjector_Factory: dagger.android.DispatchingAndroidInjector newDispatchingAndroidInjector(java.util.Map,java.util.Map)
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_SKIP_LIMIT_REACHED
android.support.v4.media.MediaBrowserCompat$ItemCallback
androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeView(android.view.View)
androidx.collection.ArrayMap: ArrayMap(androidx.collection.SimpleArrayMap)
androidx.appcompat.R$style: int Base_AlertDialog_AppCompat
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View)
io.reactivex.internal.subscribers.QueueDrainSubscriber: boolean accept(org.reactivestreams.Subscriber,java.lang.Object)
androidx.legacy.coreutils.R$color: int notification_action_color_filter
androidx.recyclerview.widget.RecyclerView$SmoothScroller: RecyclerView$SmoothScroller()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setColor(int)
androidx.viewpager.R$styleable: int FontFamilyFont_android_ttcIndex
okhttp3.internal.cache.DiskLruCache: long size()
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
androidx.core.transition.TransitionKt$addListener$2: java.lang.Object invoke(java.lang.Object)
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Inverse
io.reactivex.internal.operators.observable.ObservableBuffer: ObservableBuffer(io.reactivex.ObservableSource,int,int,java.util.concurrent.Callable)
androidx.fragment.app.Fragment: java.lang.Object getExitTransition()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
android.support.v4.media.session.MediaSessionCompat$Callback: void onAddQueueItem(android.support.v4.media.MediaDescriptionCompat)
kotlinx.coroutines.TimeSource: void registerTimeLoopThread()
kotlin.text.StringsKt__StringsJVMKt: int compareTo(java.lang.String,java.lang.String,boolean)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set subtract(java.lang.Iterable,java.lang.Iterable)
io.reactivex.internal.subscribers.QueueDrainSubscriber: int leave(int)
com.example.revolut.rates.R$style: int Widget_AppCompat_ActionButton
androidx.appcompat.app.AppCompatActivity: void openOptionsMenu()
kotlin.UInt
androidx.appcompat.R$styleable: int GradientColor_android_centerX
kotlin.jvm.internal.LocalVariableReference: LocalVariableReference()
androidx.customview.R$styleable: int FontFamily_fontProviderPackage
androidx.vectordrawable.R$styleable
com.jakewharton.rxbinding3.core.R$dimen: int notification_subtext_size
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
kotlin.sequences.ConstrainedOnceSequence: ConstrainedOnceSequence(kotlin.sequences.Sequence)
androidx.lifecycle.extensions.R$layout: int notification_template_part_chronometer
io.reactivex.observers.SerializedObserver: SerializedObserver(io.reactivex.Observer)
kotlin.jvm.internal.PropertyReference1Impl: PropertyReference1Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
io.reactivex.internal.operators.maybe.MaybeLift: MaybeLift(io.reactivex.MaybeSource,io.reactivex.MaybeOperator)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterNotTo$3: ChannelsKt__Channels_commonKt$filterNotTo$3(kotlin.coroutines.Continuation)
androidx.legacy.coreui.R$styleable: int CoordinatorLayout_Layout_layout_keyline
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender clone()
androidx.collection.CircularIntArray: int size()
androidx.appcompat.R$id: int action_mode_bar
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(int)
io.reactivex.internal.operators.flowable.FlowableMapPublisher: FlowableMapPublisher(org.reactivestreams.Publisher,io.reactivex.functions.Function)
io.reactivex.internal.operators.maybe.MaybePeek: void subscribeActual(io.reactivex.MaybeObserver)
androidx.fragment.app.BackStackState
androidx.media.MediaSessionManager$RemoteUserInfo
okhttp3.HttpUrl: java.lang.String password()
androidx.appcompat.view.menu.MenuItemImpl: void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
dagger.android.support.R$style: int Base_Widget_AppCompat_Light_PopupMenu
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
androidx.appcompat.app.ActionBar: void setDisplayShowCustomEnabled(boolean)
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KMutableProperty1$Setter getSetter()
androidx.appcompat.widget.LinearLayoutCompat: int SHOW_DIVIDER_END
io.reactivex.internal.operators.single.SingleUnsubscribeOn$UnsubscribeOnSingleObserver: long serialVersionUID
androidx.appcompat.graphics.drawable.DrawableContainer: boolean isAutoMirrored()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onNestedFling(android.view.View,float,float,boolean)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapTo$3: ChannelsKt__Channels_commonKt$mapTo$3(kotlin.coroutines.Continuation)
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getWrappedDrawable()
kotlin.coroutines.experimental.Continuation
androidx.recyclerview.widget.LinearSmoothScroller: android.view.animation.DecelerateInterpolator mDecelerateInterpolator
androidx.appcompat.R$attr: int singleChoiceItemLayout
androidx.appcompat.R$styleable: int AppCompatTheme_dividerVertical
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.AbstractChannel: kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed()
kotlinx.coroutines.Dispatchers
androidx.fragment.app.FragmentHostCallback: FragmentHostCallback(android.content.Context,android.os.Handler,int)
androidx.asynclayoutinflater.R$attr: int font
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onWindowVisibilityChanged(int)
com.example.revolut.rates.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
androidx.core.animation.AnimatorKt$addListener$4: java.lang.Object invoke(java.lang.Object)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function getOnParallelAssembly()
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
kotlinx.coroutines.test.TestCoroutineContext: java.lang.String toString()
io.reactivex.ObservableEmitter: io.reactivex.ObservableEmitter serialize()
io.reactivex.internal.operators.completable.CompletableDetach: void subscribeActual(io.reactivex.CompletableObserver)
com.example.revolut.rates.R$color: int error_color_material_dark
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,java.lang.Object[])
kotlinx.coroutines.channels.SendChannel: boolean isClosedForSend()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable)
kotlin.text.StringsKt___StringsKt: int sumBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.ktx.R$layout: int notification_template_part_time
com.example.revolut.rates.viewmodel.CurrenciesViewModel_MembersInjector: dagger.MembersInjector create(javax.inject.Provider)
kotlinx.coroutines.JobKt: java.lang.Object cancelAndJoin(kotlinx.coroutines.Job,kotlin.coroutines.Continuation)
kotlin.jvm.functions.Function13
android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat getMediaController(android.app.Activity)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: float getStrokeWidth()
io.reactivex.internal.operators.completable.CompletableTimer$TimerDisposable: long serialVersionUID
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void start()
kotlinx.coroutines.DisposableHandle: void dispose()
io.reactivex.internal.operators.flowable.FlowableTimeout: FlowableTimeout(io.reactivex.Flowable,org.reactivestreams.Publisher,io.reactivex.functions.Function,org.reactivestreams.Publisher)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getWrapHeight()
androidx.slidingpanelayout.R$drawable: int notification_bg_normal
kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.util.Random initialValue()
androidx.databinding.adapters.ViewBindingAdapter: void setPadding(android.view.View,float)
com.example.revolut.rates.R$styleable: int[] ViewBackgroundHelper
androidx.media.R$id: int icon_group
androidx.slidingpanelayout.R$id: int forever
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_android_fontWeight
kotlin.collections.MapsKt__MapsKt: java.util.Map plus(java.util.Map,java.lang.Iterable)
io.reactivex.CompletableOnSubscribe: void subscribe(io.reactivex.CompletableEmitter)
androidx.appcompat.R$id: int search_plate
kotlin.text.Regex$fromInt$$inlined$apply$lambda$1: java.lang.Object invoke(java.lang.Object)
com.example.revolut.rates.R$anim: int abc_slide_in_top
io.reactivex.internal.observers.DeferredScalarObserver
dagger.android.support.R$color: int switch_thumb_material_light
kotlin.sequences.SequencesKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1: java.util.Iterator iterator()
io.reactivex.internal.fuseable.QueueFuseable: int SYNC
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter(java.lang.String,char,java.lang.String)
kotlin.text.StringsKt__StringBuilderKt: void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1)
okio.Buffer$UnsafeCursor: byte[] data
dagger.android.support.R$attr: int actionModePasteDrawable
kotlin.internal.PlatformImplementations: kotlin.text.MatchGroup getMatchResultNamedGroup(java.util.regex.MatchResult,java.lang.String)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: boolean getArrowEnabled()
okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)
io.reactivex.MaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.flowables.ConnectableFlowable onAssembly(io.reactivex.flowables.ConnectableFlowable)
android.support.v4.media.MediaDescriptionCompat: long BT_FOLDER_TYPE_ALBUMS
dagger.android.support.R$layout: int notification_template_big_media_custom
org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis
com.example.revolut.rates.R$styleable: int MenuGroup_android_visible
androidx.databinding.library.R$id: int dataBinding
kotlin.ULongArray: int getSize-impl(long[])
androidx.customview.widget.ViewDragHelper: boolean settleCapturedViewAt(int,int)
dagger.android.support.R$style: int Base_Widget_AppCompat_Spinner
androidx.appcompat.R$id: int action_image
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_TEXT
okhttp3.internal.http.StatusLine: StatusLine(okhttp3.Protocol,int,java.lang.String)
dagger.android.support.R$styleable: int[] MenuItem
androidx.constraintlayout.solver.widgets.Guideline: int getOrientation()
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(int[])
androidx.recyclerview.widget.StaggeredGridLayoutManager: int[] findLastVisibleItemPositions(int[])
androidx.databinding.ObservableByte: int describeContents()
androidx.constraintlayout.solver.widgets.Guideline: float getRelativePercent()
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void setOpposite(androidx.constraintlayout.solver.widgets.ResolutionAnchor,float)
androidx.appcompat.R$drawable: int abc_ic_star_half_black_48dp
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(byte[],java.lang.Object[])
androidx.core.util.SparseArrayKt: java.util.Iterator valueIterator(android.util.SparseArray)
kotlin.collections.ArraysKt___ArraysKt: int first(int[],kotlin.jvm.functions.Function1)
androidx.databinding.adapters.TextViewBindingAdapter$OnTextChanged: void onTextChanged(java.lang.CharSequence,int,int,int)
androidx.core.R$id: int line3
okhttp3.internal.http.RealInterceptorChain: int connectTimeoutMillis()
io.reactivex.internal.fuseable.QueueFuseable: int BOUNDARY
dagger.android.support.R$layout: int notification_template_lines_media
io.reactivex.Observable: io.reactivex.Observable take(long,java.util.concurrent.TimeUnit)
okhttp3.WebSocketListener: void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(io.reactivex.Scheduler)
androidx.loader.content.Loader: Loader(android.content.Context)
androidx.appcompat.app.AlertController$AlertParams: android.view.View mCustomTitleView
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$maxBy$1
io.reactivex.internal.schedulers.ComputationScheduler: io.reactivex.Scheduler$Worker createWorker()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
androidx.vectordrawable.graphics.drawable.Animatable2Compat: boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
androidx.core.util.Preconditions: int checkArgumentNonnegative(int,java.lang.String)
io.reactivex.exceptions.ProtocolViolationException: long serialVersionUID
io.reactivex.internal.fuseable.FuseToObservable
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_Button
okhttp3.HttpUrl$Builder
androidx.core.widget.NestedScrollView: void requestChildFocus(android.view.View,android.view.View)
androidx.databinding.adapters.ExpandableListViewBindingAdapter
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
androidx.fragment.app.FragmentTransitionImpl: boolean canHandle(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableFromUnsafeSource
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] getRemoteInputs()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter name(java.lang.String)
io.reactivex.subjects.AsyncSubject: java.lang.Throwable getThrowable()
kotlinx.coroutines.Deferred: boolean isCompletedExceptionally()
okhttp3.internal.cache.DiskLruCache$Editor: void abort()
com.example.revolut.rates.R$styleable: int AppCompatTheme_windowFixedWidthMajor
okio.ByteString: okio.ByteString EMPTY
io.reactivex.MaybeOnSubscribe
kotlinx.coroutines.channels.TickerMode
okhttp3.MediaType: okhttp3.MediaType get(java.lang.String)
okhttp3.Protocol: okhttp3.Protocol HTTP_1_0
io.reactivex.internal.util.BackpressureHelper: long addCancel(java.util.concurrent.atomic.AtomicLong,long)
androidx.appcompat.app.ActionBar: void show()
io.reactivex.internal.operators.flowable.FlowableRange
kotlin._Assertions
androidx.constraintlayout.widget.R$attr: int layout_constraintRight_toLeftOf
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] plus(byte[],java.util.Collection)
kotlinx.coroutines.JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.swiperefreshlayout.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7(double[])
androidx.core.R$dimen: int notification_right_side_padding_top
androidx.loader.content.CursorLoader: void onCanceled(android.database.Cursor)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver: long serialVersionUID
io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.subjects.BehaviorSubject: void onComplete()
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: java.lang.String toString()
androidx.loader.content.CursorLoader: CursorLoader(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
io.reactivex.internal.operators.flowable.FlowableReplay$Node: long serialVersionUID
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getRootY()
com.example.revolut.rates.R$styleable: int TextAppearance_android_shadowRadius
io.reactivex.Observable: io.reactivex.Observable window(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(double[])
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_endX
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket)
okhttp3.Response: okhttp3.Request request()
androidx.core.widget.NestedScrollView: boolean startNestedScroll(int)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)
androidx.core.animation.AnimatorKt$addListener$1: AnimatorKt$addListener$1()
io.reactivex.subjects.CompletableSubject
kotlinx.coroutines.channels.AbstractChannel: kotlinx.coroutines.channels.AbstractChannel$TryPollDesc describeTryPoll()
androidx.customview.R$styleable: int FontFamilyFont_fontStyle
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegments(java.lang.String)
io.reactivex.internal.schedulers.ComputationScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
io.reactivex.Maybe: io.reactivex.Maybe onErrorResumeNext(io.reactivex.MaybeSource)
kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.NonDisposableHandle INSTANCE
androidx.databinding.adapters.Converters: android.graphics.drawable.ColorDrawable convertColorToDrawable(int)
androidx.appcompat.R$styleable: int MenuItem_android_numericShortcut
okio.ByteString: byte getByte(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getAlpha()
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: boolean isEmpty()
androidx.legacy.coreui.R$id: int italic
com.jakewharton.rxbinding3.view.ViewAttachDetachedEvent: com.jakewharton.rxbinding3.view.ViewAttachDetachedEvent copy(android.view.View)
android.support.v4.media.session.IMediaSession: void pause()
okio.Buffer: okio.BufferedSink writeShort(int)
com.google.gson.JsonPrimitive: java.math.BigInteger getAsBigInteger()
com.example.revolut.rates.R$color: int background_material_dark
io.reactivex.internal.observers.DeferredScalarDisposable: void clear()
io.reactivex.internal.operators.single.SingleCache$CacheDisposable: long serialVersionUID
kotlin.reflect.KMutableProperty1: void set(java.lang.Object,java.lang.Object)
androidx.core.util.SparseIntArrayKt: kotlin.collections.IntIterator keyIterator(android.util.SparseIntArray)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_Y
io.reactivex.internal.queue.SpscArrayQueue: void clear()
android.support.v4.app.INotificationSideChannel$Stub: android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder)
com.google.gson.stream.MalformedJsonException
androidx.appcompat.R$attr: int popupTheme
kotlinx.coroutines.channels.BroadcastChannel$DefaultImpls: boolean cancel$default(kotlinx.coroutines.channels.BroadcastChannel,java.lang.Throwable,int,java.lang.Object)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintEnd_toStartOf
androidx.recyclerview.widget.DiffUtil$DiffResult: void dispatchUpdatesTo(androidx.recyclerview.widget.ListUpdateCallback)
kotlinx.coroutines.ThreadContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.EmptySet: boolean containsAll(java.util.Collection)
com.example.revolut.rates.R$attr: int fastScrollVerticalThumbDrawable
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$first$3: ChannelsKt__Channels_commonKt$first$3(kotlin.coroutines.Continuation)
io.reactivex.internal.operators.maybe.MaybeCache$CacheDisposable: long serialVersionUID
io.reactivex.observers.BaseTestConsumer: boolean isTimeout()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalDimension(int,int)
androidx.appcompat.view.menu.MenuBuilder: int findGroupIndex(int)
io.reactivex.parallel.ParallelFlowable: java.lang.Object as(io.reactivex.parallel.ParallelFlowableConverter)
androidx.appcompat.widget.DecorToolbar: boolean hasLogo()
androidx.core.app.NotificationCompat$WearableExtender: int getCustomSizePreset()
kotlin.collections.CollectionsKt___CollectionsKt: boolean any(java.lang.Iterable,kotlin.jvm.functions.Function1)
com.example.revolut.rates.view.adapter.CurrenciesAdapter: androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)
androidx.core.graphics.RegionKt$iterator$1: boolean hasNext()
com.example.revolut.rates.R$attr: int buttonTint
io.reactivex.internal.operators.observable.ObservableFromArray: ObservableFromArray(java.lang.Object[])
androidx.versionedparcelable.VersionedParcel: void writeBundle(android.os.Bundle,int)
io.reactivex.observables.ConnectableObservable: io.reactivex.Observable autoConnect(int,io.reactivex.functions.Consumer)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setDateFormat(int)
androidx.recyclerview.widget.RecyclerView$Adapter: RecyclerView$Adapter()
androidx.media.app.NotificationCompat$MediaStyle: androidx.media.app.NotificationCompat$MediaStyle setCancelButtonIntent(android.app.PendingIntent)
io.reactivex.internal.operators.single.SingleUsing$UsingSingleObserver: long serialVersionUID
androidx.databinding.ViewDataBinding: char safeUnbox(java.lang.Character)
kotlin.reflect.KVisibility
kotlin.sequences.SequencesKt___SequencesKt: SequencesKt___SequencesKt()
androidx.databinding.ViewDataBinding: void ensureBindingComponentIsNotNull(java.lang.Class)
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_OVERRIDE
okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)
androidx.fragment.app.Fragment: java.lang.Object getReenterTransition()
androidx.legacy.coreutils.R$style: int Widget_Compat_NotificationActionText
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
androidx.core.view.PointerIconCompat: int TYPE_ALIAS
androidx.asynclayoutinflater.R$drawable: int notify_panel_notification_icon_bg
com.example.revolut.rates.R$styleable: int ActionMode_backgroundSplit
dagger.android.support.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
androidx.slidingpanelayout.R$styleable: int FontFamily_fontProviderQuery
io.reactivex.internal.operators.observable.ObservableAny: ObservableAny(io.reactivex.ObservableSource,io.reactivex.functions.Predicate)
androidx.core.graphics.PathSegment: android.graphics.PointF getEnd()
io.reactivex.internal.operators.parallel.ParallelMap: int parallelism()
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarIndeterminateVisibility(boolean)
io.reactivex.schedulers.TestScheduler: void advanceTimeTo(long,java.util.concurrent.TimeUnit)
com.example.revolut.rates.R$color: int abc_tint_seek_thumb
androidx.core.util.AtomicFile: java.io.FileInputStream openRead()
androidx.core.provider.FontsContractCompat$FontInfo: int getResultCode()
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)
io.reactivex.internal.observers.QueueDrainObserver: int leave(int)
androidx.lifecycle.viewmodel.ktx.R
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.internal.LockFreeLinkedListHead getQueue()
okio.GzipSink: void close()
kotlin.reflect.KCallable: java.lang.Object callBy(java.util.Map)
androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)
io.reactivex.Flowable: io.reactivex.Flowable takeLast(int)
kotlin.jvm.internal.PropertyReference: PropertyReference(java.lang.Object)
kotlin.ranges.URangesKt___URangesKt: boolean contains-ZsK3CEQ(kotlin.ranges.UIntRange,short)
androidx.drawerlayout.R$styleable: int ColorStateListItem_android_color
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope LIBRARY
android.support.v4.os.IResultReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.core.view.MenuCompat: void setGroupDividerEnabled(android.view.Menu,boolean)
androidx.loader.content.CursorLoader: void onReset()
io.reactivex.Observable: io.reactivex.Single reduceWith(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)
androidx.core.content.ContentValuesKt
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.R$attr: int listPreferredItemHeightLarge
io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,org.reactivestreams.Publisher)
io.reactivex.Observable: io.reactivex.Single elementAt(long,java.lang.Object)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float)
androidx.appcompat.R$styleable: int AppCompatTheme_alertDialogCenterButtons
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintHeight_default
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()
kotlinx.coroutines.channels.ArrayBroadcastChannel
androidx.core.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
androidx.core.graphics.ColorKt: float getGreen(long)
com.google.gson.TypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
okhttp3.WebSocket: boolean close(int,java.lang.String)
androidx.core.graphics.TypefaceCompatApi28Impl: java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class)
androidx.core.view.ActionProvider: boolean isVisible()
kotlin.Pair: Pair(java.lang.Object,java.lang.Object)
androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
io.reactivex.internal.operators.flowable.FlowableSingleMaybe: FlowableSingleMaybe(io.reactivex.Flowable)
io.reactivex.internal.subscribers.BlockingSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableUsing: void subscribeActual(io.reactivex.CompletableObserver)
androidx.viewpager.widget.PagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)
io.reactivex.Completable: io.reactivex.Completable mergeArray(io.reactivex.CompletableSource[])
kotlin.collections.EmptyList: long serialVersionUID
kotlin.KotlinVersion: KotlinVersion(int,int)
androidx.fragment.app.FragmentActivity: void onDestroy()
androidx.loader.content.Loader
androidx.appcompat.R$drawable: int abc_action_bar_item_background_material
androidx.appcompat.R$attr: int queryHint
androidx.core.util.SparseArrayKt: void putAll(android.util.SparseArray,android.util.SparseArray)
okio.Buffer: okio.ByteString hmacSha512(okio.ByteString)
kotlin.random.Random$Default: double nextDouble(double,double)
androidx.appcompat.app.AppCompatDialogFragment: void setupDialog(android.app.Dialog,int)
kotlin.collections.IndexedValue
io.reactivex.internal.operators.observable.ObservableWindowBoundary
okhttp3.internal.tls.BasicTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
androidx.appcompat.view.menu.MenuItemImpl: boolean invoke()
androidx.core.widget.ScrollerCompat: void notifyHorizontalEdgeReached(int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(double[],kotlin.jvm.functions.Function1)
androidx.drawerlayout.widget.DrawerLayout: void setChildInsets(java.lang.Object,boolean)
androidx.core.graphics.RegionKt$iterator$1: android.graphics.Rect next()
kotlin.text.StringsKt___StringsKt: char single(java.lang.CharSequence)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: int describeContents()
io.reactivex.internal.operators.mixed.SingleFlatMapObservable: SingleFlatMapObservable(io.reactivex.SingleSource,io.reactivex.functions.Function)
androidx.viewpager.widget.ViewPager: int getPageMargin()
androidx.core.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
androidx.constraintlayout.widget.ConstraintSet: void setDimensionRatio(int,java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void jumpTo(int)
dagger.android.support.R$styleable: int AppCompatTheme_windowFixedWidthMinor
io.reactivex.internal.fuseable.SimplePlainQueue: java.lang.Object poll()
kotlin.collections.AbstractIterator$WhenMappings: int[] $EnumSwitchMapping$0
com.example.revolut.rates.R$attr: int ttcIndex
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.drawerlayout.R$integer
kotlin.text.Regex$Serialized$Companion
kotlin.DeprecationLevel: kotlin.DeprecationLevel HIDDEN
io.reactivex.internal.operators.observable.ObservableZipIterable
kotlinx.coroutines.CancellableContinuation: void initCancellability()
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback: void onAnimationStart(android.graphics.drawable.Drawable)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addInvisibleAction(androidx.core.app.NotificationCompat$Action)
com.google.gson.stream.JsonReader: void setLenient(boolean)
androidx.fragment.app.FragmentHostCallback: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable: io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable valueOf(java.lang.String)
androidx.recyclerview.widget.SortedList$BatchedCallback: java.lang.Object getChangePayload(java.lang.Object,java.lang.Object)
androidx.core.view.DragAndDropPermissionsCompat: void release()
com.example.revolut.rates.R$styleable: int AppCompatTheme_searchViewStyle
io.reactivex.internal.operators.maybe.MaybeDoFinally
okhttp3.EventListener$Factory: okhttp3.EventListener create(okhttp3.Call)
retrofit2.KotlinExtensions: java.lang.Object yieldAndThrow(java.lang.Exception,kotlin.coroutines.Continuation)
io.reactivex.Maybe: io.reactivex.Maybe doOnComplete(io.reactivex.functions.Action)
com.google.gson.internal.JavaVersion
androidx.lifecycle.extensions.R$styleable: int GradientColor_android_endY
io.reactivex.internal.operators.observable.ObservableFlatMapSingle: void subscribeActual(io.reactivex.Observer)
kotlin.jvm.internal.CharSpreadBuilder: void add(char)
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_MUTE
androidx.core.graphics.RectKt: android.graphics.Region xor(android.graphics.Rect,android.graphics.Rect)
android.support.v4.media.MediaBrowserCompat
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
kotlinx.coroutines.scheduling.NonBlockingContext: void afterTask()
androidx.recyclerview.R$style
io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.Completable: io.reactivex.Flowable andThen(org.reactivestreams.Publisher)
androidx.core.util.LongSparseArrayKt: boolean isNotEmpty(android.util.LongSparseArray)
kotlin.reflect.KClass: java.util.Collection getConstructors()
androidx.appcompat.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
io.reactivex.plugins.RxJavaPlugins: io.reactivex.SingleObserver onSubscribe(io.reactivex.Single,io.reactivex.SingleObserver)
androidx.recyclerview.widget.RecyclerView: void onAttachedToWindow()
io.reactivex.internal.operators.observable.ObservableRefCount$RefCountObserver: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_RC4_128_SHA
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: short[] sliceArray(short[],kotlin.ranges.IntRange)
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver: long serialVersionUID
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(java.lang.CharSequence)
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_android_fontWeight
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(float[],kotlin.jvm.functions.Function2)
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: long serialVersionUID
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: void resolveLayoutDirection(int)
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment END
kotlin.concurrent.ThreadsKt$thread$thread$1
androidx.core.ktx.R$dimen: int notification_action_text_size
kotlinx.coroutines.channels.AbstractChannel$TryPollDesc
androidx.core.util.SparseLongArrayKt$keyIterator$1: boolean hasNext()
kotlinx.coroutines.CancellableContinuationKt
androidx.appcompat.R$id: int up
androidx.appcompat.app.AlertDialog: void setView(android.view.View,int,int,int,int)
io.reactivex.internal.subscribers.BlockingBaseSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.completable.CompletableTimeout: CompletableTimeout(io.reactivex.CompletableSource,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,io.reactivex.CompletableSource)
androidx.vectordrawable.R$style
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiFunction,boolean,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setNumericShortcut(char)
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function5)
kotlinx.coroutines.EventLoopBase$DelayedTask
androidx.core.graphics.RectKt: android.graphics.RectF minus(android.graphics.RectF,float)
io.reactivex.internal.operators.flowable.FlowableFlatMap: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
io.reactivex.internal.operators.maybe.MaybeLift: void subscribeActual(io.reactivex.MaybeObserver)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintGuide_percent
androidx.core.graphics.PathSegment: android.graphics.PointF getStart()
io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver: long serialVersionUID
androidx.constraintlayout.solver.LinearSystem: int getObjectVariableValue(java.lang.Object)
androidx.lifecycle.extensions.R$id: int text2
androidx.databinding.ViewDataBinding: void executePendingBindings()
androidx.appcompat.widget.SearchView: void setInputType(int)
androidx.appcompat.R$styleable: int MenuView_subMenuArrow
kotlinx.coroutines.test.TestCoroutineContext: void access$post(kotlinx.coroutines.test.TestCoroutineContext,java.lang.Runnable)
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_endY
io.reactivex.plugins.RxJavaPlugins: void setFailOnNonBlockingScheduler(boolean)
io.reactivex.internal.operators.flowable.FlowableTakeLastOne: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.collections.EmptyList: kotlin.collections.EmptyList INSTANCE
okhttp3.internal.http2.Header: okio.ByteString TARGET_SCHEME
kotlin.comparisons.ComparisonsKt__ComparisonsKt: ComparisonsKt__ComparisonsKt()
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object filterIndexedTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
androidx.core.app.ShareCompat$IntentReader: android.graphics.drawable.Drawable getCallingActivityIcon()
kotlin.properties.Delegates: kotlin.properties.ReadWriteProperty vetoable(java.lang.Object,kotlin.jvm.functions.Function3)
com.jakewharton.rxbinding3.widget.TextViewAfterTextChangeEvent: android.text.Editable component2()
androidx.media.MediaBrowserServiceCompat: MediaBrowserServiceCompat()
io.reactivex.internal.operators.flowable.FlowablePublish: org.reactivestreams.Publisher publishSource()
kotlin.collections.AbstractIterator: boolean hasNext()
androidx.core.graphics.drawable.TintAwareDrawable
okhttp3.internal.Util: java.nio.charset.Charset bomAwareCharset(okio.BufferedSource,java.nio.charset.Charset)
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup)
androidx.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_light
kotlinx.coroutines.BuildersKt: java.lang.Object run$default(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)
okhttp3.Request: java.lang.Object tag(java.lang.Class)
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowablePublishAlt: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: long produced
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-WpHrYlw(byte[],byte,int,int)
androidx.appcompat.app.WindowDecorActionBar: boolean collapseActionView()
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int getDuration()
com.example.revolut.rates.R$styleable: int CoordinatorLayout_Layout_layout_behavior
androidx.fragment.app.FragmentController: void dispatchStop()
kotlinx.coroutines.ThreadContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object offerInternal(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[],int)
androidx.core.view.ViewGroupKt: java.util.Iterator iterator(android.view.ViewGroup)
io.reactivex.Flowable: io.reactivex.Flowable skipUntil(org.reactivestreams.Publisher)
kotlin.StandardKt__StandardKt: StandardKt__StandardKt()
kotlin.coroutines.jvm.internal.CoroutineStackFrame: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat build()
com.google.gson.stream.JsonWriter: void close()
com.example.revolut.rates.RatesApp: void access$setInstance$cp(com.example.revolut.rates.RatesApp)
kotlin.text.Charsets: java.nio.charset.Charset US_ASCII
io.reactivex.schedulers.Schedulers: io.reactivex.Scheduler from(java.util.concurrent.Executor)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_id
kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.core.view.MotionEventCompat: int AXIS_BRAKE
androidx.constraintlayout.widget.ConstraintLayout: void onMeasure(int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character maxBy(char[],kotlin.jvm.functions.Function1)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
kotlinx.coroutines.EventLoop$Factory: kotlinx.coroutines.CoroutineDispatcher invoke$default(kotlinx.coroutines.EventLoop$Factory,java.lang.Thread,kotlinx.coroutines.Job,int,java.lang.Object)
kotlinx.coroutines.AbstractCoroutine: void context$annotations()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object)
kotlinx.coroutines.AbstractCoroutine: void onCompletionInternal$kotlinx_coroutines_core(java.lang.Object,int)
dagger.android.support.R$dimen: int abc_button_inset_horizontal_material
androidx.coordinatorlayout.R$drawable: int notification_bg_normal
com.example.revolut.rates.R$styleable: int SearchView_defaultQueryHint
kotlin.text.Regex$Serialized: long serialVersionUID
okhttp3.Headers$Builder
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateWith(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function2 access$getOnFail$p(kotlin.io.FileTreeWalk)
androidx.drawerlayout.widget.DrawerLayout: void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
com.example.revolut.rates.R$id: int notification_main_column_container
dagger.Module: java.lang.Class[] includes()
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable drags$default(android.view.View,kotlin.jvm.functions.Function1,int,java.lang.Object)
retrofit2.KotlinExtensions
android.support.v4.media.session.MediaSessionCompatApi24$Callback: void onPrepareFromUri(android.net.Uri,android.os.Bundle)
kotlin.collections.EmptyMap: long serialVersionUID
dagger.android.support.R$styleable: int AppCompatTheme_actionBarTheme
okio.Timeout: void throwIfReached()
androidx.viewpager.R$drawable: int notification_bg_low_normal
androidx.core.view.NestedScrollingChild2: void stopNestedScroll(int)
com.google.gson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)
androidx.core.view.ViewKt$doOnPreDraw$1: ViewKt$doOnPreDraw$1(android.view.View,kotlin.jvm.functions.Function1,android.view.ViewTreeObserver)
kotlin.ranges.RangesKt___RangesKt: java.lang.Byte toByteExactOrNull(double)
androidx.loader.app.LoaderManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.R$style: int Widget_AppCompat_ListMenuView
io.reactivex.Flowable: io.reactivex.Flowable onErrorResumeNext(org.reactivestreams.Publisher)
dagger.android.support.R$color: int material_blue_grey_950
dagger.android.support.R$styleable: int SwitchCompat_track
kotlin.collections.EmptySet: kotlin.collections.EmptySet INSTANCE
io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybeDelayError(io.reactivex.functions.Function,boolean)
kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1: AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.channels.AbstractSendChannel)
io.reactivex.internal.operators.maybe.MaybeFromCallable: MaybeFromCallable(java.util.concurrent.Callable)
io.reactivex.internal.subscribers.InnerQueuedSubscriber
androidx.databinding.BindingConversion
androidx.constraintlayout.solver.LinearSystem: void addConstraint(androidx.constraintlayout.solver.ArrayRow)
io.reactivex.Observable: io.reactivex.Observable doOnSubscribe(io.reactivex.functions.Consumer)
kotlin.collections.AbstractList$Companion: int orderedHashCode$kotlin_stdlib(java.util.Collection)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase: long serialVersionUID
androidx.annotation.InterpolatorRes
androidx.loader.content.CursorLoader: void onStopLoading()
androidx.viewpager.R$dimen: int compat_notification_large_icon_max_height
androidx.core.os.HandlerCompat
androidx.fragment.R$styleable: int GradientColor_android_endY
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: void handleBuilderException(java.lang.Throwable)
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)
androidx.appcompat.app.WindowDecorActionBar: void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
io.reactivex.subjects.ReplaySubject: java.lang.Throwable getThrowable()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationZBy(float)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackgroundColor(int)
kotlinx.coroutines.selects.SelectKt: java.lang.Object access$getUNDECIDED$p()
okio.Okio: okio.Source source(java.nio.file.Path,java.nio.file.OpenOption[])
okio.BufferedSink: okio.BufferedSink write(okio.ByteString)
retrofit2.http.Header: java.lang.String value()
androidx.fragment.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
androidx.customview.R$id: int normal
kotlin.jvm.internal.BooleanSpreadBuilder: int getSize(boolean[])
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(short,int)
kotlin.text.StringsKt__StringsKt: int indexOfAny$default(java.lang.CharSequence,char[],int,boolean,int,java.lang.Object)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat yBy(float)
androidx.slidingpanelayout.R$styleable: int GradientColor_android_centerColor
kotlin.jvm.internal.MutableLocalVariableReference: MutableLocalVariableReference()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(short[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.coordinatorlayout.R$styleable: int GradientColor_android_type
io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable: io.reactivex.Maybe fuseToMaybe()
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Large
io.reactivex.Observable: io.reactivex.Observable retryWhen(io.reactivex.functions.Function)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,java.lang.String[],boolean,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getAlphabeticModifiers()
io.reactivex.observers.ResourceSingleObserver: void dispose()
android.support.v4.media.session.IMediaSession: android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes()
com.example.revolut.rates.R$dimen: int tooltip_precise_anchor_extra_offset
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$first$3: java.lang.Object invokeSuspend(java.lang.Object)
android.support.v4.media.session.IMediaControllerCallback: void onEvent(java.lang.String,android.os.Bundle)
androidx.appcompat.widget.DecorToolbar: android.view.View getCustomView()
kotlin.collections.ArraysKt___ArraysKt: boolean single(boolean[])
androidx.appcompat.widget.ActionBarContextView: void onLayout(boolean,int,int,int,int)
androidx.core.app.NotificationCompat$WearableExtender: android.app.PendingIntent getDisplayIntent()
kotlin.jvm.JvmClassMappingKt: kotlin.reflect.KClass getKotlinClass(java.lang.Class)
androidx.recyclerview.widget.ItemTouchHelper$Callback: boolean canDropOver(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.viewpager.widget.ViewPager: void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer,int)
androidx.recyclerview.widget.RecyclerView$ViewHolder: RecyclerView$ViewHolder(android.view.View)
io.reactivex.observers.BaseTestConsumer: BaseTestConsumer()
androidx.constraintlayout.widget.Constraints: Constraints(android.content.Context,android.util.AttributeSet,int)
com.jakewharton.rxbinding3.widget.AdapterViewItemClickEvent: com.jakewharton.rxbinding3.widget.AdapterViewItemClickEvent copy(android.widget.AdapterView,android.view.View,int,long)
okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)
android.support.v4.media.session.MediaControllerCompat: void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)
dagger.android.support.R$styleable: int PopupWindow_android_popupBackground
kotlin.jvm.internal.DoubleSpreadBuilder
androidx.recyclerview.widget.ListAdapter
androidx.databinding.ObservableDouble: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableScanSeed
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean getPadding(android.graphics.Rect)
com.google.gson.stream.JsonWriter: boolean isLenient()
kotlin.SuspendKt
androidx.core.util.Preconditions: int checkArgumentNonnegative(int)
androidx.core.util.SparseArrayKt: int getSize(android.util.SparseArray)
androidx.appcompat.R$color: int highlighted_text_material_light
androidx.media.R$drawable: int notify_panel_notification_icon_bg
kotlin.UByteArray: boolean addAll(java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: byte[] sliceArray(byte[],java.util.Collection)
kotlin.reflect.KParameter: boolean isVararg()
kotlin.jvm.internal.CharCompanionObject: char MAX_HIGH_SURROGATE
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.view.ViewGroupCompat: void setLayoutMode(android.view.ViewGroup,int)
kotlin.collections.ArraysKt___ArraysKt: long sum(long[])
androidx.legacy.coreui.R$id: int line1
kotlin.ranges.LongProgression$Companion: LongProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore(java.lang.String,java.lang.String,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener: void onRefresh()
com.example.revolut.rates.R$attr: int fontVariationSettings
kotlin.jvm.internal.Ref$IntRef: int element
kotlin.jvm.internal.MutablePropertyReference2Impl: java.lang.String getName()
androidx.recyclerview.widget.RecyclerView: void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
io.reactivex.internal.operators.flowable.FlowableDelay: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.Toolbar$SavedState: Toolbar$SavedState(android.os.Parcel,java.lang.ClassLoader)
kotlin.ranges.RangesKt___RangesKt: java.lang.Integer toIntExactOrNull(long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort minWith-eOHTfZs(short[],java.util.Comparator)
androidx.appcompat.R$attr: int logo
kotlin.text.Typography: char mdash
androidx.recyclerview.widget.ItemTouchHelper$Callback: void onMoved(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int)
androidx.appcompat.R$style: int Widget_AppCompat_PopupWindow
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: int gravity
kotlinx.coroutines.Job$Key: kotlinx.coroutines.Job invoke(kotlinx.coroutines.Job)
androidx.core.view.ViewKt$doOnLayout$$inlined$doOnNextLayout$1: ViewKt$doOnLayout$$inlined$doOnNextLayout$1(kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getScrollX()
com.example.revolut.rates.R$attr: int windowMinWidthMinor
kotlin.text.Typography: char middleDot
com.example.revolut.rates.R$anim: int abc_tooltip_enter
dagger.android.ReleaseReferencesAt: int value()
com.example.revolut.rates.R$dimen: int abc_dialog_fixed_height_minor
dagger.android.support.R$string: int abc_font_family_display_4_material
androidx.core.app.ActivityOptionsCompat: android.graphics.Rect getLaunchBounds()
kotlin.collections.AbstractMutableCollection: boolean add(java.lang.Object)
io.reactivex.internal.subscriptions.SubscriptionArbiter: void produced(long)
androidx.recyclerview.widget.AsyncListUtil$DataCallback: int getMaxCachedTiles()
androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_CHANGED
androidx.customview.R$styleable: int[] FontFamilyFont
okio.GzipSink: void write(okio.Buffer,long)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_layout_width
io.reactivex.functions.BooleanSupplier
androidx.appcompat.view.menu.ShowableListMenu: boolean isShowing()
okio.Buffer: long readDecimalLong()
androidx.core.os.OperationCanceledException
androidx.appcompat.R$layout: int abc_screen_content_include
kotlin.random.Random: byte[] nextBytes(byte[])
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: boolean contains(java.lang.Object)
androidx.recyclerview.widget.SortedListAdapterCallback: void onChanged(int,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: boolean contains-7apg3OU(byte)
androidx.appcompat.view.menu.ActionMenuItemView: void setShortcut(boolean,char)
androidx.legacy.v4.R$attr: int layout_dodgeInsetEdges
io.reactivex.internal.subscribers.StrictSubscriber: long serialVersionUID
io.reactivex.observers.SafeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
kotlin.reflect.KCallable$DefaultImpls: void visibility$annotations()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: int lastIndexOf-xj2QHRw(short)
kotlin.collections.UIntIterator: int nextUInt()
dagger.multibindings.ClassKey
org.reactivestreams.Subscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedRight(android.view.View)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hasExpandedActionView()
io.reactivex.processors.BehaviorProcessor: io.reactivex.processors.BehaviorProcessor create()
dagger.android.support.R$styleable: int ActionMode_background
io.reactivex.exceptions.CompositeException: long serialVersionUID
okhttp3.Challenge: java.lang.String realm()
androidx.fragment.R$dimen: int compat_notification_large_icon_max_width
io.reactivex.internal.operators.observable.ObservableElementAtMaybe: ObservableElementAtMaybe(io.reactivex.ObservableSource,long)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context)
com.example.revolut.rates.R$layout: int rates_item
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlin.coroutines.CoroutineContext,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.appcompat.R$attr: int panelMenuListTheme
androidx.appcompat.R$attr: int contentInsetEnd
androidx.media.AudioAttributesCompat
io.reactivex.processors.FlowableProcessor: java.lang.Throwable getThrowable()
kotlin.internal.RequireKotlin: kotlin.DeprecationLevel level()
androidx.core.graphics.ColorUtils: double calculateLuminance(int)
androidx.appcompat.R$styleable: int MenuGroup_android_menuCategory
kotlin.sequences.DropSequence$iterator$1: void remove()
androidx.databinding.DataBinderMapper: java.util.List collectDependencies()
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertValues(java.lang.Object[])
kotlin.collections.EmptySet: boolean add(java.lang.Void)
androidx.recyclerview.R$dimen: int notification_media_narrow_margin
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setChoices(java.lang.CharSequence[])
okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)
androidx.legacy.coreutils.R$id: int tag_unhandled_key_event_manager
kotlin.ranges.RangesKt___RangesKt: java.lang.Short toShortExactOrNull(float)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterNotTo$1: ChannelsKt__Channels_commonKt$filterNotTo$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc: java.lang.Object failure(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object)
androidx.loader.content.CursorLoader: java.lang.String[] getSelectionArgs()
io.reactivex.internal.disposables.ArrayCompositeDisposable
androidx.core.widget.AutoSizeableTextView: int getAutoSizeMinTextSize()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int CHAIN_PACKED
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(long[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_TO_POSITION
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double max(java.lang.Double[])
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat LOCALE
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] sortedArray-rL5Bavg(short[])
androidx.recyclerview.widget.RecyclerView$Adapter: void setHasStableIds(boolean)
kotlin.jvm.internal.ReflectionFactory: java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda)
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollHorizontalTrackDrawable
androidx.fragment.R$id: int start
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: java.lang.String[] getMessages()
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable: FlowableFlatMapCompletableCompletable(io.reactivex.Flowable,io.reactivex.functions.Function,boolean,int)
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: boolean done
io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
kotlin.UnsafeLazyImpl: java.lang.Object writeReplace()
io.reactivex.Flowable: io.reactivex.Flowable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)
androidx.appcompat.R$dimen: int abc_cascading_menus_min_smallest_width
com.example.revolut.rates.R$styleable: int AlertDialog_showTitle
io.reactivex.Observable: io.reactivex.Maybe elementAt(long)
androidx.lifecycle.livedata.core.R
androidx.customview.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.core.provider.FontRequest: java.lang.String getProviderPackage()
io.reactivex.internal.operators.completable.CompletableResumeNext: CompletableResumeNext(io.reactivex.CompletableSource,io.reactivex.functions.Function)
dagger.android.support.R$string: int abc_searchview_description_submit
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object single(java.lang.Object[],kotlin.jvm.functions.Function1)
io.reactivex.internal.schedulers.NewThreadWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
androidx.customview.widget.ViewDragHelper: void abort()
androidx.appcompat.widget.LinearLayoutCompat: int SHOW_DIVIDER_BEGINNING
androidx.core.transition.TransitionKt: android.transition.Transition$TransitionListener doOnStart(android.transition.Transition,kotlin.jvm.functions.Function1)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int mDimensionRatioSide
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicHeight()
androidx.constraintlayout.widget.Group: void init(android.util.AttributeSet)
okio.BufferedSource: byte[] readByteArray()
io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(long,java.util.concurrent.TimeUnit)
androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()
kotlinx.coroutines.selects.WhileSelectKt
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_scaleY
io.reactivex.internal.operators.single.SingleTimer$TimerDisposable: long serialVersionUID
io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)
androidx.recyclerview.widget.ItemTouchUIUtil
androidx.core.view.accessibility.AccessibilityRecordCompat: int getScrollY()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object findLast(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: boolean contains(java.lang.Object)
io.reactivex.annotations.NonNull
com.example.revolut.rates.R$styleable: int ActionBar_background
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)
androidx.appcompat.view.ActionMode: boolean getTitleOptionalHint()
kotlin.coroutines.experimental.SafeContinuation: java.lang.Object getResult()
com.google.gson.stream.MalformedJsonException: long serialVersionUID
kotlin.collections.AbstractList: boolean equals(java.lang.Object)
io.reactivex.internal.schedulers.ExecutorScheduler
kotlin.UInt: void data$annotations()
io.reactivex.internal.operators.maybe.MaybeAmb: MaybeAmb(io.reactivex.MaybeSource[],java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(short[],kotlin.jvm.functions.Function1)
androidx.core.graphics.ColorUtils: void RGBToXYZ(int,int,int,double[])
androidx.cursoradapter.widget.SimpleCursorAdapter: void setStringConversionColumn(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(byte[],int)
io.reactivex.internal.operators.flowable.FlowableAny: void subscribeActual(org.reactivestreams.Subscriber)
androidx.collection.CircularIntArray: CircularIntArray()
androidx.loader.R$attr: int fontStyle
kotlin.text.Typography: char pound
androidx.lifecycle.ProcessLifecycleOwnerInitializer: boolean onCreate()
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setPadding(int,int,int,int)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable getSolverVariable()
kotlin.text.StringsKt__StringsKt: int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Float[] toTypedArray(float[])
io.reactivex.internal.observers.EmptyCompletableObserver
io.reactivex.internal.subscribers.BlockingLastSubscriber
retrofit2.Retrofit: java.util.List callAdapterFactories()
io.reactivex.internal.operators.flowable.FlowableUsing$UsingSubscriber: long serialVersionUID
com.example.revolut.rates.R$layout: int abc_activity_chooser_view
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback: void removeTile(int,int)
okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int getDy()
kotlin.collections.CollectionsKt__IterablesKt$Iterable$1: java.util.Iterator iterator()
io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function5)
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFocusable
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getContentDescription()
android.support.v4.media.session.MediaSessionCompat$Callback: void onSkipToQueueItem(long)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.selects.SelectClause2 getOnSend()
io.reactivex.Flowable: io.reactivex.parallel.ParallelFlowable parallel(int)
com.jakewharton.rxbinding3.widget.RatingBarChangeEvent: com.jakewharton.rxbinding3.widget.RatingBarChangeEvent copy$default(com.jakewharton.rxbinding3.widget.RatingBarChangeEvent,android.widget.RatingBar,float,boolean,int,java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable merge(java.lang.Iterable,int)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintBaseline_creator
kotlin.jvm.internal.LongSpreadBuilder: int getSize(long[])
androidx.appcompat.R$style: int Base_Widget_AppCompat_ImageButton
androidx.appcompat.R$style: int Widget_Compat_NotificationActionText
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlinx.coroutines.Job,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.versionedparcelable.VersionedParcel: int readInt()
androidx.core.app.AppOpsManagerCompat: int MODE_DEFAULT
androidx.constraintlayout.solver.widgets.Guideline: int getRelativeBehaviour()
io.reactivex.internal.subscribers.BlockingLastSubscriber: BlockingLastSubscriber()
kotlinx.coroutines.JobSupport: void onFinishingInternal$kotlinx_coroutines_core(java.lang.Object)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(double[],kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.observable.ObservableScanSeed: void subscribeActual(io.reactivex.Observer)
androidx.media.R$color: int notification_action_color_filter
io.reactivex.Flowable: io.reactivex.Flowable concatEager(org.reactivestreams.Publisher,int,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: int getDropdownItemCount()
okio.BufferedSource: long indexOf(okio.ByteString)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingEnd()
io.reactivex.internal.operators.single.SingleDoAfterTerminate
androidx.appcompat.R$styleable: int ActionBar_progressBarPadding
io.reactivex.observers.TestObserver: io.reactivex.observers.BaseTestConsumer assertSubscribed()
com.example.revolut.rates.R$attr: int tickMark
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.Removed access$removed(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.appcompat.R$styleable: int[] AppCompatImageView
android.support.v4.media.session.MediaSessionCompat: int MEDIA_ATTRIBUTE_ALBUM
kotlinx.coroutines.test.TestCoroutineContext: long access$processNextEvent(kotlinx.coroutines.test.TestCoroutineContext)
io.reactivex.internal.operators.single.SingleOnErrorReturn: SingleOnErrorReturn(io.reactivex.SingleSource,io.reactivex.functions.Function,java.lang.Object)
androidx.core.view.ViewCompat: boolean hasOverlappingRendering(android.view.View)
kotlin.sequences.MergingSequence
kotlin.math.MathKt: void PI$annotations()
dagger.android.support.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
androidx.annotation.NavigationRes
com.example.revolut.rates.R$dimen: int abc_text_size_menu_material
androidx.appcompat.widget.SwitchCompat: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function7)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem
kotlin.ranges.RangesKt___RangesKt: java.lang.Byte toByteExactOrNull(short)
kotlin.collections.ArraysKt___ArraysKt: byte reduceIndexed(byte[],kotlin.jvm.functions.Function3)
androidx.asynclayoutinflater.view.AsyncLayoutInflater
io.reactivex.observers.DisposableCompletableObserver: void onStart()
kotlin.internal.ProgressionUtilKt: long getProgressionLastElement(long,long,long)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void draw(android.graphics.Canvas)
okhttp3.internal.http2.Header: java.lang.String TARGET_AUTHORITY_UTF8
io.reactivex.Maybe: io.reactivex.Maybe timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.slidingpanelayout.R$attr: int fontProviderAuthority
io.reactivex.internal.operators.flowable.FlowableCreate$NoOverflowBaseAsyncEmitter: long serialVersionUID
kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object offerSelectInternal(java.lang.Object,kotlinx.coroutines.selects.SelectInstance)
io.reactivex.Flowable: io.reactivex.Flowable observeOn(io.reactivex.Scheduler,boolean,int)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
kotlin.internal.LowPriorityInOverloadResolution
io.reactivex.internal.subscribers.StrictSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.lang.String getType()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$findLast$1
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: void fail(java.lang.Throwable)
androidx.lifecycle.extensions.R$attr: int statusBarBackground
androidx.lifecycle.ViewModelProviders: ViewModelProviders()
androidx.recyclerview.widget.ListUpdateCallback: void onMoved(int,int)
androidx.appcompat.R$styleable: int AppCompatTheme_activityChooserViewStyle
kotlin.collections.ArraysKt___ArraysKt: char single(char[])
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Widget_Switch
okhttp3.Address: javax.net.SocketFactory socketFactory()
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintGuide_percent
androidx.swiperefreshlayout.R$dimen: int notification_big_circle_margin
kotlin.jvm.internal.TypeIntrinsics: java.lang.Iterable castToIterable(java.lang.Object)
com.example.revolut.rates.R$color: int bright_foreground_material_light
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Iterable asIterable(kotlin.sequences.Sequence)
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.jakewharton.rxbinding3.core.R$id: int blocking
androidx.legacy.coreui.R$drawable: int notification_bg_low_normal
io.reactivex.internal.observers.InnerQueuedObserverSupport
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy ERROR
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(java.lang.Boolean)
com.example.revolut.rates.R$attr: int drawableSize
androidx.core.ktx.R$styleable: int GradientColor_android_startX
androidx.core.R$dimen: int compat_notification_large_icon_max_width
okio.HashingSink
androidx.customview.R$string
kotlin.text.Typography: char cent
com.example.revolut.rates.R$attr: int titleMarginStart
androidx.constraintlayout.widget.ConstraintLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
kotlin.text.StringsKt___StringsKt: java.util.Map associateByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1)
androidx.slidingpanelayout.R$id: int right_side
io.reactivex.internal.operators.observable.ObservableInternalHelper: io.reactivex.functions.Function flatMapWithCombiner(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)
androidx.core.app.NotificationCompat: java.util.List getInvisibleActions(android.app.Notification)
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_SETTLING
io.reactivex.Flowable: io.reactivex.Flowable observeOn(io.reactivex.Scheduler)
androidx.databinding.ObservableByte: byte get()
androidx.databinding.adapters.ViewGroupBindingAdapter$OnChildViewRemoved: void onChildViewRemoved(android.view.View,android.view.View)
androidx.coordinatorlayout.R$style: int Widget_Support_CoordinatorLayout
retrofit2.Retrofit$Builder: java.util.List callAdapterFactories()
kotlin.text.StringsKt__StringsKt: boolean endsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
androidx.core.view.PointerIconCompat: int TYPE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW
android.support.v4.media.session.PlaybackStateCompat$ErrorCode
androidx.constraintlayout.widget.ConstraintHelper: void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object first(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA
androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)
kotlin.collections.AbstractCollection: boolean addAll(java.util.Collection)
com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory: com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory$Companion Companion
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError
io.reactivex.Flowable: io.reactivex.Flowable switchOnNext(org.reactivestreams.Publisher,int)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool
com.example.revolut.rates.R$dimen: int disabled_alpha_material_dark
okio.GzipSink: okio.Timeout timeout()
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe
androidx.loader.content.CursorLoader: void setProjection(java.lang.String[])
kotlinx.coroutines.internal.AnnotationsKt: void JvmField$annotations()
io.reactivex.observables.ConnectableObservable: io.reactivex.Observable autoConnect(int)
dagger.android.support.R$attr: int background
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence zipWithNext(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
androidx.legacy.v4.R$dimen: int subtitle_outline_width
io.reactivex.internal.operators.completable.CompletableResumeNext: void subscribeActual(io.reactivex.CompletableObserver)
androidx.core.content.pm.ShortcutInfoCompat$Builder
kotlinx.coroutines.Unconfined: kotlinx.coroutines.Unconfined INSTANCE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA
androidx.appcompat.app.ActionBarDrawerToggle: ActionBarDrawerToggle(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.widget.Toolbar,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ranges.IntRange getIndices--ajY-9A(int[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(java.lang.Object[],kotlin.jvm.functions.Function1)
com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory: retrofit2.CallAdapter get(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
androidx.collection.LongSparseArray
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte maxWith-XMRcp5o(byte[],java.util.Comparator)
androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
io.reactivex.internal.schedulers.ScheduledRunnable: long serialVersionUID
io.reactivex.Completable: io.reactivex.Completable fromMaybe(io.reactivex.MaybeSource)
io.reactivex.subjects.Subject: boolean hasComplete()
androidx.core.view.inputmethod.EditorInfoCompat: int IME_FLAG_FORCE_ASCII
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
android.support.v4.media.session.PlaybackStateCompat$CustomAction
okhttp3.Request: java.lang.String header(java.lang.String)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence drop(java.lang.CharSequence,int)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setBridgeTag(java.lang.String)
androidx.legacy.coreui.R$dimen: int notification_right_icon_size
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
kotlin.io.FilesKt__UtilsKt: java.lang.String toRelativeString(java.io.File,java.io.File)
io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit)
androidx.vectordrawable.R$styleable: int FontFamilyFont_android_font
kotlin.text.StringsKt__StringsKt: kotlin.Pair findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean)
androidx.customview.R$styleable: int FontFamilyFont_font
kotlinx.coroutines.channels.AbstractChannel$TryPollDesc: boolean validatePrepared(java.lang.Object)
io.reactivex.internal.operators.observable.ObserverResourceWrapper: void onComplete()
kotlinx.coroutines.CoroutineScope$DefaultImpls: void isActive$annotations()
kotlin.jvm.internal.Ref$ObjectRef
androidx.viewpager.widget.PagerTabStrip: boolean onTouchEvent(android.view.MotionEvent)
com.example.revolut.rates.di.AppModule_ProvideRetrofitFactory: retrofit2.Retrofit get()
androidx.versionedparcelable.VersionedParcel
kotlin.collections.UArraysKt: boolean contentEquals-kdPth3s(byte[],byte[])
androidx.interpolator.view.animation.FastOutSlowInInterpolator
com.example.revolut.rates.R$attr: int alpha
io.reactivex.internal.subscribers.FutureSubscriber: boolean isCancelled()
kotlin.collections.AbstractMap$values$1$iterator$1
com.example.revolut.rates.R$drawable: int notification_bg_low_pressed
com.example.revolut.rates.R$styleable: int ActionMode_closeItemLayout
kotlin.text.StringsKt___StringsJvmKt: StringsKt___StringsJvmKt()
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment valueOf(java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void setNextParkedWorker(java.lang.Object)
androidx.appcompat.R$drawable: int abc_ic_menu_overflow_material
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] sortedArrayDescending--ajY-9A(int[])
io.reactivex.internal.operators.maybe.MaybeHide: void subscribeActual(io.reactivex.MaybeObserver)
androidx.print.PrintHelper: int COLOR_MODE_COLOR
androidx.appcompat.widget.AppCompatCheckedTextView: AppCompatCheckedTextView(android.content.Context)
io.reactivex.android.plugins.RxAndroidPlugins: io.reactivex.functions.Function getOnMainThreadSchedulerHandler()
androidx.databinding.ListChangeRegistry: void notifyChanged(androidx.databinding.ObservableList)
io.reactivex.exceptions.OnErrorNotImplementedException
androidx.core.app.Person: boolean isBot()
androidx.appcompat.R$attr: int actionBarTabBarStyle
androidx.appcompat.R$dimen: int abc_action_bar_overflow_padding_end_material
kotlinx.coroutines.AbstractCoroutine: int getDefaultResumeMode$kotlinx_coroutines_core()
okhttp3.Route: java.net.Proxy proxy()
androidx.appcompat.R$style: int TextAppearance_AppCompat
androidx.core.view.ViewCompat: void setAlpha(android.view.View,float)
io.reactivex.internal.operators.observable.ObserverResourceWrapper: void dispose()
com.jakewharton.rxbinding3.widget.SeekBarStartChangeEvent: SeekBarStartChangeEvent(android.widget.SeekBar)
kotlin.text.MatcherMatchResult$groupValues$1: int indexOf(java.lang.String)
io.reactivex.internal.util.BackpressureHelper: long multiplyCap(long,long)
com.example.revolut.rates.R$id: int tag_unhandled_key_listeners
kotlin.annotation.MustBeDocumented
io.reactivex.plugins.RxJavaPlugins: io.reactivex.parallel.ParallelFlowable onAssembly(io.reactivex.parallel.ParallelFlowable)
androidx.core.view.ViewCompat: float getX(android.view.View)
androidx.appcompat.view.menu.MenuView$ItemView
com.example.revolut.rates.R$drawable: int notification_bg_low_normal
androidx.appcompat.app.ActionBar: int getNavigationItemCount()
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_ActionButton
androidx.interpolator.R
androidx.vectordrawable.R$id: int tag_transition_group
androidx.viewpager.R$styleable: int GradientColor_android_centerColor
io.reactivex.internal.operators.flowable.FlowableReplay: io.reactivex.flowables.ConnectableFlowable create(io.reactivex.Flowable,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void hideForSystem()
okhttp3.internal.http.StatusLine: java.lang.String message
com.example.revolut.rates.R$styleable: int LinearLayoutCompat_dividerPadding
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationStart(android.view.View)
io.reactivex.internal.observers.BasicFuseableObserver: void fail(java.lang.Throwable)
com.example.revolut.rates.R$styleable: int AppCompatTheme_listPopupWindowStyle
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintEnd_toEndOf
com.example.revolut.rates.data.model.Rate: boolean equals(java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KProperty$Getter getGetter()
dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object)
dagger.android.support.R$color: int background_material_dark
com.jakewharton.rxbinding3.view.MenuItemActionViewExpandEvent: android.view.MenuItem component1()
kotlinx.coroutines.channels.SendElement: java.lang.Object getPollResult()
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_ACTION_ABORTED
io.reactivex.internal.subscribers.BasicFuseableSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry eldest()
dagger.android.support.R$styleable: int ActionBar_contentInsetLeft
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(long[],java.util.Comparator)
androidx.databinding.CallbackRegistry: void notifyCallbacks(java.lang.Object,int,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableInternalHelper: io.reactivex.functions.BiFunction simpleGenerator(io.reactivex.functions.Consumer)
androidx.appcompat.view.CollapsibleActionView: void onActionViewExpanded()
kotlin.collections.AbstractMap$values$1$iterator$1: java.lang.Object next()
com.example.revolut.rates.R$color: int bright_foreground_disabled_material_dark
okio.HashingSource
io.reactivex.internal.operators.observable.ObservableThrottleLatest: ObservableThrottleLatest(io.reactivex.Observable,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
androidx.core.view.animation.PathInterpolatorCompat: android.view.animation.Interpolator create(float,float,float,float)
dagger.android.support.R$styleable: int AppCompatTheme_actionBarTabStyle
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory()
io.reactivex.Flowable: io.reactivex.Flowable switchOnNextDelayError(org.reactivestreams.Publisher,int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDebugSolverName(androidx.constraintlayout.solver.LinearSystem,java.lang.String)
kotlinx.coroutines.DispatchedKt: void dispatch$default(kotlinx.coroutines.DispatchedTask,int,int,java.lang.Object)
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.support.v4.media.MediaDescriptionCompat getDescription()
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.customview.widget.ExploreByTouchHelper: void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object lastOrNull(java.util.List,kotlin.jvm.functions.Function1)
androidx.drawerlayout.R$color: int notification_action_color_filter
androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()
androidx.appcompat.R$color: int switch_thumb_disabled_material_light
androidx.core.graphics.RectKt: int component3(android.graphics.Rect)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY
androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)
androidx.core.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)
kotlinx.coroutines.CancellableContinuation$DefaultImpls: kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.CancellableContinuation,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.appcompat.widget.Toolbar: boolean isTitleTruncated()
com.example.revolut.rates.R$attr: int layout_dodgeInsetEdges
androidx.appcompat.R$style: int Platform_V25_AppCompat_Light
io.reactivex.Observable: io.reactivex.Observable concatMapMaybeDelayError(io.reactivex.functions.Function,boolean,int)
androidx.core.app.NotificationCompat$StreamType
kotlin.random.Random$Default
kotlin.ranges.IntRange: boolean equals(java.lang.Object)
androidx.databinding.InverseBindingAdapter: java.lang.String attribute()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapTo$3
kotlinx.coroutines.selects.SelectClause1: void registerSelectClause1(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt: IntrinsicsKt__IntrinsicsKt()
kotlinx.coroutines.channels.ConflatedBroadcastChannel$onSend$1
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(long,long)
dagger.android.support.R$styleable: int AppCompatTheme_ratingBarStyle
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: void result$annotations()
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: long serialVersionUID
io.reactivex.Observable: io.reactivex.Observable generate(io.reactivex.functions.Consumer)
io.reactivex.Flowable: io.reactivex.Flowable delay(io.reactivex.functions.Function)
androidx.databinding.adapters.TextViewBindingAdapter: TextViewBindingAdapter()
androidx.fragment.R$id: int right
androidx.appcompat.widget.ListPopupWindow: void setListSelector(android.graphics.drawable.Drawable)
com.example.revolut.rates.R$attr: int constraint_referenced_ids
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-QwZRm1k(long[])
androidx.core.util.SparseLongArrayKt: android.util.SparseLongArray plus(android.util.SparseLongArray,android.util.SparseLongArray)
androidx.core.app.NotificationCompat$MessagingStyle: void addCompatExtras(android.os.Bundle)
io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)
androidx.appcompat.widget.ScrollingTabContainerView: void animateToTab(int)
io.reactivex.internal.operators.completable.CompletableObserveOn: void subscribeActual(io.reactivex.CompletableObserver)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(short[],java.lang.Iterable)
androidx.asynclayoutinflater.R$integer: int status_bar_notification_info_maxnum
dagger.internal.MapBuilder: dagger.internal.MapBuilder newMapBuilder(int)
io.reactivex.internal.operators.maybe.MaybeFilter: MaybeFilter(io.reactivex.MaybeSource,io.reactivex.functions.Predicate)
com.jakewharton.rxbinding3.widget.SearchViewQueryTextEvent: com.jakewharton.rxbinding3.widget.SearchViewQueryTextEvent copy(android.widget.SearchView,java.lang.CharSequence,boolean)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object)
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback)
kotlin.text.StringsKt__StringsKt: int lastIndexOf(java.lang.CharSequence,java.lang.String,int,boolean)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setCustomView(int)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int access$compareValuesByImpl(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS
kotlin.jvm.internal.TypeIntrinsics: java.util.Collection asMutableCollection(java.lang.Object,java.lang.String)
androidx.appcompat.widget.SwitchCompat: int[] onCreateDrawableState(int)
io.reactivex.Scheduler: void shutdown()
androidx.appcompat.widget.TintTypedArray: float getFraction(int,int,int,float)
okio.Buffer: okio.BufferedSink writeUtf8CodePoint(int)
androidx.media.R$dimen: int notification_top_pad_large_text
kotlin.coroutines.experimental.migration.CoroutinesMigrationKt: kotlin.coroutines.CoroutineContext toCoroutineContext(kotlin.coroutines.experimental.CoroutineContext)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintGuide_percent
kotlin.sequences.DropSequence: java.util.Iterator iterator()
kotlin.collections.CollectionsKt__CollectionsKt: kotlin.ranges.IntRange getIndices(java.util.Collection)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object maxWith(kotlin.sequences.Sequence,java.util.Comparator)
dagger.android.support.R$string
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody build()
androidx.customview.R$dimen: int notification_large_icon_width
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setSubject(java.lang.String)
kotlinx.coroutines.DispatchedTask: void run()
io.reactivex.android.plugins.RxAndroidPlugins
kotlin.text.Regex$fromInt$$inlined$apply$lambda$1: boolean invoke(java.lang.Enum)
androidx.appcompat.R$color: int primary_text_default_material_light
androidx.core.app.NotificationCompat: java.lang.String EXTRA_CONVERSATION_TITLE
kotlin.jvm.internal.ClassReference: void isSealed$annotations()
kotlin.text.CharCategory: kotlin.Lazy access$getCategoryMap$cp()
androidx.core.animation.AnimatorKt$addListener$2: java.lang.Object invoke(java.lang.Object)
androidx.legacy.v4.R$id
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_X
kotlin.collections.ArraysKt___ArraysJvmKt: double[] copyOfRange(double[],int,int)
kotlin.collections.ArraysKt___ArraysJvmKt: char[] copyInto(char[],char[],int,int,int)
kotlin.text.StringsKt__StringsKt: boolean startsWith$default(java.lang.CharSequence,java.lang.CharSequence,int,boolean,int,java.lang.Object)
androidx.collection.ArraySet: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxBy(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CompletionHandlerException: CompletionHandlerException(java.lang.String,java.lang.Throwable)
androidx.constraintlayout.solver.GoalRow: GoalRow(androidx.constraintlayout.solver.Cache)
dagger.releasablereferences.ReleasableReferenceManager
androidx.appcompat.view.WindowCallbackWrapper: void onPointerCaptureChanged(boolean)
io.reactivex.internal.disposables.SequentialDisposable: boolean isDisposed()
com.example.revolut.rates.R$attr: int layout_constraintHeight_default
com.example.revolut.rates.R$styleable: int LinearLayoutCompat_measureWithLargestChild
androidx.appcompat.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
kotlin.coroutines.SafeContinuation: java.lang.StackTraceElement getStackTraceElement()
okhttp3.HttpUrl: java.lang.String scheme()
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(android.view.View)
io.reactivex.internal.operators.observable.ObservableSkip: ObservableSkip(io.reactivex.ObservableSource,long)
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber
androidx.asynclayoutinflater.R$id: int line3
io.reactivex.internal.subscriptions.DeferredScalarSubscription: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableInterval: void subscribeActual(io.reactivex.Observer)
androidx.core.R$drawable: int notification_bg_low_pressed
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch$default(java.util.List,int,int,kotlin.jvm.functions.Function1,int,java.lang.Object)
io.reactivex.internal.schedulers.SchedulerMultiWorkerSupport
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable fromArray(org.reactivestreams.Publisher[])
androidx.recyclerview.widget.LinearLayoutManager: android.os.Parcelable onSaveInstanceState()
androidx.appcompat.R$id: int line3
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Observer onSubscribe(io.reactivex.Observable,io.reactivex.Observer)
androidx.appcompat.R$drawable: int abc_switch_thumb_material
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getFocusedChild()
io.reactivex.Single: io.reactivex.Maybe toMaybe()
okio.Buffer$UnsafeCursor
kotlinx.coroutines.channels.ArrayBroadcastChannel: void access$setTail$p(kotlinx.coroutines.channels.ArrayBroadcastChannel,long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_PAGE
androidx.core.view.ViewCompat: boolean dispatchNestedPreFling(android.view.View,float,float)
androidx.core.util.SparseLongArrayKt
com.example.revolut.rates.R$id: int up
androidx.appcompat.view.menu.ActionMenuItem: int getAlphabeticModifiers()
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constrainedWidth
io.reactivex.Maybe: io.reactivex.Maybe ofType(java.lang.Class)
androidx.customview.widget.ViewDragHelper: android.view.View getCapturedView()
androidx.core.util.SparseBooleanArrayKt: boolean contains(android.util.SparseBooleanArray,int)
dagger.android.support.R$dimen: int abc_cascading_menus_min_smallest_width
androidx.fragment.app.Fragment: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
androidx.swiperefreshlayout.R$layout: int notification_action_tombstone
androidx.recyclerview.R$id: int actions
io.reactivex.internal.operators.completable.CompletableMerge: CompletableMerge(org.reactivestreams.Publisher,int,boolean)
com.jakewharton.rxbinding3.internal.AlwaysTrue: java.lang.Boolean invoke(java.lang.Object)
androidx.appcompat.R$id: int action_bar
androidx.lifecycle.LifecycleRegistry
kotlin.text.StringsKt___StringsKt: java.util.List toMutableList(java.lang.CharSequence)
io.reactivex.internal.subscribers.BlockingSubscriber: void onSubscribe(org.reactivestreams.Subscription)
com.example.revolut.rates.R$id: int end
androidx.legacy.coreutils.R$styleable: int GradientColor_android_startColor
io.reactivex.internal.disposables.SequentialDisposable: void dispose()
retrofit2.http.PATCH: java.lang.String value()
androidx.core.graphics.drawable.ColorDrawableKt: android.graphics.drawable.ColorDrawable toDrawable(android.graphics.Color)
io.reactivex.Observable: io.reactivex.Observable timestamp(io.reactivex.Scheduler)
dagger.android.support.R$styleable: int SearchView_android_focusable
androidx.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy: androidx.media.MediaBrowserServiceCompatApi21$BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle)
com.example.revolut.rates.R$styleable: int[] DrawerArrowToggle
kotlin.text.CharCategory: kotlin.text.CharCategory LOWERCASE_LETTER
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener: void onDetachedFromWindow()
androidx.swiperefreshlayout.R$attr
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setStyle(int)
io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sequential()
io.reactivex.internal.operators.flowable.FlowableBlockingSubscribe: void subscribe(org.reactivestreams.Publisher,org.reactivestreams.Subscriber)
androidx.legacy.v4.R$dimen: int compat_button_padding_vertical_material
androidx.core.R$id: int info
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable concatMap(io.reactivex.functions.Function)
okhttp3.internal.http.HttpDate
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
androidx.core.graphics.ColorKt: android.graphics.ColorSpace getColorSpace(long)
io.reactivex.internal.observers.BasicFuseableObserver: void clear()
kotlin.jvm.functions.Function7
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean onLevelChange(int)
okhttp3.Route: int hashCode()
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.fragment.R$styleable: int GradientColor_android_tileMode
kotlinx.coroutines.channels.Closed: java.lang.Void resumeSendClosed(kotlinx.coroutines.channels.Closed)
com.example.revolut.rates.R$drawable: int icon_php
androidx.appcompat.R$id: int italic
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotNullTo(java.lang.Object[],java.util.Collection)
io.reactivex.Maybe: io.reactivex.Maybe timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,io.reactivex.MaybeSource)
androidx.legacy.v4.R$attr: int font
dagger.internal.ProviderOfLazy
io.reactivex.internal.subscribers.BasicFuseableSubscriber: int transitiveBoundaryFusion(int)
dagger.android.support.R$styleable: int AppCompatTheme_checkedTextViewStyle
io.reactivex.parallel.ParallelFlowable: boolean validate(org.reactivestreams.Subscriber[])
kotlin.coroutines.experimental.migration.CoroutinesMigrationKt: kotlin.coroutines.experimental.Continuation toExperimentalContinuation(kotlin.coroutines.Continuation)
io.reactivex.internal.operators.flowable.FlowableAllSingle: io.reactivex.Flowable fuseToFlowable()
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener)
kotlin.UIntArray: boolean equals-impl(int[],java.lang.Object)
androidx.core.view.NestedScrollingParent: void onNestedScrollAccepted(android.view.View,android.view.View,int)
io.reactivex.processors.ReplayProcessor: io.reactivex.processors.ReplayProcessor create()
com.example.revolut.rates.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
kotlin.jvm.internal.TypeIntrinsics: java.util.ListIterator asMutableListIterator(java.lang.Object,java.lang.String)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence)
androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(java.lang.CharSequence)
androidx.core.view.TintableBackgroundView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void access$finishRemove(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: long serialVersionUID
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void clearColorFilter()
kotlin.collections.EmptyList: void add(int,java.lang.Void)
androidx.drawerlayout.widget.DrawerLayout
okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)
io.reactivex.internal.operators.completable.CompletableMergeArray: CompletableMergeArray(io.reactivex.CompletableSource[])
dagger.android.support.R$dimen: int abc_action_bar_content_inset_material
retrofit2.adapter.rxjava2.HttpException
androidx.appcompat.view.menu.MenuItemWrapperICS: char getNumericShortcut()
androidx.core.view.MenuItemCompat: java.lang.CharSequence getTooltipText(android.view.MenuItem)
androidx.appcompat.R$style: int Widget_AppCompat_ActivityChooserView
com.jakewharton.rxbinding3.view.ViewAttachAttachedEvent: android.view.View component1()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat y(float)
okhttp3.internal.connection.RealConnection: int successCount
kotlin.collections.ArraysKt___ArraysKt: void reverse(boolean[])
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void setType(int)
kotlin.collections.ArraysKt___ArraysKt: boolean all(char[],kotlin.jvm.functions.Function1)
io.reactivex.ObservableSource
androidx.core.internal.view.SupportMenuItem: androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence)
androidx.drawerlayout.R$id: int text2
com.example.revolut.rates.R$styleable: int Toolbar_buttonGravity
androidx.customview.R$layout: int notification_template_custom_big
kotlin.sequences.IndexingSequence
com.example.revolut.rates.R$dimen: int tooltip_precise_anchor_threshold
androidx.fragment.app.FragmentActivity: androidx.lifecycle.Lifecycle getLifecycle()
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(char[],kotlin.jvm.functions.Function2)
com.example.revolut.rates.data.model.Rate: int hashCode()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE
io.reactivex.internal.functions.Functions: io.reactivex.functions.Action EMPTY_ACTION
com.jakewharton.rxbinding3.core.R$styleable: int FontFamilyFont_fontStyle
kotlin.collections.ShortIterator: ShortIterator()
androidx.legacy.v4.R$styleable: int GradientColorItem_android_offset
io.reactivex.internal.operators.observable.ObservablePublishAlt: void connect(io.reactivex.functions.Consumer)
com.example.revolut.rates.R$id: int titleDividerNoCustom
io.reactivex.processors.AsyncProcessor: java.lang.Object[] getValues()
android.support.v4.media.session.IMediaSession$Stub: android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder)
androidx.core.provider.FontsContractCompat$Columns: int RESULT_CODE_MALFORMED_QUERY
com.example.revolut.rates.data.managers.NetworkManager: boolean isNetworkAvailable(android.content.Context)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenSourceSubscriber: long serialVersionUID
kotlin.io.FilesKt
androidx.databinding.BindingMethod
androidx.core.R$id: int notification_main_column
okio.AsyncTimeout
androidx.core.database.CursorWindowCompat: android.database.CursorWindow create(java.lang.String,long)
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void dispose()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String nameString()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void getHotspotBounds(android.graphics.Rect)
io.reactivex.internal.operators.flowable.FlowableCombineLatest: void subscribeActual(org.reactivestreams.Subscriber)
com.google.gson.internal.ObjectConstructor
androidx.core.app.NotificationBuilderWithBuilderAccessor
androidx.asynclayoutinflater.R$attr: int fontProviderFetchStrategy
kotlin.KotlinVersion: kotlin.KotlinVersion$Companion Companion
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
androidx.slidingpanelayout.R$style: int TextAppearance_Compat_Notification_Title
kotlin.collections.ArraysKt___ArraysKt: boolean none(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState getState()
androidx.appcompat.view.menu.MenuAdapter: androidx.appcompat.view.menu.MenuItemImpl getItem(int)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy STRING
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_PREPARE_FROM_SEARCH
androidx.appcompat.R$id: int tag_unhandled_key_listeners
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
kotlinx.coroutines.internal.LockFreeMPSCQueueCore: kotlinx.coroutines.internal.Symbol REMOVE_FROZEN
androidx.core.content.res.TypedArrayKt: int getColorOrThrow(android.content.res.TypedArray,int)
kotlin.jvm.internal.Ref$DoubleRef
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeStyle
com.example.revolut.rates.R$styleable: int AlertDialog_singleChoiceItemLayout
kotlin.coroutines.experimental.jvm.internal.CoroutineImpl: CoroutineImpl(int,kotlin.coroutines.experimental.Continuation)
okhttp3.internal.cache.CacheStrategy$Factory: CacheStrategy$Factory(long,okhttp3.Request,okhttp3.Response)
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_TabText
kotlin.UShortArray: boolean equals-impl(short[],java.lang.Object)
com.jakewharton.rxbinding3.widget.AdapterViewNothingSelectionEvent: AdapterViewNothingSelectionEvent(android.widget.AdapterView)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()
androidx.media.R$dimen: int notification_right_icon_size
androidx.core.app.NotificationCompat$Action: android.os.Bundle getExtras()
kotlin.jvm.internal.markers.KMutableIterator
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence slice(java.lang.CharSequence,java.lang.Iterable)
okhttp3.EventListener: void requestHeadersEnd(okhttp3.Call,okhttp3.Request)
androidx.appcompat.widget.ViewStubCompat$OnInflateListener
androidx.appcompat.view.menu.BaseMenuPresenter: BaseMenuPresenter(android.content.Context,int,int)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams()
androidx.loader.R$drawable
com.example.revolut.rates.R$drawable: int icon_krw
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduceRight(java.lang.Object[],kotlin.jvm.functions.Function2)
androidx.core.util.LruCacheKt$lruCache$2: java.lang.Object invoke(java.lang.Object)
androidx.core.util.LongSparseArrayKt$valueIterator$1: boolean hasNext()
kotlinx.coroutines.CompletableDeferred$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.CompletableDeferred,kotlin.coroutines.CoroutineContext)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBefore(java.lang.String,char,java.lang.String,java.lang.String)
dagger.android.support.R$style: int Theme_AppCompat_Light_Dialog_Alert
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIntent(android.content.Intent)
androidx.fragment.app.Fragment: void onStop()
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
androidx.core.util.AtomicFileKt: void writeText$default(android.util.AtomicFile,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)
com.example.revolut.rates.R$styleable: int SwitchCompat_thumbTint
io.reactivex.internal.operators.flowable.FlowableRefCount: void subscribeActual(org.reactivestreams.Subscriber)
dagger.android.support.R$drawable: int abc_spinner_textfield_background_material
kotlin.jvm.internal.PropertyReference2Impl: java.lang.String getSignature()
androidx.appcompat.app.ActionBar: void setHomeAsUpIndicator(int)
kotlinx.coroutines.channels.ConflatedBroadcastChannel
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionInfo(java.lang.Object)
androidx.loader.R$string
io.reactivex.disposables.FutureDisposable: long serialVersionUID
androidx.legacy.coreui.R$attr: int layout_dodgeInsetEdges
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter ATOMIC_INTEGER
androidx.recyclerview.widget.DividerItemDecoration: int VERTICAL
androidx.versionedparcelable.VersionedParcel: double readDouble(double,int)
androidx.core.graphics.TypefaceCompatUtil
okhttp3.Address: okhttp3.HttpUrl url()
androidx.swiperefreshlayout.R$id: int actions
androidx.appcompat.R$styleable: int CoordinatorLayout_Layout_layout_anchor
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarIndeterminate(boolean)
dagger.android.support.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
kotlinx.coroutines.channels.Closed: Closed(java.lang.Throwable)
androidx.appcompat.widget.ListPopupWindow: int INPUT_METHOD_FROM_FOCUSABLE
androidx.asynclayoutinflater.R$id: int icon_group
androidx.appcompat.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
org.jetbrains.annotations.NotNull
dagger.android.support.R$style: int ThemeOverlay_AppCompat_Dark
androidx.appcompat.R$attr: int dialogTheme
kotlinx.coroutines.CoroutineScopeKt: java.lang.Object coroutineScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
io.reactivex.internal.operators.maybe.MaybeToObservable$MaybeToObservableObserver: long serialVersionUID
io.reactivex.Single: io.reactivex.Flowable merge(org.reactivestreams.Publisher)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(short[],java.lang.Object[])
kotlin.collections.AbstractMutableCollection: AbstractMutableCollection()
android.support.v4.media.session.MediaSessionCompat$Callback: void onRemoveQueueItem(android.support.v4.media.MediaDescriptionCompat)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
okio.Buffer: java.io.InputStream inputStream()
io.reactivex.internal.operators.observable.ObservableDoAfterNext: ObservableDoAfterNext(io.reactivex.ObservableSource,io.reactivex.functions.Consumer)
kotlin.KotlinVersion: boolean isAtLeast(int,int,int)
kotlin.text.CharsKt__CharKt: boolean isSurrogate(char)
kotlinx.coroutines.ThreadContextElementKt
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: boolean contains-xj2QHRw(short)
androidx.core.app.NotificationManagerCompat: java.lang.String EXTRA_USE_SIDE_CHANNEL
io.reactivex.internal.operators.flowable.FlowableSkipLast: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.flowable.FlowableReplay: io.reactivex.flowables.ConnectableFlowable createFrom(io.reactivex.Flowable)
androidx.core.view.ViewCompat: int ACCESSIBILITY_LIVE_REGION_NONE
com.example.revolut.rates.R$attr: int titleTextAppearance
androidx.appcompat.R$string: int abc_action_mode_done
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(char[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.reactivex.exceptions.CompositeException$CompositeExceptionCausalChain: long serialVersionUID
io.reactivex.internal.util.EmptyComponent: io.reactivex.internal.util.EmptyComponent valueOf(java.lang.String)
androidx.databinding.adapters.CardViewBindingAdapter: void setContentPaddingLeft(androidx.cardview.widget.CardView,int)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean removeAll(java.util.Collection,java.lang.Object[])
okhttp3.OkHttpClient: int callTimeoutMillis()
kotlin.text.Regex$Serialized: java.lang.Object readResolve()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float verticalBias
okhttp3.Headers: long byteCount()
androidx.legacy.v4.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow createRowEqualDimension(float,float,float,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int)
androidx.slidingpanelayout.R$attr: int fontWeight
io.reactivex.internal.observers.BlockingMultiObserver: java.lang.Throwable blockingGetError(long,java.util.concurrent.TimeUnit)
kotlin.ULongArray: long[] constructor-impl(long[])
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setPanelSlideListener(androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener)
androidx.cursoradapter.widget.CursorAdapter: void changeCursor(android.database.Cursor)
androidx.media.R$style: int TextAppearance_Compat_Notification_Line2_Media
kotlin.properties.Delegates: kotlin.properties.ReadWriteProperty notNull()
androidx.asynclayoutinflater.R$styleable: int ColorStateListItem_android_alpha
kotlin.ranges.LongProgression: int hashCode()
io.reactivex.internal.util.BlockingIgnoringReceiver: void accept(java.lang.Object)
kotlin.coroutines.CombinedContext$Serialized
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipMaybeObserver: long serialVersionUID
dagger.android.support.R$attr: int actionModeWebSearchDrawable
androidx.media.R$dimen: int notification_small_icon_background_padding
androidx.appcompat.R$styleable: int MenuItem_android_enabled
androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
androidx.constraintlayout.widget.ConstraintSet: void connect(int,int,int,int,int)
androidx.core.app.ShareCompat$IntentBuilder: android.content.Intent createChooserIntent()
io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter: long serialVersionUID
dagger.android.support.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(int,int)
androidx.core.view.ViewCompat: boolean restoreDefaultFocus(android.view.View)
io.reactivex.internal.disposables.DisposableHelper: io.reactivex.internal.disposables.DisposableHelper DISPOSED
androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)
kotlin.jvm.internal.MutablePropertyReference2Impl: kotlin.reflect.KDeclarationContainer getOwner()
androidx.core.provider.FontsContractCompat$Columns: int RESULT_CODE_FONT_UNAVAILABLE
com.example.revolut.rates.RatesApp: retrofit2.Retrofit getRetrofit()
androidx.appcompat.R$attr: int listPreferredItemPaddingRight
androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawable(int)
okhttp3.internal.tls.BasicCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(double[],java.lang.Iterable)
kotlinx.coroutines.scheduling.CoroutineScheduler: int access$getMAX_PARK_TIME_NS$cp()
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_NEVER
io.reactivex.internal.schedulers.NewThreadWorker: void shutdown()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
io.reactivex.internal.operators.flowable.FlowableJust: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.subscribers.ResourceSubscriber: ResourceSubscriber()
androidx.coordinatorlayout.R$layout: int notification_action
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
dagger.android.support.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$reduceIndexed$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.FloatIterator iterator(float[])
androidx.core.view.ViewCompat: boolean isLayoutDirectionResolved(android.view.View)
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: void setConnectionCreator(int)
io.reactivex.annotations.BackpressureKind: io.reactivex.annotations.BackpressureKind NONE
io.reactivex.Observable: io.reactivex.Observable delaySubscription(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.vectordrawable.R$layout: int notification_template_icon_group
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable max(java.lang.Iterable)
io.reactivex.internal.subscribers.FutureSubscriber: boolean cancel(boolean)
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_type
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
androidx.customview.R$dimen: int notification_right_side_padding_top
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(long[],int)
kotlin.ULongArray: int hashCode-impl(long[])
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
io.reactivex.parallel.ParallelFailureHandling: io.reactivex.parallel.ParallelFailureHandling RETRY
androidx.legacy.coreutils.R$dimen: int notification_big_circle_margin
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable
io.reactivex.internal.operators.flowable.FlowableTake$TakeSubscriber: long serialVersionUID
androidx.lifecycle.extensions.R$attr: int layout_anchor
androidx.core.util.SparseLongArrayKt$valueIterator$1: int getIndex()
androidx.legacy.coreutils.R$dimen: int notification_top_pad_large_text
com.google.gson.stream.JsonReader: void endObject()
io.reactivex.internal.operators.maybe.MaybeErrorCallable: void subscribeActual(io.reactivex.MaybeObserver)
kotlinx.coroutines.internal.AnnotationsKt: void JvmOverloads$annotations()
androidx.recyclerview.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Headline
androidx.appcompat.R$attr: int controlBackground
androidx.core.R$id: int line1
kotlin.coroutines.experimental.SequenceBuilder: java.lang.Object yieldAll(kotlin.sequences.Sequence,kotlin.coroutines.experimental.Continuation)
kotlin.Pair: kotlin.Pair copy$default(kotlin.Pair,java.lang.Object,java.lang.Object,int,java.lang.Object)
com.example.revolut.rates.view.adapter.CurrenciesAdapter: com.example.revolut.rates.data.model.Rate access$getCopyofCurrencies(com.example.revolut.rates.view.adapter.CurrenciesAdapter,int)
androidx.asynclayoutinflater.R$id: int action_container
com.example.revolut.rates.R$attr: int actionBarSize
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int SELECTION_MODE_MULTIPLE
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getChangingConfigurations()
io.reactivex.Maybe: io.reactivex.Maybe timeout(org.reactivestreams.Publisher)
kotlin.text.RegexKt$fromInt$$inlined$apply$lambda$1: java.lang.Object invoke(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void update(int,int,int,android.view.animation.Interpolator)
okio.ByteString: void readObject(java.io.ObjectInputStream)
io.reactivex.subjects.UnicastSubject: boolean hasThrowable()
kotlin.ranges.CharProgression$Companion
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)
androidx.fragment.R$attr: int fontWeight
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_ART_URI
io.reactivex.internal.operators.observable.ObservableRetryPredicate: void subscribeActual(io.reactivex.Observer)
com.example.revolut.rates.R$attr: int dividerVertical
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintRight_toLeftOf
okhttp3.Route: okhttp3.Address address()
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,int)
androidx.appcompat.view.ContextThemeWrapper: int getThemeResId()
io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource,java.util.concurrent.Callable)
androidx.media.MediaSessionManager$RemoteUserInfo: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(float[],int)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$single$3
androidx.core.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)
androidx.core.ktx.R$id: int right_icon
androidx.recyclerview.widget.RecyclerView$Recycler: int convertPreLayoutPositionToPostLayout(int)
androidx.appcompat.R$drawable: int abc_scrubber_track_mtrl_alpha
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SCROLL_FORWARD
io.reactivex.internal.operators.flowable.FlowableRepeatUntil: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.app.NotificationCompat$WearableExtender: int getContentIconGravity()
io.reactivex.internal.operators.observable.ObservableInternalHelper
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2
kotlin.collections.AbstractMutableMap: java.util.Collection values()
io.reactivex.internal.subscribers.BoundedSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableFlatMap: FlowableFlatMap(io.reactivex.Flowable,io.reactivex.functions.Function,boolean,int,int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.recyclerview.widget.ListAdapter: java.lang.Object getItem(int)
io.reactivex.Single: io.reactivex.Flowable mergeDelayError(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)
io.reactivex.internal.operators.flowable.FlowableIntervalRange: void subscribeActual(org.reactivestreams.Subscriber)
androidx.viewpager.R$drawable: int notification_action_background
com.example.revolut.rates.R$dimen: int abc_action_bar_subtitle_top_margin_material
android.support.v4.media.session.ParcelableVolumeInfo: ParcelableVolumeInfo(android.os.Parcel)
androidx.appcompat.R$styleable: int AppCompatTheme_buttonStyle
com.google.gson.internal.bind.JsonTreeWriter: void close()
androidx.core.text.CharSequenceKt
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet)
kotlin.coroutines.ContinuationKt: void startCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
io.reactivex.Completable: io.reactivex.Completable merge(org.reactivestreams.Publisher)
androidx.customview.R$id: int title
androidx.legacy.coreutils.R$style: int TextAppearance_Compat_Notification_Line2
androidx.appcompat.R$style: int Base_Theme_AppCompat_CompactMenu
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter getInstance()
androidx.appcompat.R$color: int accent_material_light
kotlinx.coroutines.CompletableDeferred$DefaultImpls: boolean isComputing(kotlinx.coroutines.CompletableDeferred)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler createSingleScheduler(java.util.concurrent.ThreadFactory)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_orientation
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
androidx.customview.R$styleable: int GradientColor_android_startColor
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getIntrinsicHeight()
androidx.customview.R$dimen: int notification_top_pad_large_text
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: java.lang.Short get(int)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setStrokeWidth(float)
com.example.revolut.rates.R$attr: int buttonBarNeutralButtonStyle
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(short[],short[])
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int measureHeightOfChildrenCompat(int,int,int,int,int)
com.jakewharton.rxbinding3.core.R$id: int right_side
kotlin.text.StringsKt___StringsKt: int indexOfLast(java.lang.CharSequence,kotlin.jvm.functions.Function1)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Bundle getExtras()
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.R$styleable: int AppCompatTheme_viewInflaterClass
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.swiperefreshlayout.widget.CircularProgressDrawable: int getOpacity()
io.reactivex.internal.functions.Functions: io.reactivex.functions.BiConsumer toMapKeyValueSelector(io.reactivex.functions.Function,io.reactivex.functions.Function)
io.reactivex.internal.util.MergerBiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableSkipWhile
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener: boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)
androidx.asynclayoutinflater.R$id: int italic
kotlinx.coroutines.scheduling.CoroutineScheduler: void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean)
io.reactivex.internal.disposables.EmptyDisposable: io.reactivex.internal.disposables.EmptyDisposable NEVER
androidx.appcompat.R$style: int Base_Widget_AppCompat_Toolbar
dagger.android.HasBroadcastReceiverInjector
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior)
kotlinx.coroutines.selects.SelectBuilder: void invoke(kotlinx.coroutines.selects.SelectClause0,kotlin.jvm.functions.Function1)
okhttp3.internal.platform.ConscryptPlatform: void configureSslSocketFactory(javax.net.ssl.SSLSocketFactory)
io.reactivex.internal.operators.single.SingleInternalHelper: java.util.concurrent.Callable emptyThrower()
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Display2
kotlin.collections.GroupingKt__GroupingKt: java.util.Map foldTo(kotlin.collections.Grouping,java.util.Map,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.appcompat.R$styleable: int[] MenuGroup
androidx.fragment.app.FragmentActivity: void supportPostponeEnterTransition()
io.reactivex.Completable: io.reactivex.Completable doOnError(io.reactivex.functions.Consumer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
io.reactivex.processors.ReplayProcessor: void onSubscribe(org.reactivestreams.Subscription)
androidx.documentfile.provider.DocumentFile: boolean renameTo(java.lang.String)
io.reactivex.subjects.UnicastSubject: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.constraintlayout.solver.widgets.Guideline: int RELATIVE_END
io.reactivex.observers.DisposableObserver: void dispose()
androidx.fragment.R$dimen: int notification_action_text_size
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIntent(android.content.Intent)
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe: FlowableElementAtMaybe(io.reactivex.Flowable,long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxWith(float[],java.util.Comparator)
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState: android.os.Parcelable$Creator CREATOR
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-2fe2U9s(int[],int,int,int)
kotlin.collections.CollectionsKt__IterablesKt$Iterable$1: CollectionsKt__IterablesKt$Iterable$1(kotlin.jvm.functions.Function0)
kotlin.ranges.CharProgression: int getStep()
androidx.legacy.coreui.R$styleable: int FontFamilyFont_android_fontStyle
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
retrofit2.adapter.rxjava2.Result
androidx.appcompat.R$layout: int abc_screen_toolbar
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher
kotlinx.coroutines.AbstractContinuation: boolean isActive()
com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent: int getStart()
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget PROPERTY_GETTER
io.reactivex.internal.subscribers.QueueDrainSubscriber: java.lang.Throwable error()
kotlin.io.OnErrorAction: kotlin.io.OnErrorAction SKIP
com.example.revolut.rates.R$string: int abc_menu_space_shortcut_label
okio.BufferedSource: int select(okio.Options)
androidx.fragment.app.Fragment: void onDestroy()
okhttp3.internal.http2.Http2Connection
okhttp3.internal.platform.Platform: void log(int,java.lang.String,java.lang.Throwable)
com.example.revolut.rates.R$styleable: int FontFamilyFont_android_font
kotlin.io.FilesKt__FileReadWriteKt: void writeText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.ViewGroup getViewGroup()
androidx.appcompat.R$color: int abc_tint_btn_checkable
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int leftToRight
kotlin.ranges.UIntRange: kotlin.ranges.UIntRange$Companion Companion
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber$InnerObserver: long serialVersionUID
io.reactivex.Flowable: io.reactivex.Flowable flatMapSingle(io.reactivex.functions.Function)
androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener: void onPanelSlide(android.view.View,float)
io.reactivex.internal.observers.BasicFuseableObserver: boolean isDisposed()
kotlin.jvm.internal.TypeIntrinsics: java.util.Set castToSet(java.lang.Object)
com.example.revolut.rates.R$attr: int layout_editor_absoluteY
okhttp3.CacheControl: int sMaxAgeSeconds()
kotlin.text.Regex: kotlin.sequences.Sequence findAll(java.lang.CharSequence,int)
com.example.revolut.rates.viewmodel.CurrenciesViewModel: void access$isLoading(com.example.revolut.rates.viewmodel.CurrenciesViewModel,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(long[],java.util.Collection,kotlin.jvm.functions.Function1)
io.reactivex.internal.subscriptions.BasicQueueSubscription: boolean offer(java.lang.Object)
io.reactivex.internal.functions.Functions: io.reactivex.functions.Predicate equalsWith(java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy: void subscribeActual(org.reactivestreams.Subscriber)
dagger.android.support.R$attr: int collapseContentDescription
kotlin.TypeAliasesKt: void IllegalArgumentException$annotations()
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_TOP
dagger.internal.ReferenceReleasingProviderManager$Operation: dagger.internal.ReferenceReleasingProviderManager$Operation[] values()
com.example.revolut.rates.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
androidx.constraintlayout.widget.ConstraintSet: void center(int,int,int,int,int,int,int,float)
androidx.vectordrawable.R$dimen: int compat_control_corner_material
androidx.core.view.DisplayCutoutCompat: int getSafeInsetBottom()
kotlin.ULong$Companion: ULong$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.constraintlayout.solver.widgets.ResolutionDimension: void resolve(int)
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit)
androidx.core.util.PatternsCompat: java.util.regex.Pattern IP_ADDRESS
androidx.appcompat.R$attr: int fontWeight
androidx.core.content.res.TypedArrayUtils: java.lang.CharSequence getText(android.content.res.TypedArray,int,int)
androidx.appcompat.app.AppCompatDelegate: void onConfigurationChanged(android.content.res.Configuration)
androidx.collection.CircularIntArray
io.reactivex.Flowable: io.reactivex.Single toSortedList()
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat
kotlin.io.FilePathComponents: java.io.File component1()
kotlinx.coroutines.JobSupportKt: int ON_CANCEL_MAKE_CANCELLING
androidx.customview.R$styleable: int FontFamilyFont_android_fontWeight
io.reactivex.internal.operators.observable.ObservableMaterialize: ObservableMaterialize(io.reactivex.ObservableSource)
okhttp3.MultipartBody: okhttp3.MultipartBody$Part part(int)
androidx.recyclerview.R$dimen: int fastscroll_minimum_range
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableIterable(java.lang.Object)
io.reactivex.Maybe: java.lang.Object blockingGet(java.lang.Object)
io.reactivex.internal.schedulers.NewThreadWorker: boolean isDisposed()
androidx.legacy.coreutils.R$styleable: int GradientColor_android_endY
com.example.revolut.rates.R$attr: int windowActionBarOverlay
androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowing()
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable$ConcatWithObserver: long serialVersionUID
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath
okio.ByteString: okio.ByteString read(java.io.InputStream,int)
dagger.android.support.R$drawable: int abc_tab_indicator_material
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet)
androidx.databinding.ViewDataBinding: java.lang.String BINDING_TAG_PREFIX
androidx.appcompat.R$layout: int abc_activity_chooser_view_list_item
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: void onDataRefresh()
androidx.appcompat.R$attr: int indeterminateProgressStyle
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int)
kotlin.jvm.internal.BooleanCompanionObject: kotlin.jvm.internal.BooleanCompanionObject INSTANCE
io.reactivex.internal.operators.single.SingleDelayWithObservable: void subscribeActual(io.reactivex.SingleObserver)
kotlin.collections.ArraysKt___ArraysKt: int indexOf(java.lang.Object[],java.lang.Object)
kotlin.jvm.internal.Reflection
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context)
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_android_fontWeight
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trimStart(java.lang.CharSequence)
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.Boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(int[],int)
androidx.core.app.AlarmManagerCompat: void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
androidx.fragment.R$attr: int layout_dodgeInsetEdges
androidx.core.R$attr: int fontVariationSettings
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder addCallAdapterFactory(retrofit2.CallAdapter$Factory)
androidx.viewpager.widget.PagerAdapter: void notifyDataSetChanged()
androidx.legacy.v4.R$id: int italic
kotlin.collections.ArraysKt___ArraysKt: boolean contains(int[],int)
androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState: int getChangingConfigurations()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)
okhttp3.internal.Util: java.lang.String[] EMPTY_STRING_ARRAY
kotlinx.coroutines.JobSupport$HandleExceptionOp: kotlinx.coroutines.CompletedExceptionally getOriginal()
com.example.revolut.rates.R$style: int Widget_Compat_NotificationActionText
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(int[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
okhttp3.internal.cache.DiskLruCache: long getMaxSize()
androidx.databinding.ViewDataBinding: char parse(java.lang.String,char)
io.reactivex.exceptions.CompositeException: void printStackTrace()
androidx.appcompat.R$dimen: int hint_pressed_alpha_material_dark
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(int,int,float)
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch(java.util.List,java.lang.Comparable,int,int)
androidx.appcompat.R$attr: int tickMark
okhttp3.HttpUrl: java.lang.String topPrivateDomain()
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
kotlinx.coroutines.DelayKt: java.lang.Object delay$default(long,java.util.concurrent.TimeUnit,kotlin.coroutines.Continuation,int,java.lang.Object)
androidx.collection.SparseArrayCompat: java.lang.Object get(int)
io.reactivex.internal.disposables.EmptyDisposable
androidx.constraintlayout.widget.R$id: int parent
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateBy$1: ChannelsKt__Channels_commonKt$associateBy$1(kotlin.coroutines.Continuation)
androidx.drawerlayout.R$drawable: int notification_bg_low_pressed
androidx.appcompat.R$styleable: int CoordinatorLayout_statusBarBackground
io.reactivex.Observable: io.reactivex.Observable filter(io.reactivex.functions.Predicate)
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_IF_ROOM
androidx.databinding.adapters.AdapterViewBindingAdapter
io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,long,boolean)
androidx.appcompat.R$styleable: int LinearLayoutCompat_dividerPadding
androidx.core.view.ScaleGestureDetectorCompat: boolean isQuickScaleEnabled(android.view.ScaleGestureDetector)
dagger.internal.DelegateFactory
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(int)
io.reactivex.Notification: boolean isOnError()
androidx.appcompat.R$style: int TextAppearance_AppCompat_Tooltip
androidx.appcompat.view.menu.ActionMenuItem: boolean collapseActionView()
dagger.android.support.R$style: int Base_Theme_AppCompat_DialogWhenLarge
android.support.v4.media.session.MediaSessionCompat: void setSessionActivity(android.app.PendingIntent)
kotlin.reflect.KFunction: boolean isExternal()
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(byte[])
androidx.customview.R$dimen: int notification_action_icon_size
kotlin.UShortArrayKt
androidx.core.view.WindowInsetsCompat: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
okhttp3.internal.http1.Http1Codec
io.reactivex.internal.schedulers.ExecutorScheduler: io.reactivex.disposables.Disposable schedulePeriodicallyDirect(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener
com.example.revolut.rates.R$id: int action_context_bar
kotlin.collections.ShortIterator
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingTop()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(boolean)
androidx.core.view.NestedScrollingParent2: void onNestedScroll(android.view.View,int,int,int,int,int)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object none(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
io.reactivex.internal.operators.single.SingleDematerialize
androidx.core.app.NotificationCompat$Builder: NotificationCompat$Builder(android.content.Context,java.lang.String)
dagger.android.support.R$attr: int allowStacking
androidx.vectordrawable.R$attr: int layout_keyline
kotlin.text.MatchNamedGroupCollection: kotlin.text.MatchGroup get(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int)
androidx.appcompat.R$id: int start
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate: ObservableTakeUntilPredicate(io.reactivex.ObservableSource,io.reactivex.functions.Predicate)
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int getSpanSize()
io.reactivex.Observable: io.reactivex.Observable distinct(io.reactivex.functions.Function,java.util.concurrent.Callable)
dagger.android.support.R$style: int Base_Widget_AppCompat_ActionBar_Solid
kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred()
retrofit2.converter.gson.GsonConverterFactory: retrofit2.converter.gson.GsonConverterFactory create()
kotlin.collections.EmptySet: java.lang.Object readResolve()
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow createRow()
dagger.android.support.R$layout: int notification_template_icon_group
io.reactivex.internal.operators.flowable.FlowableIgnoreElements: FlowableIgnoreElements(io.reactivex.Flowable)
io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean)
com.google.gson.LongSerializationPolicy: com.google.gson.JsonElement serialize(java.lang.Long)
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher[],io.reactivex.functions.Function,int)
androidx.core.content.IntentCompat: java.lang.String EXTRA_START_PLAYBACK
io.reactivex.internal.operators.single.SingleTimeout
androidx.appcompat.R$attr: int editTextColor
kotlinx.coroutines.channels.ChannelCoroutine: boolean isEmpty()
androidx.core.app.AlarmManagerCompat
dagger.android.support.R$attr: int ratingBarStyle
com.example.revolut.rates.databinding.RatesItemBinding: RatesItemBinding(java.lang.Object,android.view.View,int,android.widget.RelativeLayout,android.widget.TextView,androidx.appcompat.widget.AppCompatImageView,android.widget.TextView,android.widget.EditText)
kotlin.reflect.KClass$DefaultImpls
dagger.android.support.R$attr: int thumbTint
androidx.appcompat.view.WindowCallbackWrapper: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)
kotlin.UNINITIALIZED_VALUE
androidx.appcompat.app.WindowDecorActionBar: void setShowHideAnimationEnabled(boolean)
androidx.appcompat.widget.DecorToolbar: void setDefaultNavigationContentDescription(int)
androidx.viewpager.R$style
okhttp3.internal.Internal
io.reactivex.internal.operators.parallel.ParallelJoin: void subscribeActual(org.reactivestreams.Subscriber)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: int describeContents()
io.reactivex.Maybe: io.reactivex.Flowable merge(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)
kotlin.UIntArray: boolean isEmpty-impl(int[])
androidx.appcompat.widget.ToolbarWidgetWrapper: int getNavigationMode()
com.example.revolut.rates.R$string: int abc_menu_ctrl_shortcut_label
androidx.core.util.SparseLongArrayKt: void forEach(android.util.SparseLongArray,kotlin.jvm.functions.Function2)
okhttp3.internal.http.RetryAndFollowUpInterceptor: RetryAndFollowUpInterceptor(okhttp3.OkHttpClient,boolean)
androidx.legacy.coreutils.R$attr: int alpha
io.reactivex.subscribers.DefaultSubscriber
androidx.recyclerview.widget.LinearLayoutManager: void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
kotlin.collections.CollectionsKt___CollectionsKt: float sumOfFloat(java.lang.Iterable)
androidx.fragment.app.DialogFragment: int getTheme()
io.reactivex.internal.util.ExceptionHelper: java.lang.Throwable terminate(java.util.concurrent.atomic.AtomicReference)
kotlinx.coroutines.EventLoopBase$DelayedTask: int getIndex()
io.reactivex.Observable: io.reactivex.Observable concat(java.lang.Iterable)
androidx.slidingpanelayout.R$drawable: int notification_bg_low
androidx.legacy.v4.R$styleable: int GradientColor_android_centerColor
androidx.core.util.Preconditions: java.lang.Object[] checkArrayElementsNotNull(java.lang.Object[],java.lang.String)
io.reactivex.internal.operators.maybe.MaybeZipArray
androidx.core.view.NestedScrollingChild2: boolean startNestedScroll(int,int)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
androidx.appcompat.widget.ActivityChooserView: boolean isShowingPopup()
androidx.appcompat.widget.Toolbar$SavedState: Toolbar$SavedState(android.os.Parcel)
androidx.lifecycle.extensions.R$string
androidx.appcompat.R$attr: int alertDialogStyle
io.reactivex.Single: io.reactivex.Single doOnSubscribe(io.reactivex.functions.Consumer)
androidx.asynclayoutinflater.R$attr: int fontProviderAuthority
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertSubscribed()
androidx.recyclerview.widget.RecyclerView: void draw(android.graphics.Canvas)
com.example.revolut.rates.di.AppModule_ProvideRetrofitFactory: retrofit2.Retrofit provideInstance(com.example.revolut.rates.di.AppModule)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View)
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mIcon
kotlinx.coroutines.selects.SelectBuilder$DefaultImpls: void onTimeout$default(kotlinx.coroutines.selects.SelectBuilder,long,java.util.concurrent.TimeUnit,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.jakewharton.rxbinding3.view.ViewAttachAttachedEvent: com.jakewharton.rxbinding3.view.ViewAttachAttachedEvent copy$default(com.jakewharton.rxbinding3.view.ViewAttachAttachedEvent,android.view.View,int,java.lang.Object)
androidx.annotation.RestrictTo: androidx.annotation.RestrictTo$Scope[] value()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void layoutDecoratedWithMargins(android.view.View,int,int,int,int)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_layout_marginLeft
androidx.coordinatorlayout.R$color: int notification_icon_bg_color
androidx.appcompat.R$style: int Base_Widget_AppCompat_SearchView
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: AppCompatMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet,int)
com.example.revolut.rates.R$attr: int actionModePasteDrawable
io.reactivex.Flowable: io.reactivex.Flowable concatMapSingle(io.reactivex.functions.Function)
androidx.appcompat.view.WindowCallbackWrapper: boolean onPreparePanel(int,android.view.View,android.view.Menu)
androidx.databinding.DataBindingUtil: androidx.databinding.ViewDataBinding getBinding(android.view.View)
io.reactivex.internal.observers.BasicIntQueueDisposable: BasicIntQueueDisposable()
com.example.revolut.rates.R$style: int Widget_AppCompat_SeekBar
com.example.revolut.rates.R$drawable: int abc_list_divider_material
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence zip(kotlin.sequences.Sequence,kotlin.sequences.Sequence)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onRestoreInstanceState(android.os.Parcelable)
okio.Buffer$UnsafeCursor: int start
kotlin.collections.CollectionsKt___CollectionsKt: double averageOfShort(java.lang.Iterable)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: void addEdge(java.lang.Object,java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable flatMapSingle(io.reactivex.functions.Function,boolean)
androidx.core.app.JobIntentService: boolean isStopped()
androidx.core.hardware.display.DisplayManagerCompat: java.lang.String DISPLAY_CATEGORY_PRESENTATION
androidx.core.ktx.R$id: int notification_main_column
androidx.coordinatorlayout.R$attr: int layout_insetEdge
androidx.databinding.adapters.NumberPickerBindingAdapter
android.support.v4.os.IResultReceiver$Stub: android.support.v4.os.IResultReceiver asInterface(android.os.IBinder)
androidx.core.graphics.ColorKt: float component2(long)
androidx.constraintlayout.widget.ConstraintSet: int VISIBLE
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean maxBy(boolean[],kotlin.jvm.functions.Function1)
androidx.core.animation.AnimatorKt$addListener$listener$1: AnimatorKt$addListener$listener$1(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.DefaultExecutor: void shutdown(long)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
androidx.core.view.PointerIconCompat: int TYPE_GRAB
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(int[])
androidx.slidingpanelayout.widget.SlidingPaneLayout: void draw(android.graphics.Canvas)
com.example.revolut.rates.R$dimen: int abc_disabled_alpha_material_light
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertNotComplete()
com.example.revolut.rates.R$attr: int autoSizeStepGranularity
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.channels.ChannelIterator
com.jakewharton.rxbinding3.core.R$id: int italic
androidx.appcompat.widget.SearchView
com.example.revolut.rates.viewmodel.CurrenciesViewModel
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_TRACK_NUMBER
com.example.revolut.rates.R$attr: int itemPadding
dagger.android.support.R$style: int Widget_AppCompat_RatingBar
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_EXPAND
androidx.core.app.ActivityCompat: void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder)
dagger.android.support.R$style: int Base_Theme_AppCompat_Light
io.reactivex.internal.operators.observable.ObservableEmpty: io.reactivex.Observable INSTANCE
dagger.android.support.R$color: int abc_tint_seek_thumb
androidx.appcompat.view.menu.MenuItemImpl: boolean collapseActionView()
android.support.v4.media.MediaMetadataCompatApi21$Builder
okhttp3.internal.cache.DiskLruCache: void evictAll()
com.example.revolut.rates.R$layout: int abc_tooltip
com.example.revolut.rates.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
androidx.appcompat.view.ActionBarPolicy: boolean hasEmbeddedTabs()
androidx.recyclerview.R$styleable: int[] FontFamily
dagger.android.support.R$styleable: int DrawerArrowToggle_arrowHeadLength
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(okhttp3.ConnectionSpec)
io.reactivex.Maybe: io.reactivex.Maybe zipArray(io.reactivex.functions.Function,io.reactivex.MaybeSource[])
androidx.constraintlayout.solver.Metrics: long centerConnectionResolved
okio.HashingSource: okio.HashingSource sha256(okio.Source)
kotlinx.coroutines.ResumeModeKt: boolean isDispatchedMode(int)
dagger.android.support.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
dagger.android.support.R$attr: int arrowShaftLength
kotlinx.coroutines.DispatchedContinuation: java.lang.Object access$get_state$p(kotlinx.coroutines.DispatchedContinuation)
kotlin.reflect.KCallable: boolean isSuspend()
androidx.core.content.ContextCompat: java.io.File[] getObbDirs(android.content.Context)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart LAZY
dagger.android.support.R$attr: int ratingBarStyleSmall
io.reactivex.internal.subscribers.BoundedSubscriber: BoundedSubscriber(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer,int)
kotlin.comparisons.ComparisonsKt___ComparisonsKt: java.lang.Object minOf(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Comparator)
okhttp3.internal.http2.Header: java.lang.String TARGET_METHOD_UTF8
kotlinx.coroutines.internal.JsName
com.jakewharton.rxbinding3.widget.AdapterViewItemLongClickEvent: int hashCode()
kotlin.jvm.internal.PropertyReference0: kotlin.reflect.KCallable computeReflected()
kotlin.collections.State: kotlin.collections.State valueOf(java.lang.String)
androidx.core.graphics.drawable.DrawableCompat: boolean canApplyTheme(android.graphics.drawable.Drawable)
androidx.media.R$drawable
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind AT_LEAST_ONCE
com.example.revolut.rates.R$style: int Platform_AppCompat
androidx.appcompat.view.menu.MenuPopupHelper: void setForceShowIcon(boolean)
androidx.loader.R$styleable
androidx.customview.R$dimen: int notification_main_column_padding_top
dagger.internal.SetBuilder: java.util.Set build()
dagger.android.DaggerIntentService
io.reactivex.internal.operators.maybe.MaybeEmpty: io.reactivex.internal.operators.maybe.MaybeEmpty INSTANCE
io.reactivex.Observer: void onComplete()
androidx.legacy.app.ActionBarDrawerToggle$Delegate: void setActionBarDescription(int)
kotlinx.coroutines.Deferred$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Deferred,kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.view.menu.MenuItemImpl: android.view.View getActionView()
androidx.appcompat.widget.ListPopupWindow: void setDropDownGravity(int)
androidx.recyclerview.widget.DividerItemDecoration: void setDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int,int)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
androidx.coordinatorlayout.R$attr: int fontWeight
kotlin.sequences.DropSequence$iterator$1: boolean hasNext()
androidx.recyclerview.widget.ItemTouchHelper$Callback
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscription: long serialVersionUID
io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function)
kotlin.collections.SetsKt__SetsKt: java.util.Set emptySet()
androidx.loader.content.Loader$OnLoadCanceledListener
androidx.recyclerview.widget.StaggeredGridLayoutManager: void invalidateSpanAssignments()
androidx.legacy.coreui.R$styleable: int ColorStateListItem_android_alpha
androidx.appcompat.app.ActionBarDrawerToggle
androidx.legacy.v4.R$id: int action_container
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(short[],kotlin.jvm.functions.Function1)
io.reactivex.Flowable: io.reactivex.Flowable buffer(org.reactivestreams.Publisher,int)
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget FILE
okhttp3.internal.platform.ConscryptPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
androidx.fragment.R$style: int Widget_Compat_NotificationActionText
io.reactivex.Maybe: io.reactivex.Maybe doOnDispose(io.reactivex.functions.Action)
io.reactivex.internal.operators.single.SingleDoOnError: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.content.IntentCompat
androidx.media.MediaBrowserServiceCompat$Result: void sendProgressUpdate(android.os.Bundle)
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: SinglePostCompleteSubscriber(org.reactivestreams.Subscriber)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SHOW_CHRONOMETER
io.reactivex.Flowable: io.reactivex.Flowable flatMapMaybe(io.reactivex.functions.Function,boolean,int)
com.example.revolut.rates.R$color: int ripple_material_dark
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode getAffectedNode()
kotlin.Experimental$Level: kotlin.Experimental$Level valueOf(java.lang.String)
androidx.vectordrawable.R$styleable: int GradientColor_android_type
io.reactivex.Observable: io.reactivex.Observable cache()
androidx.asynclayoutinflater.R$attr: int fontProviderPackage
androidx.core.app.NotificationCompat$MessagingStyle: java.lang.CharSequence getUserDisplayName()
androidx.appcompat.R$id: int search_src_text
kotlin.collections.ArraysKt___ArraysKt: int last(int[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int ConstraintSet_android_id
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)
io.reactivex.internal.operators.observable.ObservableReplay: void connect(io.reactivex.functions.Consumer)
io.reactivex.plugins.RxJavaPlugins: void setInitNewThreadSchedulerHandler(io.reactivex.functions.Function)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setScrollable(boolean)
androidx.legacy.coreui.R$id: int end
io.reactivex.internal.operators.flowable.FlowableDebounceTimed: void subscribeActual(org.reactivestreams.Subscriber)
retrofit2.Response: okhttp3.Headers headers()
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: java.util.List shuffled(java.lang.Iterable,java.util.Random)
kotlinx.coroutines.channels.AbstractSendChannel: boolean isBufferFull()
kotlinx.coroutines.internal.ThreadSafeHeap
okhttp3.internal.Util
androidx.constraintlayout.widget.R$attr: int layout_constraintVertical_bias
androidx.core.graphics.RectKt: float component4(android.graphics.RectF)
androidx.core.widget.ImageViewCompat: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintHideIcon()
androidx.core.os.ParcelableCompat
androidx.core.graphics.PointKt: android.graphics.Point minus(android.graphics.Point,android.graphics.Point)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
kotlin.jvm.internal.TypeReference
com.jakewharton.rxbinding3.core.R$styleable: int[] GradientColor
io.reactivex.internal.observers.LambdaObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_constraint_referenced_ids
androidx.appcompat.R$attr: int arrowShaftLength
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void reset()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(int)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
kotlinx.coroutines.TimeSourceKt
androidx.databinding.adapters.TextViewBindingAdapter: int SIGNED
androidx.core.database.CursorKt: java.lang.Float getFloatOrNull(android.database.Cursor,int)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int guideEnd
androidx.core.internal.view.SupportMenuItem: boolean expandActionView()
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)
androidx.core.ktx.R$id: int chronometer
androidx.legacy.coreutils.R$dimen
androidx.customview.widget.ViewDragHelper: int INVALID_POINTER
androidx.databinding.adapters.ViewBindingAdapter: void setOnAttachStateChangeListener(android.view.View,androidx.databinding.adapters.ViewBindingAdapter$OnViewDetachedFromWindow,androidx.databinding.adapters.ViewBindingAdapter$OnViewAttachedToWindow)
io.reactivex.internal.util.AtomicThrowable: AtomicThrowable()
androidx.appcompat.widget.MenuPopupWindow: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
io.reactivex.internal.operators.observable.ObservableFromUnsafeSource: void subscribeActual(io.reactivex.Observer)
io.reactivex.Observable: io.reactivex.Observable timeout(io.reactivex.functions.Function,io.reactivex.ObservableSource)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: boolean contains(char)
kotlin.sequences.FilteringSequence$iterator$1: java.lang.Object getNextItem()
androidx.databinding.adapters.SwitchBindingAdapter: SwitchBindingAdapter()
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(long[])
io.reactivex.internal.util.QueueDrain: int leave(int)
com.google.gson.FieldAttributes
okio.BufferedSource: int readIntLe()
kotlin.ranges.ClosedRange$DefaultImpls
kotlinx.coroutines.scheduling.CoroutineScheduler: void execute(java.lang.Runnable)
io.reactivex.internal.disposables.ResettableConnectable: void resetIf(io.reactivex.disposables.Disposable)
androidx.slidingpanelayout.R$dimen: int compat_notification_large_icon_max_height
androidx.core.widget.TextViewCompat: int AUTO_SIZE_TEXT_TYPE_UNIFORM
androidx.appcompat.widget.ForwardingListener: ForwardingListener(android.view.View)
javax.inject.Inject
io.reactivex.internal.subscribers.LambdaSubscriber: void onError(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(float[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.ClassReference
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replaceFirst(java.lang.String,java.lang.String,java.lang.String,boolean)
androidx.core.graphics.ColorKt: boolean isSrgb(long)
dagger.android.DaggerApplication: dagger.android.AndroidInjector contentProviderInjector()
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.google.gson.internal.bind.JsonTreeWriter
dagger.android.support.R$color: int material_deep_teal_200
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory
io.reactivex.internal.operators.observable.ObservableZipIterable: void subscribeActual(io.reactivex.Observer)
androidx.media.session.MediaButtonReceiver: android.content.ComponentName getMediaButtonReceiverComponent(android.content.Context)
androidx.core.transition.TransitionKt$addListener$5: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(short[],kotlin.jvm.functions.Function1)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat x(float)
dagger.android.support.R$string: int abc_font_family_menu_material
com.google.gson.JsonSyntaxException: JsonSyntaxException(java.lang.Throwable)
androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)
com.example.revolut.rates.R$attr: int switchTextAppearance
io.reactivex.Flowable: io.reactivex.Single lastOrError()
dagger.android.support.R$styleable: int AppCompatTheme_homeAsUpIndicator
androidx.media.R$dimen: int notification_action_icon_size
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6(float[])
androidx.appcompat.R$attr: int actionOverflowMenuStyle
androidx.drawerlayout.R$drawable: int notification_bg_low
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setEnabled(boolean)
androidx.appcompat.view.menu.MenuItemImpl: void setShowAsAction(int)
io.reactivex.subjects.SingleSubject: void onSubscribe(io.reactivex.disposables.Disposable)
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)
dagger.android.support.R$attr: int windowFixedWidthMajor
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintLeft_toLeftOf
io.reactivex.subscribers.SafeSubscriber: void onSubscribe(org.reactivestreams.Subscription)
kotlin.ranges.IntProgressionIterator: boolean hasNext()
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(float[],kotlin.jvm.functions.Function1)
androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$1
android.support.v4.media.session.PlaybackStateCompat: int STATE_ERROR
androidx.core.util.RangeKt$toClosedRange$1: boolean isEmpty()
io.reactivex.Observable: io.reactivex.Observable distinct(io.reactivex.functions.Function)
kotlinx.coroutines.test.TestCoroutineContext: void assertAllUnhandledExceptions(java.lang.String,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$attr: int layout_constraintWidth_default
io.reactivex.parallel.ParallelFailureHandling: io.reactivex.parallel.ParallelFailureHandling ERROR
androidx.coordinatorlayout.R$id: int start
androidx.core.view.NestedScrollingParent: boolean onNestedFling(android.view.View,float,float,boolean)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object last(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)
com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent: int getStart()
androidx.databinding.adapters.ImageViewBindingAdapter: void setImageUri(android.widget.ImageView,android.net.Uri)
io.reactivex.Flowable: io.reactivex.Single toSortedList(java.util.Comparator)
io.reactivex.internal.functions.Functions: io.reactivex.functions.Consumer ERROR_CONSUMER
androidx.fragment.app.Fragment: void onMultiWindowModeChanged(boolean)
androidx.databinding.ViewDataBinding: void setRootTag(android.view.View)
androidx.core.R$drawable: int notification_bg_normal
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isFullyResolved()
io.reactivex.internal.operators.observable.ObservableCollect
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object foldRightIndexed(java.util.List,java.lang.Object,kotlin.jvm.functions.Function3)
io.reactivex.internal.operators.observable.ObservableCount: void subscribeActual(io.reactivex.Observer)
com.example.revolut.rates.R$styleable: int[] AnimatedStateListDrawableCompat
androidx.databinding.ObservableChar: android.os.Parcelable$Creator CREATOR
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: long serialVersionUID
kotlinx.coroutines.channels.ArrayChannel: boolean isBufferAlwaysEmpty()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-us8wMrg(long[],long[])
androidx.loader.R$styleable: int ColorStateListItem_android_color
android.support.v4.media.session.MediaSessionCompatApi24$Callback
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: void complete(kotlinx.coroutines.internal.AtomicOp,java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer: void getHotspotBounds(android.graphics.Rect)
androidx.core.R$id: int right_side
kotlin.jvm.internal.CallableReference: java.lang.String getName()
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMinor
okio.BufferedSink: okio.BufferedSink write(byte[],int,int)
androidx.legacy.v4.R$drawable: int notification_bg_low_normal
androidx.recyclerview.widget.ItemTouchHelper$Callback: int convertToAbsoluteDirection(int,int)
androidx.recyclerview.widget.SortedList: void addAll(java.lang.Object[],boolean)
io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport: void innerError(io.reactivex.internal.subscribers.InnerQueuedSubscriber,java.lang.Throwable)
com.example.revolut.rates.R$dimen: int notification_top_pad_large_text
io.reactivex.internal.operators.single.SingleToObservable: io.reactivex.SingleObserver create(io.reactivex.Observer)
io.reactivex.Flowable: io.reactivex.Flowable limit(long)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_8
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: long getLatestTimestamp()
androidx.appcompat.app.ActionBar$Tab: void select()
kotlin.io.FilesKt__FilePathComponentsKt: java.io.File getRoot(java.io.File)
android.support.v4.media.session.MediaControllerCompat$Callback: void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
androidx.core.view.ViewKt: int getMarginStart(android.view.View)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap)
android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onPlaybackStateChanged(java.lang.Object)
androidx.core.app.NotificationCompat: java.lang.String getShortcutId(android.app.Notification)
io.reactivex.disposables.SerialDisposable: SerialDisposable()
io.reactivex.Flowable: io.reactivex.Flowable skip(long,java.util.concurrent.TimeUnit)
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: android.view.View getView()
com.jakewharton.rxbinding3.widget.AdapterViewItemClickEvent: android.view.View getClickedView()
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcel createSubParcel()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop: void subscribeActual(org.reactivestreams.Subscriber)
androidx.fragment.R$styleable: int CoordinatorLayout_statusBarBackground
kotlin.collections.ArraysKt___ArraysKt: float single(float[],kotlin.jvm.functions.Function1)
io.reactivex.internal.observers.InnerQueuedObserver: void onError(java.lang.Throwable)
androidx.appcompat.view.ActionMode: void setTitle(java.lang.CharSequence)
dagger.android.support.R$styleable: int ActionBar_subtitleTextStyle
io.reactivex.Observable: io.reactivex.Observable doAfterTerminate(io.reactivex.functions.Action)
io.reactivex.annotations.SchedulerSupport: java.lang.String NEW_THREAD
io.reactivex.android.schedulers.AndroidSchedulers: io.reactivex.Scheduler from(android.os.Looper,boolean)
androidx.vectordrawable.R$attr: int fontProviderFetchTimeout
com.example.revolut.rates.base.BaseViewModel: androidx.lifecycle.MutableLiveData isLoading()
com.example.revolut.rates.R$attr: int actionModeStyle
com.example.revolut.rates.R$attr: int contentInsetStartWithNavigation
androidx.core.util.PatternsCompat: java.util.regex.Pattern DOMAIN_NAME
com.jakewharton.rxbinding3.widget.AdapterViewNothingSelectionEvent: com.jakewharton.rxbinding3.widget.AdapterViewNothingSelectionEvent copy$default(com.jakewharton.rxbinding3.widget.AdapterViewNothingSelectionEvent,android.widget.AdapterView,int,java.lang.Object)
androidx.core.provider.FontsContractCompat$Columns: int RESULT_CODE_FONT_NOT_FOUND
dagger.android.AndroidInjector: void inject(java.lang.Object)
androidx.versionedparcelable.VersionedParcel: java.lang.String readString(java.lang.String,int)
kotlin.collections.ArraysKt___ArraysKt: boolean all(int[],kotlin.jvm.functions.Function1)
androidx.loader.R$drawable: int notification_bg_low_pressed
kotlin.collections.ArraysKt___ArraysKt: int count(byte[],kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.flowable.FlowableMapPublisher: void subscribeActual(org.reactivestreams.Subscriber)
com.example.revolut.rates.R$dimen: int abc_text_size_menu_header_material
androidx.recyclerview.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)
org.intellij.lang.annotations.Subst
androidx.swiperefreshlayout.R$attr: int fontProviderFetchStrategy
kotlin.coroutines.jvm.internal.Boxing: java.lang.Character boxChar(char)
androidx.appcompat.widget.AppCompatSeekBar: AppCompatSeekBar(android.content.Context,android.util.AttributeSet)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
androidx.asynclayoutinflater.R$drawable: int notification_template_icon_bg
androidx.core.graphics.ImageDecoderKt$decodeDrawable$1
androidx.appcompat.R$styleable: int AppCompatTheme_ratingBarStyle
androidx.core.app.AppOpsManagerCompat
kotlin.text.MatchGroup: java.lang.String component1()
kotlin.collections.AbstractList$Companion: AbstractList$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.jakewharton.rxbinding3.widget.TextViewEditorActionEvent: int hashCode()
androidx.appcompat.app.AlertController$AlertParams: boolean mCancelable
kotlin.collections.AbstractMap$Companion: java.lang.String entryToString$kotlin_stdlib(java.util.Map$Entry)
com.example.revolut.rates.R$dimen: int subtitle_shadow_offset
io.reactivex.processors.UnicastProcessor: java.lang.Throwable getThrowable()
android.support.v4.media.session.ParcelableVolumeInfo: int audioStream
io.reactivex.Observable: io.reactivex.Observable mergeArray(io.reactivex.ObservableSource[])
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
io.reactivex.Observable: io.reactivex.Observable mergeDelayError(java.lang.Iterable)
kotlin.jvm.internal.Ref$LongRef
io.reactivex.internal.subscriptions.BasicIntQueueSubscription: boolean offer(java.lang.Object,java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicWidth()
androidx.appcompat.widget.AbsActionBarView: boolean isOverflowMenuShowing()
okio.HashingSink: okio.HashingSink hmacSha512(okio.Sink,okio.ByteString)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: void fill-EtDCXyQ(short[],short,int,int)
com.example.revolut.rates.R$attr: int numericModifiers
androidx.core.R$layout
androidx.drawerlayout.R$styleable: int FontFamilyFont_android_fontWeight
kotlinx.coroutines.selects.SelectBuilder: void invoke(kotlinx.coroutines.selects.SelectClause2,kotlin.jvm.functions.Function2)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory URL_FACTORY
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: boolean excludeField(java.lang.reflect.Field,boolean)
androidx.core.view.accessibility.AccessibilityEventCompat
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$foldIndexed$1
androidx.swiperefreshlayout.widget.CircularProgressDrawable: float getArrowScale()
androidx.appcompat.R$string: int abc_toolbar_collapse_description
kotlin.UShortArray: kotlin.UShortArray box-impl(short[])
kotlin.collections.AbstractList$Companion: boolean orderedEquals$kotlin_stdlib(java.util.Collection,java.util.Collection)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState CPU_ACQUIRED
androidx.legacy.v4.R$id: int line1
io.reactivex.internal.subscriptions.BooleanSubscription
kotlin.text.CharCategory: kotlin.text.CharCategory ENCLOSING_MARK
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(char[],java.lang.Iterable)
androidx.appcompat.app.ActionBar: int getDisplayOptions()
androidx.lifecycle.extensions.R$id: int right_icon
androidx.appcompat.widget.ActionBarContextView: boolean isOverflowMenuShowPending()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateByTo$1: java.lang.Object invokeSuspend(java.lang.Object)
io.reactivex.Notification: boolean isOnComplete()
androidx.asynclayoutinflater.R$styleable: int FontFamily_fontProviderQuery
kotlin.LazyKt__LazyJVMKt: kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0)
kotlinx.coroutines.ScheduledKt
com.example.revolut.rates.R$layout: int notification_action
dagger.android.support.R$styleable: int[] ActionMenuItemView
androidx.constraintlayout.solver.widgets.ConstraintWidget: ConstraintWidget()
kotlin.text.StringsKt___StringsKt: java.util.List mapIndexedNotNull(java.lang.CharSequence,kotlin.jvm.functions.Function2)
androidx.loader.content.Loader$ForceLoadContentObserver: boolean deliverSelfNotifications()
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: int component6()
io.reactivex.Completable: io.reactivex.Completable doOnComplete(io.reactivex.functions.Action)
dagger.android.support.R$dimen: int abc_dialog_padding_material
androidx.appcompat.R$id: int expand_activities_button
androidx.loader.R$style: int TextAppearance_Compat_Notification
okhttp3.CacheControl
kotlinx.coroutines.JobSupport: boolean isCompletedExceptionally()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int)
okio.Buffer: okio.ByteString readByteString(long)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void dispatchWithContext$kotlinx_coroutines_core(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean)
androidx.core.internal.view.SupportMenuItem: android.graphics.PorterDuff$Mode getIconTintMode()
kotlin.collections.ArraysKt___ArraysKt: double averageOfFloat(java.lang.Float[])
com.example.revolut.rates.R$attr: int windowFixedWidthMinor
io.reactivex.internal.operators.observable.ObservableAutoConnect: ObservableAutoConnect(io.reactivex.observables.ConnectableObservable,int,io.reactivex.functions.Consumer)
io.reactivex.internal.operators.observable.BlockingObservableNext: java.util.Iterator iterator()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_REMOVED
androidx.fragment.app.FragmentManager: void popBackStack(int,int)
com.example.revolut.rates.R$styleable: int TextAppearance_android_typeface
androidx.core.animation.AnimatorKt$addPauseListener$2: androidx.core.animation.AnimatorKt$addPauseListener$2 INSTANCE
androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat$Params getParams()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short min(short[])
androidx.core.graphics.RectKt: android.graphics.RectF plus(android.graphics.RectF,android.graphics.RectF)
io.reactivex.internal.operators.completable.CompletableFromAction: CompletableFromAction(io.reactivex.functions.Action)
androidx.core.util.LruCacheKt: android.util.LruCache lruCache$default(int,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double reduce(double[],kotlin.jvm.functions.Function2)
retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory: retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory createAsync()
androidx.slidingpanelayout.widget.SlidingPaneLayout: void smoothSlideClosed()
androidx.databinding.DataBindingUtil: androidx.databinding.ViewDataBinding inflate(android.view.LayoutInflater,int,android.view.ViewGroup,boolean)
io.reactivex.internal.observers.BlockingMultiObserver: BlockingMultiObserver()
android.support.v4.app.INotificationSideChannel$Stub: java.lang.String DESCRIPTOR
android.support.v4.media.MediaBrowserCompat: void getItem(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback)
androidx.swiperefreshlayout.R$drawable: int notify_panel_notification_icon_bg
androidx.appcompat.app.ActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,int)
io.reactivex.schedulers.Timed: long time(java.util.concurrent.TimeUnit)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode access$correctPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.OpDescriptor)
androidx.core.graphics.RegionKt: android.graphics.Region xor(android.graphics.Region,android.graphics.Region)
kotlin.collections.MapsKt__MapsKt: java.util.Map minus(java.util.Map,kotlin.sequences.Sequence)
okio.Buffer: java.io.OutputStream outputStream()
android.support.v4.media.MediaDescriptionCompat: java.lang.String toString()
kotlin.reflect.KClass$DefaultImpls: void isCompanion$annotations()
io.reactivex.internal.observers.DeferredScalarDisposable: io.reactivex.Observer downstream
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDisplayOptions(int)
okhttp3.internal.Util: void closeQuietly(java.io.Closeable)
androidx.constraintlayout.widget.ConstraintSet: void createBarrier(int,int,int[])
com.google.gson.JsonArray: java.math.BigInteger getAsBigInteger()
androidx.legacy.coreui.R$style: int Widget_Compat_NotificationActionText
android.support.v4.media.MediaBrowserCompat$CustomActionCallback: MediaBrowserCompat$CustomActionCallback()
dagger.android.support.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.example.revolut.rates.RatesApp_MembersInjector: RatesApp_MembersInjector(javax.inject.Provider)
kotlin.coroutines.experimental.CombinedContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
dagger.android.support.R$styleable: int LinearLayoutCompat_dividerPadding
androidx.lifecycle.extensions.R$attr: int fontStyle
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
io.reactivex.Flowable: void blockingSubscribe()
dagger.android.support.R$styleable: int AppCompatTheme_editTextColor
io.reactivex.Single: io.reactivex.Single retryWhen(io.reactivex.functions.Function)
android.support.v4.media.session.MediaSessionCompat: void release()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence removeSurrounding(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)
androidx.viewpager.widget.ViewPager$PageTransformer
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)
androidx.core.graphics.CanvasKt: void withSkew$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.channels.Channel: int CONFLATED
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(int[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int)
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
androidx.databinding.adapters.TextViewBindingAdapter: void setPhoneNumber(android.widget.TextView,boolean)
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
kotlinx.coroutines.DispatchedContinuation: kotlin.coroutines.Continuation getDelegate()
dagger.Component
androidx.lifecycle.viewmodel.R
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarStyle
okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()
com.jakewharton.rxbinding3.widget.AdapterViewItemLongClickEvent: int getPosition()
com.example.revolut.rates.R$attr: int listPreferredItemHeightSmall
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence removeSurrounding(java.lang.CharSequence,java.lang.CharSequence)
io.reactivex.internal.operators.maybe.MaybeContains: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.app.AppLaunchChecker: boolean hasStartedFromLauncher(android.content.Context)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
androidx.core.net.UriKt: android.net.Uri toUri(java.io.File)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_constraintSet
androidx.appcompat.R$styleable: int ActionMode_background
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_editor_absoluteY
androidx.customview.R$dimen: int notification_small_icon_size_as_large
kotlin.ranges.CharRange: java.lang.Character getStart()
androidx.recyclerview.R$dimen: int compat_notification_large_icon_max_width
androidx.appcompat.widget.ActivityChooserModel$ActivityChooserModelClient
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void start()
com.google.gson.stream.JsonReader: java.lang.String nextString()
androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(byte[],java.lang.Iterable,kotlin.jvm.functions.Function2)
okhttp3.internal.http1.Http1Codec: void finishRequest()
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void preOptimize()
androidx.databinding.adapters.ViewGroupBindingAdapter$OnAnimationStart: void onAnimationStart(android.view.animation.Animation)
io.reactivex.internal.observers.BlockingLastObserver: void onError(java.lang.Throwable)
dagger.android.support.R$styleable: int SearchView_voiceIcon
androidx.customview.widget.ExploreByTouchHelper: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
kotlin.text.MatchResult$DefaultImpls
androidx.core.app.RemoteInput: java.lang.CharSequence getLabel()
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc
androidx.viewpager.R$layout: int notification_action
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(long[],kotlin.jvm.functions.Function1)
androidx.collection.ArraySet: boolean removeAll(java.util.Collection)
kotlin.jvm.internal.FunctionReference: boolean isInfix()
kotlin.ranges.URangesKt___URangesKt: long coerceAtMost-eb3DHEI(long,long)
androidx.core.view.ViewKt$postOnAnimationDelayed$runnable$1: void run()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String)
androidx.fragment.R$dimen: int compat_button_inset_vertical_material
retrofit2.HttpException: java.lang.String message()
androidx.databinding.adapters.SeekBarBindingAdapter
com.google.gson.stream.JsonReader: java.lang.String nextName()
androidx.appcompat.R$styleable: int[] PopupWindow
kotlin.random.Random: kotlin.random.Random$Companion Companion
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator thenDescending(java.util.Comparator,java.util.Comparator)
kotlinx.coroutines.internal.ConcurrentKt: void ReentrantLock$annotations()
androidx.media.R$layout: int notification_template_custom_big
io.reactivex.internal.operators.single.SingleZipIterable
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_SKIP_AD
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
androidx.databinding.adapters.TextViewBindingAdapter: void setImeActionLabel(android.widget.TextView,java.lang.CharSequence)
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_android_fontStyle
androidx.core.transition.TransitionKt$addListener$2
androidx.databinding.ViewDataBinding: boolean parse(java.lang.String,boolean)
io.reactivex.internal.queue.SpscArrayQueue: long serialVersionUID
kotlinx.coroutines.internal.SynchronizedKt
com.example.revolut.rates.R$dimen: int abc_dialog_corner_radius_material
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxBy(float[],kotlin.jvm.functions.Function1)
com.jakewharton.rxbinding3.widget.AdapterViewItemClickEvent
io.reactivex.Maybe: java.lang.Object to(io.reactivex.functions.Function)
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_ttcIndex
io.reactivex.internal.operators.flowable.FlowableLimit: FlowableLimit(io.reactivex.Flowable,long)
dagger.android.support.R$styleable: int MenuItem_iconTint
com.example.revolut.rates.R$drawable: int abc_ratingbar_small_material
dagger.android.support.R$styleable: int Toolbar_title
kotlin.text.StringsKt___StringsKt: boolean any(java.lang.CharSequence)
androidx.core.app.ActivityCompat: void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
kotlin.io.FilesKt__FileReadWriteKt: java.lang.String readText$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object)
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mNeutralButtonIcon
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: int indexOf(boolean)
io.reactivex.internal.util.BackpressureHelper: long producedCancel(java.util.concurrent.atomic.AtomicLong,long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE
androidx.versionedparcelable.VersionedParcel: void writeDoubleArray(double[],int)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int)
com.example.revolut.rates.R$id: int clip_horizontal
com.example.revolut.rates.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource)
androidx.core.R$color: int notification_icon_bg_color
kotlinx.coroutines.channels.ProducerScope: kotlinx.coroutines.channels.SendChannel getChannel()
androidx.media.session.MediaButtonReceiver: android.app.PendingIntent buildMediaButtonPendingIntent(android.content.Context,android.content.ComponentName,long)
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(int[],kotlin.jvm.functions.Function1)
kotlin.collections.GroupingKt__GroupingKt: java.util.Map foldTo(kotlin.collections.Grouping,java.util.Map,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function3)
androidx.legacy.coreutils.R$style: int TextAppearance_Compat_Notification
androidx.coordinatorlayout.R$styleable: int GradientColor_android_startY
kotlin.collections.AbstractMutableMap: java.lang.Object put(java.lang.Object,java.lang.Object)
io.reactivex.Flowable: io.reactivex.Single contains(java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.core.text.PrecomputedTextCompat
io.reactivex.internal.operators.single.SingleDematerialize: void subscribeActual(io.reactivex.MaybeObserver)
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope valueOf(java.lang.String)
kotlin.UseExperimental: java.lang.Class[] markerClass()
androidx.appcompat.widget.TintTypedArray: int getInt(int,int)
dagger.android.support.R
dagger.android.support.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
androidx.core.ktx.R$drawable: int notification_bg_low_normal
dagger.android.HasContentProviderInjector: dagger.android.AndroidInjector contentProviderInjector()
io.reactivex.internal.observers.DisposableLambdaObserver: void onComplete()
com.example.revolut.rates.data.model.Rate: void setCode(java.lang.String)
androidx.versionedparcelable.VersionedParcel: void writeSerializable(java.io.Serializable,int)
androidx.core.R$styleable: int FontFamily_fontProviderQuery
androidx.customview.widget.ExploreByTouchHelper: boolean dispatchHoverEvent(android.view.MotionEvent)
androidx.recyclerview.widget.GridLayoutManager: void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int)
kotlin.ranges.UIntProgression: java.lang.String toString()
androidx.lifecycle.ReflectiveGenericLifecycleObserver
io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.legacy.coreui.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.loader.R$dimen: int notification_big_circle_margin
io.reactivex.internal.operators.observable.ObservableFlatMapSingle
androidx.collection.ArraySet: void append(java.lang.Object)
androidx.databinding.adapters.CalendarViewBindingAdapter: CalendarViewBindingAdapter()
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key)
io.reactivex.disposables.CompositeDisposable: CompositeDisposable()
dagger.android.support.R$styleable: int ActionBar_displayOptions
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Tooltip
android.support.v4.media.session.MediaSessionCompat: MediaSessionCompat(android.content.Context,java.lang.String)
com.example.revolut.rates.R$color: int abc_secondary_text_material_dark
androidx.constraintlayout.solver.widgets.ConstraintWidget: void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int)
dagger.android.support.R$style: int Base_Widget_AppCompat_Button_Colored
androidx.fragment.R$drawable
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$none$3
androidx.core.app.Person: androidx.core.graphics.drawable.IconCompat getIcon()
io.reactivex.internal.operators.completable.CompletableEmpty: void subscribeActual(io.reactivex.CompletableObserver)
androidx.drawerlayout.R$styleable: int FontFamilyFont_ttcIndex
androidx.appcompat.R$id: int notification_main_column_container
androidx.core.app.NotificationCompat$Action$WearableExtender
androidx.core.view.GravityCompat: int RELATIVE_LAYOUT_DIRECTION
androidx.media.MediaBrowserServiceCompat$BrowserRoot: java.lang.String EXTRA_SUGGESTION_KEYWORDS
androidx.lifecycle.ComputableLiveData: java.lang.Object compute()
com.example.revolut.rates.R$drawable: int abc_list_pressed_holo_light
androidx.viewpager.R$styleable: int GradientColor_android_startX
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_EMBEDDING
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8
com.jakewharton.rxbinding3.widget.SeekBarProgressChangeEvent: int component2()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object lastOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource)
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void dependsOn(androidx.constraintlayout.solver.widgets.ResolutionAnchor,int)
com.google.gson.internal.bind.TimeTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
androidx.versionedparcelable.VersionedParcel: android.os.IBinder readStrongBinder(android.os.IBinder,int)
androidx.viewpager.widget.PagerTitleStrip: PagerTitleStrip(android.content.Context,android.util.AttributeSet)
androidx.core.graphics.RegionKt: boolean contains(android.graphics.Region,android.graphics.Point)
androidx.swiperefreshlayout.R$id: int action_divider
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
io.reactivex.internal.operators.completable.CompletableErrorSupplier
io.reactivex.internal.subscriptions.SubscriptionArbiter: boolean unbounded
okio.Buffer: okio.Buffer writeTo(java.io.OutputStream,long)
androidx.core.util.SparseLongArrayKt: boolean isNotEmpty(android.util.SparseLongArray)
android.support.v4.media.session.MediaControllerCompat: void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
okio.ByteString: java.lang.String base64Url()
io.reactivex.FlowableEmitter: long requested()
kotlinx.coroutines.JobImpl: JobImpl()
androidx.lifecycle.extensions.R$styleable: int GradientColor_android_centerX
kotlin.collections.ByteIterator: ByteIterator()
io.reactivex.internal.disposables.CancellableDisposable: long serialVersionUID
dagger.android.support.R$drawable: int notification_icon_background
com.example.revolut.rates.R$color: int abc_background_cache_hint_selector_material_dark
kotlin.ranges.ClosedRange: java.lang.Comparable getEndInclusive()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean getClipToPadding()
com.example.revolut.rates.view.adapter.CurrenciesAdapter: double access$getCurrentAmount$p(com.example.revolut.rates.view.adapter.CurrenciesAdapter)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isViewPartiallyVisible(android.view.View,boolean,boolean)
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_ActivityChooserView
okio.ByteString: okio.ByteString encodeString(java.lang.String,java.nio.charset.Charset)
androidx.appcompat.R$string: int abc_searchview_description_clear
kotlin.UShort: void data$annotations()
kotlinx.coroutines.JobKt: kotlinx.coroutines.DisposableHandle unregisterOnCompletion(kotlinx.coroutines.Job,kotlinx.coroutines.DisposableHandle)
okhttp3.Response: boolean isSuccessful()
androidx.core.graphics.PathSegment: java.lang.String toString()
io.reactivex.internal.observers.CallbackCompletableObserver: boolean isDisposed()
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout: ConstraintHorizontalLayout()
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
androidx.asynclayoutinflater.R$styleable: int[] FontFamily
io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(io.reactivex.functions.Function,int,org.reactivestreams.Publisher[])
androidx.recyclerview.widget.RecyclerView: void onDetachedFromWindow()
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int ANCHOR_LEFT
androidx.databinding.ObservableByte: ObservableByte(byte)
androidx.appcompat.R$drawable: int notification_action_background
dagger.android.support.R$color: int abc_tint_edittext
io.reactivex.internal.subscriptions.EmptySubscription: void complete(org.reactivestreams.Subscriber)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTooltipText(java.lang.CharSequence)
okio.Buffer: okio.ByteString hmacSha256(okio.ByteString)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate: ObservableRetryBiPredicate(io.reactivex.Observable,io.reactivex.functions.BiPredicate)
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PLAY_PAUSE
androidx.fragment.app.FragmentController: androidx.loader.app.LoaderManager getSupportLoaderManager()
androidx.appcompat.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
androidx.databinding.CallbackRegistry: void add(java.lang.Object)
androidx.appcompat.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.graphics.drawable.Drawable,android.content.DialogInterface$OnClickListener)
io.reactivex.annotations.BackpressureKind
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment[] values()
androidx.fragment.R$id: int italic
androidx.collection.SimpleArrayMap: int hashCode()
kotlinx.coroutines.CoroutineId: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)
kotlinx.coroutines.DefaultTimeSource: long currentTimeMillis()
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String)
kotlinx.coroutines.InactiveNodeList: boolean isActive()
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: long serialVersionUID
androidx.constraintlayout.widget.ConstraintSet
dagger.android.support.R$layout: int notification_media_action
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object firstOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.core.text.PrecomputedTextCompat: java.lang.String toString()
kotlin.sequences.DistinctSequence: DistinctSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.appcompat.R$string: int abc_font_family_menu_material
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ProducerJob produce$default(kotlin.coroutines.CoroutineContext,int,kotlin.jvm.functions.Function2,int,java.lang.Object)
com.jakewharton.rxbinding3.core.R$dimen: int notification_media_narrow_margin
io.reactivex.Observable: io.reactivex.Observable doFinally(io.reactivex.functions.Action)
androidx.appcompat.widget.ListPopupWindow: boolean onKeyDown(int,android.view.KeyEvent)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5
com.example.revolut.rates.R$color: int secondary_text_default_material_dark
androidx.recyclerview.widget.RecyclerView$Adapter: long getItemId(int)
kotlin.UByte: void data$annotations()
io.reactivex.Observable: io.reactivex.observers.TestObserver test(boolean)
androidx.collection.LruCache: java.lang.Object get(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(short[],kotlin.jvm.functions.Function1)
kotlin.ranges.LongRange$Companion
androidx.viewpager.R$dimen: int compat_notification_large_icon_max_width
io.reactivex.internal.operators.flowable.FlowableSingleMaybe
okhttp3.internal.http2.Header
androidx.appcompat.view.menu.MenuBuilder: void restorePresenterStates(android.os.Bundle)
com.example.revolut.rates.databinding.ActivityMainBinding
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending-rL5Bavg(short[])
io.reactivex.internal.subscribers.BasicFuseableSubscriber: boolean offer(java.lang.Object)
io.reactivex.observers.DisposableObserver: boolean isDisposed()
com.example.revolut.rates.R$dimen: int item_touch_helper_swipe_escape_velocity
okhttp3.Request$Builder: okhttp3.Request build()
androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()
kotlinx.coroutines.Job: boolean cancel(java.lang.Throwable)
androidx.appcompat.R$attr: int listChoiceBackgroundIndicator
androidx.core.provider.FontsContractCompat: android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])
androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()
dagger.android.support.R$dimen: int abc_edit_text_inset_horizontal_material
androidx.drawerlayout.widget.DrawerLayout: void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
android.support.v4.media.session.MediaControllerCompat$Callback: void onSessionDestroyed()
okhttp3.internal.ws.RealWebSocket: boolean send(java.lang.String)
kotlin.collections.AbstractMutableCollection: int getSize()
kotlin.OptionalExpectation
com.google.gson.stream.JsonWriter: void setHtmlSafe(boolean)
androidx.appcompat.view.menu.MenuBuilder$Callback: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.drawerlayout.R$styleable: int GradientColorItem_android_offset
androidx.appcompat.app.AlertController$AlertParams
kotlinx.coroutines.internal.ThreadLocalElement: ThreadLocalElement(java.lang.Object,java.lang.ThreadLocal)
androidx.recyclerview.widget.RecyclerView: int getChildPosition(android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getInputType()
androidx.loader.R$string: int status_bar_notification_info_overflow
android.support.v4.media.session.PlaybackStateCompat: int REPEAT_MODE_ALL
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int nextInt$kotlinx_coroutines_core(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
kotlin.coroutines.jvm.internal.RunSuspendKt
android.support.v4.media.MediaDescriptionCompat: android.net.Uri getMediaUri()
kotlinx.coroutines.Job: void cancelChildren(java.lang.Throwable)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getFromIndex()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
io.reactivex.internal.subscribers.BlockingSubscriber
android.support.v4.app.INotificationSideChannel$Stub$Proxy: void cancel(java.lang.String,int,java.lang.String)
okio.ByteString: okio.ByteString sha256()
io.reactivex.annotations.SchedulerSupport: java.lang.String IO
androidx.appcompat.view.menu.MenuItemImpl: void actionFormatChanged()
androidx.core.widget.TintableImageSourceView: android.content.res.ColorStateList getSupportImageTintList()
androidx.fragment.app.FragmentStatePagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(float[])
kotlin.ranges.RangesKt___RangesKt: float coerceAtLeast(float,float)
kotlin.collections.AbstractMutableMap: java.util.Set keySet()
androidx.swiperefreshlayout.R$id
androidx.core.R$styleable: int ColorStateListItem_android_alpha
dagger.android.support.R$id: int showCustom
dagger.android.support.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
okio.BufferedSource: int readUtf8CodePoint()
kotlin.sequences.SequencesKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1: SequencesKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1(kotlin.jvm.functions.Function2)
androidx.legacy.coreui.R$id: int info
androidx.core.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()
okhttp3.internal.http1.Http1Codec: okio.Source newFixedLengthSource(long)
kotlin.text.UStringsKt: int toUInt(java.lang.String)
androidx.constraintlayout.widget.R$attr: int layout_constraintCircleRadius
androidx.fragment.R$styleable
androidx.vectordrawable.R$styleable: int[] FontFamily
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
kotlin.jvm.internal.InlineMarker: void mark(int)
io.reactivex.internal.operators.observable.ObservableDoAfterNext
kotlinx.coroutines.DispatchedContinuation: java.lang.String toString()
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence emptySequence()
com.example.revolut.rates.R$drawable: int icon_myr
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(long[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
com.google.gson.JsonArray: java.lang.String getAsString()
kotlinx.coroutines.selects.SelectBuilderImpl$disposeOnSelect$$inlined$addLastIf$1: SelectBuilderImpl$disposeOnSelect$$inlined$addLastIf$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.selects.SelectBuilderImpl)
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
androidx.appcompat.app.WindowDecorActionBar: void setWindowTitle(java.lang.CharSequence)
kotlin.jvm.internal.MutablePropertyReference0: java.lang.Object getDelegate()
androidx.fragment.app.Fragment: boolean getAllowReturnTransitionOverlap()
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: int component5()
androidx.core.util.SizeKt: int component2(android.util.Size)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] sortedArray-QwZRm1k(long[])
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(int,int)
com.google.gson.Gson: com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.channels.LinkedListChannel: LinkedListChannel()
kotlinx.coroutines.AbstractCoroutine: AbstractCoroutine(kotlin.coroutines.CoroutineContext,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet)
androidx.loader.R$style: int TextAppearance_Compat_Notification_Time
androidx.drawerlayout.R$id: int action_text
androidx.core.R$styleable
androidx.customview.R$styleable: int FontFamily_fontProviderCerts
dagger.android.support.R$id: int line3
androidx.core.content.ContentResolverCompat: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,androidx.core.os.CancellationSignal)
androidx.appcompat.view.menu.MenuView$ItemView: void setEnabled(boolean)
androidx.lifecycle.extensions.R$attr: int fontProviderQuery
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(byte[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int ActionBar_itemPadding
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable: void subscribeActual(io.reactivex.CompletableObserver)
com.example.revolut.rates.R$styleable: int ConstraintSet_android_rotationX
androidx.core.widget.ContentLoadingProgressBar
androidx.core.widget.TextViewCompat: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,long)
androidx.appcompat.view.menu.ListMenuItemView: void onMeasure(int,int)
androidx.media.R$color: int notification_icon_bg_color
androidx.appcompat.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_goneMarginTop
kotlin.jvm.functions.Function16: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.R$dimen: int hint_alpha_material_dark
okhttp3.Handshake: int hashCode()
okhttp3.Cache: Cache(java.io.File,long)
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function7)
kotlin.DslMarker
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDimension(int,int)
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()
androidx.appcompat.view.ContextThemeWrapper: void applyOverrideConfiguration(android.content.res.Configuration)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setText(java.lang.CharSequence)
androidx.core.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)
androidx.recyclerview.widget.GridLayoutManager: void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup)
kotlin.text.CharDirectionality: int getValue()
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Void numberFormatError(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(float[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
io.reactivex.internal.operators.completable.CompletableConcatArray: CompletableConcatArray(io.reactivex.CompletableSource[])
io.reactivex.Flowable: java.lang.Object to(io.reactivex.functions.Function)
kotlin.math.MathKt__MathJVMKt: void ulp$annotations(double)
dagger.android.support.R$bool
androidx.fragment.app.FragmentTransaction
io.reactivex.Flowable: io.reactivex.Flowable concatArrayEagerDelayError(int,int,org.reactivestreams.Publisher[])
androidx.media.AudioAttributesCompat: int getContentType()
androidx.appcompat.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
androidx.loader.content.Loader$ForceLoadContentObserver: Loader$ForceLoadContentObserver(androidx.loader.content.Loader)
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_PopupMenu
io.reactivex.Observable: io.reactivex.Observable observeOn(io.reactivex.Scheduler,boolean)
io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float lastOrNull(float[])
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Tooltip
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver: long serialVersionUID
androidx.appcompat.R$styleable: int[] AppCompatSeekBar
androidx.core.app.JobIntentService: boolean onStopCurrentWork()
kotlin.collections.CollectionsKt___CollectionsKt: int sumOfShort(java.lang.Iterable)
androidx.legacy.coreutils.R$attr: int fontWeight
com.example.revolut.rates.R$drawable: int icon_ils
androidx.viewpager.R$id: int actions
androidx.core.util.PairKt: kotlin.Pair toKotlinPair(android.util.Pair)
com.google.gson.internal.LinkedTreeMap: java.lang.Object remove(java.lang.Object)
kotlin.random.Random: int nextInt(int)
androidx.appcompat.widget.ActionBarContextView: void initForMode(androidx.appcompat.view.ActionMode)
io.reactivex.internal.operators.flowable.FlowableReplay
dagger.android.DaggerApplication_MembersInjector: DaggerApplication_MembersInjector(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
androidx.recyclerview.R$styleable: int FontFamily_fontProviderAuthority
androidx.appcompat.graphics.drawable.DrawableContainer: void setAutoMirrored(boolean)
androidx.appcompat.R$string: int abc_font_family_body_2_material
androidx.constraintlayout.solver.Metrics: long bfs
androidx.appcompat.widget.AppCompatButton: void onTextChanged(java.lang.CharSequence,int,int,int)
androidx.appcompat.widget.ActionBarContextView
io.reactivex.Flowable: io.reactivex.Single first(java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6: java.util.Iterator iterator()
androidx.recyclerview.R$integer
com.example.revolut.rates.R$id: int item_touch_helper_previous_elevation
com.jakewharton.rxbinding3.core.R$styleable: int FontFamily_fontProviderAuthority
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio
kotlin.text.StringsKt__RegexExtensionsKt: StringsKt__RegexExtensionsKt()
androidx.asynclayoutinflater.R$id: int notification_main_column_container
androidx.slidingpanelayout.R$attr: int ttcIndex
androidx.appcompat.R$attr: int actionModePasteDrawable
kotlinx.coroutines.channels.TickerChannelsKt: kotlinx.coroutines.channels.ReceiveChannel ticker$default(long,java.util.concurrent.TimeUnit,long,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.TickerMode,int,java.lang.Object)
androidx.databinding.InverseBindingMethod: java.lang.String attribute()
androidx.collection.LruCache: java.lang.String toString()
kotlin.collections.MovingSubList: java.lang.Object get(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(char[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat: float getPivotX(android.view.View)
io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.R$dimen: int abc_button_padding_horizontal_material
okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)
kotlin.collections.AbstractIterator: void done()
androidx.swiperefreshlayout.R$id: int right_icon
dagger.android.support.R$attr: int subtitleTextColor
com.example.revolut.rates.R$id: int action_text
android.support.v4.media.session.MediaSessionCompat$QueueItem: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.view.StandaloneActionMode: void invalidate()
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope LIBRARY_GROUP
okhttp3.HttpUrl: java.lang.String encodedFragment()
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object)
androidx.appcompat.R$styleable: int ColorStateListItem_android_alpha
com.example.revolut.rates.R$styleable: int AppCompatTheme_colorControlHighlight
io.reactivex.Flowable: io.reactivex.Flowable fromPublisher(org.reactivestreams.Publisher)
dagger.android.support.R$string: int abc_font_family_display_1_material
kotlin.io.FileTreeWalk: int access$getMaxDepth$p(kotlin.io.FileTreeWalk)
io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)
kotlin.coroutines.experimental.EmptyCoroutineContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.jakewharton.rxbinding3.widget.AdapterViewNothingSelectionEvent: android.widget.AdapterView component1()
androidx.recyclerview.widget.RecyclerView: void onChildDetachedFromWindow(android.view.View)
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener
androidx.core.view.ViewGroupCompat: int LAYOUT_MODE_CLIP_BOUNDS
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
androidx.legacy.coreui.R$layout: int notification_action
androidx.appcompat.widget.DropDownListView: void drawableStateChanged()
kotlin.text.StringsKt___StringsKt: java.lang.Iterable withIndex(java.lang.CharSequence)
androidx.appcompat.R$id: int title_template
io.reactivex.Flowable: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function)
dagger.android.support.R$drawable: int abc_ic_star_half_black_48dp
androidx.legacy.widget.Space: void draw(android.graphics.Canvas)
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate$RetryBiSubscriber: long serialVersionUID
dagger.android.support.R$layout: int abc_list_menu_item_icon
androidx.core.view.animation.PathInterpolatorCompat
androidx.fragment.app.FragmentTabHost: void onDetachedFromWindow()
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget CONSTRUCTOR
dagger.android.support.R$attr: int actionBarSplitStyle
kotlin.text.StringsKt__StringsJVMKt: boolean regionMatches$default(java.lang.String,int,java.lang.String,int,int,boolean,int,java.lang.Object)
androidx.viewpager.R$styleable: int GradientColor_android_startY
androidx.core.view.ActionProvider$SubUiVisibilityListener
androidx.core.util.ObjectsCompat: int hashCode(java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable concatArrayEagerDelayError(io.reactivex.ObservableSource[])
dagger.internal.MapProviderFactory: java.util.Map get()
io.reactivex.Single: io.reactivex.Single retry(long)
kotlin.jvm.functions.Function10
kotlinx.coroutines.Job: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.R$id: int notification_main_column
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
com.example.revolut.rates.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
kotlin.ranges.ClosedRange: boolean contains(java.lang.Comparable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getChildCount()
kotlin.text.StringsKt___StringsKt: java.lang.Iterable asIterable(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: int lastIndexOf(java.lang.Object)
io.reactivex.internal.observers.BiConsumerSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createSlackVariable()
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPassword(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_NEXT_AT_MOVEMENT_GRANULARITY
androidx.swiperefreshlayout.R$string: int status_bar_notification_info_overflow
androidx.coordinatorlayout.R$styleable: int GradientColor_android_endColor
kotlinx.coroutines.channels.ArrayBroadcastChannel: int getCapacity()
io.reactivex.Maybe: io.reactivex.Maybe just(java.lang.Object)
dagger.android.FragmentKey
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintHeight_max
android.support.v4.media.session.IMediaSession: int getRatingType()
androidx.media.app.NotificationCompat$MediaStyle: androidx.media.app.NotificationCompat$MediaStyle setMediaSession(android.support.v4.media.session.MediaSessionCompat$Token)
com.example.revolut.rates.R$style: int Widget_AppCompat_ListPopupWindow
androidx.core.R$id: int italic
androidx.appcompat.R$styleable: int ActionBar_indeterminateProgressStyle
androidx.appcompat.view.menu.MenuBuilder: boolean performIdentifierAction(int,int)
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality POP_DIRECTIONAL_FORMAT
dagger.android.support.R$color: int abc_primary_text_material_dark
androidx.recyclerview.widget.GridLayoutManager: void setStackFromEnd(boolean)
androidx.legacy.coreutils.R$styleable: int GradientColor_android_startY
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable drags(android.view.View,kotlin.jvm.functions.Function1)
io.reactivex.internal.subscribers.FutureSubscriber
com.example.revolut.rates.R$attr: int subtitle
io.reactivex.internal.observers.BlockingObserver: java.lang.Object TERMINATED
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map groupBy(java.lang.Iterable,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.single.SingleFromUnsafeSource
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context)
androidx.collection.SimpleArrayMap
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons UNDECIDED
com.example.revolut.rates.R$layout: int select_dialog_item_material
dagger.android.support.R$color: int primary_text_disabled_material_dark
retrofit2.Retrofit$Builder: retrofit2.Retrofit build()
io.reactivex.internal.observers.FutureSingleObserver: boolean isDisposed()
androidx.core.graphics.drawable.WrappedDrawable: void setWrappedDrawable(android.graphics.drawable.Drawable)
androidx.core.widget.NestedScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)
kotlin.collections.SetsKt__SetsKt: SetsKt__SetsKt()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void close()
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(byte[],java.lang.Iterable)
dagger.android.support.R$styleable: int ActionBarLayout_android_layout_gravity
io.reactivex.internal.subscribers.QueueDrainSubscriber: boolean done()
androidx.lifecycle.extensions.R$styleable: int ColorStateListItem_android_color
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context)
io.reactivex.MaybeEmitter: void onSuccess(java.lang.Object)
kotlinx.coroutines.channels.ProducerJob$DefaultImpls: void channel$annotations()
androidx.appcompat.R$id: int buttonPanel
io.reactivex.Maybe: io.reactivex.Flowable merge(org.reactivestreams.Publisher,int)
io.reactivex.Observable: io.reactivex.Observable concatDelayError(java.lang.Iterable)
io.reactivex.observers.DefaultObserver: void onStart()
androidx.constraintlayout.solver.Metrics
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void stop(java.lang.Object)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
androidx.recyclerview.widget.RecyclerView$Adapter: void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object filterNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
androidx.lifecycle.ViewModelProviders: androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.Fragment,androidx.lifecycle.ViewModelProvider$Factory)
io.reactivex.internal.util.EmptyComponent: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: void onNext(java.lang.Object)
io.reactivex.Maybe: io.reactivex.Maybe timeout(org.reactivestreams.Publisher,io.reactivex.MaybeSource)
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe: ObservableMergeWithMaybe(io.reactivex.Observable,io.reactivex.MaybeSource)
android.support.v4.media.session.PlaybackStateCompat: int REPEAT_MODE_GROUP
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeCloseDrawable
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_barrierDirection
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver: long serialVersionUID
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object)
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintAmbientBigPicture()
androidx.legacy.coreui.R$styleable: int CoordinatorLayout_statusBarBackground
androidx.appcompat.R$attr: int actionModeWebSearchDrawable
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertNever(io.reactivex.functions.Predicate)
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcel)
kotlinx.coroutines.scheduling.Task: java.lang.String toString()
io.reactivex.subscribers.SafeSubscriber
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_GCM_SHA256
okhttp3.Cache: int requestCount()
dagger.android.support.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
kotlin.collections.ArraysKt___ArraysJvmKt: char[] plus(char[],char[])
io.reactivex.Observable: io.reactivex.Single all(io.reactivex.functions.Predicate)
dagger.android.AndroidInjection: void inject(android.content.BroadcastReceiver,android.content.Context)
androidx.appcompat.R$styleable: int AppCompatTheme_panelMenuListTheme
kotlin.jvm.internal.MutablePropertyReference2
kotlin.coroutines.jvm.internal.DebugMetadata: int[] i()
androidx.constraintlayout.solver.ArrayRow
kotlin.collections.EmptyList: java.lang.Object[] toArray(java.lang.Object[])
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence asSequence(java.util.Iterator)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dispatcher(okhttp3.Dispatcher)
io.reactivex.internal.operators.mixed.CompletableAndThenObservable: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableDoOnLifecycle
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(boolean[],boolean,int,int)
androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler
io.reactivex.internal.operators.completable.CompletableToSingle
com.example.revolut.rates.R$styleable: int Toolbar_contentInsetStartWithNavigation
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isChecked()
androidx.appcompat.R$attr: int actionBarSize
androidx.vectordrawable.R$id: int tag_unhandled_key_event_manager
androidx.recyclerview.widget.SnapHelper: boolean onFling(int,int)
androidx.appcompat.view.menu.MenuBuilder: void setGroupDividerEnabled(boolean)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(long[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double min(double[])
androidx.lifecycle.extensions.R$color: int notification_icon_bg_color
kotlinx.coroutines.scheduling.GlobalQueue: GlobalQueue()
com.example.revolut.rates.R$id: int middle
io.reactivex.internal.util.QueueDrain: boolean cancelled()
io.reactivex.internal.operators.observable.ObservableTakeUntil: ObservableTakeUntil(io.reactivex.ObservableSource,io.reactivex.ObservableSource)
io.reactivex.internal.operators.maybe.MaybeDoOnEvent: MaybeDoOnEvent(io.reactivex.MaybeSource,io.reactivex.functions.BiConsumer)
androidx.loader.content.Loader: boolean takeContentChanged()
kotlin.UByteArray: boolean containsAll-impl(byte[],java.util.Collection)
io.reactivex.internal.operators.flowable.FlowableRepeatUntil
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT
kotlinx.coroutines.sync.Mutex
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean isSlideable()
androidx.core.view.ViewCompat: int getMinimumWidth(android.view.View)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCustomHeadsUpContentView(android.widget.RemoteViews)
androidx.media.MediaBrowserServiceCompat: void onUnsubscribe(java.lang.String)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence sortedWith(kotlin.sequences.Sequence,java.util.Comparator)
io.reactivex.Observable: io.reactivex.Observable intervalRange(long,long,long,long,java.util.concurrent.TimeUnit)
kotlinx.coroutines.scheduling.TasksKt
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet,int)
kotlin.collections.ArraysKt___ArraysKt: byte[] toByteArray(java.lang.Byte[])
kotlin.ranges.LongProgression: boolean isEmpty()
io.reactivex.internal.operators.completable.CompletableFromCallable: CompletableFromCallable(java.util.concurrent.Callable)
androidx.appcompat.R$drawable: int abc_item_background_holo_light
com.example.revolut.rates.data.repository.CurrenciesRepository: void setRatesApi(com.example.revolut.rates.data.RatesApi)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: java.lang.Object invokeSuspend(java.lang.Object)
com.google.gson.Gson: java.lang.String toString()
kotlin.ranges.ULongProgression: boolean equals(java.lang.Object)
io.reactivex.plugins.RxJavaPlugins: void setComputationSchedulerHandler(io.reactivex.functions.Function)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(boolean[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintHorizontal_bias
androidx.collection.LongSparseArray: boolean containsKey(long)
dagger.android.support.R$attr: int spinBars
androidx.appcompat.R$id: int right
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void clearSelection()
kotlin.collections.ArraysKt___ArraysKt: short first(short[],kotlin.jvm.functions.Function1)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder authenticator(okhttp3.Authenticator)
dagger.android.support.R$dimen: int hint_alpha_material_light
androidx.appcompat.widget.Toolbar: void setContentInsetsAbsolute(int,int)
com.example.revolut.rates.R$style: int Base_Theme_AppCompat_Dialog_Alert
androidx.customview.R$attr: int fontStyle
io.reactivex.internal.operators.flowable.FlowableCountSingle: FlowableCountSingle(io.reactivex.Flowable)
kotlin.sequences.USequencesKt___USequencesKt: int sumOfUByte(kotlin.sequences.Sequence)
com.jakewharton.rxbinding3.view.MenuItemActionViewExpandEvent: java.lang.String toString()
dagger.android.support.R$attr: int alertDialogCenterButtons
kotlin.sequences.TakeWhileSequence
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: boolean contains(java.lang.Object)
okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)
kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.CoroutineDispatcher asCoroutineDispatcher(java.util.concurrent.Executor)
dagger.android.support.R$styleable: int MenuItem_tooltipText
androidx.core.graphics.ImageDecoderKt: android.graphics.Bitmap decodeBitmap(android.graphics.ImageDecoder$Source,kotlin.jvm.functions.Function3)
dagger.android.support.R$attr: int defaultQueryHint
androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence getDrawerTitle(int)
io.reactivex.internal.operators.parallel.ParallelFlatMap: void subscribe(org.reactivestreams.Subscriber[])
io.reactivex.Observable: io.reactivex.Observable debounce(io.reactivex.functions.Function)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.jakewharton.rxbinding3.widget.AdapterViewNothingSelectionEvent: int hashCode()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHeightWrapContent(boolean)
androidx.appcompat.R$styleable: int AppCompatTheme_actionMenuTextColor
androidx.appcompat.R$styleable: int[] FontFamily
androidx.appcompat.R$styleable: int TextAppearance_android_textStyle
kotlin.ranges.UIntRange: boolean equals(java.lang.Object)
kotlin.jvm.internal.Ref$FloatRef
io.reactivex.Single: io.reactivex.Observable concat(io.reactivex.ObservableSource)
androidx.core.R$drawable: int notify_panel_notification_icon_bg
android.support.v4.media.session.MediaSessionCompat: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
androidx.appcompat.view.menu.SubMenuBuilder: void setQwertyMode(boolean)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
dagger.multibindings.StringKey
io.reactivex.internal.subscribers.DeferredScalarSubscriber: void onSubscribe(org.reactivestreams.Subscription)
dagger.android.support.R$attr: int textAllCaps
androidx.loader.content.CursorLoader: java.lang.String getSelection()
kotlin.ranges.ULongRange: java.lang.Comparable getStart()
okhttp3.FormBody: okhttp3.MediaType contentType()
com.example.revolut.rates.di.AppModule: retrofit2.Retrofit provideRetrofit()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(short[],java.lang.Iterable)
io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)
io.reactivex.internal.operators.flowable.FlowableFromObservable: void subscribeActual(org.reactivestreams.Subscriber)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)
kotlin.jvm.internal.Intrinsics: void checkHasClass(java.lang.String,java.lang.String)
androidx.appcompat.view.menu.ListMenuPresenter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection getConnection()
kotlin.collections.UArraysKt: int contentHashCode--ajY-9A(int[])
io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable autoConnect(int)
androidx.core.view.ViewGroupKt: void updateMargins(android.view.ViewGroup$MarginLayoutParams,int,int,int,int)
kotlinx.coroutines.internal.ArrayCopyKt: void arraycopy(java.lang.Object[],int,java.lang.Object[],int,int)
androidx.core.internal.view.SupportMenuItem: java.lang.CharSequence getContentDescription()
io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableDelay
androidx.vectordrawable.R$id: int top
kotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaClass(java.lang.Object)
io.reactivex.internal.schedulers.SingleScheduler: io.reactivex.Scheduler$Worker createWorker()
kotlin.collections.ArraysKt___ArraysKt: int sumBy(double[],kotlin.jvm.functions.Function1)
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.observable.ObservableLastMaybe: void subscribeActual(io.reactivex.MaybeObserver)
kotlinx.coroutines.channels.BroadcastChannel$DefaultImpls: kotlinx.coroutines.channels.SubscriptionReceiveChannel open(kotlinx.coroutines.channels.BroadcastChannel)
androidx.cursoradapter.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat z(float)
io.reactivex.internal.operators.observable.ObservableConcatMap
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension: android.view.View getViewForPositionAndType(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
io.reactivex.processors.MulticastProcessor: boolean hasSubscribers()
androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleOwner get()
io.reactivex.internal.util.HalfSerializer: void onNext(io.reactivex.Observer,java.lang.Object,java.util.concurrent.atomic.AtomicInteger,io.reactivex.internal.util.AtomicThrowable)
androidx.constraintlayout.widget.R$id: int spread
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(short[])
com.example.revolut.rates.databinding.ActivityMainBindingImpl
io.reactivex.MaybeOnSubscribe: void subscribe(io.reactivex.MaybeEmitter)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(long,int)
kotlin.coroutines.jvm.internal.ContinuationImpl
kotlin.collections.EmptySet: void clear()
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.jakewharton.rxbinding3.widget.AdapterViewItemLongClickEvent: android.view.View getClickedView()
androidx.legacy.coreutils.R$drawable: int notification_tile_bg
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getLiveRegion()
androidx.media.MediaBrowserServiceCompat: void notifyChildrenChanged(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable timeout(io.reactivex.functions.Function)
io.reactivex.internal.operators.single.SingleZipIterable: SingleZipIterable(java.lang.Iterable,io.reactivex.functions.Function)
kotlinx.coroutines.channels.AbstractChannel: boolean access$enqueueReceive(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.channels.Receive)
androidx.core.transition.TransitionKt$addListener$2: void invoke(android.transition.Transition)
androidx.appcompat.R$dimen: int abc_action_bar_default_height_material
androidx.appcompat.app.ActionBar: boolean invalidateOptionsMenu()
org.intellij.lang.annotations.Language: java.lang.String suffix()
androidx.appcompat.R$dimen: int abc_text_size_subtitle_material_toolbar
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.Number)
androidx.appcompat.widget.DecorToolbar: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
androidx.fragment.app.Fragment: void setAllowReturnTransitionOverlap(boolean)
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.app.ShareCompat$IntentReader: java.lang.String getType()
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(byte[],byte,int,int,int,java.lang.Object)
com.example.revolut.rates.R$style: int Base_V26_Widget_AppCompat_Toolbar
androidx.core.view.ViewCompat: void setTooltipText(android.view.View,java.lang.CharSequence)
okhttp3.CookieJar: okhttp3.CookieJar NO_COOKIES
androidx.core.transition.TransitionKt$addListener$3: androidx.core.transition.TransitionKt$addListener$3 INSTANCE
androidx.customview.R$dimen: int compat_button_padding_vertical_material
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: long serialVersionUID
androidx.appcompat.app.ActionBar$OnMenuVisibilityListener
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isAutoMeasureEnabled()
kotlin.comparisons.UComparisonsKt___UComparisonsKt: byte minOf-Kr8caGY(byte,byte)
kotlinx.coroutines.DispatchedContinuation: DispatchedContinuation(kotlinx.coroutines.CoroutineDispatcher,kotlin.coroutines.Continuation)
io.reactivex.subjects.AsyncSubject: io.reactivex.subjects.AsyncSubject create()
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec RESTRICTED_TLS
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver$OtherObserver: long serialVersionUID
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLongClickable(boolean)
androidx.collection.CircularArray: void removeFromStart(int)
com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent: int component3()
androidx.fragment.app.Fragment: boolean isDetached()
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.appcompat.app.WindowDecorActionBar: void setTitle(int)
androidx.core.text.SpannedStringKt
kotlin.ranges.ULongProgression$Companion: ULongProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
dagger.android.support.R$style: int Widget_AppCompat_TextView_SpinnerItem
androidx.recyclerview.widget.BatchingListUpdateCallback: void onInserted(int,int)
androidx.annotation.Size
com.example.revolut.rates.R$drawable: int abc_ratingbar_indicator_material
com.example.revolut.rates.R$attr: int commitIcon
com.example.revolut.rates.R$drawable: int notify_panel_notification_icon_bg
io.reactivex.Flowable
androidx.appcompat.R$dimen: int abc_floating_window_z
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KProperty getReflected()
androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasObservers()
android.support.v4.media.MediaMetadataCompat: java.lang.CharSequence getText(java.lang.String)
androidx.databinding.adapters.SeekBarBindingAdapter: SeekBarBindingAdapter()
kotlin.collections.MapsKt__MapWithDefaultKt: java.lang.Object getOrImplicitDefaultNullable(java.util.Map,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(float[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object firstOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.ScheduledKt: java.lang.Object withTimeout(int,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode()
kotlin.jvm.internal.ClassReference: void isData$annotations()
io.reactivex.internal.operators.observable.ObservableRange: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.view.menu.BaseMenuPresenter: android.content.Context mContext
androidx.swiperefreshlayout.R$style
okhttp3.Cache: int writeAbortCount()
okio.Buffer: boolean equals(java.lang.Object)
com.jakewharton.rxbinding3.widget.TextViewEditorActionEvent: int component2()
androidx.recyclerview.widget.LinearLayoutManager: int findLastCompletelyVisibleItemPosition()
io.reactivex.Observable: io.reactivex.Observable buffer(long,long,java.util.concurrent.TimeUnit)
io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,boolean)
io.reactivex.internal.operators.flowable.FlowableAllSingle: FlowableAllSingle(io.reactivex.Flowable,io.reactivex.functions.Predicate)
androidx.constraintlayout.solver.widgets.WidgetContainer
androidx.core.view.PointerIconCompat: int TYPE_GRABBING
androidx.core.view.MotionEventCompat: int getButtonState(android.view.MotionEvent)
androidx.appcompat.widget.ListPopupWindow: int getSoftInputMode()
androidx.core.graphics.ColorKt: int toColorInt(java.lang.String)
kotlinx.coroutines.Delay$DefaultImpls: kotlinx.coroutines.DisposableHandle invokeOnTimeout(kotlinx.coroutines.Delay,long,java.util.concurrent.TimeUnit,java.lang.Runnable)
androidx.media.app.NotificationCompat$MediaStyle: NotificationCompat$MediaStyle()
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
kotlin.UByteArray: boolean equals(java.lang.Object)
androidx.core.graphics.drawable.IconCompat: android.os.Bundle toBundle()
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout: ConstraintHorizontalLayout(int,int)
androidx.lifecycle.GenericLifecycleObserver
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View)
dagger.android.support.R$attr: int actionOverflowButtonStyle
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean startNestedScroll(int)
kotlin.text.StringsKt__StringsKt: int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)
dagger.multibindings.ClassKey: java.lang.Class value()
io.reactivex.internal.operators.flowable.FlowableTakeUntil
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle)
kotlin.collections.UCollectionsKt___UCollectionsKt: short[] toUShortArray(java.util.Collection)
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setName(java.lang.CharSequence)
androidx.viewpager.widget.PagerAdapter: void finishUpdate(android.view.ViewGroup)
com.example.revolut.rates.R$attr: int tintMode
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
kotlin.jvm.internal.Ref$FloatRef: Ref$FloatRef()
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)
androidx.fragment.R$style
androidx.asynclayoutinflater.R$layout: int notification_template_part_chronometer
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode SYNCHRONIZED
androidx.appcompat.R$drawable: int abc_ic_star_half_black_36dp
androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener
androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter build()
com.jakewharton.rxbinding3.widget.AdapterViewItemSelectionEvent: android.widget.AdapterView getView()
androidx.core.graphics.PointKt: android.graphics.PointF plus(android.graphics.PointF,android.graphics.PointF)
com.example.revolut.rates.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
androidx.annotation.VisibleForTesting: int NONE
androidx.core.ktx.R$string: int status_bar_notification_info_overflow
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState BLOCKING
androidx.appcompat.app.ActionBar: void removeTab(androidx.appcompat.app.ActionBar$Tab)
androidx.appcompat.R$style: int Widget_AppCompat_Button_Colored
androidx.appcompat.R$attr: int autoSizeTextType
androidx.legacy.coreutils.R$id: int action_image
androidx.databinding.adapters.TextViewBindingAdapter
androidx.legacy.v4.R$id: int icon
androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.core.ktx.R$color: int notification_action_color_filter
com.example.revolut.rates.R$attr: int layout_goneMarginStart
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapNotNullTo$1: ChannelsKt__Channels_commonKt$mapNotNullTo$1(kotlin.coroutines.Continuation)
com.example.revolut.rates.R$attr: int subMenuArrow
dagger.android.support.R$style
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.widget.ActionMenuView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
io.reactivex.Maybe: io.reactivex.Maybe takeUntil(org.reactivestreams.Publisher)
androidx.core.view.MenuKt$children$1
androidx.core.animation.AnimatorKt$addPauseListener$2
okio.BufferedSource: okio.ByteString readByteString(long)
kotlin.jvm.internal.TypeIntrinsics: java.lang.Iterable asMutableIterable(java.lang.Object)
okhttp3.Headers: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.ThreadContextElementKt: kotlinx.coroutines.ThreadContextElement asContextElement(java.lang.ThreadLocal,java.lang.Object)
kotlinx.coroutines.channels.ActorJob$DefaultImpls: void channel$annotations()
androidx.lifecycle.LifecycleService: android.os.IBinder onBind(android.content.Intent)
androidx.core.view.ViewParentCompat: boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)
kotlinx.coroutines.internal.ConcurrentKt: java.util.List subscriberList()
kotlin.UByte: java.lang.String toString-impl(byte)
dagger.android.support.DaggerFragment_MembersInjector: void injectMembers(java.lang.Object)
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
kotlinx.coroutines.AwaitKt: java.lang.Object awaitAll(java.util.Collection,kotlin.coroutines.Continuation)
io.reactivex.internal.operators.flowable.FlowableFromCallable
androidx.appcompat.widget.ActionBarOverlayLayout: boolean fitSystemWindows(android.graphics.Rect)
com.example.revolut.rates.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
io.reactivex.internal.observers.SubscriberCompletableObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObserverResourceWrapper: ObserverResourceWrapper(io.reactivex.Observer)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalChainStyle(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget[] mNextChainWidget
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BOOLEAN
kotlin.NotImplementedError: NotImplementedError(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.databinding.ObservableArrayMap: void clear()
androidx.appcompat.R$layout: int abc_select_dialog_material
androidx.core.view.ActionProvider: void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long lastOrNull(long[],kotlin.jvm.functions.Function1)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean optimizeFor(int)
androidx.core.content.res.TypedArrayKt: java.lang.CharSequence getTextOrThrow(android.content.res.TypedArray,int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA
androidx.collection.CircularIntArray: void clear()
dagger.android.support.R$id: int shortcut
kotlin.collections.SlidingWindowKt: void checkWindowSizeStep(int,int)
kotlin.sequences.FlatteningSequence$iterator$1: void setItemIterator(java.util.Iterator)
io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(java.lang.Iterable)
androidx.slidingpanelayout.R$id: int line3
io.reactivex.plugins.RxJavaPlugins: boolean isFailOnNonBlockingScheduler()
kotlin.Result$Failure
androidx.core.widget.NestedScrollView: void stopNestedScroll()
io.reactivex.internal.util.MergerBiFunction: MergerBiFunction(java.util.Comparator)
kotlin.io.FilesKt__FileTreeWalkKt: FilesKt__FileTreeWalkKt()
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_HEADING
androidx.constraintlayout.solver.widgets.ConstraintAnchor: int getSnapPriorityLevel()
kotlin.jvm.internal.ByteCompanionObject: int SIZE_BYTES
androidx.legacy.coreui.R$style: int TextAppearance_Compat_Notification_Time
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView: void onChildAttachedToWindow(android.view.View)
androidx.core.app.AppComponentFactory
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set toMutableSet(java.lang.Iterable)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle
okhttp3.internal.Internal: Internal()
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int)
androidx.fragment.R$styleable: int GradientColor_android_centerY
androidx.vectordrawable.R$id: int title
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable longClicks(android.view.View)
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: long serialVersionUID
androidx.lifecycle.extensions.R$styleable: int CoordinatorLayout_Layout_layout_behavior
androidx.fragment.R$styleable: int FontFamilyFont_font
androidx.constraintlayout.widget.R$attr: int layout_constrainedWidth
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2
androidx.core.util.Pools$SimplePool: java.lang.Object acquire()
dagger.android.support.R$style: int Base_Widget_AppCompat_ListView_DropDown
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object foldIndexed(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function3)
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher: MaybeTakeUntilPublisher(io.reactivex.MaybeSource,org.reactivestreams.Publisher)
kotlinx.coroutines.DispatchedTask: java.lang.Object getSuccessfulResult(java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable sample(io.reactivex.ObservableSource,boolean)
kotlin.random.AbstractPlatformRandom: int nextInt(int)
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1: int invoke(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableHide: void subscribeActual(io.reactivex.Observer)
com.example.revolut.rates.R$styleable: int ActionMode_subtitleTextStyle
androidx.appcompat.view.menu.MenuAdapter: androidx.appcompat.view.menu.MenuBuilder getAdapterMenu()
androidx.appcompat.R$attr: int textAppearanceListItemSmall
androidx.core.view.PointerIconCompat: int TYPE_CELL
androidx.fragment.app.FragmentController: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(short[])
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BIG_DECIMAL
okhttp3.internal.connection.RealConnection: int allocationLimit
kotlinx.coroutines.channels.AbstractChannelKt: java.lang.Object CLOSE_RESUMED
dagger.android.support.R$color: int bright_foreground_inverse_material_dark
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(char[],char,int,int)
androidx.appcompat.R$color: int bright_foreground_inverse_material_light
io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer lastOrNull(int[],kotlin.jvm.functions.Function1)
okhttp3.internal.tls.TrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
io.reactivex.subjects.CompletableSubject$CompletableDisposable: long serialVersionUID
kotlin.collections.ArraysKt___ArraysKt: void forEach(long[],kotlin.jvm.functions.Function1)
kotlin.ResultKt: void throwOnFailure(java.lang.Object)
androidx.recyclerview.R$style: int TextAppearance_Compat_Notification
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_Spinner
io.reactivex.CompletableConverter
org.intellij.lang.annotations.RegExp: java.lang.String prefix()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearAnimationCallbacks()
dagger.android.support.R$dimen: int abc_action_bar_icon_vertical_padding_material
kotlin.UByteArray: java.lang.Object[] toArray(java.lang.Object[])
androidx.appcompat.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
kotlinx.coroutines.sync.MutexImpl: boolean tryLock(java.lang.Object)
kotlin.reflect.KFunction$DefaultImpls: void isOperator$annotations()
androidx.databinding.ViewStubProxy
dagger.android.support.R$attr: int closeIcon
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection mapIndexedNotNullTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2)
dagger.releasablereferences.ForReleasableReferences
okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)
androidx.appcompat.R$color: int switch_thumb_disabled_material_dark
androidx.core.R$dimen: int notification_media_narrow_margin
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(double[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.media.MediaBrowserServiceCompat$BrowserRoot: android.os.Bundle getExtras()
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintGuide_end
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
kotlin.sequences.SubSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.SubSequence)
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable touches(android.view.View)
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
io.reactivex.internal.observers.ForEachWhileObserver: void onError(java.lang.Throwable)
okhttp3.ResponseBody: void close()
androidx.databinding.adapters.AdapterViewBindingAdapter: void setOnItemSelectedListener(android.widget.AdapterView,androidx.databinding.adapters.AdapterViewBindingAdapter$OnItemSelected,androidx.databinding.adapters.AdapterViewBindingAdapter$OnNothingSelected,androidx.databinding.InverseBindingListener)
androidx.appcompat.R$styleable: int ButtonBarLayout_allowStacking
io.reactivex.internal.operators.maybe.MaybeFromFuture
androidx.core.widget.TextViewCompat: int getAutoSizeMaxTextSize(android.widget.TextView)
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_WRONG_CERTIFICATES
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle
kotlin.jvm.internal.PackageReference: boolean equals(java.lang.Object)
androidx.annotation.UiThread
com.example.revolut.rates.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
io.reactivex.ObservableConverter: java.lang.Object apply(io.reactivex.Observable)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int)
kotlin.collections.ArraysKt___ArraysKt: int count(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(char[],kotlin.jvm.functions.Function2)
com.jakewharton.rxbinding3.widget.RxTextView: io.reactivex.Observable editorActionEvents$default(android.widget.TextView,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.observers.ConsumerSingleObserver: void onSuccess(java.lang.Object)
org.reactivestreams.Publisher
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()
android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onExtrasChanged(android.os.Bundle)
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener: ViewPager$SimpleOnPageChangeListener()
io.reactivex.internal.subscriptions.ScalarSubscription: void clear()
kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
kotlin.text.StringsKt___StringsKt: void forEachIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2)
androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat$Builder setUsage(int)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hasLogo()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShowAsActionFlags(int)
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_IF_ROOM
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(char[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.appcompat.app.AppCompatActivity: void onPostResume()
androidx.appcompat.view.menu.MenuItemImpl: char getAlphabeticShortcut()
androidx.loader.R$id: int forever
androidx.appcompat.R$attr: int autoCompleteTextViewStyle
android.support.v4.media.session.MediaSessionCompat: int MEDIA_ATTRIBUTE_ARTIST
okhttp3.Dispatcher: void cancelAll()
io.reactivex.Observable: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.widget.DecorToolbar: int getVisibility()
com.example.revolut.rates.R$attr: int multiChoiceItemLayout
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: io.reactivex.observers.BaseTestConsumer$TestWaitStrategy[] values()
androidx.appcompat.widget.AppCompatImageHelper
kotlinx.coroutines.Unconfined: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.core.app.NotificationCompat: int FLAG_FOREGROUND_SERVICE
androidx.media.R$id: int actions
kotlin.sequences.FilteringSequence$iterator$1: java.lang.Object next()
androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener
io.reactivex.internal.operators.single.SingleUnsubscribeOn: SingleUnsubscribeOn(io.reactivex.SingleSource,io.reactivex.Scheduler)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigInteger toBigIntegerOrNull(java.lang.String,int)
kotlin.collections.EmptyList: java.util.Iterator iterator()
io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber: long serialVersionUID
androidx.recyclerview.widget.LinearLayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.R$styleable: int Toolbar_titleTextAppearance
kotlinx.coroutines.internal.SynchronizedKt: void SynchronizedObject$annotations()
androidx.databinding.ObservableChar: ObservableChar()
com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory$Companion: com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory create()
kotlin.coroutines.CoroutineContext$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext)
io.reactivex.internal.operators.flowable.FlowableReduceMaybe: org.reactivestreams.Publisher source()
android.support.v4.app.INotificationSideChannel: void notify(java.lang.String,int,java.lang.String,android.app.Notification)
okhttp3.Request: java.lang.Object tag()
kotlin.ULongArray: boolean contains-VKZWuLQ(long)
dagger.android.support.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
androidx.appcompat.R$attr: int lastBaselineToBottomHeight
dagger.android.support.R$color: int accent_material_dark
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.Headers,okhttp3.RequestBody)
androidx.legacy.coreutils.R$integer
androidx.core.ktx.R$id: int notification_background
com.google.gson.internal.Primitives: java.lang.Class unwrap(java.lang.Class)
kotlinx.coroutines.ThreadPoolDispatcherKt: kotlin.coroutines.CoroutineContext newSingleThreadContext$default(java.lang.String,kotlinx.coroutines.Job,int,java.lang.Object)
androidx.appcompat.R$drawable: int abc_seekbar_tick_mark_material
kotlinx.coroutines.BlockingEventLoop: BlockingEventLoop(java.lang.Thread)
androidx.core.widget.TintableImageSourceView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: long serialVersionUID
com.example.revolut.rates.R$string: int abc_font_family_title_material
androidx.recyclerview.widget.RecyclerView$RecyclerListener: void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.core.R$styleable: int GradientColor_android_centerX
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_android_ttcIndex
io.reactivex.Completable: io.reactivex.Completable doOnDispose(io.reactivex.functions.Action)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int CHAIN_SPREAD
androidx.databinding.adapters.ViewGroupBindingAdapter: ViewGroupBindingAdapter()
com.jakewharton.rxbinding3.widget.SeekBarProgressChangeEvent: com.jakewharton.rxbinding3.widget.SeekBarProgressChangeEvent copy(android.widget.SeekBar,int,boolean)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(long[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.example.revolut.rates.R$styleable: int Spinner_popupTheme
kotlinx.coroutines.selects.SelectBuilderImpl$disposeOnSelect$$inlined$addLastIf$1
androidx.databinding.ViewDataBinding: int getBuildSdkInt()
okhttp3.HttpUrl: java.util.List encodedPathSegments()
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(double[])
io.reactivex.internal.disposables.EmptyDisposable: void complete(io.reactivex.Observer)
androidx.coordinatorlayout.R$dimen: int compat_button_padding_vertical_material
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope GROUP_ID
dagger.android.support.R$drawable: int abc_textfield_search_material
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(java.lang.Object[],java.util.Comparator)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Medium
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(float[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
okhttp3.internal.http.HttpMethod
androidx.appcompat.app.ActionBarDrawerToggle: android.view.View$OnClickListener getToolbarNavigationClickListener()
io.reactivex.subscribers.TestSubscriber: io.reactivex.observers.BaseTestConsumer assertNotSubscribed()
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: boolean contains(java.lang.Object)
retrofit2.Response: java.lang.String message()
androidx.vectordrawable.R$styleable: int FontFamilyFont_android_fontWeight
okhttp3.internal.connection.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)
io.reactivex.Observable: io.reactivex.Single reduce(java.lang.Object,io.reactivex.functions.BiFunction)
androidx.constraintlayout.widget.Group: void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout)
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener: ScrollingTabContainerView$VisibilityAnimListener(androidx.appcompat.widget.ScrollingTabContainerView)
com.google.gson.JsonSyntaxException: long serialVersionUID
androidx.fragment.R$attr: int fontProviderCerts
dagger.android.support.R$attr: int suggestionRowLayout
retrofit2.Response: int code()
androidx.legacy.coreui.R$drawable: int notify_panel_notification_icon_bg
kotlin.collections.ArraysKt___ArraysKt: byte[] reversedArray(byte[])
androidx.recyclerview.R$styleable: int FontFamilyFont_fontWeight
com.jakewharton.rxbinding3.widget.TextViewAfterTextChangeEvent: int hashCode()
kotlin.text.MatchResult: kotlin.text.MatchResult$Destructured getDestructured()
io.reactivex.internal.operators.observable.ObservableUsing: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableFilter: FlowableFilter(io.reactivex.Flowable,io.reactivex.functions.Predicate)
kotlin.collections.TypeAliasesKt: void HashSet$annotations()
okhttp3.internal.http.RealResponseBody: RealResponseBody(java.lang.String,long,okio.BufferedSource)
androidx.recyclerview.R$layout: int notification_template_part_chronometer
retrofit2.http.HTTP: boolean hasBody()
dagger.android.support.R$string: int abc_font_family_subhead_material
androidx.recyclerview.widget.LinearLayoutManager: void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: boolean isEmpty()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_MD5
androidx.loader.R$styleable: int GradientColor_android_endX
dagger.android.support.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
io.reactivex.internal.operators.observable.ObservableCollectSingle
kotlinx.coroutines.selects.SelectInstance: java.lang.Object performAtomicIfNotSelected(kotlinx.coroutines.internal.AtomicDesc)
androidx.core.view.ActionProvider
kotlin.jvm.internal.BooleanSpreadBuilder: BooleanSpreadBuilder(int)
kotlinx.coroutines.CoroutineStart: void invoke(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
androidx.constraintlayout.widget.Constraints$LayoutParams
androidx.core.ktx.R$drawable: int notification_bg_low
androidx.core.net.TrafficStatsCompat: void tagDatagramSocket(java.net.DatagramSocket)
kotlin.text.Typography: char leftSingleQuote
okio.Buffer: okio.Buffer writeInt(int)
com.example.revolut.rates.R$attr: int viewInflaterClass
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_ALARM
io.reactivex.internal.operators.flowable.FlowableRepeatWhen
androidx.appcompat.R$layout: int abc_dialog_title_material
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.internal.Symbol access$getUNLOCK_FAIL$p()
io.reactivex.ObservableOperator
io.reactivex.internal.observers.ForEachWhileObserver: void onNext(java.lang.Object)
kotlin.ranges.CharProgression: char getFirst()
androidx.core.animation.AnimatorKt$doOnResume$$inlined$addPauseListener$1: void onAnimationResume(android.animation.Animator)
kotlin.collections.ArraysKt___ArraysJvmKt: long[] copyInto$default(long[],long[],int,int,int,int,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object singleOrNull(kotlin.sequences.Sequence)
dagger.internal.MembersInjectors$NoOpMembersInjector: dagger.internal.MembersInjectors$NoOpMembersInjector valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_APPEARED_IN_PRE_LAYOUT
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int)
okhttp3.ConnectionSpec$Builder
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion()
kotlin.reflect.KFunction$DefaultImpls: void isInline$annotations()
androidx.fragment.R$styleable: int[] GradientColorItem
kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.text.StringsKt__StringsKt: int lastIndexOf(java.lang.CharSequence,char,int,boolean)
androidx.appcompat.widget.SwitchCompat: void onLayout(boolean,int,int,int,int)
io.reactivex.internal.operators.flowable.FlowableElementAtSingle: io.reactivex.Flowable fuseToFlowable()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean hasIcon()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: int getSpanIndex()
androidx.appcompat.R$style: int Widget_AppCompat_CompoundButton_RadioButton
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver: long serialVersionUID
androidx.core.R$id: int action_container
dagger.Lazy
androidx.viewpager.widget.ViewPager: void addTouchables(java.util.ArrayList)
dagger.internal.MapFactory: java.util.Map get()
io.reactivex.observers.ResourceObserver
androidx.appcompat.R$attr: int contentInsetStart
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(byte,byte)
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mTitle
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString--ajY-9A(int[])
android.support.v4.media.session.IMediaSession: void rate(android.support.v4.media.RatingCompat)
kotlinx.coroutines.scheduling.Task: java.lang.Runnable block
androidx.appcompat.R$attr: int switchPadding
androidx.databinding.ObservableShort: android.os.Parcelable$Creator CREATOR
androidx.constraintlayout.solver.SolverVariable
com.example.revolut.rates.R$attr: int buttonGravity
kotlin.annotation.Repeatable
androidx.appcompat.R$styleable: int View_android_focusable
io.reactivex.internal.operators.observable.ObservablePublishClassic: io.reactivex.ObservableSource publishSource()
androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)
kotlinx.coroutines.channels.ActorKt: kotlinx.coroutines.channels.SendChannel actor(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)
com.example.revolut.rates.common.NotifyCurrencies: void updateCurrenciesRateItems(java.lang.String,java.util.Map)
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor getIOThreadExecutor()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getWidthMode()
kotlin.jvm.internal.InlineMarker
kotlinx.coroutines.test.TestCoroutineContext: long now$default(kotlinx.coroutines.test.TestCoroutineContext,java.util.concurrent.TimeUnit,int,java.lang.Object)
io.reactivex.internal.operators.observable.ObservablePublishAlt: void subscribeActual(io.reactivex.Observer)
android.support.v4.media.session.MediaControllerCompat$TransportControls: void fastForward()
io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,boolean)
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.selects.SelectClause0 getOnJoin()
dagger.android.support.R$styleable: int AppCompatTheme_buttonStyleSmall
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void drawableStateChanged()
io.reactivex.functions.Function6: java.lang.Object apply(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: long serialVersionUID
androidx.recyclerview.R$dimen: int compat_control_corner_material
kotlin.jvm.internal.PropertyReference1: java.lang.Object invoke(java.lang.Object)
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
com.jakewharton.rxbinding3.widget.AdapterViewItemLongClickEvent
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber: long serialVersionUID
androidx.core.text.BidiFormatter$Builder: BidiFormatter$Builder()
kotlin.ranges.CharRange: java.lang.Comparable getEndInclusive()
androidx.vectordrawable.R$drawable: int notify_panel_notification_icon_bg
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.LinearLayoutCompat
com.example.revolut.rates.R$styleable: int ConstraintSet_android_translationX
kotlin.jvm.internal.Reflection: kotlin.reflect.KType nullableTypeOf(java.lang.Class)
com.example.revolut.rates.R$id: int direct
io.reactivex.internal.subscribers.InnerQueuedSubscriber: void onComplete()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(char[],java.util.Collection,kotlin.jvm.functions.Function2)
android.support.v4.media.MediaBrowserCompat: java.lang.String EXTRA_PAGE_SIZE
kotlin.sequences.USequencesKt___USequencesKt: int sumOfUShort(kotlin.sequences.Sequence)
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollVerticalTrackDrawable
kotlin.collections.BooleanIterator
androidx.recyclerview.widget.DiffUtil
dagger.android.support.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
kotlin.collections.EmptyIterator: boolean hasNext()
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] values()
io.reactivex.internal.operators.parallel.ParallelFilter: ParallelFilter(io.reactivex.parallel.ParallelFlowable,io.reactivex.functions.Predicate)
kotlin.io.FilesKt__FileReadWriteKt: void appendText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)
com.example.revolut.rates.R$styleable: int GradientColor_android_centerY
dagger.android.support.R$dimen: int abc_dialog_min_width_major
io.reactivex.internal.operators.observable.ObservableSkipLast
androidx.coordinatorlayout.R$id
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: int lastIndexOf(java.lang.Object)
io.reactivex.schedulers.TestScheduler
okhttp3.Cookie: okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String)
dagger.android.support.R$drawable: int abc_btn_check_to_on_mtrl_015
androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$1: void onTransitionEnd(android.transition.Transition)
kotlin.text.CharCategory: kotlin.text.CharCategory FINAL_QUOTE_PUNCTUATION
androidx.appcompat.app.AlertDialog: AlertDialog(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)
io.reactivex.observers.DisposableSingleObserver: void dispose()
io.reactivex.internal.operators.flowable.FlowableGenerate: void subscribeActual(org.reactivestreams.Subscriber)
com.example.revolut.rates.R$style: int Platform_ThemeOverlay_AppCompat_Light
androidx.customview.R$id: int right_icon
io.reactivex.internal.operators.completable.CompletableConcatIterable: CompletableConcatIterable(java.lang.Iterable)
androidx.fragment.R$dimen: int notification_top_pad
kotlin.collections.MapsKt___MapsKt: java.util.List map(java.util.Map,kotlin.jvm.functions.Function1)
io.reactivex.internal.subscribers.QueueDrainSubscriber: org.reactivestreams.Subscriber downstream
androidx.appcompat.app.WindowDecorActionBar: void setCustomView(int)
com.jakewharton.rxbinding3.widget.RatingBarChangeEvent: boolean component3()
io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable: MaybeIgnoreElementCompletable(io.reactivex.MaybeSource)
androidx.asynclayoutinflater.R$drawable: int notification_action_background
com.jakewharton.rxbinding3.widget.AdapterViewItemSelectionEvent: android.view.View component2()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence drop(kotlin.sequences.Sequence,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(double[],java.lang.Iterable)
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_centerX
androidx.versionedparcelable.VersionedParcel: java.lang.Object[] readArray(java.lang.Object[],int)
android.support.v4.media.session.MediaSessionCompat: void setMediaButtonReceiver(android.app.PendingIntent)
kotlinx.coroutines.internal.AtomicKt: java.lang.Object access$getNO_DECISION$p()
com.example.revolut.rates.view.adapter.CurrenciesAdapter
io.reactivex.processors.AsyncProcessor: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getContentDescription()
io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
io.reactivex.Single: io.reactivex.Single fromCallable(java.util.concurrent.Callable)
androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent: int component3()
io.reactivex.internal.operators.flowable.FlowableScan: FlowableScan(io.reactivex.Flowable,io.reactivex.functions.BiFunction)
androidx.appcompat.R$drawable: int abc_list_pressed_holo_light
io.reactivex.Maybe: io.reactivex.Maybe timeout(long,java.util.concurrent.TimeUnit,io.reactivex.MaybeSource)
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
kotlin.LazyKt
androidx.core.os.CancellationSignal$OnCancelListener
kotlin.coroutines.experimental.CoroutinesKt: void startCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.experimental.Continuation)
androidx.recyclerview.widget.AsyncListUtil: void onRangeChanged()
retrofit2.Retrofit: okhttp3.Call$Factory callFactory()
kotlin.sequences.SequenceScope: SequenceScope()
androidx.appcompat.widget.DecorContentParent
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
androidx.legacy.coreutils.R$dimen: int notification_large_icon_height
io.reactivex.subjects.CompletableSubject: void onComplete()
androidx.core.animation.AnimatorKt$doOnResume$$inlined$addPauseListener$1: void onAnimationPause(android.animation.Animator)
androidx.legacy.v4.R$styleable: int GradientColor_android_startColor
androidx.appcompat.R$integer: int abc_config_activityShortDur
androidx.coordinatorlayout.R$attr: int font
com.example.revolut.rates.R$dimen: int compat_notification_large_icon_max_height
io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit)
androidx.swiperefreshlayout.R$dimen: int compat_button_inset_horizontal_material
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber: long serialVersionUID
com.example.revolut.rates.R$styleable: int Toolbar_titleMarginBottom
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRecyclable()
kotlin.io.AccessDeniedException
androidx.customview.R$dimen: int compat_button_padding_horizontal_material
com.google.gson.JsonStreamParser: boolean hasNext()
okio.Buffer: byte[] readByteArray()
com.google.gson.internal.$Gson$Types: java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])
androidx.recyclerview.widget.RecyclerView$LayoutManager: void scrollToPosition(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getItemViewType(android.view.View)
io.reactivex.internal.operators.observable.ObservableToList: ObservableToList(io.reactivex.ObservableSource,int)
android.support.v4.media.session.MediaControllerCompat: int getRepeatMode()
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setCornerRadius(float)
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(io.reactivex.Scheduler)
kotlin.io.FilesKt__FilePathComponentsKt: kotlin.io.FilePathComponents toComponents(java.io.File)
okio.Sink: void flush()
kotlin.coroutines.jvm.internal.RunSuspendKt: void runSuspend(kotlin.jvm.functions.Function1)
androidx.core.util.LruCacheKt: android.util.LruCache lruCache(int,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4)
kotlin.UByte: int SIZE_BITS
androidx.coordinatorlayout.R$styleable: int ColorStateListItem_android_color
kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUndispatched(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.lifecycle.Transformations
android.support.v4.media.session.PlaybackStateCompat: java.lang.Object getPlaybackState()
io.reactivex.internal.fuseable.FuseToObservable: io.reactivex.Observable fuseToObservable()
androidx.appcompat.R$color: int primary_text_disabled_material_dark
io.reactivex.observers.BaseTestConsumer: java.util.List values
io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(int,long,java.util.concurrent.TimeUnit)
io.reactivex.internal.operators.observable.ObservableCountSingle: void subscribeActual(io.reactivex.SingleObserver)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])
androidx.recyclerview.R$styleable: int GradientColor_android_tileMode
kotlin.text.Regex$Companion: java.lang.String escapeReplacement(java.lang.String)
android.support.v4.media.session.IMediaSession: void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn: void subscribeActual(io.reactivex.MaybeObserver)
dagger.android.support.R$drawable: int abc_text_cursor_material
com.example.revolut.rates.R$styleable: int Toolbar_navigationContentDescription
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder addCustomAction(java.lang.String,java.lang.String,int)
android.support.v4.media.session.IMediaSession
androidx.appcompat.widget.Toolbar: void setTitleMargin(int,int,int,int)
androidx.core.transition.TransitionKt: android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.coordinatorlayout.R$layout: int notification_template_custom_big
dagger.android.support.R$dimen: int abc_text_size_display_1_material
io.reactivex.internal.operators.flowable.FlowableTakePublisher: FlowableTakePublisher(org.reactivestreams.Publisher,long)
dagger.android.support.R$color: int primary_text_disabled_material_light
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(androidx.appcompat.widget.LinearLayoutCompat$LayoutParams)
io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function3)
dagger.android.support.R$id: int action_mode_bar_stub
androidx.customview.R$id: int tag_unhandled_key_event_manager
kotlin.collections.EmptyIterator: void add(java.lang.Void)
dagger.android.support.R$dimen: int abc_text_size_title_material_toolbar
androidx.core.app.FrameMetricsAggregator: int LAYOUT_MEASURE_INDEX
io.reactivex.internal.operators.single.SingleResumeNext: SingleResumeNext(io.reactivex.SingleSource,io.reactivex.functions.Function)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
io.reactivex.Observable: java.lang.Object blockingLast(java.lang.Object)
kotlin.coroutines.jvm.internal.Boxing: java.lang.Byte boxByte(byte)
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator: void validateRequestPermissionsRequestCode(int)
androidx.constraintlayout.solver.widgets.Barrier: void resolve()
kotlinx.coroutines.channels.ConflatedBroadcastChannel: void access$closeSubscriber(kotlinx.coroutines.channels.ConflatedBroadcastChannel,kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber)
kotlin.text.StringsKt___StringsKt: java.util.Map associateBy(java.lang.CharSequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
dagger.android.support.R$drawable: int abc_switch_track_mtrl_alpha
androidx.drawerlayout.R$id: int icon_group
io.reactivex.internal.operators.observable.ObservableInterval$IntervalObserver: long serialVersionUID
androidx.vectordrawable.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
androidx.legacy.content.WakefulBroadcastReceiver
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: int getTop()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateByTo$3: ChannelsKt__Channels_commonKt$associateByTo$3(kotlin.coroutines.Continuation)
androidx.core.view.InputDeviceCompat: int SOURCE_STYLUS
kotlin.collections.CollectionsKt__IteratorsKt: void forEach(java.util.Iterator,kotlin.jvm.functions.Function1)
androidx.viewpager.widget.ViewPager: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
okhttp3.internal.connection.RouteException: void addConnectException(java.io.IOException)
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_fontStyle
androidx.swiperefreshlayout.R$color: int notification_icon_bg_color
androidx.appcompat.view.menu.SubMenuBuilder: void setShortcutsVisible(boolean)
kotlin.jvm.internal.LongSpreadBuilder: LongSpreadBuilder(int)
io.reactivex.internal.schedulers.ComputationScheduler: io.reactivex.disposables.Disposable schedulePeriodicallyDirect(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
kotlinx.coroutines.internal.Symbol: Symbol(java.lang.String)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy)
dagger.android.support.R$color: int ripple_material_dark
kotlin.ranges.CharProgression: boolean equals(java.lang.Object)
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget mLastMatchConstraintWidget
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$minBy$1
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget PROPERTY_SETTER
androidx.core.util.LongSparseArrayKt: boolean isEmpty(android.util.LongSparseArray)
androidx.swiperefreshlayout.R$drawable: int notification_bg_low_pressed
androidx.appcompat.R$style: int Widget_AppCompat_CompoundButton_Switch
androidx.constraintlayout.widget.R$attr: int emptyVisibility
com.example.revolut.rates.R$id: int currency_code
okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setCustomView(android.view.View)
androidx.constraintlayout.solver.LinearSystem: boolean graphOptimizer
androidx.appcompat.R$dimen: int notification_large_icon_height
androidx.appcompat.view.menu.ActionMenuItem: ActionMenuItem(android.content.Context,int,int,int,int,java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
androidx.media.MediaBrowserProtocol: java.lang.String DATA_OPTIONS
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_barrierAllowsGoneWidgets
okio.Buffer: int write(java.nio.ByteBuffer)
android.support.v4.media.session.IMediaSession: boolean isShuffleModeEnabledRemoved()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Class mFontFamily
androidx.appcompat.R$styleable: int[] RecycleListView
androidx.core.content.FileProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)
io.reactivex.internal.operators.observable.ObservableWindowBoundary: void subscribeActual(io.reactivex.Observer)
androidx.core.view.ViewKt$doOnNextLayout$1
okio.Buffer$UnsafeCursor: okio.Buffer buffer
androidx.fragment.app.FragmentTransitionImpl: void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList)
kotlinx.coroutines.scheduling.WorkQueueKt: int BUFFER_CAPACITY
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.util.SortedSet toSortedSet(java.lang.Iterable,java.util.Comparator)
kotlin.collections.EmptyIterator: java.lang.Void previous()
androidx.core.app.Person: androidx.core.app.Person$Builder toBuilder()
io.reactivex.internal.operators.maybe.MaybeMap: MaybeMap(io.reactivex.MaybeSource,io.reactivex.functions.Function)
androidx.core.view.ViewPropertyAnimatorCompat: long getDuration()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int getDirection()
okhttp3.WebSocket: void cancel()
androidx.core.text.SpannableStringKt: android.text.Spannable toSpannable(java.lang.CharSequence)
okhttp3.internal.http1.Http1Codec: okio.Source newUnknownLengthSource()
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(byte[],kotlin.jvm.functions.Function1)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void analyze(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(boolean[],boolean[])
kotlinx.coroutines.channels.ActorJob: kotlinx.coroutines.channels.SendChannel getChannel()
androidx.fragment.R$attr: int fontProviderFetchTimeout
androidx.recyclerview.widget.GridLayoutManager: void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: void forEach(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.appcompat.R$styleable: int AppCompatTheme_android_windowIsFloating
kotlin.collections.ArraysKt___ArraysKt: byte reduce(byte[],kotlin.jvm.functions.Function2)
okhttp3.ConnectionPool: int connectionCount()
androidx.recyclerview.widget.RecyclerView$OnScrollListener: void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertNotTerminated()
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: MaybeCallbackObserver(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
kotlinx.coroutines.Job: boolean isCompleted()
kotlin.io.FilesKt__FileReadWriteKt: void appendText(java.io.File,java.lang.String,java.nio.charset.Charset)
com.example.revolut.rates.R$styleable: int GradientColor_android_startY
kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object receiveOrNull(kotlin.coroutines.Continuation)
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind AT_MOST_ONCE
android.support.v4.media.MediaBrowserCompat$CustomActionCallback: void onError(java.lang.String,android.os.Bundle,android.os.Bundle)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterIndexedTo$3: java.lang.Object invokeSuspend(java.lang.Object)
dagger.android.support.R$styleable: int MenuGroup_android_checkableBehavior
io.reactivex.internal.operators.maybe.MaybeContains: MaybeContains(io.reactivex.MaybeSource,java.lang.Object)
io.reactivex.internal.subscriptions.SubscriptionArbiter: void setSubscription(org.reactivestreams.Subscription)
io.reactivex.Scheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
com.example.revolut.rates.R$dimen: int abc_text_size_small_material
androidx.core.view.KeyEventDispatcher
androidx.appcompat.widget.ToolbarWidgetWrapper: void setCustomView(android.view.View)
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1: void remove()
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(int[])
androidx.swiperefreshlayout.R$dimen: int notification_media_narrow_margin
dagger.android.support.R$anim: int abc_popup_exit
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat_Light
androidx.recyclerview.widget.LinearLayoutManager: int getOrientation()
com.google.gson.internal.LinkedHashTreeMap: LinkedHashTreeMap()
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$1: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$1(kotlin.coroutines.experimental.Continuation,kotlin.jvm.functions.Function1,kotlin.coroutines.experimental.Continuation)
dagger.BindsOptionalOf
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(float[],kotlin.jvm.functions.Function1)
androidx.fragment.R$styleable: int CoordinatorLayout_Layout_layout_behavior
okhttp3.Address: boolean equals(java.lang.Object)
androidx.customview.widget.ExploreByTouchHelper: boolean requestKeyboardFocusForVirtualView(int)
androidx.databinding.ViewDataBinding: long getFromList(android.util.SparseLongArray,int)
kotlin.jvm.internal.Reflection: kotlin.reflect.KType typeOf(java.lang.Class,kotlin.reflect.KTypeProjection,kotlin.reflect.KTypeProjection)
androidx.slidingpanelayout.R$style: int TextAppearance_Compat_Notification_Line2
androidx.appcompat.R$style: int Widget_AppCompat_Button_Borderless_Colored
kotlin.jvm.internal.ClassReference: boolean isData()
androidx.core.util.LruCacheKt$lruCache$1: androidx.core.util.LruCacheKt$lruCache$1 INSTANCE
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression reversed(kotlin.ranges.IntProgression)
okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)
androidx.core.graphics.RectKt
kotlin.io.NoSuchFileException: NoSuchFileException(java.io.File,java.io.File,java.lang.String)
com.jakewharton.rxbinding3.widget.SeekBarStopChangeEvent: com.jakewharton.rxbinding3.widget.SeekBarStopChangeEvent copy(android.widget.SeekBar)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
dagger.android.support.R$layout: int abc_action_menu_item_layout
okio.Buffer: short readShort()
androidx.media.MediaBrowserProtocol: java.lang.String DATA_CUSTOM_ACTION
androidx.appcompat.graphics.drawable.DrawableWrapper: void setFilterBitmap(boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachView(android.view.View)
kotlinx.coroutines.scheduling.CoroutineScheduler: void access$parkedWorkersStackPush(kotlinx.coroutines.scheduling.CoroutineScheduler,kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)
io.reactivex.internal.operators.flowable.FlowableFromPublisher: FlowableFromPublisher(org.reactivestreams.Publisher)
com.google.gson.internal.PreJava9DateFormatProvider: java.text.DateFormat getUSDateFormat(int)
androidx.core.view.ViewCompat: float getScaleX(android.view.View)
io.reactivex.internal.util.NotificationLite: java.lang.Object complete()
androidx.core.animation.AnimatorKt$doOnResume$$inlined$addPauseListener$1
androidx.swiperefreshlayout.R$layout: int notification_template_custom_big
androidx.asynclayoutinflater.R$dimen: int notification_large_icon_height
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.ConstraintSet getConstraintSet()
kotlin.io.FileTreeWalk: kotlin.io.FileTreeWalk onEnter(kotlin.jvm.functions.Function1)
io.reactivex.internal.observers.CallbackCompletableObserver: void onComplete()
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy LATEST
kotlin.collections.ArraysKt___ArraysKt: boolean any(byte[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AbsActionBarView: boolean isOverflowReserved()
androidx.customview.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable
kotlinx.coroutines.CancellableContinuation$DefaultImpls: boolean cancel$default(kotlinx.coroutines.CancellableContinuation,java.lang.Throwable,int,java.lang.Object)
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.sync.Mutex Mutex(boolean)
io.reactivex.subjects.ReplaySubject: boolean hasObservers()
androidx.appcompat.R$drawable: int abc_ic_clear_material
io.reactivex.CompletableOperator: io.reactivex.CompletableObserver apply(io.reactivex.CompletableObserver)
dagger.internal.DoubleCheck: java.lang.Object get()
androidx.appcompat.widget.AppCompatButton: void setTextSize(int,float)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection mapIndexedTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2)
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt[] toTypedArray--ajY-9A(int[])
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
io.reactivex.subscribers.ResourceSubscriber: void onStart()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(int[])
kotlin.sequences.DistinctSequence: java.util.Iterator iterator()
okio.BufferedSource
kotlin.collections.ArraysKt___ArraysKt: long reduceRight(long[],kotlin.jvm.functions.Function2)
io.reactivex.internal.operators.observable.ObservablePublishAlt: io.reactivex.ObservableSource source()
kotlin.collections.ArraysKt___ArraysKt: long[] sortedArray(long[])
androidx.core.util.LongSparseArrayKt: void set(android.util.LongSparseArray,long,java.lang.Object)
androidx.appcompat.app.ActionBar$OnNavigationListener
androidx.loader.app.LoaderManager
androidx.arch.core.internal.SafeIterableMap: boolean equals(java.lang.Object)
okio.HashingSource: okio.HashingSource md5(okio.Source)
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification_Media
io.reactivex.internal.observers.BlockingLastObserver
androidx.loader.content.CursorLoader: android.net.Uri getUri()
io.reactivex.Completable: java.lang.Object as(io.reactivex.CompletableConverter)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void offsetChildrenVertical(int)
androidx.core.internal.view.SupportMenu: int CATEGORY_SHIFT
dagger.android.support.R$styleable: int AppCompatTextView_autoSizeMinTextSize
androidx.appcompat.R$styleable: int Toolbar_titleMarginStart
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
kotlin.text.StringsKt___StringsKt: int count(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] toUShortArray(kotlin.UShort[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(char[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.databinding.ObservableDouble: ObservableDouble()
kotlin.collections.ArraysKt___ArraysKt: long reduce(long[],kotlin.jvm.functions.Function2)
kotlin.text.MatchGroup: kotlin.ranges.IntRange getRange()
androidx.core.view.ViewGroupKt$iterator$1: android.view.View next()
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate
kotlin.sequences.FilteringSequence: FilteringSequence(kotlin.sequences.Sequence,boolean,kotlin.jvm.functions.Function1,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.constraintlayout.solver.widgets.Guideline: int RELATIVE_UNKNWON
androidx.appcompat.R$style: int Theme_AppCompat_Dialog_Alert
io.reactivex.observers.DisposableObserver
kotlin.collections.ArraysKt___ArraysJvmKt: short[] copyInto(short[],short[],int,int,int)
io.reactivex.internal.operators.flowable.FlowableCache: void onError(java.lang.Throwable)
com.example.revolut.rates.data.managers.NetworkManager: com.example.revolut.rates.data.managers.NetworkManager INSTANCE
io.reactivex.internal.subscribers.BlockingSubscriber: java.lang.Object TERMINATED
androidx.constraintlayout.widget.ConstraintHelper: ConstraintHelper(android.content.Context)
com.jakewharton.rxbinding3.widget.AdapterViewItemSelectionEvent: long component4()
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Title
androidx.legacy.coreutils.R$id: int normal
io.reactivex.internal.observers.BasicIntQueueDisposable: long serialVersionUID
androidx.cursoradapter.widget.SimpleCursorAdapter: androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder getViewBinder()
com.google.gson.JsonPrimitive: com.google.gson.JsonElement deepCopy()
com.example.revolut.rates.R$styleable: int RecyclerView_fastScrollVerticalTrackDrawable
io.reactivex.internal.operators.single.SingleMap: void subscribeActual(io.reactivex.SingleObserver)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDimensionRatio(float,int)
androidx.core.view.LayoutInflaterCompat: void setFactory(android.view.LayoutInflater,androidx.core.view.LayoutInflaterFactory)
com.example.revolut.rates.R$styleable: int SearchView_commitIcon
kotlin.collections.EmptyIterator: boolean hasPrevious()
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(int[],kotlin.jvm.functions.Function2)
androidx.core.view.MenuItemCompat: void setShortcut(android.view.MenuItem,char,char,int,int)
kotlin.text.StringsKt__StringsKt: java.lang.String removeSurrounding(java.lang.String,java.lang.CharSequence,java.lang.CharSequence)
kotlin.text.StringsKt___StringsKt: java.lang.Appendable filterIndexedTo(java.lang.CharSequence,java.lang.Appendable,kotlin.jvm.functions.Function2)
dagger.android.AndroidMemorySensitiveReferenceManager_Factory: AndroidMemorySensitiveReferenceManager_Factory(javax.inject.Provider)
androidx.appcompat.widget.SearchView$SavedState
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(char[],kotlin.jvm.functions.Function1)
androidx.appcompat.R$attr: int coordinatorLayoutStyle
dagger.android.support.R$styleable: int View_paddingStart
io.reactivex.internal.util.BackpressureHelper: long addCap(long,long)
android.support.v4.media.MediaBrowserCompat: java.lang.String CUSTOM_ACTION_DOWNLOAD
androidx.fragment.app.FragmentTabHost: void onAttachedToWindow()
androidx.appcompat.R$styleable: int GradientColor_android_centerY
io.reactivex.Observable: io.reactivex.Observable fromCallable(java.util.concurrent.Callable)
io.reactivex.Flowable: io.reactivex.Flowable materialize()
androidx.appcompat.R$attr: int tooltipForegroundColor
okhttp3.internal.http.StatusLine: int code
androidx.core.util.RangeKt: android.util.Range and(android.util.Range,android.util.Range)
androidx.appcompat.widget.ScrollingTabContainerView: void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
okhttp3.Cache: long maxSize()
androidx.core.app.FrameMetricsAggregator: int ANIMATION_INDEX
io.reactivex.internal.operators.flowable.FlowableReduce: FlowableReduce(io.reactivex.Flowable,io.reactivex.functions.BiFunction)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_minWidth
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber$InnerObserver: long serialVersionUID
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: boolean reverseLayout
io.reactivex.Observable: io.reactivex.Observable timestamp()
io.reactivex.subscribers.SafeSubscriber: void onNext(java.lang.Object)
kotlinx.coroutines.internal.LockFreeMPSCQueueKt
okio.ByteString: okio.ByteString toAsciiUppercase()
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String)
com.google.gson.JsonArray: java.math.BigDecimal getAsBigDecimal()
io.reactivex.observers.BaseTestConsumer: java.lang.AssertionError fail(java.lang.String)
androidx.appcompat.app.ActionBarDrawerToggle$Delegate: android.graphics.drawable.Drawable getThemeUpIndicator()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$partition$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.fragment.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: int indexOf(long)
androidx.appcompat.R$attr: int ttcIndex
kotlin.reflect.KType$DefaultImpls
io.reactivex.Observable: io.reactivex.Observable generate(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer,io.reactivex.functions.Consumer)
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onInactive()
com.example.revolut.rates.R$style: int Base_V21_Theme_AppCompat
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.R$id: int right
androidx.fragment.app.Fragment: boolean isVisible()
io.reactivex.schedulers.Schedulers: void start()
com.google.gson.internal.LinkedTreeMap: java.lang.Object writeReplace()
io.reactivex.internal.subscriptions.SubscriptionHelper: void deferredRequest(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicLong,long)
androidx.core.app.NotificationCompat$NotificationVisibility
io.reactivex.internal.util.NotificationLite$DisposableNotification: long serialVersionUID
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
com.example.revolut.rates.R$drawable: int icon_dkk
kotlin.text.StringsKt___StringsKt: java.util.Map groupByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1)
okhttp3.internal.ws.RealWebSocket: RealWebSocket(okhttp3.Request,okhttp3.WebSocketListener,java.util.Random,long)
androidx.databinding.BaseObservable
kotlinx.coroutines.internal.ConcurrentKt
io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty
androidx.appcompat.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
kotlin.UInt: int hashCode()
kotlin.DeprecationLevel: kotlin.DeprecationLevel valueOf(java.lang.String)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintHeight_default
io.reactivex.internal.operators.observable.ObservableDebounceTimed: void subscribeActual(io.reactivex.Observer)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintVertical_chainStyle
kotlin.text.StringsKt___StringsKt: java.util.Collection mapIndexedTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function2)
io.reactivex.Observable: io.reactivex.Observable interval(long,long,java.util.concurrent.TimeUnit)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String)
androidx.core.view.MotionEventCompat: int AXIS_RZ
androidx.recyclerview.widget.DiffUtil$Callback: boolean areContentsTheSame(int,int)
kotlin.sequences.GeneratorSequence$iterator$1: java.lang.Object getNextItem()
dagger.android.support.R$color: int material_grey_100
io.reactivex.observers.SerializedObserver: void dispose()
androidx.lifecycle.extensions.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
kotlin.text.Typography: kotlin.text.Typography INSTANCE
kotlin.jvm.internal.Intrinsics: void throwIllegalArgument()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)
dagger.android.support.R$attr: int actionModeSplitBackground
com.google.gson.internal.Excluder: boolean excludeField(java.lang.reflect.Field,boolean)
dagger.android.support.R$attr: int trackTintMode
kotlin.text.StringsKt___StringsKt: boolean any(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainAll(java.lang.Iterable,kotlin.jvm.functions.Function1)
com.google.gson.internal.bind.MapTypeAdapterFactory
kotlin.Triple: int hashCode()
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener: void onActiveChanged()
com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent: boolean equals(java.lang.Object)
kotlinx.coroutines.CoroutineStart: void invoke(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.viewpager.widget.ViewPager: void setScrollState(int)
androidx.appcompat.R$string: int abc_menu_space_shortcut_label
kotlin.random.RandomKt: kotlin.random.Random Random(int)
kotlinx.coroutines.AbstractContinuation: boolean isCompleted()
dagger.android.support.R$dimen: int abc_search_view_preferred_width
androidx.loader.R$styleable: int GradientColor_android_centerColor
androidx.appcompat.R$attr: int tickMarkTintMode
okhttp3.internal.http2.Http2Stream: void setHeadersListener(okhttp3.internal.http2.Header$Listener)
dagger.android.support.R$style: int TextAppearance_AppCompat_Caption
okhttp3.EventListener: void connectionAcquired(okhttp3.Call,okhttp3.Connection)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintWidth_min
dagger.android.support.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
kotlinx.coroutines.JobNode: boolean isActive()
androidx.lifecycle.extensions.R$drawable: int notification_bg_low_normal
okhttp3.Headers
android.support.v4.os.ResultReceiver: void send(int,android.os.Bundle)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(long[])
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
dagger.android.support.R$id: int notification_main_column_container
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence[] mItems
kotlin.collections.ArraysKt___ArraysKt: byte reduceRightIndexed(byte[],kotlin.jvm.functions.Function3)
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: int describeContents()
kotlin.jvm.internal.CallableReference: boolean isAbstract()
kotlinx.coroutines.ExecutorCoroutineDispatcherBase: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.util.concurrent.TimeUnit,java.lang.Runnable)
androidx.appcompat.R$dimen: int abc_button_inset_horizontal_material
kotlin.collections.ArraysKt___ArraysJvmKt: long[] plus(long[],long[])
androidx.fragment.app.FragmentManager$BackStackEntry: int getId()
androidx.media.R$layout: int notification_template_big_media_custom
com.example.revolut.rates.R$style: int TextAppearance_Compat_Notification_Time
androidx.core.text.BidiFormatter
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingBottom()
com.jakewharton.rxbinding3.widget.RxTextView: io.reactivex.Observable editorActions(android.widget.TextView,kotlin.jvm.functions.Function1)
androidx.viewpager.widget.PagerTabStrip: void onDraw(android.graphics.Canvas)
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
androidx.core.text.PrecomputedTextCompat: java.lang.CharSequence subSequence(int,int)
com.google.gson.JsonArray: void addAll(com.google.gson.JsonArray)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: long serialVersionUID
androidx.vectordrawable.R$layout: int notification_action_tombstone
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA256
io.reactivex.internal.fuseable.SimpleQueue: boolean isEmpty()
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-kdPth3s(byte[],byte[])
io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,int)
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_gradientRadius
androidx.recyclerview.R$dimen
okio.ByteString: okio.ByteString toAsciiLowercase()
dagger.android.support.R$style: int TextAppearance_AppCompat_Display3
kotlinx.coroutines.DefaultTimeSource: void parkNanos(java.lang.Object,long)
androidx.appcompat.widget.DecorToolbar: int getHeight()
kotlin.sequences.TakeSequence$iterator$1: boolean hasNext()
androidx.recyclerview.widget.LinearSmoothScroller: int mInterimTargetDy
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_PREPARE_FROM_MEDIA_ID
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel(int)
androidx.fragment.R$styleable: int FontFamilyFont_fontWeight
androidx.media.R$dimen: int notification_top_pad
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(byte[],java.util.Collection)
dagger.android.support.R$dimen: int abc_action_bar_stacked_max_height
androidx.fragment.R$layout: int notification_template_part_chronometer
io.reactivex.internal.operators.observable.ObservableDetach: ObservableDetach(io.reactivex.ObservableSource)
androidx.media.R$string
androidx.core.content.pm.ShortcutInfoCompat: java.lang.CharSequence getShortLabel()
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope SUBCLASSES
androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentActivityCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
androidx.appcompat.view.menu.MenuPresenter: boolean flagActionItems()
com.google.gson.stream.JsonReader: void beginObject()
androidx.databinding.ObservableChar: char get()
okhttp3.Request$Builder: Request$Builder()
androidx.core.widget.NestedScrollView
com.example.revolut.rates.R$styleable: int CompoundButton_android_button
com.google.gson.internal.bind.JsonTreeReader: boolean hasNext()
com.example.revolut.rates.R$id: int blocking
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-Q6IL4kU(short[],kotlin.ranges.IntRange)
dagger.android.support.R$attr: int thumbTextPadding
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewRemoveEvent: com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewRemoveEvent copy$default(com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewRemoveEvent,android.view.ViewGroup,android.view.View,int,java.lang.Object)
androidx.customview.R$styleable: int FontFamilyFont_android_fontStyle
io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function4)
kotlin.sequences.TransformingIndexedSequence$iterator$1: void setIndex(int)
androidx.core.view.MenuKt: boolean isEmpty(android.view.Menu)
io.reactivex.observers.DisposableMaybeObserver: DisposableMaybeObserver()
io.reactivex.internal.operators.observable.ObservableError: ObservableError(java.util.concurrent.Callable)
androidx.annotation.ColorRes
kotlin.UShort: int compareTo(java.lang.Object)
androidx.viewpager.widget.ViewPager: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
okhttp3.internal.platform.ConscryptPlatform: okhttp3.internal.platform.ConscryptPlatform buildIfSupported()
androidx.core.app.TaskStackBuilder: android.content.Intent[] getIntents()
androidx.fragment.app.FragmentManager$BackStackEntry: java.lang.CharSequence getBreadCrumbTitle()
androidx.core.view.MarginLayoutParamsCompat: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
io.reactivex.internal.operators.flowable.FlowableReduceMaybe: io.reactivex.Flowable fuseToFlowable()
androidx.appcompat.R$styleable: int AnimatedStateListDrawableTransition_android_toId
androidx.core.content.pm.ShortcutManagerCompat: boolean isRequestPinShortcutSupported(android.content.Context)
io.reactivex.Single: io.reactivex.Single cache()
androidx.fragment.app.Fragment: java.lang.Object requireHost()
dagger.internal.TypedReleasableReferenceManagerDecorator: void releaseStrongReferences()
androidx.drawerlayout.R$styleable: int GradientColor_android_centerColor
kotlin.collections.EmptyList: int lastIndexOf(java.lang.Void)
android.support.v4.media.MediaMetadataCompatApi21$Builder: void putLong(java.lang.Object,java.lang.String,long)
okhttp3.internal.http2.PushObserver: boolean onRequest(int,java.util.List)
androidx.recyclerview.R$styleable: int CoordinatorLayout_Layout_layout_behavior
dagger.android.support.R$drawable: int abc_btn_default_mtrl_shape
androidx.coordinatorlayout.R$attr: int layout_keyline
dagger.android.support.R$style: int Theme_AppCompat_DayNight_NoActionBar
io.reactivex.internal.operators.single.SingleTimer
androidx.legacy.v4.R$styleable: int GradientColor_android_centerX
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setActiveQueueItemId(long)
androidx.drawerlayout.widget.DrawerLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)
android.support.v4.media.session.MediaControllerCompat: java.lang.String getPackageName()
kotlinx.coroutines.ScheduledKt: java.lang.Object access$setupTimeout(kotlinx.coroutines.TimeoutCoroutine,kotlin.jvm.functions.Function2)
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewAddEvent: int hashCode()
kotlin.text.StringsKt__StringsKt: boolean endsWith$default(java.lang.CharSequence,char,boolean,int,java.lang.Object)
kotlin.sequences.IndexingSequence$iterator$1: kotlin.collections.IndexedValue next()
io.reactivex.internal.operators.flowable.FlowableCount$CountSubscriber: long serialVersionUID
dagger.android.support.R$color: int abc_hint_foreground_material_light
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int top
androidx.collection.SimpleArrayMap: void ensureCapacity(int)
okhttp3.Request$Builder: okhttp3.Request$Builder put(okhttp3.RequestBody)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.selects.SelectClause0 getOnJoin()
androidx.constraintlayout.solver.widgets.ChainHead: float getTotalWeight()
kotlin.collections.AbstractMutableCollection: int size()
kotlinx.coroutines.channels.Closed: void completeResumeReceive(java.lang.Object)
com.example.revolut.rates.R$attr: int elevation
com.example.revolut.rates.R$id: int tag_transition_group
kotlin.reflect.KCallable: boolean isFinal()
androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)
kotlinx.coroutines.ResumeModeKt: int MODE_ATOMIC_DEFAULT
com.example.revolut.rates.R$styleable: int MenuItem_android_checked
kotlin.ranges.LongProgression
com.jakewharton.rxbinding3.view.RxMenuItem
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
androidx.appcompat.R$attr: int state_above_anchor
okhttp3.internal.Util: boolean discard(okio.Source,int,java.util.concurrent.TimeUnit)
androidx.cursoradapter.widget.SimpleCursorAdapter: SimpleCursorAdapter(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int)
kotlinx.coroutines.channels.TickerChannelsKt
dagger.android.support.R$attr: int splitTrack
androidx.versionedparcelable.VersionedParcel: boolean readField(int)
androidx.legacy.coreutils.R$id: int notification_main_column_container
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(float[],java.lang.Iterable)
io.reactivex.observers.DefaultObserver
androidx.core.widget.CompoundButtonCompat: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
io.reactivex.internal.operators.maybe.MaybeOnErrorNext
kotlin.text.StringsKt___StringsKt: java.lang.Appendable filterNotTo(java.lang.CharSequence,java.lang.Appendable,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence padStart(java.lang.CharSequence,int,char)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.core.app.NotificationCompat$Style: void addCompatExtras(android.os.Bundle)
androidx.core.view.ViewCompat: float getTranslationY(android.view.View)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List takeLast(java.util.List,int)
com.example.revolut.rates.R$id: int src_atop
kotlinx.coroutines.channels.ArrayChannel: boolean isBufferAlwaysFull()
dagger.android.support.R$drawable: int abc_textfield_search_default_mtrl_alpha
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(java.lang.CharSequence)
androidx.appcompat.R$style: int Platform_ThemeOverlay_AppCompat_Light
androidx.appcompat.view.menu.MenuItemImpl: boolean requestsActionButton()
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingTop
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintBottom_creator
androidx.core.text.HtmlCompat: int FROM_HTML_MODE_LEGACY
androidx.databinding.adapters.ViewStubBindingAdapter
kotlinx.android.parcel.Parceler$DefaultImpls: java.lang.Object[] newArray(kotlinx.android.parcel.Parceler,int)
okhttp3.ResponseBody: ResponseBody()
com.example.revolut.rates.R$dimen: int tooltip_vertical_padding
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
kotlin.jvm.internal.FloatCompanionObject: float getNaN()
io.reactivex.Flowable: io.reactivex.Flowable concatMapSingleDelayError(io.reactivex.functions.Function,boolean,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD
androidx.constraintlayout.widget.R$attr: int constraintSet
retrofit2.Callback
androidx.drawerlayout.R$styleable: int GradientColor_android_centerX
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float lastOrNull(float[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ButtonBarLayout: void onMeasure(int,int)
io.reactivex.internal.operators.maybe.MaybeToPublisher: io.reactivex.internal.operators.maybe.MaybeToPublisher valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onChildAttachedToWindow(android.view.View)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableGroupBy: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(long[],long,int,int)
dagger.android.support.R$attr: int alpha
androidx.swiperefreshlayout.R$styleable: int FontFamily_fontProviderAuthority
io.reactivex.internal.observers.BlockingBaseObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.view.MotionEventCompat: int AXIS_VSCROLL
io.reactivex.internal.operators.completable.CompletableTimeout: void subscribeActual(io.reactivex.CompletableObserver)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean canShowOverflowMenu()
kotlin.jvm.JvmClassMappingKt: java.lang.Class getRuntimeClassOfKClassInstance(kotlin.reflect.KClass)
io.reactivex.processors.PublishProcessor: io.reactivex.processors.PublishProcessor create()
dagger.android.support.R$id: int tabMode
kotlin.sequences.IndexingSequence$iterator$1: java.util.Iterator getIterator()
kotlin.random.AbstractPlatformRandom: int nextInt()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(float[],kotlin.jvm.functions.Function1)
io.reactivex.Observable: io.reactivex.Observable empty()
kotlinx.coroutines.ExecutorCoroutineDispatcherBase: ExecutorCoroutineDispatcherBase()
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: int compare(java.lang.Object,java.lang.Object)
kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1: SequenceBuilderKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1(kotlin.jvm.functions.Function2)
kotlin.ranges.LongProgressionIterator: LongProgressionIterator(long,long,long)
androidx.coordinatorlayout.R$styleable: int FontFamily_fontProviderQuery
io.reactivex.plugins.RxJavaPlugins: java.lang.Runnable onSchedule(java.lang.Runnable)
androidx.customview.widget.ViewDragHelper$Callback: void onViewReleased(android.view.View,float,float)
kotlin.collections.SetsKt___SetsKt: java.util.Set plus(java.util.Set,kotlin.sequences.Sequence)
androidx.recyclerview.R$drawable: int notification_bg_low
androidx.core.view.ViewPropertyAnimatorCompat: void start()
androidx.core.view.ViewKt
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(java.lang.Object[],java.util.Comparator)
androidx.appcompat.widget.LinearLayoutCompat: int VERTICAL
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport: void drain()
com.example.revolut.rates.R$styleable: int[] ActionMenuView
androidx.databinding.ObservableLong: ObservableLong(long)
androidx.core.util.Pools$SynchronizedPool: Pools$SynchronizedPool(int)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.Class)
androidx.appcompat.app.ActionBarDrawerToggle$Delegate: boolean isNavigationVisible()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object single(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
okhttp3.internal.connection.RealConnection
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.LayoutInflater mSystemInflater
androidx.customview.widget.FocusStrategy$CollectionAdapter
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean helped
dagger.android.support.R$style: int Base_V21_Theme_AppCompat_Light
kotlin.collections.UByteIterator: java.lang.Object next()
kotlin.collections.RingBuffer$iterator$1
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_PASTE
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NAME
io.reactivex.plugins.RxJavaPlugins: void setOnBeforeBlocking(io.reactivex.functions.BooleanSupplier)
androidx.appcompat.R$attr: int actionModeSplitBackground
androidx.recyclerview.widget.ItemTouchHelper: int DOWN
androidx.coordinatorlayout.widget.CoordinatorLayout: void onStopNestedScroll(android.view.View)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence sortedDescending(kotlin.sequences.Sequence)
androidx.lifecycle.extensions.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.example.revolut.rates.R$id: int parent
androidx.databinding.ObservableBoolean: ObservableBoolean(boolean)
kotlinx.coroutines.AbstractContinuation: int getResumeMode()
androidx.appcompat.R$color: int ripple_material_dark
kotlinx.coroutines.selects.SelectBuilderImpl$onTimeout$$inlined$Runnable$1
kotlinx.coroutines.CoroutineName$Key
androidx.core.widget.TextViewCompat: void setLastBaselineToBottomHeight(android.widget.TextView,int)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int)
kotlin.TypeAliasesKt: void NullPointerException$annotations()
kotlin.ranges.IntProgression: int getStep()
kotlin.coroutines.ContinuationKt$Continuation$1: ContinuationKt$Continuation$1(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat: int SCROLL_AXIS_NONE
androidx.collection.ArraySet: java.lang.Object[] toArray()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int goneTopMargin
androidx.core.ktx.R$styleable: int FontFamilyFont_font
io.reactivex.internal.operators.single.SingleTakeUntil: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.subjects.BehaviorSubject: io.reactivex.subjects.BehaviorSubject createDefault(java.lang.Object)
kotlin.UByteArray: kotlin.collections.UByteIterator iterator-impl(byte[])
androidx.fragment.app.FragmentManager: boolean popBackStackImmediate()
io.reactivex.observers.DisposableSingleObserver: DisposableSingleObserver()
androidx.databinding.ObservableInt: int get()
androidx.core.view.AccessibilityDelegateCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int circleRadius
com.example.revolut.rates.R$attr: int showTitle
kotlin.text.StringsKt
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setTag(java.lang.Object)
androidx.core.view.ScrollingView: int computeHorizontalScrollExtent()
okhttp3.internal.cache.DiskLruCache: void delete()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] plus-xo_DsdI(byte[],java.util.Collection)
io.reactivex.internal.operators.observable.ObservableReplay: io.reactivex.Observable multicastSelector(java.util.concurrent.Callable,io.reactivex.functions.Function)
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment VERTICAL_MIDDLE
com.google.gson.internal.LinkedTreeMap
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback: void onChildrenLoaded(java.lang.String,java.util.List,android.os.Bundle)
androidx.constraintlayout.widget.R$id
android.support.v4.media.MediaDescriptionCompat: long BT_FOLDER_TYPE_TITLES
androidx.loader.content.CursorLoader
androidx.asynclayoutinflater.R$drawable: int notification_tile_bg
androidx.versionedparcelable.ParcelImpl
kotlinx.coroutines.scheduling.BackgroundDispatcher: kotlinx.coroutines.scheduling.BackgroundDispatcher INSTANCE
io.reactivex.internal.subscribers.DeferredScalarSubscriber: void onError(java.lang.Throwable)
androidx.constraintlayout.solver.widgets.ResolutionDimension
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: boolean isEmpty()
androidx.appcompat.view.menu.ActionMenuItem: void setShowAsAction(int)
kotlin.collections.EmptyIterator: int nextIndex()
kotlin.properties.Delegates$vetoable$1: boolean beforeChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object)
kotlin.jvm.internal.ClassReference: kotlin.reflect.KVisibility getVisibility()
androidx.cursoradapter.widget.CursorAdapter: int getCount()
androidx.versionedparcelable.VersionedParcel: void writeByte(byte,int)
androidx.loader.R$dimen: int compat_control_corner_material
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.R$dimen: int abc_text_size_caption_material
androidx.core.util.LruCacheKt$lruCache$1
kotlin.jvm.internal.SpreadBuilder: int size()
io.reactivex.SingleEmitter
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality SEGMENT_SEPARATOR
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mCreateFromFamiliesWithDefault
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte random-oSF2wD8(byte[],kotlin.random.Random)
io.reactivex.Flowable: io.reactivex.Single toSortedList(java.util.Comparator,int)
io.reactivex.Maybe: io.reactivex.Flowable concat(io.reactivex.MaybeSource,io.reactivex.MaybeSource)
io.reactivex.Observable: io.reactivex.Observable takeLast(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)
androidx.core.graphics.ColorUtils: double distanceEuclidean(double[],double[])
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: android.app.PendingIntent getReplyPendingIntent()
androidx.cursoradapter.widget.CursorAdapter: CursorAdapter(android.content.Context,android.database.Cursor,int)
kotlin.sequences.SequencesKt___SequencesKt: boolean contains(kotlin.sequences.Sequence,java.lang.Object)
dagger.android.support.R$style: int Theme_AppCompat
kotlinx.coroutines.EventLoopKt: kotlinx.coroutines.internal.Symbol access$getCLOSED_EMPTY$p()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA256
androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)
androidx.viewpager.R$styleable: int GradientColor_android_centerY
androidx.appcompat.app.ActionBar: void setHomeButtonEnabled(boolean)
kotlin.text.MatchGroup: kotlin.text.MatchGroup copy(java.lang.String,kotlin.ranges.IntRange)
androidx.databinding.ViewDataBinding: void setRootTag(android.view.View[])
androidx.appcompat.R$color: int primary_material_light
androidx.fragment.app.DialogFragment: void setShowsDialog(boolean)
io.reactivex.internal.observers.EmptyCompletableObserver: EmptyCompletableObserver()
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: RestrictedSuspendLambda(int,kotlin.coroutines.Continuation)
kotlin.text.StringsKt___StringsKt: java.util.Collection mapTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)
io.reactivex.internal.subscribers.LambdaSubscriber: long serialVersionUID
io.reactivex.subjects.SingleSubject$SingleDisposable: long serialVersionUID
kotlin.coroutines.experimental.jvm.internal.CoroutineImpl: int label
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty
okhttp3.Cache: java.io.File directory()
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
androidx.documentfile.provider.DocumentFile: android.net.Uri getUri()
androidx.media.MediaBrowserServiceCompat
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion
androidx.core.animation.AnimatorKt$addListener$4: androidx.core.animation.AnimatorKt$addListener$4 INSTANCE
io.reactivex.internal.operators.flowable.FlowableUsing: FlowableUsing(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
androidx.coordinatorlayout.widget.CoordinatorLayout: android.os.Parcelable onSaveInstanceState()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel take(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext)
dagger.android.support.R$styleable: int ActionBar_contentInsetStart
androidx.appcompat.view.SupportActionModeWrapper: void setCustomView(android.view.View)
androidx.appcompat.widget.TintTypedArray: int getLayoutDimension(int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-rL5Bavg(short[])
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)
com.example.revolut.rates.R$id: int META
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_chainUseRtl
okhttp3.Handshake: java.security.Principal localPrincipal()
androidx.appcompat.view.menu.ListMenuItemView: boolean prefersCondensedTitle()
androidx.appcompat.R$dimen: int notification_large_icon_width
androidx.core.text.SpannableStringBuilderKt: android.text.SpannedString buildSpannedString(kotlin.jvm.functions.Function1)
dagger.android.support.R$anim: int abc_grow_fade_in_from_bottom
androidx.core.ktx.R$id: int async
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(android.view.ViewGroup$LayoutParams)
io.reactivex.internal.operators.maybe.MaybeTimer: MaybeTimer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.example.revolut.rates.R$dimen: int abc_text_size_display_4_material
com.example.revolut.rates.R$styleable: int ActionBar_popupTheme
androidx.constraintlayout.solver.LinearSystem: int getNumEquations()
kotlin.reflect.KMutableProperty2: void set(java.lang.Object,java.lang.Object,java.lang.Object)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(com.google.gson.reflect.TypeToken)
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources getResources()
androidx.asynclayoutinflater.R$integer
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable concatMapDelayError(io.reactivex.functions.Function,boolean)
androidx.viewpager.R$styleable: int FontFamilyFont_android_fontWeight
dagger.android.support.R$styleable: int ButtonBarLayout_allowStacking
kotlinx.coroutines.CancellableContinuation: java.lang.Object tryResumeWithException(java.lang.Throwable)
androidx.cursoradapter.widget.ResourceCursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.appcompat.widget.SwitchCompat: void draw(android.graphics.Canvas)
androidx.legacy.coreutils.R$dimen: int notification_small_icon_background_padding
io.reactivex.subscribers.TestSubscriber: void onComplete()
io.reactivex.internal.operators.single.SingleDoOnTerminate
okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.R$styleable: int AppCompatTheme_colorButtonNormal
io.reactivex.internal.util.NotificationLite: org.reactivestreams.Subscription getSubscription(java.lang.Object)
dagger.android.DaggerActivity_MembersInjector
androidx.versionedparcelable.VersionedParcel: void writeIntArray(int[],int)
androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)
androidx.legacy.coreui.R$id: int action_text
kotlin.sequences.MergingSequence: kotlin.sequences.Sequence access$getSequence2$p(kotlin.sequences.MergingSequence)
dagger.android.support.R$color: int background_floating_material_dark
io.reactivex.internal.operators.single.SingleDoFinally: void subscribeActual(io.reactivex.SingleObserver)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
kotlinx.coroutines.channels.SendElement: SendElement(java.lang.Object,kotlinx.coroutines.CancellableContinuation)
dagger.android.support.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
androidx.appcompat.view.ActionMode
io.reactivex.internal.functions.Functions: io.reactivex.functions.Function listSorter(java.util.Comparator)
dagger.android.support.R$style: int TextAppearance_AppCompat_Subhead
androidx.viewpager.widget.ViewPager: void setCurrentItem(int,boolean)
okio.BufferedSink: okio.BufferedSink writeLongLe(long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(int[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()
com.jakewharton.rxbinding3.core.R$styleable: int FontFamilyFont_android_fontWeight
dagger.android.support.R$styleable: int AppCompatTheme_dividerHorizontal
io.reactivex.internal.schedulers.ComputationScheduler: void createWorkers(int,io.reactivex.internal.schedulers.SchedulerMultiWorkerSupport$WorkerCallback)
kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1: java.util.Iterator iterator()
com.example.revolut.rates.viewmodel.CurrenciesViewModel: void access$fetchCurrencies(com.example.revolut.rates.viewmodel.CurrenciesViewModel,java.lang.String)
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.BooleanIterator iterator(boolean[])
androidx.recyclerview.R$style: int TextAppearance_Compat_Notification_Time
androidx.collection.ArraySet: int size()
dagger.android.support.R$style: int Widget_AppCompat_ActionBar_Solid
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence take(kotlin.sequences.Sequence,int)
kotlin.jvm.internal.InlineMarker: InlineMarker()
retrofit2.converter.gson.GsonConverterFactory: retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[],retrofit2.Retrofit)
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo)
io.reactivex.schedulers.Timed: boolean equals(java.lang.Object)
io.reactivex.Completable: io.reactivex.Completable retryWhen(io.reactivex.functions.Function)
androidx.fragment.app.DialogFragment: boolean isCancelable()
kotlinx.coroutines.scheduling.TasksKt: int QUEUE_SIZE_OFFLOAD_THRESHOLD
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setError(java.lang.CharSequence)
io.reactivex.internal.operators.maybe.MaybeFromCallable: java.lang.Object call()
androidx.customview.widget.ViewDragHelper: int EDGE_BOTTOM
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-F7u83W8(long[],java.lang.Iterable)
androidx.coordinatorlayout.R$attr: int fontStyle
okio.BufferedSink: okio.BufferedSink emit()
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler createComputationScheduler(java.util.concurrent.ThreadFactory)
androidx.core.text.PrecomputedTextCompat$Params$Builder: PrecomputedTextCompat$Params$Builder(android.text.TextPaint)
androidx.legacy.coreui.R$id: int bottom
androidx.appcompat.app.AppCompatActivity: void onSupportContentChanged()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(long[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.coordinatorlayout.R$style: int TextAppearance_Compat_Notification_Title
kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] sortedArray-GBYM_sE(byte[])
androidx.legacy.v4.R$id: int text2
dagger.android.support.R$style: int Widget_AppCompat_ProgressBar
kotlin.UIntArray: boolean contains-WZ4Q5Ns(int[],int)
io.reactivex.internal.operators.maybe.MaybeCount
androidx.core.view.ViewCompat: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
com.jakewharton.rxbinding3.core.R$dimen: int notification_action_icon_size
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: void fill-EtDCXyQ$default(short[],short,int,int,int,java.lang.Object)
androidx.swiperefreshlayout.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.core.app.RemoteInput: boolean getAllowFreeFormInput()
androidx.slidingpanelayout.widget.SlidingPaneLayout: void computeScroll()
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection filterNotTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.view.inputmethod.InputConnectionCompat: android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)
androidx.appcompat.view.menu.ListMenuPresenter: ListMenuPresenter(android.content.Context,int)
kotlin.ranges.ULongRange: boolean contains(java.lang.Comparable)
kotlin.ranges.LongProgression: long getFirst()
io.reactivex.internal.operators.observable.ObservableCache: void onSubscribe(io.reactivex.disposables.Disposable)
kotlin.jvm.internal.PropertyReference0Impl: kotlin.reflect.KDeclarationContainer getOwner()
androidx.appcompat.app.AppCompatDelegate: void installViewFactory()
androidx.core.view.ViewKt: java.lang.Runnable postOnAnimationDelayed(android.view.View,long,kotlin.jvm.functions.Function0)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: java.lang.Object onPrepare(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.channels.ProducerJob$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.channels.ProducerJob,kotlin.coroutines.CoroutineContext)
androidx.core.text.SpannableStringKt: void set(android.text.Spannable,int,int,java.lang.Object)
okio.HashingSink: okio.HashingSink hmacSha1(okio.Sink,okio.ByteString)
io.reactivex.subjects.ReplaySubject: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableTakeLastOne: ObservableTakeLastOne(io.reactivex.ObservableSource)
io.reactivex.internal.operators.single.SingleDelayWithSingle: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.completable.CompletableFromObservable
io.reactivex.internal.operators.observable.ObservableWindowBoundary: ObservableWindowBoundary(io.reactivex.ObservableSource,io.reactivex.ObservableSource,int)
io.reactivex.Single: io.reactivex.Single flatMap(io.reactivex.functions.Function)
io.reactivex.Maybe: io.reactivex.Flowable merge(org.reactivestreams.Publisher)
kotlin.coroutines.experimental.jvm.internal.CoroutineIntrinsics
androidx.appcompat.R$styleable: int AppCompatTheme_panelMenuListWidth
androidx.appcompat.app.AlertDialog: void onCreate(android.os.Bundle)
kotlin.collections.AbstractList$Companion: void checkPositionIndex$kotlin_stdlib(int,int)
retrofit2.Response: retrofit2.Response success(java.lang.Object,okhttp3.Response)
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: void onError(java.lang.Throwable)
com.example.revolut.rates.R$styleable: int Toolbar_titleTextAppearance
androidx.core.widget.AutoScrollHelper: float NO_MIN
androidx.appcompat.app.AppCompatActivity: void setSupportActionBar(androidx.appcompat.widget.Toolbar)
androidx.core.util.SparseIntArrayKt$valueIterator$1: void setIndex(int)
dagger.android.support.R$styleable: int AppCompatTheme_actionModeSplitBackground
dagger.internal.InstanceFactory: java.lang.Object get()
kotlinx.coroutines.test.TestCoroutineContext: void advanceTimeTo(long,java.util.concurrent.TimeUnit)
androidx.fragment.app.DialogFragment: android.app.Dialog getDialog()
kotlinx.coroutines.internal.AnnotationsKt: void Volatile$annotations()
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableCombineLatest: ObservableCombineLatest(io.reactivex.ObservableSource[],java.lang.Iterable,io.reactivex.functions.Function,int,boolean)
io.reactivex.internal.observers.DeferredScalarDisposable
io.reactivex.Completable: io.reactivex.Completable fromSingle(io.reactivex.SingleSource)
dagger.android.support.R$styleable: int MenuItem_android_menuCategory
com.example.revolut.rates.R$attr: int layout_constraintHorizontal_bias
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContextClickable(boolean)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentIcon(int)
androidx.core.view.VelocityTrackerCompat
dagger.android.support.DaggerAppCompatDialogFragment: DaggerAppCompatDialogFragment()
dagger.android.support.R$style: int Base_V7_Theme_AppCompat
androidx.core.ktx.R$attr: int font
io.reactivex.Completable: io.reactivex.Completable retry(long)
androidx.appcompat.R$styleable: int[] ActionBar
androidx.loader.content.Loader: void unregisterListener(androidx.loader.content.Loader$OnLoadCompleteListener)
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification_Line2
io.reactivex.internal.operators.maybe.MaybeMap: void subscribeActual(io.reactivex.MaybeObserver)
androidx.core.view.MarginLayoutParamsCompat
androidx.core.util.PairKt: java.lang.Object component2(android.util.Pair)
androidx.core.ktx.R$drawable: int notification_bg_normal_pressed
com.example.revolut.rates.R$drawable: int icon_idr
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int)
androidx.core.app.AppOpsManagerCompat: int noteOp(android.content.Context,java.lang.String,int,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(long[],kotlin.jvm.functions.Function1)
io.reactivex.subjects.MaybeSubject: boolean hasComplete()
javax.inject.Qualifier
com.example.revolut.rates.R$styleable: int GradientColor_android_endX
androidx.loader.app.LoaderManager: void destroyLoader(int)
kotlin.ranges.CharRange: java.lang.Comparable getStart()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintBaseline_creator
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationYBy(float)
kotlinx.coroutines.ThreadContextElement$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.ThreadContextElement,java.lang.Object,kotlin.jvm.functions.Function2)
com.google.gson.TypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
dagger.android.DispatchingAndroidInjector$InvalidInjectorBindingException
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Medium
io.reactivex.schedulers.TestScheduler: TestScheduler(long,java.util.concurrent.TimeUnit)
com.google.gson.internal.bind.TreeTypeAdapter
io.reactivex.internal.functions.Functions: io.reactivex.functions.Consumer actionConsumer(io.reactivex.functions.Action)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isHeading()
kotlin.collections.SetsKt
okhttp3.ConnectionSpec: boolean equals(java.lang.Object)
kotlin.UInt: int SIZE_BYTES
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(int[],java.lang.Object[],kotlin.jvm.functions.Function2)
androidx.legacy.coreutils.R$dimen: int notification_action_icon_size
androidx.localbroadcastmanager.content.LocalBroadcastManager: void unregisterReceiver(android.content.BroadcastReceiver)
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String getDismissalId()
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Title_Inverse
dagger.android.support.R$attr: int titleMarginTop
retrofit2.Retrofit: retrofit2.Converter nextRequestBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver: long serialVersionUID
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator reverseOrder()
io.reactivex.internal.subscribers.BlockingBaseSubscriber
androidx.constraintlayout.solver.widgets.Rectangle
retrofit2.adapter.rxjava2.Result: boolean isError()
androidx.fragment.app.FragmentController: void dispatchStart()
androidx.constraintlayout.widget.R$attr: int layout_constraintHorizontal_chainStyle
com.example.revolut.rates.R$dimen: int notification_large_icon_width
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.loader.R$style: int TextAppearance_Compat_Notification_Info
androidx.media.MediaBrowserServiceCompat$Result
kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceive()
io.reactivex.internal.operators.observable.ObservableReduceMaybe
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext$Key getKey()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List minus(java.lang.Iterable,kotlin.sequences.Sequence)
androidx.databinding.DataBindingUtil: androidx.databinding.ViewDataBinding setContentView(android.app.Activity,int)
androidx.appcompat.R$dimen: int abc_control_padding_material
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long getMoveDuration()
kotlin.coroutines.experimental.EmptyCoroutineContext: java.lang.String toString()
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_12
androidx.core.view.MotionEventCompat: int BUTTON_PRIMARY
androidx.appcompat.view.menu.MenuBuilder: void removeItem(int)
okhttp3.OkHttpClient: OkHttpClient()
io.reactivex.observers.DisposableObserver: DisposableObserver()
kotlinx.coroutines.channels.ChannelCoroutine: boolean isClosedForReceive()
dagger.android.support.R$attr: int colorSwitchThumbNormal
okio.ByteString: void write(java.io.OutputStream)
com.example.revolut.rates.R$drawable: int icon_sgd
androidx.databinding.library.baseAdapters.BuildConfig: java.lang.String APPLICATION_ID
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest: FlowableOnBackpressureLatest(io.reactivex.Flowable)
kotlin.text.Charsets: java.nio.charset.Charset UTF32()
androidx.interpolator.view.animation.FastOutLinearInInterpolator: FastOutLinearInInterpolator()
androidx.core.app.AppComponentFactory: android.app.Application instantiateApplicationCompat(java.lang.ClassLoader,java.lang.String)
androidx.appcompat.app.AppCompatDelegate: boolean hasWindowFeature(int)
kotlin.sequences.SequencesKt___SequencesKt: int lastIndexOf(kotlin.sequences.Sequence,java.lang.Object)
io.reactivex.internal.util.VolatileSizeArrayList: boolean removeAll(java.util.Collection)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId
io.reactivex.internal.util.Pow2: int roundToPowerOfTwo(int)
io.reactivex.internal.operators.single.SingleZipArray$ZipSingleObserver: long serialVersionUID
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: boolean contains(java.lang.Object)
kotlinx.coroutines.scheduling.NanoTimeSource: long nanoTime()
androidx.fragment.R$style: int TextAppearance_Compat_Notification_Title
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(long[],java.lang.Iterable)
io.reactivex.internal.operators.mixed.MaterializeSingleObserver: boolean isDisposed()
androidx.appcompat.R$attr: int contentDescription
okhttp3.internal.platform.Platform: void logCloseableLeak(java.lang.String,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(short[],kotlin.jvm.functions.Function1)
androidx.asynclayoutinflater.R$id: int normal
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertComplete()
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
okhttp3.internal.http2.Http2Connection: boolean isShutdown()
kotlin.coroutines.intrinsics.CoroutineSingletons
androidx.coordinatorlayout.R$attr: int coordinatorLayoutStyle
io.reactivex.Flowable: io.reactivex.Flowable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer)
javax.inject.Named
io.reactivex.processors.ReplayProcessor: void onError(java.lang.Throwable)
androidx.drawerlayout.widget.DrawerLayout: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
kotlin.text.CharCategory: kotlin.text.CharCategory NON_SPACING_MARK
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence windowed(kotlin.sequences.Sequence,int,int,boolean)
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
androidx.appcompat.R$styleable: int AppCompatTheme_actionDropDownStyle
com.example.revolut.rates.R$anim: int abc_fade_in
kotlin.ranges.UIntProgression: UIntProgression(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.reactivex.ObservableOnSubscribe
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerVisible(int)
com.example.revolut.rates.R$style: int Platform_AppCompat_Light
com.example.revolut.rates.R$layout: int abc_action_menu_item_layout
android.support.v4.media.MediaDescriptionCompat: int describeContents()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removeAllEncodedQueryParameters(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable concatMapSingle(io.reactivex.functions.Function,int)
androidx.core.app.NotificationCompat$Action$WearableExtender: boolean getHintLaunchesActivity()
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback: Animatable2Compat$AnimationCallback()
io.reactivex.internal.operators.flowable.FlowableFilter: void subscribeActual(org.reactivestreams.Subscriber)
dagger.android.support.R$styleable: int MenuItem_android_checkable
androidx.media.AudioAttributesCompat: int CONTENT_TYPE_UNKNOWN
dagger.android.support.R$attr: int divider
androidx.documentfile.provider.DocumentFile: androidx.documentfile.provider.DocumentFile getParentFile()
androidx.core.app.NotificationCompat$GroupAlertBehavior
androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence)
dagger.android.support.R$drawable: int abc_control_background_material
io.reactivex.internal.util.ArrayListSupplier: java.util.List apply(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] toUByteArray(kotlin.UByte[])
androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.view.View findViewByPosition(int)
androidx.core.ktx.R$drawable: int notification_tile_bg
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintCircleAngle
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setErrorMessage(int,java.lang.CharSequence)
androidx.appcompat.R$styleable: int Toolbar_navigationContentDescription
kotlin.sequences.FlatteningSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.FlatteningSequence)
dagger.android.support.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
retrofit2.HttpException: int code()
io.reactivex.subjects.PublishSubject: boolean hasThrowable()
io.reactivex.internal.operators.flowable.FlowableLift: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.ActionMenuView: boolean showOverflowMenu()
com.jakewharton.rxbinding3.widget.TextViewEditorActionEvent: android.widget.TextView component1()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(byte[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.ranges.IntProgressionIterator: int getStep()
androidx.loader.R$styleable: int[] FontFamily
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter STRING
androidx.core.content.pm.PermissionInfoCompat
androidx.appcompat.widget.SearchView: boolean requestFocus(int,android.graphics.Rect)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setNumber(int)
androidx.collection.SparseArrayCompat: java.lang.Object clone()
com.example.revolut.rates.R$style: int Base_Theme_AppCompat_Light
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.example.revolut.rates.R$id: int always
kotlin.jvm.internal.Ref$DoubleRef: java.lang.String toString()
io.reactivex.Single: io.reactivex.Single timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.Observable: io.reactivex.Observable throttleFirst(long,java.util.concurrent.TimeUnit)
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry
io.reactivex.internal.operators.flowable.FlowableDematerialize
com.example.revolut.rates.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
androidx.legacy.v4.R$id: int left
androidx.core.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)
io.reactivex.Single: io.reactivex.Single delaySubscription(io.reactivex.SingleSource)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double lastOrNull(double[])
io.reactivex.Maybe: io.reactivex.Maybe ambWith(io.reactivex.MaybeSource)
kotlin.math.MathKt__MathJVMKt: double atanh(double)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel distinctBy$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void onSizeChanged(int,int,int,int)
io.reactivex.internal.subscribers.DeferredScalarSubscriber: boolean hasValue
kotlin.LazyKt$WhenMappings: int[] $EnumSwitchMapping$0
androidx.coordinatorlayout.R$styleable: int ColorStateListItem_alpha
androidx.fragment.app.FragmentPagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
kotlinx.coroutines.internal.LockFreeMPSCQueueCore: int INITIAL_CAPACITY
androidx.appcompat.widget.DialogTitle
com.example.revolut.rates.databinding.ActivityMainBindingImpl: void executeBindings()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getMinimumWidth()
androidx.core.view.WindowCompat: int FEATURE_ACTION_MODE_OVERLAY
androidx.media.R$styleable: int FontFamilyFont_android_ttcIndex
com.jakewharton.rxbinding3.widget.RxSearchView: io.reactivex.functions.Consumer query(android.widget.SearchView,boolean)
io.reactivex.Completable: io.reactivex.Completable concat(java.lang.Iterable)
androidx.core.util.SparseArrayKt: void set(android.util.SparseArray,int,java.lang.Object)
android.support.v4.media.session.IMediaSession: void setShuffleMode(int)
dagger.android.support.R$attr: int contentInsetRight
io.reactivex.Observable: io.reactivex.Observable withLatestFrom(java.lang.Iterable,io.reactivex.functions.Function)
androidx.core.app.ComponentActivity
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ActionBar_TabView
com.example.revolut.rates.R$styleable: int ConstraintSet_android_transformPivotY
io.reactivex.internal.observers.DeferredScalarDisposable: int requestFusion(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])
androidx.lifecycle.extensions.R$id: int actions
io.reactivex.Completable: io.reactivex.Completable fromObservable(io.reactivex.ObservableSource)
kotlinx.coroutines.channels.AbstractChannel$TryPollDesc: java.lang.Object pollResult
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_GCM_SHA256
com.example.revolut.rates.viewmodel.CurrenciesViewModel: androidx.lifecycle.MutableLiveData getBaseCurrency()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: int RANGE_TYPE_PERCENT
org.intellij.lang.annotations.RegExp
com.example.revolut.rates.R$drawable: int abc_btn_check_material
dagger.android.support.R$styleable: int PopupWindow_android_popupAnimationStyle
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(java.lang.Object[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.customview.R$style: int TextAppearance_Compat_Notification_Info
androidx.appcompat.R$dimen: int compat_notification_large_icon_max_height
io.reactivex.Maybe: io.reactivex.Flowable repeatWhen(io.reactivex.functions.Function)
io.reactivex.SingleOperator
kotlin.random.URandomKt: int nextUInt(kotlin.random.Random,kotlin.ranges.UIntRange)
io.reactivex.Observable: java.lang.Object blockingFirst(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List windowed(java.lang.Iterable,int,int,boolean)
io.reactivex.disposables.Disposables: io.reactivex.disposables.Disposable fromSubscription(org.reactivestreams.Subscription)
dagger.android.support.R$style: int Widget_AppCompat_ActivityChooserView
com.example.revolut.rates.R$styleable: int AppCompatTheme_popupMenuStyle
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_MOVE_WINDOW
io.reactivex.Single: io.reactivex.Single observeOn(io.reactivex.Scheduler)
kotlinx.coroutines.internal.ThreadLocalElement: java.lang.String toString()
androidx.core.app.NotificationCompat: int PRIORITY_MIN
dagger.android.support.R$layout: int abc_action_mode_bar
androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.example.revolut.rates.R$color: int bright_foreground_inverse_material_dark
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(androidx.core.app.NotificationCompat$Action)
com.example.revolut.rates.R$styleable: int StateListDrawable_android_enterFadeDuration
io.reactivex.internal.operators.flowable.FlowableDefer: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.text.StringsKt__StringsKt: java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)
android.support.v4.media.session.PlaybackStateCompat: int STATE_SKIPPING_TO_QUEUE_ITEM
android.support.v4.media.session.IMediaControllerCallback: void onSessionReady()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.String joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(android.view.View,boolean)
com.google.gson.internal.bind.util.ISO8601Utils: java.lang.String format(java.util.Date)
androidx.core.view.NestedScrollingChildHelper
androidx.core.R$id: int right_icon
okhttp3.internal.ws.RealWebSocket$Streams
kotlin.jvm.internal.ClassReference: java.util.Collection getMembers()
io.reactivex.processors.PublishProcessor: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.app.TaskStackBuilder: android.content.Intent editIntentAt(int)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toMutableSet(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(java.lang.Class)
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(long[],kotlin.jvm.functions.Function1)
androidx.swiperefreshlayout.R$drawable: int notification_bg_normal
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.drawerlayout.R$layout: int notification_template_custom_big
io.reactivex.Maybe: io.reactivex.Maybe wrap(io.reactivex.MaybeSource)
retrofit2.Retrofit: retrofit2.Converter stringConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[])
androidx.core.app.Person: java.lang.String getUri()
io.reactivex.internal.operators.completable.CompletableDoFinally
io.reactivex.internal.observers.EmptyCompletableObserver: boolean hasCustomOnError()
kotlin.text.StringsKt__StringsKt: int indexOfAny(java.lang.CharSequence,java.util.Collection,int,boolean)
androidx.core.util.SparseArrayKt: boolean containsKey(android.util.SparseArray,int)
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber$InnerObserver: long serialVersionUID
kotlin.TypeAliasesKt: void NoSuchElementException$annotations()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED
io.reactivex.Maybe: io.reactivex.Single sequenceEqual(io.reactivex.MaybeSource,io.reactivex.MaybeSource)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
kotlinx.coroutines.selects.SelectBuilder: void invoke(kotlinx.coroutines.selects.SelectClause1,kotlin.jvm.functions.Function2)
io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit,int)
androidx.fragment.R$dimen: int notification_main_column_padding_top
com.example.revolut.rates.RatesApp_MembersInjector
androidx.core.app.TaskStackBuilder: android.content.Intent getIntent(int)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionView(android.view.View)
io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable: io.reactivex.Flowable fuseToFlowable()
com.example.revolut.rates.data.repository.CurrenciesRepository_MembersInjector: void injectRatesApi(com.example.revolut.rates.data.repository.CurrenciesRepository,com.example.revolut.rates.data.RatesApi)
androidx.core.content.SharedPreferencesCompat$EditorCompat: androidx.core.content.SharedPreferencesCompat$EditorCompat getInstance()
androidx.fragment.R$id: int line1
androidx.fragment.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
kotlin.ranges.ULongProgression: kotlin.collections.ULongIterator iterator()
androidx.recyclerview.widget.ItemTouchHelper: void onChildViewDetachedFromWindow(android.view.View)
kotlin.coroutines.jvm.internal.Boxing: java.lang.Long boxLong(long)
kotlinx.coroutines.JobSupport: boolean isCompleted()
androidx.viewpager.widget.ViewPager: boolean arrowScroll(int)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer await()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean firstOrNull(boolean[])
kotlin.jvm.internal.MagicApiIntrinsics: int intMagicApiCall(int,long,java.lang.Object)
com.example.revolut.rates.R$dimen: int abc_text_size_large_material
com.example.revolut.rates.R$color: int primary_dark_material_light
okio.BufferedSource: void require(long)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotation(float)
androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
com.example.revolut.rates.R$dimen: int abc_alert_dialog_button_bar_height
androidx.legacy.coreui.R$string: int status_bar_notification_info_overflow
com.google.gson.internal.bind.JsonTreeReader: JsonTreeReader(com.google.gson.JsonElement)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1)
okhttp3.Response: okhttp3.Handshake handshake()
androidx.appcompat.R$styleable: int Toolbar_subtitleTextAppearance
androidx.constraintlayout.solver.widgets.ResolutionNode: boolean isResolved()
com.example.revolut.rates.R$style: int Widget_AppCompat_Button_Borderless_Colored
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.operators.observable.ObservableConcatMap: ObservableConcatMap(io.reactivex.ObservableSource,io.reactivex.functions.Function,int,io.reactivex.internal.util.ErrorMode)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)
androidx.loader.R$attr: int fontProviderAuthority
kotlin.text.StringsKt___StringsKt: java.util.Collection mapIndexedNotNullTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function2)
io.reactivex.processors.BehaviorProcessor: io.reactivex.processors.BehaviorProcessor createDefault(java.lang.Object)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableScan: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.view.menu.ListMenuItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)
com.google.gson.JsonObject: java.util.Set entrySet()
androidx.appcompat.R$string: int abc_font_family_title_material
okhttp3.CacheControl: int maxStaleSeconds()
okhttp3.HttpUrl: java.lang.String redact()
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
androidx.viewpager.widget.PagerAdapter: void setPrimaryItem(android.view.View,int,java.lang.Object)
kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_LETTER
io.reactivex.subjects.AsyncSubject: void onComplete()
kotlin.collections.ArraysKt___ArraysKt: int sum(int[])
kotlin.reflect.KCallable: kotlin.reflect.KVisibility getVisibility()
kotlin.collections.ArraysKt___ArraysJvmKt: int[] copyOfRange(int[],int,int)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isConnectionAllowed(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor)
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget FIELD
kotlin.collections.ArraysKt___ArraysJvmKt: float[] plus(float[],float)
com.jakewharton.rxbinding3.widget.RatingBarChangeEvent: int hashCode()
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object lastOrNull(java.lang.Iterable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean performAction(int)
kotlin.concurrent.ThreadsKt: java.lang.Thread thread(boolean,boolean,java.lang.ClassLoader,java.lang.String,int,kotlin.jvm.functions.Function0)
androidx.slidingpanelayout.R$color: int notification_icon_bg_color
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES
kotlin.sequences.GeneratorSequence$iterator$1
androidx.loader.R$id: int icon
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
androidx.appcompat.graphics.drawable.StateListDrawable: void applyTheme(android.content.res.Resources$Theme)
kotlin.ULong: int compareTo(java.lang.Object)
androidx.viewpager.widget.ViewPager: void removeView(android.view.View)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Widget_Button
kotlin.text.StringsKt__StringsKt: kotlin.ranges.IntRange getIndices(java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: void stopNestedScroll()
kotlin.coroutines.experimental.migration.CoroutinesMigrationKt: kotlin.jvm.functions.Function1 toExperimentalSuspendFunction(kotlin.jvm.functions.Function1)
okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection,boolean)
kotlin.coroutines.experimental.jvm.internal.CoroutineImpl: void resumeWithException(java.lang.Throwable)
io.reactivex.observers.DefaultObserver: DefaultObserver()
com.example.revolut.rates.R$drawable: int abc_btn_radio_material
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(int,short)
androidx.core.provider.FontRequest: FontRequest(java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.recyclerview.widget.RecyclerView$LayoutManager
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addPerson(java.lang.String)
io.reactivex.internal.operators.observable.ObservableJoin
com.example.revolut.rates.R$attr: int tint
com.example.revolut.rates.databinding.ActivityMainBinding: ActivityMainBinding(java.lang.Object,android.view.View,int,androidx.recyclerview.widget.RecyclerView,android.widget.RelativeLayout)
androidx.core.content.res.TypedArrayKt: java.lang.Object use(android.content.res.TypedArray,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: StringsKt__StringNumberConversionsJVMKt()
androidx.lifecycle.LiveData$LifecycleBoundObserver
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable
androidx.core.view.ViewCompat: void setScaleY(android.view.View,float)
io.reactivex.internal.util.QueueDrain: long requested()
io.reactivex.Single: io.reactivex.Single delaySubscription(long,java.util.concurrent.TimeUnit)
dagger.android.support.R$style: int Animation_AppCompat_DropDownUp
com.google.gson.internal.bind.TimeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.sql.Time)
androidx.loader.content.Loader: void onStopLoading()
io.reactivex.Maybe: io.reactivex.Maybe merge(io.reactivex.MaybeSource)
androidx.arch.core.executor.ArchTaskExecutor: void setDelegate(androidx.arch.core.executor.TaskExecutor)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: int lastIndexOf(char)
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(byte[],kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence removeRange(java.lang.CharSequence,kotlin.ranges.IntRange)
io.reactivex.Observable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function)
io.reactivex.observers.SerializedObserver: SerializedObserver(io.reactivex.Observer,boolean)
androidx.viewpager.R$attr: int fontProviderPackage
io.reactivex.internal.operators.flowable.FlowableMaterialize: void subscribeActual(org.reactivestreams.Subscriber)
androidx.constraintlayout.solver.LinearSystem: void addRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,int)
androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.customview.R$dimen: int notification_big_circle_margin
androidx.recyclerview.widget.LinearLayoutManager: void scrollToPosition(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(double[],kotlin.jvm.functions.Function2)
com.example.revolut.rates.R$id: int search_src_text
retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.versionedparcelable.ParcelImpl: ParcelImpl(androidx.versionedparcelable.VersionedParcelable)
androidx.appcompat.R$id: int left
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: int lastIndexOf-WZ4Q5Ns(int)
io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable: io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable[] values()
androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)
androidx.appcompat.R$drawable: int abc_ratingbar_indicator_material
kotlinx.coroutines.test.TestCoroutineContext: TestCoroutineContext(java.lang.String)
com.google.gson.JsonSerializationContext: com.google.gson.JsonElement serialize(java.lang.Object)
kotlinx.coroutines.DispatchedKt: void resumeDirectWithException(kotlin.coroutines.Continuation,java.lang.Throwable)
kotlin.KotlinVersion: int getMajor()
androidx.databinding.adapters.TimePickerBindingAdapter: void setMinute(android.widget.TimePicker,int)
androidx.customview.view.AbsSavedState: int describeContents()
androidx.collection.SimpleArrayMap: int size()
io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource,io.reactivex.functions.Function)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapNotNullTo$1
androidx.core.view.MenuItemCompat
dagger.android.support.R$dimen: int abc_floating_window_z
kotlin.jvm.internal.Ref$BooleanRef: Ref$BooleanRef()
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver: long serialVersionUID
androidx.drawerlayout.R$id: int action_divider
androidx.lifecycle.ReportFragment: void onPause()
kotlin.ranges.IntProgression: kotlin.collections.IntIterator iterator()
androidx.legacy.coreui.R$dimen
androidx.recyclerview.widget.BatchingListUpdateCallback: void onRemoved(int,int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
androidx.fragment.R$id: int left
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate$RetryBiObserver: long serialVersionUID
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterNot$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
dagger.android.support.R$attr: int closeItemLayout
androidx.appcompat.view.menu.BaseMenuPresenter: void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)
kotlin.UShortArray: boolean contains-xj2QHRw(short)
dagger.android.support.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet)
com.jakewharton.rxbinding3.core.R$color: int notification_action_color_filter
dagger.android.support.R$attr: int popupWindowStyle
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int)
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
kotlin.jvm.internal.CallableReference: boolean isFinal()
io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)
retrofit2.http.Field: java.lang.String value()
androidx.arch.core.executor.DefaultTaskExecutor: DefaultTaskExecutor()
androidx.legacy.v4.R$styleable: int FontFamily_fontProviderAuthority
io.reactivex.subjects.ReplaySubject: boolean hasComplete()
kotlinx.coroutines.channels.AbstractSendChannel: void invokeOnClose(kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)
com.example.revolut.rates.R$attr: int titleMarginTop
io.reactivex.internal.schedulers.RxThreadFactory: java.lang.String toString()
androidx.appcompat.R$styleable: int TextAppearance_android_textSize
okhttp3.internal.Util: void closeQuietly(java.net.Socket)
io.reactivex.Single: io.reactivex.Single cast(java.lang.Class)
kotlinx.coroutines.DispatchedTask: int getResumeMode()
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
kotlin.io.FilesKt__FileReadWriteKt: byte[] readBytes(java.io.File)
androidx.legacy.coreutils.R$style
androidx.customview.R$styleable: int GradientColor_android_type
androidx.recyclerview.R$drawable: int notification_bg
kotlinx.coroutines.scheduling.GlobalQueue
okio.Buffer: okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset)
androidx.appcompat.widget.SearchView$OnCloseListener: boolean onClose()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource,int)
io.reactivex.subjects.MaybeSubject: java.lang.Throwable getThrowable()
com.google.gson.internal.bind.JsonTreeReader: java.lang.String getPath()
androidx.recyclerview.R$styleable: int[] FontFamilyFont
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: ViewPropertyAnimatorCompatSet()
androidx.fragment.app.FragmentPagerAdapter: FragmentPagerAdapter(androidx.fragment.app.FragmentManager)
androidx.asynclayoutinflater.R$attr
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy()
io.reactivex.internal.schedulers.ComputationScheduler
io.reactivex.Flowable: io.reactivex.Flowable share()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setShortcutId(java.lang.String)
androidx.core.util.SizeKt: int component1(android.util.Size)
androidx.core.widget.EdgeEffectCompat: boolean isFinished()
io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber: long serialVersionUID
androidx.recyclerview.widget.RecyclerView$SavedState
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: IntrinsicsKt__IntrinsicsJvmKt()
kotlin.text.StringsKt___StringsKt: java.lang.Appendable filterTo(java.lang.CharSequence,java.lang.Appendable,kotlin.jvm.functions.Function1)
androidx.databinding.Observable: void removeOnPropertyChangedCallback(androidx.databinding.Observable$OnPropertyChangedCallback)
androidx.recyclerview.widget.RecyclerView$Recycler: android.view.View getViewForPosition(int)
io.reactivex.internal.fuseable.ScalarCallable: java.lang.Object call()
io.reactivex.internal.operators.flowable.FlowableObserveOn
io.reactivex.internal.operators.maybe.MaybeToPublisher
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection toCollection(kotlin.sequences.Sequence,java.util.Collection)
io.reactivex.Observable: io.reactivex.Observable delay(io.reactivex.ObservableSource,io.reactivex.functions.Function)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentIconGravity(int)
io.reactivex.internal.operators.observable.ObservableObserveOn: ObservableObserveOn(io.reactivex.ObservableSource,io.reactivex.Scheduler,boolean,int)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object receive(kotlin.coroutines.Continuation)
io.reactivex.Completable: io.reactivex.Completable timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.TypeAliasesKt: void ArithmeticException$annotations()
androidx.core.widget.ContentLoadingProgressBar: void hide()
io.reactivex.internal.subscriptions.DeferredScalarSubscription: java.lang.Object poll()
okio.Buffer: okio.BufferedSink write(byte[])
io.reactivex.observers.SerializedObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.databinding.library.baseAdapters.R$id: int dataBinding
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
kotlin.io.ByteStreamsKt: byte[] readBytes(java.io.InputStream)
androidx.constraintlayout.solver.Metrics: long tableSizeIncrease
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightEndObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableElementAt
androidx.core.util.AtomicFile: void finishWrite(java.io.FileOutputStream)
androidx.customview.R$styleable: int FontFamily_fontProviderQuery
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable touches$default(android.view.View,kotlin.jvm.functions.Function1,int,java.lang.Object)
dagger.android.support.R$styleable: int Toolbar_subtitle
androidx.core.content.res.ResourcesCompat$FontCallback: void onFontRetrievalFailed(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(double[],kotlin.jvm.functions.Function1)
androidx.asynclayoutinflater.R$color: int notification_icon_bg_color
androidx.appcompat.view.menu.ActionMenuItemView: void onMeasure(int,int)
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection[] values()
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarItemBackground
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable filter(io.reactivex.functions.Predicate,io.reactivex.parallel.ParallelFailureHandling)
androidx.recyclerview.widget.RecyclerView$Recycler: void recycleView(android.view.View)
com.example.revolut.rates.R$style: int Theme_AppCompat_Light_DialogWhenLarge
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
com.example.revolut.rates.R$styleable: int AppCompatTheme_seekBarStyle
io.reactivex.internal.operators.flowable.FlowableRange$RangeSubscription: long serialVersionUID
androidx.recyclerview.widget.LinearSmoothScroller: int calculateTimeForScrolling(int)
androidx.appcompat.R$attr: int actionLayout
kotlin.ULongArray: java.lang.Object[] toArray()
io.reactivex.internal.operators.maybe.MaybeCreate
dagger.android.support.R$styleable: int MenuView_preserveIconSpacing
androidx.appcompat.R$attr: int listPreferredItemHeight
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_RC4_128_SHA
androidx.media.AudioAttributesCompat: int USAGE_ASSISTANCE_SONIFICATION
kotlin.collections.ArraysKt___ArraysKt: boolean all(short[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
kotlinx.coroutines.ExecutorCoroutineDispatcherBase
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
com.example.revolut.rates.R$layout: int abc_screen_simple
okhttp3.internal.platform.ConscryptPlatform
androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType: androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType[] values()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.view.ActionMode: java.lang.Object getTag()
androidx.media.R$styleable: int GradientColor_android_gradientRadius
io.reactivex.internal.operators.flowable.FlowableBufferTimed: FlowableBufferTimed(io.reactivex.Flowable,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,java.util.concurrent.Callable,int,boolean)
com.example.revolut.rates.R$layout: int notification_template_lines_media
okhttp3.CertificatePinner: void check(java.lang.String,java.security.cert.Certificate[])
io.reactivex.Flowable: io.reactivex.Flowable buffer(int,int,java.util.concurrent.Callable)
androidx.core.text.HtmlKt: java.lang.String toHtml(android.text.Spanned,int)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMutableMap(java.util.Map)
androidx.databinding.ObservableArrayMap: ObservableArrayMap()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintTop_creator
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
kotlin.sequences.SequencesKt___SequencesKt$minus$3: java.util.Iterator iterator()
dagger.android.support.R$styleable: int MenuView_android_verticalDivider
androidx.core.app.AppLaunchChecker: void onActivityCreate(android.app.Activity)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Small_Inverse
io.reactivex.Observable: void blockingSubscribe(io.reactivex.functions.Consumer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.appcompat.R$drawable: int abc_list_divider_mtrl_alpha
kotlin.math.MathKt__MathJVMKt: double log2(double)
com.example.revolut.rates.R$color: int material_grey_600
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setSubtitle(int)
androidx.core.R$styleable: int ColorStateListItem_alpha
com.example.revolut.rates.R$style: int Theme_AppCompat
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int[] getState()
kotlin.random.AbstractPlatformRandom: float nextFloat()
androidx.coordinatorlayout.R$drawable: int notification_template_icon_bg
androidx.swiperefreshlayout.R$id: int line3
kotlinx.coroutines.DefaultExecutor: void unpark()
androidx.appcompat.view.menu.MenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int ANCHOR_BOTTOM
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
com.example.revolut.rates.R$layout: int select_dialog_multichoice_material
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(java.lang.Integer[])
kotlin.jvm.internal.ShortSpreadBuilder: ShortSpreadBuilder(int)
okhttp3.internal.Internal: int code(okhttp3.Response$Builder)
io.reactivex.Single: io.reactivex.Single retry(long,io.reactivex.functions.Predicate)
androidx.constraintlayout.widget.ConstraintSet: void applyTo(androidx.constraintlayout.widget.ConstraintLayout)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isVisible()
okhttp3.MultipartBody: okhttp3.MediaType FORM
kotlin.ranges.LongRange: java.lang.Comparable getEndInclusive()
io.reactivex.internal.operators.observable.ObservableBufferBoundary
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel dropWhile(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.core.graphics.drawable.DrawableCompat: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
androidx.core.graphics.PathSegment: float getEndFraction()
okio.Okio: okio.Sink sink(java.io.OutputStream)
io.reactivex.internal.operators.flowable.FlowableNever: io.reactivex.Flowable INSTANCE
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()
androidx.constraintlayout.widget.ConstraintSet: void create(int,int)
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintVertical_bias
io.reactivex.internal.observers.SubscriberCompletableObserver: void cancel()
io.reactivex.Single: io.reactivex.Single doOnDispose(io.reactivex.functions.Action)
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.ClosedRange,double)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object consumeEach(kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.Result: void value$annotations()
io.reactivex.internal.operators.flowable.FlowableReplay$SizeBoundReplayBuffer: long serialVersionUID
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionMenuTextColor
androidx.core.os.CancellationSignal: java.lang.Object getCancellationSignalObject()
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
androidx.core.view.WindowInsetsCompat: boolean isConsumed()
androidx.core.view.animation.PathInterpolatorCompat: android.view.animation.Interpolator create(float,float)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
kotlin.ranges.CharRange: int hashCode()
io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function4)
androidx.slidingpanelayout.R$attr: int fontProviderQuery
kotlin.io.ConsoleKt: java.lang.String readLine(java.io.InputStream,java.nio.charset.CharsetDecoder)
androidx.appcompat.R$styleable: int ActionMenuItemView_android_minWidth
kotlinx.coroutines.internal.CloseableKt: void Closeable$annotations()
android.support.v4.os.ResultReceiver: void onReceiveResult(int,android.os.Bundle)
androidx.slidingpanelayout.R$dimen: int compat_button_padding_horizontal_material
androidx.legacy.coreutils.R$dimen: int notification_action_text_size
androidx.appcompat.R$styleable: int SearchView_voiceIcon
androidx.core.content.pm.PermissionInfoCompat: int getProtectionFlags(android.content.pm.PermissionInfo)
com.example.revolut.rates.R$id: int CTRL
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$buildContinuationByInvokeCall$continuation$1: void resume(java.lang.Object)
com.example.revolut.rates.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
io.reactivex.Single: io.reactivex.Single delay(long,java.util.concurrent.TimeUnit)
io.reactivex.internal.subscribers.BasicFuseableSubscriber: org.reactivestreams.Subscription upstream
androidx.media.R$id: int normal
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintRight_creator
io.reactivex.internal.observers.DeferredScalarDisposable: void complete()
androidx.constraintlayout.solver.widgets.Analyzer: void setPosition(java.util.List,int,int)
androidx.lifecycle.ViewModelProviders$DefaultFactory
kotlinx.coroutines.channels.ProducerJob
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.CharSequence getText()
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction,io.reactivex.functions.Consumer)
io.reactivex.internal.subscribers.FutureSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableCache: ObservableCache(io.reactivex.Observable,int)
dagger.android.support.R$styleable: int AppCompatTheme_colorAccent
com.example.revolut.rates.R$attr: int layout_constraintRight_toRightOf
androidx.vectordrawable.R$styleable: int GradientColorItem_android_offset
io.reactivex.FlowableTransformer
dagger.android.support.R$dimen: int disabled_alpha_material_light
io.reactivex.internal.operators.flowable.FlowableFromArray$ArrayConditionalSubscription: long serialVersionUID
androidx.appcompat.R$style: int Widget_AppCompat_AutoCompleteTextView
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper(android.content.Context,int)
kotlin.ULong: int SIZE_BYTES
com.google.gson.JsonNull: boolean equals(java.lang.Object)
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy BUFFER
kotlinx.coroutines.AbstractContinuation: java.lang.Object getResult()
androidx.core.view.NestedScrollingParent: boolean onNestedPreFling(android.view.View,float,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
androidx.databinding.ObservableInt
io.reactivex.schedulers.Schedulers: io.reactivex.Scheduler computation()
androidx.appcompat.widget.ActionBarContextView: boolean hideOverflowMenu()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: boolean contains(float)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()
kotlin.text.StringsKt___StringsJvmKt: java.util.SortedSet toSortedSet(java.lang.CharSequence)
androidx.recyclerview.widget.AsyncDifferConfig$Builder: androidx.recyclerview.widget.AsyncDifferConfig build()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_goneMarginLeft
kotlinx.coroutines.channels.ConflatedBroadcastChannel: void valueOrNull$annotations()
io.reactivex.internal.operators.flowable.FlowableSerialized
androidx.core.R$id: int action_text
androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()
io.reactivex.Flowable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void reset()
androidx.appcompat.widget.ActionBarContainer: boolean verifyDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_barrierAllowsGoneWidgets
dagger.android.support.R$id: int edit_query
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setEditable(boolean)
com.google.gson.InstanceCreator: java.lang.Object createInstance(java.lang.reflect.Type)
kotlin.collections.ArraysKt___ArraysKt: long[] sliceArray(long[],kotlin.ranges.IntRange)
dagger.android.support.R$attr: int seekBarStyle
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
io.reactivex.internal.schedulers.IoScheduler: io.reactivex.Scheduler$Worker createWorker()
io.reactivex.processors.AsyncProcessor$AsyncSubscription: long serialVersionUID
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_UNLOCKED
okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)
androidx.core.view.MenuItemCompat: android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)
kotlin.collections.LongIterator: java.lang.Long next()
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: void setDefaultDragDirs(int)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: RecyclerView$RecycledViewPool()
io.reactivex.Observable: io.reactivex.Observable cast(java.lang.Class)
io.reactivex.exceptions.CompositeException: CompositeException(java.lang.Throwable[])
androidx.customview.R$styleable: int[] ColorStateListItem
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableTransition
android.support.v4.app.INotificationSideChannel$Stub: INotificationSideChannel$Stub()
kotlinx.coroutines.selects.SelectBuilderImpl: void onTimeout(long,java.util.concurrent.TimeUnit,kotlin.jvm.functions.Function1)
io.reactivex.Flowable: io.reactivex.Flowable distinct(io.reactivex.functions.Function,java.util.concurrent.Callable)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
io.reactivex.Maybe: io.reactivex.Flowable concatEager(java.lang.Iterable)
androidx.viewpager.widget.PagerAdapter: float getPageWidth(int)
kotlin.reflect.KTypeProjection: kotlin.reflect.KType component2()
kotlin.collections.ArraysKt___ArraysKt: short reduce(short[],kotlin.jvm.functions.Function2)
io.reactivex.internal.util.VolatileSizeArrayList: java.util.Iterator iterator()
androidx.legacy.coreutils.R$dimen: int compat_notification_large_icon_max_width
androidx.core.view.GestureDetectorCompat: void setIsLongpressEnabled(boolean)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean tryAcquireCpuPermit()
kotlin.collections.UByteIterator: byte nextUByte()
com.example.revolut.rates.common.StringToDoubleKt: double StringToDouble(java.lang.String)
com.example.revolut.rates.databinding.ActivityMainBinding: android.widget.RelativeLayout loadingLayout
androidx.asynclayoutinflater.R$dimen: int notification_top_pad_large_text
retrofit2.Retrofit: retrofit2.CallAdapter nextCallAdapter(retrofit2.CallAdapter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])
com.jakewharton.rxbinding3.widget.SeekBarStopChangeEvent: android.widget.SeekBar getView()
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintLeft_toLeftOf
androidx.core.graphics.TypefaceCompatApi28Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
io.reactivex.internal.subscribers.BoundedSubscriber: void dispose()
androidx.core.graphics.drawable.DrawableCompat
androidx.coordinatorlayout.R$attr: int fontProviderQuery
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.example.revolut.rates.R$string: int search_menu_title
kotlin.text.UStringsKt: long toULong(java.lang.String)
io.reactivex.internal.schedulers.AbstractDirectTask: java.lang.Runnable runnable
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)
androidx.appcompat.app.ActionBar: float getElevation()
kotlinx.coroutines.internal.LockFreeMPMCQueueNode: java.lang.Object getNextValue()
io.reactivex.internal.observers.BlockingMultiObserver: void onSuccess(java.lang.Object)
kotlin.ranges.CharProgression: int hashCode()
androidx.constraintlayout.widget.R$attr: int layout_constraintRight_creator
io.reactivex.parallel.ParallelFailureHandling: io.reactivex.parallel.ParallelFailureHandling apply(java.lang.Long,java.lang.Throwable)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Small
io.reactivex.internal.observers.BasicFuseableObserver: io.reactivex.Observer downstream
androidx.appcompat.R$color: int bright_foreground_inverse_material_dark
kotlinx.coroutines.DispatchedContinuation
androidx.core.app.ServiceCompat: int STOP_FOREGROUND_REMOVE
androidx.appcompat.widget.ListPopupWindow: android.view.View getAnchorView()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Boolean[] toTypedArray(boolean[])
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
kotlin.sequences.MergingSequence$iterator$1: java.lang.Object next()
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlinx.coroutines.Job,kotlin.jvm.functions.Function2)
com.google.gson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)
kotlinx.coroutines.scheduling.TaskContext: void afterTask()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List drop-nggk6HY(short[],int)
androidx.appcompat.widget.SwitchCompat: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
kotlin.Suppress
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object)
dagger.android.support.R$dimen: int notification_right_icon_size
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA
kotlin.ranges.IntRange: java.lang.String toString()
com.example.revolut.rates.R$attr: int contentInsetStart
androidx.appcompat.view.StandaloneActionMode: void setSubtitle(int)
com.jakewharton.rxbinding3.core.R$id: int line3
androidx.drawerlayout.widget.DrawerLayout: void onDraw(android.graphics.Canvas)
androidx.versionedparcelable.VersionedParcel$ParcelException: VersionedParcel$ParcelException(java.lang.Throwable)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object access$enqueueSend(kotlinx.coroutines.channels.AbstractSendChannel,kotlinx.coroutines.channels.SendElement)
com.example.revolut.rates.R$id: int status_bar_latest_event_content
androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
androidx.legacy.app.ActionBarDrawerToggle: void onDrawerOpened(android.view.View)
io.reactivex.Observable: io.reactivex.Observable concatMapEager(io.reactivex.functions.Function,int,int)
io.reactivex.internal.operators.single.SingleDetach: SingleDetach(io.reactivex.SingleSource)
kotlin.text.Regex: kotlin.text.Regex$Companion Companion
kotlin.coroutines.experimental.SequenceBuilder: SequenceBuilder()
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment
androidx.recyclerview.R$styleable: int RecyclerView_layoutManager
io.reactivex.internal.operators.flowable.FlowableSerialized: FlowableSerialized(io.reactivex.Flowable)
io.reactivex.internal.observers.BasicFuseableObserver: BasicFuseableObserver(io.reactivex.Observer)
androidx.core.app.FrameMetricsAggregator: int SYNC_DURATION
okhttp3.Address: java.lang.String toString()
kotlin.collections.MapsKt___MapsKt: java.util.Collection flatMapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.Pair: java.lang.Object getSecond()
okhttp3.internal.http2.Http2Stream
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getWeight()
dagger.android.support.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
androidx.appcompat.widget.DecorToolbar: void saveHierarchyState(android.util.SparseArray)
androidx.appcompat.R$color: int notification_icon_bg_color
io.reactivex.Observable: io.reactivex.Observable concatWith(io.reactivex.CompletableSource)
io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe()
io.reactivex.internal.subscriptions.AsyncSubscription: AsyncSubscription(io.reactivex.disposables.Disposable)
okhttp3.Cache: java.util.Iterator urls()
kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.legacy.coreui.R$drawable
androidx.interpolator.view.animation.FastOutLinearInInterpolator
androidx.appcompat.view.menu.ActionMenuItem: android.view.ActionProvider getActionProvider()
kotlin.text.Typography: char registered
androidx.coordinatorlayout.R$attr: int fontVariationSettings
androidx.appcompat.R$layout: int abc_action_menu_layout
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollRange()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isMeasurementCacheEnabled()
com.example.revolut.rates.DataBindingInfo
com.google.gson.stream.JsonWriter: boolean isHtmlSafe()
okhttp3.ConnectionSpec: java.util.List tlsVersions()
androidx.core.util.SparseBooleanArrayKt: android.util.SparseBooleanArray plus(android.util.SparseBooleanArray,android.util.SparseBooleanArray)
androidx.core.app.TaskStackBuilder$SupportParentable: android.content.Intent getSupportParentActivityIntent()
androidx.fragment.R$drawable: int notification_bg_normal_pressed
androidx.media.AudioAttributesCompat: int getFlags()
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed
io.reactivex.internal.observers.FutureSingleObserver
kotlinx.coroutines.JobSupport
kotlin.collections.CollectionsKt___CollectionsKt: boolean any(java.lang.Iterable)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: boolean isVerticalGrowth()
androidx.loader.content.Loader: void onReset()
io.reactivex.annotations.SchedulerSupport
androidx.appcompat.widget.ScrollingTabContainerView: void onNothingSelected(android.widget.AdapterView)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2)
com.example.revolut.rates.R$styleable: int AppCompatTheme_selectableItemBackground
androidx.databinding.adapters.ViewBindingAdapter: ViewBindingAdapter()
kotlin.jvm.internal.CharCompanionObject
dagger.android.support.R$styleable: int[] ActionBar
io.reactivex.subjects.BehaviorSubject: void subscribeActual(io.reactivex.Observer)
androidx.core.view.ViewCompat: int getScrollIndicators(android.view.View)
androidx.appcompat.R$drawable: int abc_control_background_material
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.lang.String)
androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.Object getImpl()
io.reactivex.Maybe: io.reactivex.Maybe error(java.util.concurrent.Callable)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
androidx.appcompat.R$attr: int popupWindowStyle
io.reactivex.Flowable: void blockingForEach(io.reactivex.functions.Consumer)
okhttp3.CacheControl: boolean isPrivate()
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionBarTabTextStyle
kotlin.collections.AbstractMap$Companion: AbstractMap$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.channels.AbstractChannelKt: java.lang.Object ENQUEUE_FAILED
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$foldIndexed$1: ChannelsKt__Channels_commonKt$foldIndexed$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.test.TestCoroutineContext: void assertAnyUnhandledException(java.lang.String,kotlin.jvm.functions.Function1)
androidx.constraintlayout.solver.widgets.ResolutionAnchor: int BARRIER_CONNECTION
kotlin.collections.AbstractMutableMap: java.util.Set getKeys()
androidx.appcompat.widget.ActionBarContextView: void onDetachedFromWindow()
androidx.recyclerview.widget.LinearSmoothScroller: android.view.animation.LinearInterpolator mLinearInterpolator
androidx.coordinatorlayout.R$id: int action_image
androidx.loader.R$styleable: int[] ColorStateListItem
androidx.slidingpanelayout.R$drawable: int notification_template_icon_bg
android.support.v4.media.session.IMediaSession: void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
androidx.appcompat.R$styleable: int[] DrawerArrowToggle
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short lastOrNull(short[],kotlin.jvm.functions.Function1)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void resetAllConstraints()
com.example.revolut.rates.R$styleable: int Toolbar_contentInsetLeft
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat zBy(float)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
kotlin.collections.ByteIterator: java.lang.Object next()
io.reactivex.internal.functions.ObjectHelper: long verifyPositive(long,java.lang.String)
kotlin.math.MathKt: double PI
androidx.appcompat.R$dimen: int abc_dialog_fixed_height_minor
androidx.databinding.adapters.TabHostBindingAdapter: java.lang.String getCurrentTabTag(android.widget.TabHost)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.ColorFilter getColorFilter()
androidx.asynclayoutinflater.R$dimen: int notification_big_circle_margin
io.reactivex.Flowable: io.reactivex.Flowable mergeWith(io.reactivex.MaybeSource)
io.reactivex.Maybe: io.reactivex.Flowable merge(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)
androidx.appcompat.widget.TintTypedArray: float getFloat(int,float)
okhttp3.Cookie$Builder: Cookie$Builder()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PRIVATE
com.example.revolut.rates.R$color: int color_grey_700
io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)
com.example.revolut.rates.R$attr: int actionMenuTextColor
io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher,io.reactivex.functions.Function,int)
kotlin.UShortArray: java.lang.String toString()
kotlin.Triple: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.Closed: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservableToListSingle: ObservableToListSingle(io.reactivex.ObservableSource,java.util.concurrent.Callable)
androidx.lifecycle.extensions.R$styleable: int GradientColor_android_startColor
io.reactivex.internal.schedulers.RxThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
dagger.android.support.R$style: int Widget_AppCompat_Light_ListView_DropDown
kotlin.jvm.functions.Function20
okhttp3.Route: java.net.InetSocketAddress socketAddress()
androidx.annotation.RequiresPermission: java.lang.String[] anyOf()
androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(float[],float[],kotlin.jvm.functions.Function2)
io.reactivex.MaybeEmitter
androidx.print.PrintHelper: void printBitmap(java.lang.String,android.graphics.Bitmap,androidx.print.PrintHelper$OnPrintFinishCallback)
okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)
androidx.core.util.LongSparseArrayKt
io.reactivex.Observable: io.reactivex.Observable generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)
androidx.appcompat.widget.DialogTitle: void onMeasure(int,int)
kotlin.coroutines.jvm.internal.DebugMetadataKt
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getItemCount()
io.reactivex.internal.operators.flowable.FlowableZip: void subscribeActual(org.reactivestreams.Subscriber)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int left
androidx.viewpager.widget.ViewPager: void onLayout(boolean,int,int,int,int)
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_WINDOWS_CHANGED
android.support.v4.media.session.PlaybackStateCompat: int STATE_CONNECTING
androidx.constraintlayout.solver.widgets.WidgetContainer: void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
androidx.appcompat.app.ActionBarDrawerToggle: void setHomeAsUpIndicator(int)
dagger.android.support.R$drawable: int abc_text_select_handle_left_mtrl_dark
io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable reduce(io.reactivex.functions.BiFunction)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int chooseSize(int,int,int)
io.reactivex.observers.BaseTestConsumer: boolean timeout
android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_ADD_QUEUE_ITEM_AT
androidx.appcompat.view.menu.ActionMenuItem: char getAlphabeticShortcut()
io.reactivex.Observable: io.reactivex.Observable flatMapMaybe(io.reactivex.functions.Function)
androidx.appcompat.R$attr: int titleMargin
androidx.recyclerview.widget.SimpleItemAnimator: void onChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
dagger.android.DaggerFragment_MembersInjector: void injectChildFragmentInjector(dagger.android.DaggerFragment,dagger.android.DispatchingAndroidInjector)
kotlinx.coroutines.channels.BroadcastChannelKt
io.reactivex.internal.operators.observable.ObservableTakeLastTimed
io.reactivex.Single: io.reactivex.Flowable mergeDelayError(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)
androidx.appcompat.R$id: int time
androidx.core.graphics.MatrixKt: android.graphics.Matrix translationMatrix(float,float)
io.reactivex.internal.operators.flowable.FlowableCountSingle: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.subscriptions.SubscriptionArbiter: void request(long)
dagger.android.support.R$id: int icon
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_DES_CBC_SHA
okhttp3.Call: void enqueue(okhttp3.Callback)
androidx.core.R$string: int status_bar_notification_info_overflow
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5: java.util.Iterator iterator()
kotlinx.coroutines.scheduling.TasksKt: int MAX_POOL_SIZE
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
androidx.appcompat.R$styleable: int DrawerArrowToggle_gapBetweenBars
androidx.lifecycle.Transformations: androidx.lifecycle.LiveData map(androidx.lifecycle.LiveData,androidx.arch.core.util.Function)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sorted--ajY-9A(int[])
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1
androidx.drawerlayout.R$dimen: int notification_small_icon_size_as_large
androidx.loader.R$drawable: int notification_bg
androidx.recyclerview.widget.LinearLayoutManager: void setOrientation(int)
androidx.fragment.app.FragmentTransitionImpl: void beginDelayedTransition(android.view.ViewGroup,java.lang.Object)
android.support.v4.media.session.PlaybackStateCompat: int STATE_SKIPPING_TO_PREVIOUS
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.observables.ConnectableObservable onAssembly(io.reactivex.observables.ConnectableObservable)
kotlin.LateinitKt
com.google.gson.internal.bind.ObjectTypeAdapter
androidx.recyclerview.widget.LinearLayoutManager: boolean canScrollHorizontally()
kotlin.ranges.RangesKt___RangesKt: int coerceAtMost(int,int)
kotlin.UByte: boolean equals-impl0(byte,byte)
androidx.fragment.app.FragmentManager$BackStackEntry: java.lang.String getName()
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemInserted(int)
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void request(long)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float guidePercent
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_NEXT_HTML_ELEMENT
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object filterNotTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.appcompat.R$attr: int maxButtonHeight
io.reactivex.Completable: void subscribeActual(io.reactivex.CompletableObserver)
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder strikeThrough(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean)
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_ACTION_EXTRAS
dagger.android.support.R$attr: int actionButtonStyle
kotlin.jvm.internal.TypeIntrinsics: java.lang.ClassCastException throwCce(java.lang.ClassCastException)
kotlin.collections.ArraysKt___ArraysKt: int indexOf(float[],float)
androidx.appcompat.R$color: int background_material_dark
com.example.revolut.rates.base.BaseViewModel
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: int indexOf-VKZWuLQ(long)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_minHeight
io.reactivex.internal.operators.single.SingleToFlowable: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.collections.MapsKt__MapsKt: java.util.Map optimizeReadOnlyMap(java.util.Map)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode HTTP_1_1_REQUIRED
androidx.core.content.PermissionChecker: int PERMISSION_DENIED_APP_OP
io.reactivex.Maybe: io.reactivex.Maybe observeOn(io.reactivex.Scheduler)
androidx.collection.LongSparseArray: java.lang.Object get(long)
androidx.constraintlayout.widget.ConstraintSet: void constrainWidth(int,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context,int)
kotlinx.coroutines.channels.AbstractChannel: void access$registerSelectReceiveOrNull(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2)
androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)
androidx.databinding.adapters.TextViewBindingAdapter: void setShadowDx(android.widget.TextView,float)
io.reactivex.Observable: io.reactivex.Observable doOnEach(io.reactivex.Observer)
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
androidx.drawerlayout.widget.DrawerLayout: DrawerLayout(android.content.Context,android.util.AttributeSet,int)
io.reactivex.subjects.ReplaySubject: boolean hasValue()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: AccessibilityNodeProviderCompat()
androidx.appcompat.R$string: int abc_searchview_description_query
androidx.appcompat.widget.DecorToolbar: boolean hasEmbeddedTabs()
okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)
kotlinx.android.parcel.Parceler: java.lang.Object create(android.os.Parcel)
androidx.appcompat.view.menu.ListMenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.core.view.MenuItemCompat: void setNumericShortcut(android.view.MenuItem,char,int)
io.reactivex.internal.functions.Functions: io.reactivex.functions.BiConsumer toMultimapKeyValueSelector(io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.Function)
androidx.constraintlayout.widget.R$attr: int barrierDirection
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(int,int)
kotlinx.coroutines.DefaultExecutor: boolean isCorrectThread()
okio.Timeout: boolean hasDeadline()
com.example.revolut.rates.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener)
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.example.revolut.rates.R$dimen: int abc_panel_menu_list_width
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence withIndex(kotlin.sequences.Sequence)
androidx.core.view.MenuItemCompat: void setShowAsAction(android.view.MenuItem,int)
androidx.cursoradapter.widget.ResourceCursorAdapter
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.CoroutineDispatcher createDefaultDispatcher()
io.reactivex.subscribers.SafeSubscriber: void onComplete()
dagger.android.support.R$drawable: int abc_action_bar_item_background_material
androidx.recyclerview.widget.ItemTouchHelper: int ACTION_STATE_SWIPE
com.example.revolut.rates.di.AppModule_ProvideRatesApiFactory: com.example.revolut.rates.data.RatesApi proxyProvideRatesApi(com.example.revolut.rates.di.AppModule)
io.reactivex.internal.operators.single.SingleCache: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.os.CancellationSignal: boolean isCanceled()
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(byte[],kotlin.jvm.functions.Function1)
androidx.appcompat.app.ActionBar: int getHideOffset()
androidx.constraintlayout.solver.Metrics: long minimize
okhttp3.internal.http2.ConnectionShutdownException: ConnectionShutdownException()
io.reactivex.parallel.ParallelFailureHandling: java.lang.Object apply(java.lang.Object,java.lang.Object)
kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred(java.lang.Object)
androidx.versionedparcelable.VersionedParcel: java.lang.Exception readException(java.lang.Exception,int)
androidx.appcompat.R$styleable: int SearchView_suggestionRowLayout
androidx.core.graphics.PathSegment: PathSegment(android.graphics.PointF,float,android.graphics.PointF,float)
okhttp3.internal.Util: okhttp3.ResponseBody EMPTY_RESPONSE
kotlinx.coroutines.TimeSource: long currentTimeMillis()
io.reactivex.subjects.SingleSubject: void onError(java.lang.Throwable)
okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)
kotlin.jvm.internal.IntSpreadBuilder: int getSize(int[])
com.example.revolut.rates.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
com.example.revolut.rates.R$style: int Widget_AppCompat_ListMenuView
kotlinx.coroutines.selects.SelectClause1
kotlin.jvm.internal.MagicApiIntrinsics: int intMagicApiCall(int,java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(int,short)
androidx.core.widget.PopupWindowCompat
kotlin.collections.ArraysKt___ArraysKt: long first(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.Job$DefaultImpls: kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)
androidx.core.app.NotificationManagerCompat: void cancelAll()
androidx.core.app.NotificationCompat$Style: void buildIntoRemoteViews(android.widget.RemoteViews,android.widget.RemoteViews)
kotlin.UShortArray: boolean add-xj2QHRw(short)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
android.support.v4.media.session.MediaSessionCompatApi23$Callback
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)
dagger.android.support.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
com.example.revolut.rates.R$attr: int layout_anchor
io.reactivex.subjects.BehaviorSubject: java.lang.Object[] getValues(java.lang.Object[])
io.reactivex.Completable: io.reactivex.Completable subscribeOn(io.reactivex.Scheduler)
androidx.core.widget.AutoScrollHelper: boolean canTargetScrollHorizontally(int)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String,okhttp3.RequestBody)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(int[],int)
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
io.reactivex.internal.operators.single.SingleCreate: SingleCreate(io.reactivex.SingleOnSubscribe)
androidx.asynclayoutinflater.R$id: int action_divider
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()
androidx.coordinatorlayout.R$dimen: int compat_button_inset_horizontal_material
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier: FlowableWindowBoundarySupplier(io.reactivex.Flowable,java.util.concurrent.Callable,int)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList getVerticalGuidelines()
com.example.revolut.rates.R$attr: int actionOverflowButtonStyle
io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit)
androidx.databinding.ViewDataBinding: void invalidateAll()
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.internal.Symbol access$getLOCKED$p()
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
androidx.appcompat.R$styleable: int ActionBar_contentInsetEnd
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.R$id: int src_over
androidx.media.MediaBrowserProtocol: java.lang.String DATA_SEARCH_EXTRAS
androidx.legacy.coreutils.R$drawable: int notification_bg
okhttp3.internal.connection.StreamAllocation: java.net.Socket releaseAndAcquire(okhttp3.internal.connection.RealConnection)
androidx.media.MediaBrowserProtocol: int CLIENT_MSG_DISCONNECT
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.Metrics getMetrics()
io.reactivex.internal.functions.ObjectHelper: int compare(long,long)
io.reactivex.internal.operators.completable.CompletableToFlowable: void subscribeActual(org.reactivestreams.Subscriber)
dagger.android.support.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)
io.reactivex.internal.operators.completable.CompletableFromSingle: void subscribeActual(io.reactivex.CompletableObserver)
kotlin.text.CharCategory: kotlin.text.CharCategory LINE_SEPARATOR
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)
androidx.core.view.ViewGroupKt$children$1
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
okhttp3.Address: okhttp3.Dns dns()
io.reactivex.Flowable: io.reactivex.Flowable mergeArray(org.reactivestreams.Publisher[])
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.String getBufferDebugString()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: int getColumnIndex()
io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount()
androidx.versionedparcelable.VersionedParcel: void writeFloatArray(float[])
androidx.core.view.ViewCompat: float getScaleY(android.view.View)
androidx.vectordrawable.R$dimen: int compat_notification_large_icon_max_height
kotlin.collections.ArraysKt___ArraysKt: int count(char[],kotlin.jvm.functions.Function1)
androidx.media.R$styleable: int FontFamily_fontProviderPackage
androidx.viewpager.R$styleable
com.jakewharton.rxbinding3.core.R$styleable: int FontFamily_fontProviderCerts
kotlin.ULongArray: boolean addAll(java.util.Collection)
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener
androidx.core.internal.view.SupportMenu: int USER_MASK
kotlin.UIntArray: java.lang.Object[] toArray(java.lang.Object[])
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
io.reactivex.processors.ReplayProcessor$TimedNode: long serialVersionUID
androidx.fragment.app.FragmentActivity
io.reactivex.observers.BaseTestConsumer: int establishedFusionMode
kotlin.jvm.internal.MutableLocalVariableReference: java.lang.Object get()
kotlin.jvm.internal.PropertyReference1: kotlin.reflect.KCallable computeReflected()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void lastIndex$annotations(short[])
androidx.annotation.LongDef: boolean open()
androidx.swiperefreshlayout.R$id: int notification_background
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.LinearLayoutCompat: int SHOW_DIVIDER_MIDDLE
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence)
androidx.databinding.adapters.AdapterViewBindingAdapter: void setSelection(android.widget.AdapterView,int)
androidx.recyclerview.R$attr: int alpha
dagger.android.support.R$styleable: int SwitchCompat_trackTint
androidx.media.VolumeProviderCompat: int getVolumeControl()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void scheduleResumeAfterDelay(long,java.util.concurrent.TimeUnit,kotlinx.coroutines.CancellableContinuation)
io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,int,io.reactivex.Scheduler)
com.jakewharton.rxbinding3.view.ViewAttachDetachedEvent: java.lang.String toString()
androidx.appcompat.widget.ActionMenuView: void onLayout(boolean,int,int,int,int)
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
io.reactivex.internal.observers.BasicFuseableObserver: boolean beforeDownstream()
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle: MaybeFlatMapSingle(io.reactivex.MaybeSource,io.reactivex.functions.Function)
androidx.core.app.AppComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double singleOrNull(double[])
kotlinx.coroutines.sync.Mutex: boolean tryLock(java.lang.Object)
kotlin.collections.AbstractList: java.util.ListIterator listIterator()
dagger.android.support.R$color: int abc_background_cache_hint_selector_material_light
dagger.android.support.R$styleable: int ActionBar_background
kotlin.ranges.LongProgression: java.lang.String toString()
kotlin.collections.AbstractMap$keys$1$iterator$1: boolean hasNext()
kotlin.ranges.ClosedRange: java.lang.Comparable getStart()
androidx.viewpager.widget.ViewPager: boolean verifyDrawable(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber$BufferOpenSubscriber: long serialVersionUID
okio.ByteString: int size()
com.google.gson.internal.bind.TimeTypeAdapter: java.sql.Time read(com.google.gson.stream.JsonReader)
com.example.revolut.rates.R$drawable: int abc_btn_default_mtrl_shape
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(char[],kotlin.jvm.functions.Function1)
com.jakewharton.rxbinding3.core.R$styleable: int FontFamilyFont_fontWeight
androidx.loader.R$dimen: int notification_right_side_padding_top
androidx.appcompat.app.WindowDecorActionBar: void removeTab(androidx.appcompat.app.ActionBar$Tab)
kotlin.collections.ArraysKt___ArraysKt: void reverse(short[])
io.reactivex.exceptions.MissingBackpressureException: MissingBackpressureException(java.lang.String)
kotlin.ranges.RangesKt___RangesKt: byte coerceAtLeast(byte,byte)
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isPassword()
com.example.revolut.rates.R$drawable
kotlin.jvm.internal.ByteCompanionObject: int SIZE_BITS
androidx.constraintlayout.solver.widgets.Rectangle: int height
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
kotlin.ULong: java.lang.String toString-impl(long)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
io.reactivex.internal.util.VolatileSizeArrayList: boolean add(java.lang.Object)
androidx.media.MediaBrowserProtocol: java.lang.String DATA_CUSTOM_ACTION_EXTRAS
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicWidth()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedPreScroll(int,int,int[],int[])
dagger.android.support.R$styleable: int Spinner_android_popupBackground
kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineResumed(kotlin.coroutines.Continuation)
androidx.appcompat.widget.DropDownListView: boolean isFocused()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Class obtainFontFamily()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.net.URL)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
okio.ForwardingTimeout: boolean hasDeadline()
androidx.lifecycle.extensions.R$styleable: int ColorStateListItem_android_alpha
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
kotlinx.coroutines.EventLoop: kotlinx.coroutines.EventLoop$Factory Factory
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(boolean[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int ALIGN_LEFT
androidx.fragment.R$dimen: int notification_right_side_padding_top
androidx.core.app.NotificationCompat: int PRIORITY_MAX
com.google.gson.JsonObject: java.util.Set keySet()
com.example.revolut.rates.R$styleable: int ActionBar_subtitleTextStyle
androidx.databinding.ObservableArrayMap: java.lang.Object removeAt(int)
androidx.coordinatorlayout.R$style: int Widget_Compat_NotificationActionText
kotlin.io.FilesKt__UtilsKt: java.lang.String getExtension(java.io.File)
kotlin.random.Random$Default: int nextInt()
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getWrapWidth()
io.reactivex.Observable: java.lang.Object as(io.reactivex.ObservableConverter)
dagger.android.support.R$style: int Base_Theme_AppCompat_CompactMenu
io.reactivex.internal.observers.ConsumerSingleObserver: void dispose()
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle
io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable: long serialVersionUID
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onNestedFling(android.view.View,float,float,boolean)
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Builder)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean isWidthMeasuredTooSmall()
kotlinx.coroutines.CompletionHandlerBase: void invoke(java.lang.Throwable)
androidx.appcompat.view.menu.MenuBuilder: void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo)
io.reactivex.internal.operators.observable.ObservableFlattenIterable: ObservableFlattenIterable(io.reactivex.ObservableSource,io.reactivex.functions.Function)
kotlin.collections.ArraysKt___ArraysKt: int sumBy(int[],kotlin.jvm.functions.Function1)
androidx.recyclerview.R$id: int action_text
androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
com.example.revolut.rates.R$attr: int layout_constrainedWidth
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfUInt(kotlin.UInt[])
androidx.vectordrawable.R$id: int none
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable concatMap(io.reactivex.functions.Function,int)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setCustomView(android.view.View)
androidx.core.provider.FontsContractCompat$FontFamilyResult: int STATUS_UNEXPECTED_DATA_PROVIDED
androidx.fragment.app.FragmentManager$OnBackStackChangedListener: void onBackStackChanged()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.ColorFilter getColorFilter()
io.reactivex.internal.operators.flowable.FlowableEmpty: io.reactivex.Flowable INSTANCE
androidx.core.util.LongSparseArrayKt$keyIterator$1: long nextLong()
com.example.revolut.rates.R$dimen: int abc_control_corner_material
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(double[])
androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addPages(java.util.List)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List minus(java.lang.Iterable,java.lang.Object[])
org.jetbrains.annotations.Contract: java.lang.String value()
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: int component9()
androidx.core.view.PointerIconCompat: int TYPE_ALL_SCROLL
com.example.revolut.rates.R$style: int Theme_AppCompat_DayNight
com.example.revolut.rates.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.HttpCodec httpStream()
androidx.legacy.v4.R$layout: int notification_action
io.reactivex.Maybe: io.reactivex.Maybe delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.util.PairKt: android.util.Pair toAndroidPair(kotlin.Pair)
androidx.constraintlayout.solver.SolverVariable: void addToRow(androidx.constraintlayout.solver.ArrayRow)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream pushStream(int,java.util.List,boolean)
android.support.v4.media.session.PlaybackStateCompat$Builder: PlaybackStateCompat$Builder()
androidx.core.R$id: int text
kotlin.text.RegexKt: kotlin.ranges.IntRange access$range(java.util.regex.MatchResult)
io.reactivex.Maybe: io.reactivex.Completable ignoreElement()
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void setOpposite(androidx.constraintlayout.solver.widgets.ResolutionAnchor,int,androidx.constraintlayout.solver.widgets.ResolutionDimension)
androidx.core.view.ViewCompat: int LAYER_TYPE_SOFTWARE
androidx.slidingpanelayout.R$id: int tag_transition_group
androidx.core.graphics.RectKt: android.graphics.RectF minus(android.graphics.RectF,android.graphics.PointF)
kotlinx.coroutines.DebugKt: java.lang.String getClassSimpleName(java.lang.Object)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
kotlinx.coroutines.channels.AbstractSendChannel: boolean isBufferAlwaysFull()
okio.ForwardingSink: okio.Timeout timeout()
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
io.reactivex.internal.subscribers.ForEachWhileSubscriber: ForEachWhileSubscriber(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Large_Inverse
androidx.legacy.coreui.R$style
kotlin.Result: boolean equals(java.lang.Object)
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: int getOldLeft()
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator descendingIterator()
androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup: java.util.List getStartWidgets(int)
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_ActionBar
com.example.revolut.rates.R$styleable: int AppCompatTheme_buttonStyle
io.reactivex.internal.operators.flowable.FlowableSkipUntil: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.view.ViewCompat: int getMeasuredState(android.view.View)
androidx.fragment.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.constraintlayout.widget.ConstraintSet: int WRAP_CONTENT
kotlinx.coroutines.CoroutineName: boolean equals(java.lang.Object)
androidx.loader.R$styleable: int FontFamilyFont_font
androidx.appcompat.R$styleable: int AppCompatTheme_actionButtonStyle
dagger.android.support.R$attr: int actionModeStyle
androidx.appcompat.R$styleable: int DrawerArrowToggle_arrowShaftLength
kotlin.text.CharCategory$Companion: kotlin.text.CharCategory valueOf(int)
io.reactivex.internal.subscribers.StrictSubscriber: StrictSubscriber(org.reactivestreams.Subscriber)
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(int,int)
io.reactivex.Observable: io.reactivex.Observable retry(io.reactivex.functions.Predicate)
androidx.fragment.app.FragmentManager: FragmentManager()
kotlinx.coroutines.selects.SelectInstance: java.lang.Object performAtomicTrySelect(kotlinx.coroutines.internal.AtomicDesc)
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$buildContinuationByInvokeCall$continuation$1: void resume(kotlin.Unit)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder peekMenu()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int rightToLeft
android.support.v4.media.session.MediaSessionCompat$Callback: void onPrepareFromMediaId(java.lang.String,android.os.Bundle)
android.support.v4.media.session.MediaControllerCompat$TransportControls: void playFromMediaId(java.lang.String,android.os.Bundle)
com.example.revolut.rates.R$styleable: int MenuItem_contentDescription
io.reactivex.internal.util.MergerBiFunction: java.util.List apply(java.util.List,java.util.List)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getError()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void draw(android.graphics.Canvas)
androidx.media.AudioAttributesCompat: int USAGE_NOTIFICATION_COMMUNICATION_DELAYED
androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_NONE
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: java.lang.Object value
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(char[],int,int,int,java.lang.Object)
com.example.revolut.rates.R$attr: int paddingStart
android.support.v4.media.MediaDescriptionCompat: android.net.Uri getIconUri()
com.example.revolut.rates.R$dimen: int abc_config_prefDialogWidth
androidx.appcompat.app.WindowDecorActionBar$TabImpl: android.view.View getCustomView()
androidx.core.app.NotificationCompat: int FLAG_GROUP_SUMMARY
androidx.core.text.SpannableStringKt
androidx.loader.content.Loader: void deliverResult(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
dagger.android.support.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
com.example.revolut.rates.data.model.Rate: java.lang.String toString()
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: int hashCode()
dagger.android.support.R$id: int right_icon
com.google.gson.internal.LazilyParsedNumber: int hashCode()
androidx.customview.R$id: int text
androidx.vectordrawable.R$style: int TextAppearance_Compat_Notification
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.ClosedRange,int)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver$OtherObserver: long serialVersionUID
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
kotlin.ranges.URangesKt___URangesKt: long coerceIn-JPwROB0(long,kotlin.ranges.ClosedRange)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder allEnabledCipherSuites()
io.reactivex.subscribers.TestSubscriber: void onNext(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: int sumOfInt(java.lang.Iterable)
io.reactivex.internal.operators.flowable.FlowableReplay: void resetIf(io.reactivex.disposables.Disposable)
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence)
androidx.collection.SparseArrayCompat: void clear()
dagger.internal.GwtIncompatible
kotlin.random.PlatformRandomKt: kotlin.random.Random asKotlinRandom(java.util.Random)
androidx.appcompat.R$styleable: int AppCompatTheme_panelBackground
io.reactivex.Completable: io.reactivex.Observable startWith(io.reactivex.Observable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(char[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$attr: int colorControlHighlight
com.example.revolut.rates.R$string: int disconnected
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
kotlin.jvm.JvmStatic
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getType()
kotlin.collections.UCollectionsKt___UCollectionsKt: int sumOfUShort(java.lang.Iterable)
androidx.legacy.coreutils.R$id: int chronometer
android.support.v4.graphics.drawable.IconCompatParcelizer
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode firstImpl()
androidx.core.util.Preconditions: long checkArgumentInRange(long,long,long,java.lang.String)
android.support.v4.media.session.MediaControllerCompat$Callback: void onQueueTitleChanged(java.lang.CharSequence)
io.reactivex.internal.operators.single.SingleDoOnDispose
kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt: void COROUTINE_SUSPENDED$annotations()
io.reactivex.internal.operators.flowable.FlowableScanSeed
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void setAddDuration(long)
androidx.recyclerview.R$id: int bottom
kotlin.ranges.ULongRange: java.lang.String toString()
androidx.constraintlayout.solver.widgets.ConstraintWidget: int ANCHOR_RIGHT
kotlin.jvm.internal.PrimitiveSpreadBuilder: int size()
androidx.appcompat.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_android_font
androidx.recyclerview.widget.RecyclerView: void clearOnScrollListeners()
io.reactivex.Observable: io.reactivex.Observable fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)
retrofit2.http.PATCH
kotlin.collections.ArraysKt___ArraysJvmKt: char[] plus(char[],java.util.Collection)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: boolean offer(java.lang.Object)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)
kotlinx.coroutines.CancellableContinuationImpl: CancellableContinuationImpl(kotlin.coroutines.Continuation,int)
io.reactivex.Observable: io.reactivex.Observable switchMapSingle(io.reactivex.functions.Function)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter CHARACTER
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView)
dagger.android.support.R$dimen: int abc_action_bar_overflow_padding_start_material
io.reactivex.internal.functions.ObjectHelper: int verifyPositive(int,java.lang.String)
io.reactivex.Single: io.reactivex.Single fromObservable(io.reactivex.ObservableSource)
androidx.databinding.ViewDataBinding: androidx.databinding.ViewDataBinding bind(java.lang.Object,android.view.View,int)
com.example.revolut.rates.R$styleable: int AlertDialog_listItemLayout
okhttp3.internal.cache.InternalCache: void remove(okhttp3.Request)
io.reactivex.Maybe: io.reactivex.Maybe doOnError(io.reactivex.functions.Consumer)
androidx.constraintlayout.solver.widgets.ConstraintWidget: ConstraintWidget(int,int,int,int)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: NotificationCompat$DecoratedCustomViewStyle()
dagger.android.support.R$drawable: int abc_seekbar_tick_mark_material
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
kotlinx.coroutines.DefaultExecutor: boolean isCompleted()
kotlin.text.Charsets
com.example.revolut.rates.R$styleable: int RecyclerView_layoutManager
io.reactivex.internal.operators.observable.ObservableJoin: void subscribeActual(io.reactivex.Observer)
androidx.viewpager.R$id: int notification_background
androidx.appcompat.widget.ActivityChooserView: void setExpandActivityOverflowButtonContentDescription(int)
okhttp3.Protocol: java.lang.String toString()
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
androidx.fragment.app.FragmentTabHost: void setup(android.content.Context,androidx.fragment.app.FragmentManager,int)
androidx.lifecycle.ReportFragment: void onResume()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object minWith(kotlin.sequences.Sequence,java.util.Comparator)
androidx.databinding.ObservableArrayMap: boolean removeAll(java.util.Collection)
com.example.revolut.rates.R$styleable: int MenuView_android_itemIconDisabledAlpha
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(double[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sortedDescending--ajY-9A(int[])
android.support.v4.media.MediaBrowserCompat: boolean isConnected()
kotlin.coroutines.jvm.internal.CoroutineStackFrame: java.lang.StackTraceElement getStackTraceElement()
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.observables.ConnectableObservable: io.reactivex.Observable refCount(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2
androidx.core.R$styleable: int GradientColor_android_startColor
io.reactivex.internal.util.VolatileSizeArrayList: boolean contains(java.lang.Object)
dagger.android.support.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
androidx.appcompat.R$attr: int popupMenuStyle
io.reactivex.internal.operators.observable.ObservableWithLatestFrom: ObservableWithLatestFrom(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction,io.reactivex.ObservableSource)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_editor_absoluteX
androidx.legacy.coreutils.R$attr: int fontVariationSettings
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function2,java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher,io.reactivex.functions.Function)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumHeight()
dagger.internal.SingleCheck: javax.inject.Provider provider(javax.inject.Provider)
kotlin.UShortArray: int getSize-impl(short[])
dagger.multibindings.ElementsIntoSet
androidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()
androidx.appcompat.view.menu.MenuBuilder$ItemInvoker
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object getResult()
kotlin.internal.RequireKotlin: int errorCode()
android.support.v4.media.session.MediaSessionCompat$QueueItem: int describeContents()
androidx.core.util.LongSparseArrayKt$valueIterator$1: void remove()
androidx.legacy.coreui.R$color: int notification_icon_bg_color
io.reactivex.exceptions.CompositeException: java.lang.Throwable getCause()
androidx.collection.CircularIntArray: void addLast(int)
androidx.legacy.widget.Space: Space(android.content.Context)
androidx.appcompat.app.ActionBar: int getHeight()
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.AtomicDesc describeRemove()
androidx.recyclerview.widget.LinearSmoothScroller: int calculateDyToMakeVisible(android.view.View,int)
androidx.fragment.app.FragmentHostCallback: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.example.revolut.rates.R$styleable: int ColorStateListItem_android_alpha
io.reactivex.internal.util.ExceptionHelper: java.lang.Exception throwIfThrowable(java.lang.Throwable)
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
androidx.appcompat.R$drawable: int abc_ic_star_black_36dp
io.reactivex.internal.subscribers.StrictSubscriber: void request(long)
kotlinx.android.parcel.Parceler: java.lang.Object[] newArray(int)
androidx.documentfile.provider.DocumentFile: androidx.documentfile.provider.DocumentFile createDirectory(java.lang.String)
androidx.appcompat.view.menu.MenuPopupHelper: void onDismiss()
androidx.appcompat.R$attr: int panelBackground
com.example.revolut.rates.R$layout: int notification_action_tombstone
androidx.coordinatorlayout.R$dimen: int notification_right_side_padding_top
androidx.core.graphics.RegionKt: java.util.Iterator iterator(android.graphics.Region)
androidx.fragment.R$styleable: int GradientColorItem_android_color
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
kotlin.text.CharCategory: kotlin.text.CharCategory DASH_PUNCTUATION
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence flatten(kotlin.sequences.Sequence)
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe
dagger.android.support.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
io.reactivex.internal.observers.BlockingBaseObserver: boolean isDisposed()
dagger.android.support.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
androidx.core.widget.ListViewAutoScrollHelper: boolean canTargetScrollHorizontally(int)
androidx.core.view.PointerIconCompat: java.lang.Object getPointerIcon()
kotlinx.coroutines.sync.MutexKt: java.lang.Object withLock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)
androidx.core.view.MenuItemCompat: boolean isActionViewExpanded(android.view.MenuItem)
com.example.revolut.rates.view.MainActivity: void showErrorMessage(java.lang.String)
kotlin.ranges.ULongRange$Companion: ULongRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$2
androidx.swiperefreshlayout.R$id: int right_side
androidx.drawerlayout.R$dimen: int compat_button_inset_horizontal_material
androidx.appcompat.R$attr: int actionMenuTextAppearance
io.reactivex.Flowable: io.reactivex.Flowable buffer(java.util.concurrent.Callable)
androidx.core.util.RangeKt$toClosedRange$1
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)
androidx.drawerlayout.widget.DrawerLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean isStateful()
androidx.lifecycle.ViewModelStores: androidx.lifecycle.ViewModelStore of(androidx.fragment.app.Fragment)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort lastOrNull-rL5Bavg(short[])
androidx.fragment.R$layout: int notification_template_custom_big
androidx.fragment.app.FragmentController: void dispatchReallyStop()
kotlin.random.Random$Default: float nextFloat()
androidx.appcompat.widget.ActivityChooserView: androidx.appcompat.widget.ActivityChooserModel getDataModel()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK
androidx.media.R
io.reactivex.internal.operators.parallel.ParallelReduce: int parallelism()
androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path)
androidx.recyclerview.widget.LinearSmoothScroller: int SNAP_TO_END
androidx.databinding.adapters.ViewGroupBindingAdapter: void setListener(android.view.ViewGroup,androidx.databinding.adapters.ViewGroupBindingAdapter$OnChildViewAdded,androidx.databinding.adapters.ViewGroupBindingAdapter$OnChildViewRemoved)
androidx.recyclerview.widget.SortedList$Callback: SortedList$Callback()
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection$Companion Companion
androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
okhttp3.Dispatcher: void setMaxRequestsPerHost(int)
androidx.media.MediaBrowserProtocol: java.lang.String DATA_NOTIFY_CHILDREN_CHANGED_OPTIONS
io.reactivex.Scheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
kotlinx.coroutines.AbstractCoroutine: void onStartInternal$kotlinx_coroutines_core()
io.reactivex.observers.BaseTestConsumer: java.util.List getEvents()
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean isStateful()
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionButtonStyle
io.reactivex.internal.operators.observable.ObservableRepeat$RepeatObserver: long serialVersionUID
androidx.core.util.LongSparseArrayKt$keyIterator$1: boolean hasNext()
kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc: java.lang.Object element
androidx.appcompat.view.menu.MenuBuilder$ItemInvoker: boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl)
io.reactivex.Maybe: io.reactivex.Single sequenceEqual(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.BiPredicate)
kotlin.UByteArray: byte get-impl(byte[],int)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter URL
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShowAsActionFlags(int)
androidx.core.util.Preconditions: int checkFlagsArgument(int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minWith(float[],java.util.Comparator)
kotlin.coroutines.jvm.internal.SuspendLambda
androidx.fragment.app.FragmentController: boolean dispatchContextItemSelected(android.view.MenuItem)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(double[])
io.reactivex.internal.operators.completable.CompletableFromObservable: void subscribeActual(io.reactivex.CompletableObserver)
com.jakewharton.rxbinding3.widget.RatingBarChangeEvent: float getRating()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getChangingConfigurations()
io.reactivex.internal.operators.single.SingleJust
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
com.example.revolut.rates.R$style: int Widget_AppCompat_ListView
kotlinx.coroutines.internal.LockFreeMPSCQueueCore
androidx.appcompat.R$color: int bright_foreground_material_dark
androidx.constraintlayout.widget.Constraints: void onLayout(boolean,int,int,int,int)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
androidx.core.R$id: int actions
dagger.android.support.R$styleable: int AlertDialog_buttonIconDimen
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float matchConstraintPercentHeight
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedMeasuredWidth(android.view.View)
io.reactivex.internal.util.EndConsumerHelper
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget TYPE
androidx.loader.R$dimen: int notification_small_icon_background_padding
com.jakewharton.rxbinding3.core.R$style: int TextAppearance_Compat_Notification_Time
androidx.appcompat.R$styleable: int Toolbar_contentInsetEnd
io.reactivex.internal.operators.observable.ObservableLift: ObservableLift(io.reactivex.ObservableSource,io.reactivex.ObservableOperator)
okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)
androidx.core.view.MotionEventCompat: int AXIS_X
io.reactivex.internal.operators.flowable.FlowableSingle: void subscribeActual(org.reactivestreams.Subscriber)
androidx.coordinatorlayout.R$attr: int fontProviderPackage
com.google.gson.JsonIOException: JsonIOException(java.lang.Throwable)
kotlin.reflect.KTypeProjection$Companion: kotlin.reflect.KTypeProjection covariant(kotlin.reflect.KType)
androidx.core.view.ViewKt: void setPadding(android.view.View,int)
com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory$ResponseCallAdapter$adapt$2: void onResponse(retrofit2.Call,retrofit2.Response)
com.example.revolut.rates.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
dagger.android.support.R$drawable: int abc_ic_go_search_api_material
dagger.android.support.R$style: int Widget_AppCompat_SearchView
androidx.core.animation.AnimatorKt$doOnCancel$$inlined$addListener$1: void onAnimationRepeat(android.animation.Animator)
androidx.slidingpanelayout.R$drawable: int notification_action_background
androidx.core.provider.FontsContractCompat: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)
com.example.revolut.rates.R$drawable: int icon_cad
io.reactivex.internal.operators.flowable.FlowableMap
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed: long serialVersionUID
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_UNKNOWN_ERROR
io.reactivex.Observable: io.reactivex.Observable onErrorResumeNext(io.reactivex.ObservableSource)
androidx.drawerlayout.R$id: int right_icon
kotlin.sequences.SequencesKt___SequencesKt: int indexOfFirst(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong max-QwZRm1k(long[])
dagger.android.support.R$styleable: int Toolbar_titleMargin
androidx.databinding.adapters.ImageViewBindingAdapter
com.google.gson.JsonPrimitive
androidx.recyclerview.widget.RecyclerView: android.view.View focusSearch(android.view.View,int)
androidx.appcompat.app.ActionBar$TabListener: void onTabUnselected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction)
kotlin.collections.GroupingKt__GroupingKt: java.util.Map eachCountTo(kotlin.collections.Grouping,java.util.Map)
androidx.appcompat.app.AppCompatActivity: boolean onKeyDown(int,android.view.KeyEvent)
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
androidx.appcompat.widget.ToolbarWidgetWrapper: void initIndeterminateProgress()
com.example.revolut.rates.R$styleable: int ActionBar_displayOptions
kotlinx.coroutines.DebugKt
androidx.databinding.BindingBuildInfo: java.lang.String buildId()
io.reactivex.Observable: io.reactivex.Single toMap(io.reactivex.functions.Function,io.reactivex.functions.Function)
androidx.constraintlayout.solver.widgets.Helper: void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)
com.example.revolut.rates.R$drawable: int icon_inr
dagger.android.support.DaggerApplication_MembersInjector: dagger.MembersInjector create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
androidx.recyclerview.widget.OrientationHelper: int getEnd()
androidx.core.content.pm.ShortcutInfoCompat: android.content.ComponentName getActivity()
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableCountSingle: io.reactivex.Flowable fuseToFlowable()
io.reactivex.subjects.BehaviorSubject: java.lang.Object getValue()
com.example.revolut.rates.R$attr: int listPreferredItemHeight
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintWidth_min
com.example.revolut.rates.R$color: int dim_foreground_disabled_material_light
androidx.drawerlayout.R$styleable: int ColorStateListItem_alpha
com.google.gson.Gson: com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)
dagger.android.DaggerDialogFragment_MembersInjector: dagger.MembersInjector create(javax.inject.Provider)
io.reactivex.internal.operators.observable.ObservableInternalHelper: java.util.concurrent.Callable replayCallable(io.reactivex.Observable,int)
dagger.android.support.R$drawable: int abc_ratingbar_material
kotlin.text.StringsKt__StringsJVMKt: StringsKt__StringsJVMKt()
io.reactivex.internal.observers.DeferredScalarDisposable: void error(java.lang.Throwable)
kotlin.ExperimentalStdlibApi
okio.Options: java.lang.Object get(int)
kotlinx.coroutines.channels.ChannelKt
kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object getValueOrNull()
dagger.android.DaggerApplication: dagger.android.DispatchingAndroidInjector broadcastReceiverInjector()
io.reactivex.Observable: io.reactivex.Observable concatMap(io.reactivex.functions.Function)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object foldRight(java.util.List,java.lang.Object,kotlin.jvm.functions.Function2)
com.google.gson.annotations.JsonAdapter
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean hasFocus()
androidx.lifecycle.extensions.R$dimen: int compat_notification_large_icon_max_width
androidx.core.text.SpannableStringKt: void set(android.text.Spannable,kotlin.ranges.IntRange,java.lang.Object)
androidx.databinding.adapters.SeekBarBindingAdapter$OnProgressChanged: void onProgressChanged(android.widget.SeekBar,int,boolean)
io.reactivex.schedulers.Schedulers: io.reactivex.Scheduler from(java.util.concurrent.Executor,boolean)
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget getHead()
androidx.recyclerview.R$id: int start
io.reactivex.internal.observers.SubscriberCompletableObserver: SubscriberCompletableObserver(org.reactivestreams.Subscriber)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.ULongProgression downTo-eb3DHEI(long,long)
io.reactivex.SingleOperator: io.reactivex.SingleObserver apply(io.reactivex.SingleObserver)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2: int compare(java.lang.Object,java.lang.Object)
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingBottom
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])
androidx.legacy.coreui.R$attr: int font
kotlin.ULongArray: boolean contains-VKZWuLQ(long[],long)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6
androidx.fragment.app.FragmentController: void dispatchDestroy()
dagger.android.support.R$attr: int actionBarTabStyle
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTint(int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_RC4_40_MD5
com.example.revolut.rates.R$drawable: int icon_hkd
com.example.revolut.rates.data.repository.CurrenciesRepository_MembersInjector: void injectMembers(java.lang.Object)
androidx.versionedparcelable.VersionedParcel: android.util.SizeF readSizeF(android.util.SizeF,int)
androidx.core.app.AppOpsManagerCompat: int noteOpNoThrow(android.content.Context,java.lang.String,int,java.lang.String)
io.reactivex.internal.operators.maybe.MaybeUnsafeCreate
io.reactivex.internal.schedulers.SingleScheduler: SingleScheduler()
kotlin.collections.FloatIterator: float nextFloat()
androidx.core.view.ViewCompat: boolean isInLayout(android.view.View)
androidx.core.graphics.PathSegment
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener
dagger.multibindings.IntKey: int value()
androidx.appcompat.graphics.drawable.DrawableContainer: void invalidateDrawable(android.graphics.drawable.Drawable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sorted-rL5Bavg(short[])
org.intellij.lang.annotations.Flow: java.lang.String DEFAULT_TARGET
androidx.legacy.coreutils.R$styleable: int GradientColor_android_endColor
androidx.core.app.AppComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)
androidx.versionedparcelable.VersionedParcel: float[] readFloatArray(float[],int)
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber: long serialVersionUID
io.reactivex.Maybe: io.reactivex.Maybe onTerminateDetach()
kotlin.UByteArray: int size()
io.reactivex.Flowable: io.reactivex.Flowable retry(io.reactivex.functions.BiPredicate)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List mutableListOf(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(short[],short,int,int)
androidx.appcompat.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: int spanCount
io.reactivex.internal.operators.flowable.FlowableSkipWhile: void subscribeActual(org.reactivestreams.Subscriber)
androidx.recyclerview.widget.SortedListAdapterCallback
androidx.core.app.NotificationCompat: int GROUP_ALERT_ALL
io.reactivex.schedulers.Timed: int hashCode()
androidx.recyclerview.widget.LinearLayoutManager: boolean getStackFromEnd()
kotlin.sequences.FlatteningSequence$iterator$1
com.example.revolut.rates.data.model.Rate: Rate(java.lang.String,java.lang.Double)
dagger.internal.MemoizedSentinel: MemoizedSentinel()
androidx.core.view.accessibility.AccessibilityRecordCompat: int getToIndex()
androidx.lifecycle.Lifecycling
androidx.appcompat.R$style: int TextAppearance_AppCompat_Subhead_Inverse
kotlin.text.CharCategory: kotlin.text.CharCategory CONTROL
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minBy(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.appcompat.app.AppCompatDialog: void setContentView(android.view.View)
androidx.databinding.ViewDataBinding: double safeUnbox(java.lang.Double)
android.support.v4.media.session.MediaControllerCompatApi23$TransportControls: void playFromUri(java.lang.Object,android.net.Uri,android.os.Bundle)
androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)
com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory$BodyCallAdapter$adapt$2
androidx.recyclerview.widget.LinearSmoothScroller
androidx.core.graphics.drawable.ColorDrawableKt: android.graphics.drawable.ColorDrawable toDrawable(int)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
dagger.android.support.R$id: int contentPanel
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: kotlin.ULong get(int)
androidx.collection.SparseArrayCompat: boolean containsValue(java.lang.Object)
android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.MediaSessionCompat$Token fromBundle(android.os.Bundle)
dagger.android.support.DaggerFragment: void onAttach(android.content.Context)
okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)
kotlinx.coroutines.DispatchedContinuation: void dispatchYield$kotlinx_coroutines_core(java.lang.Object)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Byte toByteOrNull(java.lang.String)
androidx.databinding.adapters.AutoCompleteTextViewBindingAdapter: void setOnItemSelectedListener(android.widget.AutoCompleteTextView,androidx.databinding.adapters.AdapterViewBindingAdapter$OnItemSelected,androidx.databinding.adapters.AdapterViewBindingAdapter$OnNothingSelected)
okhttp3.Call: okhttp3.Call clone()
androidx.recyclerview.R$attr: int fontWeight
io.reactivex.processors.FlowableProcessor
com.example.revolut.rates.R$drawable: int icon_czk
androidx.core.app.NotificationCompat$MessagingStyle$Message: long getTimestamp()
kotlin.coroutines.experimental.SequenceBuilder: java.lang.Object yieldAll(java.util.Iterator,kotlin.coroutines.experimental.Continuation)
androidx.appcompat.R$style: int Widget_AppCompat_TextView_SpinnerItem
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorPauseListener addPauseListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.text.PrecomputedTextCompat: int getParagraphCount()
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getAdjustedDefault()
dagger.android.DaggerApplication_MembersInjector: void injectFragmentInjector(dagger.android.DaggerApplication,dagger.android.DispatchingAndroidInjector)
androidx.databinding.BindingMethods: androidx.databinding.BindingMethod[] value()
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Medium
androidx.appcompat.R$color: int abc_primary_text_material_light
io.reactivex.internal.schedulers.ExecutorScheduler: io.reactivex.Scheduler$Worker createWorker()
kotlin.contracts.ContractBuilder: kotlin.contracts.Returns returns(java.lang.Object)
kotlin.coroutines.experimental.CoroutineContext: kotlin.coroutines.experimental.CoroutineContext$Element get(kotlin.coroutines.experimental.CoroutineContext$Key)
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_REPLY
androidx.recyclerview.widget.OrientationHelper: int getTransformedStartWithDecoration(android.view.View)
androidx.lifecycle.extensions.R$style
io.reactivex.internal.operators.observable.BlockingObservableLatest: BlockingObservableLatest(io.reactivex.ObservableSource)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexedNotNull(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)
androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
kotlin.UIntArray: int getSize()
okhttp3.internal.http2.PushObserver
androidx.appcompat.R$id: int shortcut
kotlinx.coroutines.selects.SelectClause0: void registerSelectClause0(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setColorFilter(android.graphics.ColorFilter)
com.example.revolut.rates.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
okio.ForwardingSink: ForwardingSink(okio.Sink)
com.example.revolut.rates.R$layout: int abc_action_bar_title_item
com.example.revolut.rates.R$styleable: int LinearLayoutCompat_android_gravity
androidx.core.provider.FontsContractCompat$FontRequestCallback
com.example.revolut.rates.R$dimen: int abc_dropdownitem_text_padding_right
dagger.releasablereferences.ReleasableReferenceManager: void restoreStrongReferences()
androidx.core.app.ActivityOptionsCompat: ActivityOptionsCompat()
io.reactivex.internal.operators.flowable.FlowableSamplePublisher
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList getVerticalGuidelines()
androidx.core.view.TintableBackgroundView: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object elementAtOrElse(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
retrofit2.KotlinExtensions$await$2$2: void onFailure(retrofit2.Call,java.lang.Throwable)
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper: android.view.LayoutInflater getDropDownViewInflater()
androidx.recyclerview.widget.SimpleItemAnimator: void onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getCurrentItemIndex()
kotlinx.coroutines.sync.MutexImpl: kotlinx.coroutines.selects.SelectClause2 getOnLock()
android.support.v4.media.session.MediaSessionCompat: boolean isActive()
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode)
dagger.android.support.R$id: int textSpacerNoButtons
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder httpOnly()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitle(java.lang.CharSequence)
okhttp3.Cache: int hitCount()
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(short[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.example.revolut.rates.R$styleable: int FontFamilyFont_fontVariationSettings
okio.Buffer: int readIntLe()
kotlin.collections.FloatIterator: FloatIterator()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(android.content.Context,android.util.AttributeSet)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1)
io.reactivex.plugins.RxJavaPlugins: void setOnParallelAssembly(io.reactivex.functions.Function)
androidx.core.animation.AnimatorKt$addPauseListener$2: void invoke(android.animation.Animator)
androidx.media.MediaBrowserServiceCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo()
com.example.revolut.rates.R$drawable: int ic_launcher_foreground
io.reactivex.internal.observers.LambdaObserver: void onNext(java.lang.Object)
androidx.loader.content.AsyncTaskLoader: AsyncTaskLoader(android.content.Context)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShortcut(char,char)
androidx.appcompat.widget.AppCompatTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.jakewharton.rxbinding3.widget.TextViewAfterTextChangeEvent: android.widget.TextView getView()
androidx.slidingpanelayout.R$styleable: int FontFamily_fontProviderAuthority
androidx.core.os.HandlerKt$postAtTime$runnable$1: void run()
android.support.v4.media.session.MediaControllerCompat$Callback: MediaControllerCompat$Callback()
dagger.android.support.AndroidSupportInjection: void inject(androidx.fragment.app.Fragment)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_layout_marginStart
kotlin.random.Random$Default: byte[] nextBytes(byte[])
kotlin.jvm.Throws: java.lang.Class[] exceptionClasses()
kotlin.text.CharCategory$Companion
io.reactivex.Maybe: io.reactivex.Maybe onErrorReturn(io.reactivex.functions.Function)
com.example.revolut.rates.R$style: int ThemeOverlay_AppCompat_Dialog
io.reactivex.internal.fuseable.QueueFuseable: int requestFusion(int)
androidx.recyclerview.R$dimen: int fastscroll_default_thickness
androidx.appcompat.widget.ToolbarWidgetWrapper: void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1(java.util.Iterator)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
androidx.legacy.coreui.R$styleable: int FontFamilyFont_fontWeight
dagger.android.support.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry: int parallelism()
androidx.loader.content.Loader: java.lang.String dataToString(java.lang.Object)
kotlin.io.OnErrorAction
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean,int)
android.support.v4.media.session.IMediaControllerCallback$Stub: android.os.IBinder asBinder()
androidx.recyclerview.widget.ItemTouchHelper$Callback: int makeFlag(int,int)
androidx.legacy.coreui.R$styleable: int GradientColor_android_startColor
com.example.revolut.rates.R$drawable: int abc_switch_track_mtrl_alpha
com.example.revolut.rates.R$styleable: int PopupWindow_overlapAnchor
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean allowedInBarrier()
retrofit2.http.QueryMap
io.reactivex.internal.operators.completable.CompletableError: CompletableError(java.lang.Throwable)
androidx.recyclerview.R$id: int action_divider
kotlin.collections.TypeAliasesKt: void RandomAccess$annotations()
android.support.v4.media.session.IMediaSession: void removeQueueItemAt(int)
kotlinx.coroutines.selects.SelectBuilderImpl: void invoke(kotlinx.coroutines.selects.SelectClause0,kotlin.jvm.functions.Function1)
dagger.android.support.R$style: int Widget_AppCompat_Toolbar
kotlin.UnsignedKt: int uintRemainder-J1ME1BU(int,int)
kotlin.jvm.internal.DoubleCompanionObject: double getPOSITIVE_INFINITY()
kotlin.text.StringsKt__StringsJVMKt: char[] toCharArray(java.lang.String,int,int)
androidx.core.view.accessibility.AccessibilityEventCompat: int getAction(android.view.accessibility.AccessibilityEvent)
io.reactivex.subjects.BehaviorSubject: java.lang.Object[] getValues()
androidx.coordinatorlayout.R$attr: int fontProviderAuthority
io.reactivex.Flowable: io.reactivex.Flowable repeat(long)
com.example.revolut.rates.R$styleable: int SwitchCompat_android_textOn
io.reactivex.internal.observers.FutureObserver
kotlinx.android.extensions.ContainerOptions: kotlinx.android.extensions.CacheImplementation cache()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.collections.Grouping groupingBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.versionedparcelable.VersionedParcel: java.lang.Throwable getRootCause(java.lang.Throwable)
androidx.core.app.ShareCompat$IntentReader: boolean isSingleShare()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)
okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)
androidx.appcompat.R$style: int Base_Widget_AppCompat_Spinner_Underlined
androidx.appcompat.widget.MenuItemHoverListener: void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.appcompat.app.ActionBar: void setHideOnContentScrollEnabled(boolean)
androidx.legacy.v4.R$dimen: int subtitle_shadow_offset
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap)
com.example.revolut.rates.data.model.CurrencyResponse: java.lang.String getDate()
androidx.fragment.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
androidx.appcompat.R$attr: int queryBackground
androidx.fragment.app.FragmentActivity: void supportInvalidateOptionsMenu()
androidx.appcompat.widget.SearchView: void onWindowFocusChanged(boolean)
androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(long[])
androidx.constraintlayout.solver.widgets.ChainHead: boolean mHasComplexMatchWeights
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
kotlin.UByteArray: boolean contains-7apg3OU(byte[],byte)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
io.reactivex.Maybe: io.reactivex.Maybe error(java.lang.Throwable)
androidx.appcompat.view.CollapsibleActionView
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(byte[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.lifecycle.ProcessLifecycleOwnerInitializer: int delete(android.net.Uri,java.lang.String,java.lang.String[])
android.support.v4.app.INotificationSideChannel$Stub$Proxy: android.os.IBinder asBinder()
com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent: com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent copy$default(com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent,android.widget.TextView,java.lang.CharSequence,int,int,int,int,java.lang.Object)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setVerticalMirror(boolean)
kotlinx.coroutines.internal.ThreadSafeHeap: boolean isEmpty()
io.reactivex.subscribers.ResourceSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.graphics.drawable.DrawableContainer: void getOutline(android.graphics.Outline)
okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)
dagger.android.support.R$style: int TextAppearance_AppCompat_SearchResult_Title
android.support.v4.app.INotificationSideChannel$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.core.transition.TransitionKt: android.transition.Transition$TransitionListener doOnCancel(android.transition.Transition,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: long serialVersionUID
kotlinx.coroutines.channels.ArrayBroadcastChannel: java.lang.Object access$elementAt(kotlinx.coroutines.channels.ArrayBroadcastChannel,long)
androidx.viewpager.widget.PagerAdapter: void registerDataSetObserver(android.database.DataSetObserver)
androidx.appcompat.R$id: int action_bar_activity_content
androidx.vectordrawable.R$styleable: int GradientColor_android_endY
androidx.core.ktx.R$id: int text2
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object mapNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.sequences.TransformingSequence
androidx.recyclerview.R$styleable: int GradientColorItem_android_offset
androidx.slidingpanelayout.R$id: int action_container
androidx.collection.CircularIntArray: void addFirst(int)
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_fontVariationSettings
kotlin.jvm.internal.PackageReference: int hashCode()
androidx.appcompat.R$id: int top
androidx.customview.widget.ViewDragHelper: boolean isCapturedViewUnder(int,int)
io.reactivex.Single: io.reactivex.Single delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder underline(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1)
androidx.media.R$id
kotlin.jvm.internal.PropertyReference: boolean isConst()
com.example.revolut.rates.R$color
androidx.legacy.v4.R$id: int notification_main_column
io.reactivex.internal.operators.single.SingleDelayWithSingle$OtherObserver: long serialVersionUID
com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)
androidx.loader.R$styleable: int GradientColor_android_endY
dagger.android.support.R$id: int search_src_text
okhttp3.internal.cache.DiskLruCache: java.util.Iterator snapshots()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int CHAIN_SPREAD_INSIDE
io.reactivex.internal.disposables.ListCompositeDisposable: boolean addAll(io.reactivex.disposables.Disposable[])
okhttp3.internal.http.StatusLine: okhttp3.Protocol protocol
kotlin.ranges.LongRange$Companion: kotlin.ranges.LongRange getEMPTY()
androidx.core.R$dimen: int notification_action_text_size
androidx.asynclayoutinflater.R$dimen: int notification_action_text_size
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat_Dark
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
kotlinx.coroutines.channels.ArrayBroadcastChannel: java.lang.String getBufferDebugString()
androidx.appcompat.widget.ListPopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1
androidx.core.graphics.PathSegment: int hashCode()
androidx.recyclerview.widget.AsyncDifferConfig$Builder: AsyncDifferConfig$Builder(androidx.recyclerview.widget.DiffUtil$ItemCallback)
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.ClosedRange,int)
androidx.appcompat.app.ActionBar: boolean isHideOnContentScrollEnabled()
androidx.vectordrawable.R$styleable: int GradientColor_android_centerY
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)
androidx.core.app.ShareCompat$IntentReader: android.graphics.drawable.Drawable getCallingApplicationIcon()
kotlin.jvm.internal.PropertyReference0: java.lang.Object getDelegate()
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setKey(java.lang.String)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()
androidx.slidingpanelayout.R$attr
dagger.android.support.R$styleable: int AppCompatTheme_colorBackgroundFloating
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List)
androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)
androidx.appcompat.R$style: int Widget_AppCompat_ProgressBar_Horizontal
androidx.appcompat.view.menu.ListMenuPresenter: void setItemIndexOffset(int)
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: long serialVersionUID
io.reactivex.Observable: io.reactivex.Observable create(io.reactivex.ObservableOnSubscribe)
com.example.revolut.rates.R$styleable: int DrawerArrowToggle_arrowHeadLength
androidx.appcompat.widget.DecorToolbar: android.view.Menu getMenu()
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-mazbYpA(short[],short[])
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$reduceIndexed$1: ChannelsKt__Channels_commonKt$reduceIndexed$1(kotlin.coroutines.Continuation)
androidx.recyclerview.widget.SimpleItemAnimator
androidx.core.widget.EdgeEffectCompat: boolean onPull(float)
dagger.android.DaggerDialogFragment
dagger.android.support.R$styleable: int AlertDialog_multiChoiceItemLayout
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: void onTimeout(long,java.util.concurrent.TimeUnit,kotlin.jvm.functions.Function1)
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function8)
androidx.customview.R$drawable: int notification_bg_low
kotlinx.coroutines.channels.ActorJob$DefaultImpls
androidx.fragment.app.FragmentTabHost$SavedState: android.os.Parcelable$Creator CREATOR
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(short[],java.lang.Object,kotlin.jvm.functions.Function3)
io.reactivex.internal.operators.observable.ObservableDoFinally
okhttp3.internal.Util: boolean nonEmptyIntersection(java.util.Comparator,java.lang.String[],java.lang.String[])
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float verticalWeight
okhttp3.Callback: void onResponse(okhttp3.Call,okhttp3.Response)
kotlinx.coroutines.sync.MutexImpl$lockSuspend$$inlined$suspendAtomicCancellableCoroutine$lambda$1: java.lang.Object prepare(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe: void subscribeActual(org.reactivestreams.Subscriber)
dagger.Reusable
com.example.revolut.rates.R$string
androidx.drawerlayout.R$attr: int fontProviderPackage
androidx.swiperefreshlayout.R$attr: int fontStyle
androidx.appcompat.R$attr: int thumbTintMode
androidx.appcompat.R$integer: int abc_config_activityDefaultDur
io.reactivex.Emitter: void onComplete()
androidx.appcompat.widget.LinearLayoutCompat$OrientationMode
kotlin.coroutines.experimental.EmptyCoroutineContext: kotlin.coroutines.experimental.CoroutineContext plus(kotlin.coroutines.experimental.CoroutineContext)
io.reactivex.internal.operators.observable.ObservableRefCount
androidx.databinding.ObservableShort: ObservableShort()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEachIndexed$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.util.Set toSet(java.lang.CharSequence)
androidx.core.util.RangeKt$toClosedRange$1: java.lang.Comparable getEndInclusive()
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(int[],kotlin.ranges.IntRange)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
kotlin.ranges.LongProgressionIterator: long getStep()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel distinct(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(int[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.text.MatcherMatchResult$groupValues$1: java.lang.String get(int)
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void dependsOn(androidx.constraintlayout.solver.widgets.ResolutionAnchor,int,androidx.constraintlayout.solver.widgets.ResolutionDimension)
dagger.multibindings.IntKey
io.reactivex.Flowable: void blockingSubscribe(org.reactivestreams.Subscriber)
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
kotlin.UShort: short MIN_VALUE
io.reactivex.internal.operators.flowable.FlowableConcatArray
androidx.drawerlayout.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View,boolean)
com.example.revolut.rates.R$styleable: int ConstraintLayout_placeholder_content
androidx.appcompat.app.ActionBar$OnNavigationListener: boolean onNavigationItemSelected(int,long)
io.reactivex.internal.operators.flowable.FlowableWindow: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.R$id: int textSpacerNoButtons
io.reactivex.Flowable: io.reactivex.Single any(io.reactivex.functions.Predicate)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filterNot(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
dagger.internal.ProviderOfLazy: dagger.Lazy get()
com.example.revolut.rates.R$anim: int abc_grow_fade_in_from_bottom
androidx.appcompat.widget.ActivityChooserView: void setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)
androidx.appcompat.R$dimen: int abc_switch_padding
androidx.lifecycle.extensions.R$styleable: int CoordinatorLayout_Layout_layout_anchor
kotlin.sequences.GeneratorSequence$iterator$1: java.lang.Object next()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES
androidx.core.R$style: int Widget_Compat_NotificationActionContainer
kotlin.ULongArray: long[] constructor-impl(int)
dagger.android.support.R$anim
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(int,int)
androidx.loader.R$id: int blocking
dagger.android.support.R$string: int abc_searchview_description_voice
androidx.appcompat.R$attr: int listItemLayout
dagger.android.support.R$styleable: int ActionBar_navigationMode
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(long,java.util.concurrent.TimeUnit)
androidx.core.view.LayoutInflaterCompat
androidx.appcompat.widget.ActionBarContainer: void jumpDrawablesToCurrentState()
androidx.collection.LongSparseArray: void putAll(androidx.collection.LongSparseArray)
androidx.core.view.ViewCompat$ScrollAxis
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder callFactory(okhttp3.Call$Factory)
dagger.android.support.R$attr: int drawerArrowStyle
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_android_font
androidx.appcompat.app.ActionBar: void setIcon(int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void resetAnchors(int)
androidx.lifecycle.ComputableLiveData: ComputableLiveData()
androidx.fragment.app.FragmentController: void dispatchResume()
androidx.databinding.MergedDataBinderMapper: androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View[],int)
io.reactivex.internal.operators.flowable.FlowableSkipUntil: FlowableSkipUntil(io.reactivex.Flowable,org.reactivestreams.Publisher)
com.google.gson.internal.bind.SqlDateTypeAdapter
io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long firstOrNull(long[],kotlin.jvm.functions.Function1)
androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean hasEnrolledFingerprints()
androidx.recyclerview.widget.SimpleItemAnimator: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.lifecycle.extensions.R$drawable: int notification_bg_low
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection mapNotNullTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.text.HtmlKt: android.text.Spanned parseAsHtml$default(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler,int,java.lang.Object)
androidx.recyclerview.widget.ListUpdateCallback
kotlin.collections.ArraysKt___ArraysKt: short reduceIndexed(short[],kotlin.jvm.functions.Function3)
androidx.recyclerview.widget.ItemTouchHelper: int END
androidx.core.view.ViewCompat: void setZ(android.view.View,float)
com.example.revolut.rates.di.Injector$Companion
androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter: java.lang.CharSequence convertToString(android.database.Cursor)
androidx.core.graphics.drawable.ColorDrawableKt
kotlin.jvm.JvmClassMappingKt: void javaClass$annotations(kotlin.reflect.KClass)
dagger.android.support.R$layout: int select_dialog_singlechoice_material
androidx.core.ktx.R$dimen: int compat_control_corner_material
androidx.appcompat.widget.ActionBarContextView: void postShowOverflowMenu()
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe: void subscribeActual(org.reactivestreams.Subscriber)
okio.Buffer: int read(java.nio.ByteBuffer)
androidx.media.MediaSessionManager: boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfo)
androidx.databinding.ObservableLong: void writeToParcel(android.os.Parcel,int)
dagger.android.support.R$style: int Widget_AppCompat_ListView_Menu
androidx.recyclerview.widget.LinearSmoothScroller: void onStart()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List requireNoNulls(java.util.List)
androidx.constraintlayout.solver.widgets.ChainHead: ChainHead(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean)
androidx.core.view.MotionEventCompat: int getSource(android.view.MotionEvent)
androidx.appcompat.R$styleable: int AppCompatTheme_radioButtonStyle
androidx.core.view.MenuItemCompat: void setTooltipText(android.view.MenuItem,java.lang.CharSequence)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart DEFAULT
io.reactivex.internal.observers.LambdaObserver: void onComplete()
androidx.appcompat.R$dimen: int hint_alpha_material_light
dagger.android.AndroidInjection: void inject(android.app.Activity)
io.reactivex.internal.operators.observable.ObservableAllSingle: ObservableAllSingle(io.reactivex.ObservableSource,io.reactivex.functions.Predicate)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)
kotlin.collections.EmptyIterator: void set(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: float[] sliceArray(float[],kotlin.ranges.IntRange)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintStart_toStartOf
com.example.revolut.rates.R$attr: int dropdownListPreferredItemHeight
androidx.coordinatorlayout.R$id: int title
io.reactivex.Completable: io.reactivex.Completable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.subjects.Subject: java.lang.Throwable getThrowable()
io.reactivex.internal.operators.observable.ObservableReduceWithSingle
android.support.v4.media.MediaMetadataCompat$Builder: MediaMetadataCompat$Builder()
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(int[])
io.reactivex.observers.BaseTestConsumer: boolean isTerminated()
android.support.v4.media.RatingCompat: int RATING_NONE
androidx.appcompat.widget.AppCompatSpinner: void onMeasure(int,int)
android.support.v4.media.session.MediaControllerCompat$TransportControls: void play()
androidx.core.view.LayoutInflaterFactory: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter
androidx.collection.ArrayMap: java.util.Set keySet()
kotlin.coroutines.EmptyCoroutineContext: java.lang.Object readResolve()
androidx.versionedparcelable.CustomVersionedParcelable
androidx.appcompat.view.menu.MenuBuilder: void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
androidx.appcompat.R$styleable: int AppCompatTextView_fontFamily
androidx.core.widget.TintableCompoundButton
io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.view.MotionEventCompat: int AXIS_TOUCH_MINOR
androidx.appcompat.R$drawable: int abc_textfield_search_activated_mtrl_alpha
androidx.customview.widget.ExploreByTouchHelper: boolean clearKeyboardFocusForVirtualView(int)
kotlin.coroutines.experimental.jvm.internal.CoroutineImpl: java.lang.Object doResume(java.lang.Object,java.lang.Throwable)
com.example.revolut.rates.common.ConstantsKt: java.util.HashMap getCurrenciesNames()
androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int,int)
kotlinx.coroutines.channels.ProducerJob: kotlinx.coroutines.channels.ReceiveChannel getChannel()
dagger.android.support.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
io.reactivex.internal.operators.maybe.MaybeError: MaybeError(java.lang.Throwable)
androidx.recyclerview.widget.RecyclerView: boolean isAttachedToWindow()
io.reactivex.internal.operators.observable.ObserverResourceWrapper: void onNext(java.lang.Object)
android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.MediaMetadataCompat getMetadata()
androidx.versionedparcelable.VersionedParcel: boolean readBoolean(boolean,int)
com.example.revolut.rates.R$styleable: int ActionBar_contentInsetRight
androidx.print.PrintHelper: void setColorMode(int)
kotlinx.coroutines.Incomplete: boolean isActive()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence mapIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
androidx.constraintlayout.solver.widgets.ChainHead: boolean mHasUndefinedWeights
kotlin.jvm.internal.ArrayIteratorKt: java.util.Iterator iterator(java.lang.Object[])
androidx.databinding.ViewDataBinding$IncludedLayouts: void setIncludes(int,java.lang.String[],int[],int[])
androidx.appcompat.graphics.drawable.DrawableContainer: void applyTheme(android.content.res.Resources$Theme)
androidx.databinding.adapters.AbsListViewBindingAdapter$OnScrollStateChanged: void onScrollStateChanged(android.widget.AbsListView,int)
io.reactivex.internal.operators.flowable.FlowableTimer
androidx.appcompat.R$styleable: int[] ViewStubCompat
kotlin.coroutines.experimental.CoroutinesKt: void coroutineContext$annotations()
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(kotlin.sequences.Sequence,java.util.Map)
io.reactivex.internal.operators.maybe.MaybeEmpty: void subscribeActual(io.reactivex.MaybeObserver)
androidx.core.graphics.PointKt: android.graphics.Point plus(android.graphics.Point,int)
retrofit2.Call: boolean isCanceled()
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.R$styleable: int AppCompatTheme_toolbarStyle
androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList getChildren()
io.reactivex.internal.operators.single.SingleDelayWithSingle
dagger.android.support.R$attr: int title
androidx.fragment.app.FragmentManager: boolean isStateSaved()
androidx.appcompat.R$attr: int editTextStyle
io.reactivex.Single: io.reactivex.Single error(java.util.concurrent.Callable)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: ComparisonsKt___ComparisonsJvmKt()
androidx.fragment.app.FragmentController: void dispatchMultiWindowModeChanged(boolean)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
kotlin.jvm.internal.Intrinsics: void checkFieldIsNotNull(java.lang.Object,java.lang.String)
androidx.appcompat.R$styleable: int MenuItem_android_orderInCategory
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
androidx.appcompat.view.menu.ListMenuPresenter: android.os.Parcelable onSaveInstanceState()
androidx.appcompat.widget.SwitchCompat: void drawableHotspotChanged(float,float)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocused()
androidx.appcompat.view.menu.MenuBuilder: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])
androidx.recyclerview.widget.DefaultItemAnimator: boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: boolean isEmpty()
com.google.gson.JsonPrimitive: com.google.gson.JsonPrimitive deepCopy()
okio.BufferedSource: java.lang.String readUtf8()
com.example.revolut.rates.R$styleable: int TextAppearance_android_textSize
androidx.core.view.accessibility.AccessibilityRecordCompat: java.util.List getText()
android.support.v4.media.MediaBrowserCompat: android.content.ComponentName getServiceComponent()
androidx.appcompat.R$attr: int color
okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)
androidx.recyclerview.widget.DiffUtil$Callback: int getOldListSize()
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
com.example.revolut.rates.R$attr: int layout_constraintTop_toTopOf
dagger.android.support.R$attr: int actionModeShareDrawable
androidx.slidingpanelayout.R$drawable: int notification_bg
dagger.android.support.R$color: int abc_search_url_text_selected
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintEnd_toStartOf
kotlinx.coroutines.internal.LockFreeMPSCQueue: void close()
androidx.vectordrawable.R$layout
io.reactivex.internal.operators.single.SingleFromPublisher: SingleFromPublisher(org.reactivestreams.Publisher)
androidx.recyclerview.widget.ItemTouchHelper$Callback: boolean isLongPressDragEnabled()
kotlinx.coroutines.channels.Closed: java.lang.Throwable getReceiveException()
androidx.legacy.v4.R$styleable: int CoordinatorLayout_Layout_layout_keyline
io.reactivex.internal.operators.maybe.MaybeDefer: MaybeDefer(java.util.concurrent.Callable)
kotlin.collections.ArraysKt___ArraysKt: int last(int[])
androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_RATIO
androidx.appcompat.R$layout: int abc_action_mode_bar
io.reactivex.internal.disposables.DisposableContainer: boolean add(io.reactivex.disposables.Disposable)
com.example.revolut.rates.R$styleable: int RecyclerView_fastScrollEnabled
androidx.core.app.FrameMetricsAggregator: int DELAY_DURATION
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(long[],java.lang.Iterable,kotlin.jvm.functions.Function2)
io.reactivex.processors.ReplayProcessor: boolean hasThrowable()
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality OTHER_NEUTRALS
kotlin.comparisons.ComparisonsKt___ComparisonsKt: ComparisonsKt___ComparisonsKt()
com.jakewharton.rxbinding3.core.R$style
androidx.media.MediaSessionManager
okhttp3.internal.Util: java.util.Map immutableMap(java.util.Map)
androidx.appcompat.R$styleable: int ActionBar_title
android.support.v4.media.MediaDescriptionCompat: java.lang.String EXTRA_BT_FOLDER_TYPE
com.example.revolut.rates.R$color: int switch_thumb_material_dark
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.Closed getClosedForReceive()
com.jakewharton.rxbinding3.core.R$styleable: int FontFamily_fontProviderPackage
kotlin.jvm.internal.unsafe.MonitorKt
kotlin.jvm.functions.Function13: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.lifecycle.extensions.R$attr: int font
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
androidx.legacy.coreutils.R$dimen: int notification_media_narrow_margin
androidx.core.R$attr: int alpha
androidx.versionedparcelable.VersionedParcel: void writeFloat(float,int)
androidx.constraintlayout.widget.ConstraintSet: void clone(androidx.constraintlayout.widget.Constraints)
androidx.recyclerview.widget.RecyclerView: android.view.View findChildViewUnder(float,float)
androidx.core.app.NotificationCompat: int VISIBILITY_PRIVATE
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean constrainedHeight
androidx.appcompat.R$styleable: int DrawerArrowToggle_arrowHeadLength
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Small
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: LinearLayoutManager$LayoutChunkResult()
androidx.recyclerview.R$styleable: int RecyclerView_reverseLayout
okhttp3.internal.tls.OkHostnameVerifier
io.reactivex.internal.util.VolatileSizeArrayList: int indexOf(java.lang.Object)
android.support.v4.media.session.MediaSessionCompat$Callback: void onAddQueueItem(android.support.v4.media.MediaDescriptionCompat,int)
androidx.collection.SimpleArrayMap: java.lang.Object setValueAt(int,java.lang.Object)
okio.Buffer: byte[] readByteArray(long)
okhttp3.HttpUrl: java.lang.String toString()
io.reactivex.exceptions.Exceptions: void throwIfFatal(java.lang.Throwable)
kotlin.text.StringsKt__StringsKt: java.lang.String commonSuffixWith(java.lang.CharSequence,java.lang.CharSequence,boolean)
androidx.recyclerview.widget.DefaultItemAnimator: boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
androidx.media.MediaBrowserServiceCompat$BrowserRoot: java.lang.String EXTRA_SUGGESTED
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection build()
com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()
io.reactivex.internal.schedulers.NewThreadWorker: io.reactivex.disposables.Disposable schedulePeriodicallyDirect(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintWidth_default
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_maxWidth
io.reactivex.internal.disposables.SequentialDisposable: long serialVersionUID
kotlinx.coroutines.Job$DefaultImpls
androidx.constraintlayout.solver.widgets.Guideline: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)
kotlin.collections.AbstractCollection: boolean remove(java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,boolean,int)
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_centerX
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setTargetDensity(int)
io.reactivex.Flowable: io.reactivex.Flowable window(long,long,int)
kotlin.text.CharCategory: boolean contains(char)
kotlin.coroutines.experimental.CoroutineContext$Element$DefaultImpls: java.lang.Object fold(kotlin.coroutines.experimental.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.io.ByteStreamsKt$iterator$1: boolean getFinished()
androidx.core.transition.TransitionKt$addListener$4: java.lang.Object invoke(java.lang.Object)
io.reactivex.annotations.SchedulerSupport: java.lang.String TRAMPOLINE
okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)
kotlin.annotation.AnnotationRetention: kotlin.annotation.AnnotationRetention[] values()
androidx.drawerlayout.R$layout: int notification_template_icon_group
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2: ComparisonsKt__ComparisonsKt$thenByDescending$2(java.util.Comparator,java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.graphics.PointKt
androidx.core.view.ViewCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
kotlinx.coroutines.JobImpl: int getOnCancelMode$kotlinx_coroutines_core()
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$dimen: int abc_button_inset_horizontal_material
androidx.annotation.Dimension: int PX
io.reactivex.Flowable: io.reactivex.Flowable unsafeCreate(org.reactivestreams.Publisher)
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality NONSPACING_MARK
kotlinx.coroutines.scheduling.CoroutineScheduler: java.lang.String toString()
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources$Theme getTheme()
io.reactivex.Flowable: io.reactivex.Flowable onErrorReturnItem(java.lang.Object)
kotlin.collections.MapsKt__MapsKt: java.util.Map minus(java.util.Map,java.lang.Object[])
kotlin.collections.DoubleIterator: void remove()
androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()
com.jakewharton.rxbinding3.widget.AdapterViewItemClickEvent: AdapterViewItemClickEvent(android.widget.AdapterView,android.view.View,int,long)
io.reactivex.internal.operators.observable.ObservableRange
io.reactivex.internal.disposables.ArrayCompositeDisposable: long serialVersionUID
okhttp3.Cookie: java.lang.String toString()
kotlin.jvm.functions.Function2
dagger.android.support.R$styleable: int SearchView_goIcon
androidx.core.content.FileProvider: java.lang.String getType(android.net.Uri)
kotlinx.coroutines.channels.AbstractChannel: boolean isBufferAlwaysEmpty()
okio.BufferedSource: byte[] readByteArray(long)
io.reactivex.internal.subscribers.LambdaSubscriber: void request(long)
androidx.appcompat.R$attr: int colorButtonNormal
androidx.recyclerview.widget.StaggeredGridLayoutManager: int GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS
retrofit2.KotlinExtensions$await$2$2: void onResponse(retrofit2.Call,retrofit2.Response)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(float[])
androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener: void onFitSystemWindows(android.graphics.Rect)
androidx.core.provider.FontRequest: java.lang.String getQuery()
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: long serialVersionUID
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(int[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.sequences.SubSequence: java.util.Iterator iterator()
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind EXTENSION_RECEIVER
io.reactivex.Maybe: io.reactivex.Maybe amb(java.lang.Iterable)
androidx.collection.LongSparseArray: void clear()
dagger.android.support.R$styleable: int TextAppearance_fontFamily
com.jakewharton.rxbinding3.view.MenuItemActionViewCollapseEvent: android.view.MenuItem component1()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setLength(int,int)
kotlin.io.TextStreamsKt: long copyTo$default(java.io.Reader,java.io.Writer,int,int,java.lang.Object)
io.reactivex.internal.util.ExceptionHelper: boolean addThrowable(java.util.concurrent.atomic.AtomicReference,java.lang.Throwable)
kotlin.text.TypeAliasesKt
androidx.databinding.library.baseAdapters.R$id: int textWatcher
kotlin.random.XorWowRandom: int nextBits(int)
androidx.core.view.ViewCompat: int getNextClusterForwardId(android.view.View)
androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel takeWhile$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.sequences.DropWhileSequence: java.util.Iterator iterator()
androidx.media.MediaBrowserServiceCompat$BrowserRoot: MediaBrowserServiceCompat$BrowserRoot(java.lang.String,android.os.Bundle)
kotlinx.coroutines.GlobalScope: boolean isActive()
androidx.appcompat.view.StandaloneActionMode: android.view.MenuInflater getMenuInflater()
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintVertical_weight
io.reactivex.internal.observers.BiConsumerSingleObserver: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short singleOrNull(short[])
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReadPendingIntent(android.app.PendingIntent)
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
androidx.appcompat.R$styleable: int SearchView_android_inputType
kotlin.jvm.internal.PrimitiveSpreadBuilder: void setPosition(int)
io.reactivex.internal.operators.completable.CompletableMerge: void subscribeActual(io.reactivex.CompletableObserver)
dagger.android.support.R$styleable: int AppCompatTheme_toolbarStyle
com.example.revolut.rates.R$attr: int actionModeCloseButtonStyle
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintList(android.content.res.ColorStateList)
dagger.android.DaggerActivity: void onCreate(android.os.Bundle)
androidx.recyclerview.widget.AsyncListUtil$ViewCallback
dagger.android.support.R$styleable: int[] ActionBarLayout
io.reactivex.internal.subscriptions.AsyncSubscription: AsyncSubscription()
dagger.multibindings.StringKey: java.lang.String value()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter)
okhttp3.internal.connection.ConnectionSpecSelector: ConnectionSpecSelector(java.util.List)
androidx.fragment.app.DialogFragment: void onCreate(android.os.Bundle)
kotlin.text.DelimitedRangesSequence$iterator$1
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
okhttp3.internal.http2.StreamResetException: okhttp3.internal.http2.ErrorCode errorCode
androidx.core.ktx.R$drawable: int notification_template_icon_low_bg
androidx.core.content.res.TypedArrayUtils: boolean getBoolean(android.content.res.TypedArray,int,int,boolean)
androidx.appcompat.app.WindowDecorActionBar: void showForSystem()
androidx.appcompat.view.menu.MenuItemWrapperICS: int getGroupId()
kotlin.sequences.SequencesKt___SequencesKt: int sumBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.util.Date)
androidx.core.view.ActionProvider: android.view.View onCreateActionView()
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SUMMARY_TEXT
androidx.appcompat.app.WindowDecorActionBar: java.lang.CharSequence getTitle()
com.example.revolut.rates.R$attr: int preserveIconSpacing
androidx.appcompat.widget.LinearLayoutCompat: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_RATING
dagger.android.support.R$attr: int preserveIconSpacing
androidx.drawerlayout.R$dimen: int notification_subtext_size
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filterNotNull(kotlin.sequences.Sequence)
kotlin.sequences.SequenceScope: java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation)
io.reactivex.Completable: io.reactivex.Completable doOnEvent(io.reactivex.functions.Consumer)
androidx.fragment.R$color: int ripple_material_light
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(boolean[])
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowResourceLeft(int)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri)
androidx.asynclayoutinflater.R$styleable: int FontFamily_fontProviderPackage
androidx.databinding.ObservableArrayList: ObservableArrayList()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
androidx.viewpager.R$styleable: int ColorStateListItem_android_color
retrofit2.CallAdapter: java.lang.Object adapt(retrofit2.Call)
io.reactivex.internal.operators.single.SingleSubscribeOn: void subscribeActual(io.reactivex.SingleObserver)
androidx.recyclerview.widget.RecyclerView: void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
io.reactivex.subjects.CompletableSubject: boolean hasObservers()
androidx.versionedparcelable.ParcelImpl: void writeToParcel(android.os.Parcel,int)
com.example.revolut.rates.R$drawable: int abc_scrubber_primary_mtrl_alpha
io.reactivex.Maybe: io.reactivex.Maybe never()
kotlinx.coroutines.internal.LockFreeLinkedListNode
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte min(byte[])
kotlin.sequences.SequencesKt__SequencesKt: kotlin.Pair unzip(kotlin.sequences.Sequence)
io.reactivex.internal.operators.observable.ObservableThrottleLatest
android.support.v4.media.session.MediaControllerCompat$TransportControls: void stop()
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener: void onPageScrollStateChanged(int)
androidx.loader.content.Loader: boolean onCancelLoad()
androidx.media.MediaBrowserProtocol: int CLIENT_MSG_GET_MEDIA_ITEM
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber: long serialVersionUID
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintCircle
kotlinx.coroutines.EventLoop: long processNextEvent()
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
androidx.media.MediaBrowserServiceCompat: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
androidx.constraintlayout.solver.LinearSystem: void addLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)
kotlin.jvm.internal.ShortCompanionObject: short MAX_VALUE
dagger.android.support.R$id: int useLogo
androidx.fragment.app.FragmentTransaction: boolean isAddToBackStackAllowed()
io.reactivex.internal.operators.maybe.MaybeEqualSingle
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_GCM_SHA384
kotlinx.coroutines.BuildersKt
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearchBy$default(java.util.List,java.lang.Comparable,int,int,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int describeContents()
kotlin.text.StringsKt__StringsJVMKt: boolean regionMatches$default(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean,int,java.lang.Object)
io.reactivex.Completable: io.reactivex.Completable retry()
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int)
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnCancelListener mOnCancelListener
kotlin.collections.AbstractSet$Companion
com.google.gson.internal.Primitives: java.lang.Class wrap(java.lang.Class)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setBackgroundColor(int)
io.reactivex.internal.operators.completable.CompletableConcatIterable: void subscribeActual(io.reactivex.CompletableObserver)
androidx.appcompat.app.WindowDecorActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)
io.reactivex.subscribers.TestSubscriber: TestSubscriber(org.reactivestreams.Subscriber,long)
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent: java.util.Iterator iterator()
com.example.revolut.rates.view.adapter.CurrenciesAdapter: CurrenciesAdapter(com.example.revolut.rates.common.NotifyCurrencies)
com.jakewharton.rxbinding3.widget.SeekBarStopChangeEvent: java.lang.String toString()
io.reactivex.internal.observers.EmptyCompletableObserver: boolean isDisposed()
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Object)
okhttp3.Credentials
io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.BiFunction)
io.reactivex.subscribers.TestSubscriber: io.reactivex.subscribers.TestSubscriber create(org.reactivestreams.Subscriber)
com.example.revolut.rates.R$styleable: int MenuItem_showAsAction
androidx.appcompat.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
okhttp3.internal.cache.DiskLruCache
androidx.databinding.ViewDataBinding: float safeUnbox(java.lang.Float)
io.reactivex.Flowable: io.reactivex.Flowable concatArray(org.reactivestreams.Publisher[])
com.google.gson.stream.JsonReader: void nextNull()
kotlin.collections.AbstractMap: java.lang.String toString()
androidx.appcompat.R$drawable: int abc_btn_radio_material
io.reactivex.internal.functions.Functions: io.reactivex.functions.LongConsumer EMPTY_LONG_CONSUMER
android.support.v4.media.session.MediaControllerCompat: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
retrofit2.http.Multipart
com.example.revolut.rates.R$style: int Widget_AppCompat_DropDownItem_Spinner
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable: SingleFlatMapIterableObservable(io.reactivex.SingleSource,io.reactivex.functions.Function)
com.google.gson.JsonElement: boolean isJsonArray()
androidx.appcompat.app.ActionBar
androidx.media.MediaBrowserCompatUtils: boolean hasDuplicatedItems(android.os.Bundle,android.os.Bundle)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void onMeasure(int,int)
androidx.core.graphics.drawable.IconKt: android.graphics.drawable.Icon toAdaptiveIcon(android.graphics.Bitmap)
androidx.appcompat.app.ActionBar: androidx.appcompat.app.ActionBar$Tab getSelectedTab()
androidx.appcompat.widget.DecorContentParent: void setUiOptions(int)
kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)
androidx.appcompat.R$style: int Theme_AppCompat
androidx.appcompat.R$id: int scrollIndicatorDown
kotlin.collections.CollectionsKt__CollectionsKt: void throwCountOverflow()
androidx.core.app.TaskStackBuilder: int getIntentCount()
androidx.slidingpanelayout.R$attr: int fontVariationSettings
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type SLACK
dagger.android.support.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
androidx.core.app.NotificationCompatExtras
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] values()
kotlin.collections.EmptySet: boolean isEmpty()
kotlin.Lazy: boolean isInitialized()
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getBottom()
androidx.appcompat.app.AppCompatDialogFragment: AppCompatDialogFragment()
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_SET_CAPTIONING_ENABLED
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_UNMUTE
com.example.revolut.rates.R$attr: int layout_constraintLeft_toRightOf
androidx.core.widget.NestedScrollView: boolean arrowScroll(int)
kotlin.collections.ArraysKt___ArraysKt: boolean all(float[],kotlin.jvm.functions.Function1)
io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe()
androidx.swiperefreshlayout.R$layout: int notification_template_icon_group
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void remove(androidx.constraintlayout.solver.widgets.ResolutionDimension)
androidx.legacy.coreutils.R$color: int secondary_text_default_material_light
kotlin.text.StringsKt__StringsKt: java.lang.String trimStart(java.lang.String,char[])
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,int)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.ULongProgression step(kotlin.ranges.ULongProgression,long)
com.example.revolut.rates.R$styleable: int ActionBar_navigationMode
io.reactivex.internal.subscriptions.AsyncSubscription: boolean isDisposed()
io.reactivex.internal.operators.maybe.MaybeFromAction
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionBarTheme
androidx.recyclerview.R$layout: int notification_action_tombstone
kotlin.coroutines.CombinedContext: int hashCode()
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: long serialVersionUID
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(double[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
android.support.v4.media.RatingCompat: int describeContents()
kotlin.KotlinNullPointerException
androidx.appcompat.R$dimen: int abc_action_bar_overflow_padding_start_material
kotlin.coroutines.ContinuationKt$Continuation$1
kotlin.jvm.functions.Function4: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.AdapterListUpdateCallback: void onMoved(int,int)
io.reactivex.observables.ConnectableObservable: io.reactivex.Observable refCount(int,long,java.util.concurrent.TimeUnit)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDefaults(int)
androidx.core.view.WindowInsetsCompat: boolean isRound()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,long)
androidx.lifecycle.extensions.R$attr
okhttp3.internal.http2.Header: okio.ByteString TARGET_PATH
io.reactivex.processors.BehaviorProcessor: java.lang.Object[] getValues()
androidx.swiperefreshlayout.R$style: int TextAppearance_Compat_Notification
dagger.android.support.R$layout: int abc_select_dialog_material
androidx.swiperefreshlayout.R$styleable: int ColorStateListItem_alpha
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,okio.ByteString)
androidx.legacy.v4.R$drawable: int notification_bg_low_pressed
kotlinx.coroutines.ScheduledKt: java.lang.Object withTimeoutOrNull(long,java.util.concurrent.TimeUnit,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
io.reactivex.internal.operators.flowable.FlowableDematerialize: FlowableDematerialize(io.reactivex.Flowable,io.reactivex.functions.Function)
com.jakewharton.rxbinding3.core.R$styleable: int ColorStateListItem_android_color
androidx.legacy.v4.R$styleable: int ColorStateListItem_alpha
io.reactivex.internal.schedulers.ScheduledDirectTask
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.annotation.Keep
com.example.revolut.rates.DataBinderMapperImpl
androidx.recyclerview.widget.SortedList$BatchedCallback: void onChanged(int,int)
androidx.fragment.app.Fragment: Fragment()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: ChannelsKt__Channels_commonKt$consumeEach$1(kotlin.coroutines.Continuation)
androidx.core.app.ActivityOptionsCompat: java.lang.String EXTRA_USAGE_TIME_REPORT
io.reactivex.Observable: io.reactivex.Observable zipWith(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)
kotlin.collections.ArraysKt___ArraysKt: double first(double[])
io.reactivex.internal.operators.observable.ObservableCombineLatest: void subscribeActual(io.reactivex.Observer)
okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)
io.reactivex.observers.SerializedObserver: void onNext(java.lang.Object)
androidx.appcompat.R$attr: int buttonBarStyle
io.reactivex.internal.observers.QueueDrainObserver: void fastPathOrderedEmit(java.lang.Object,boolean,io.reactivex.disposables.Disposable)
okio.GzipSource: okio.Timeout timeout()
io.reactivex.internal.operators.parallel.ParallelRunOn: int parallelism()
androidx.coordinatorlayout.R$dimen: int notification_big_circle_margin
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.example.revolut.rates.R$attr: int layout_constraintEnd_toEndOf
androidx.databinding.ViewDataBinding: void setTo(byte[],int,byte)
com.example.revolut.rates.R$id: int action_container
androidx.coordinatorlayout.R$styleable: int[] GradientColorItem
androidx.appcompat.view.menu.BaseMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.app.ActionBar: void setCustomView(int)
com.google.gson.internal.bind.TimeTypeAdapter: TimeTypeAdapter()
com.example.revolut.rates.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
dagger.android.support.R$styleable: int MenuItem_contentDescription
dagger.android.DaggerApplication: dagger.android.AndroidInjector broadcastReceiverInjector()
kotlinx.coroutines.channels.AbstractChannel$onReceiveOrNull$1
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-C-E_24M(int[],java.lang.Object[])
androidx.core.util.SparseIntArrayKt$keyIterator$1: int getIndex()
kotlin.UShort: java.lang.String toString()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$indexOfFirst$1: ChannelsKt__Channels_commonKt$indexOfFirst$1(kotlin.coroutines.Continuation)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_rotationX
io.reactivex.internal.operators.flowable.FlowableSwitchMap
androidx.recyclerview.widget.RecyclerView$Recycler: void setViewCacheSize(int)
kotlin.collections.ArraysKt___ArraysKt: void reverse(double[])
androidx.viewpager.R$dimen: int notification_small_icon_size_as_large
androidx.appcompat.widget.PopupMenu: PopupMenu(android.content.Context,android.view.View,int,int,int)
kotlinx.coroutines.channels.SendChannel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.reflect.KClass: java.util.Collection getNestedClasses()
kotlin.random.RandomKt: void checkRangeBounds(int,int)
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()
io.reactivex.subscribers.SerializedSubscriber: void cancel()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
androidx.databinding.adapters.SpinnerBindingAdapter: SpinnerBindingAdapter()
dagger.android.support.R$attr: int borderlessButtonStyle
kotlin.collections.AbstractIterator$WhenMappings
io.reactivex.internal.queue.MpscLinkedQueue: boolean isEmpty()
io.reactivex.internal.subscribers.InnerQueuedSubscriber: InnerQueuedSubscriber(io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport,int)
dagger.android.support.R$styleable: int[] ViewBackgroundHelper
androidx.recyclerview.widget.RecyclerView: void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
androidx.versionedparcelable.VersionedParcel: long readLong()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setCollapsible(boolean)
com.google.gson.internal.LinkedTreeMap: boolean containsKey(java.lang.Object)
com.example.revolut.rates.R$drawable: int abc_text_select_handle_middle_mtrl_light
dagger.android.support.R$color
kotlin.internal.PlatformImplementations: PlatformImplementations()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long getOrNull(long[],int)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapNotNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
dagger.android.support.R$attr: int queryHint
androidx.appcompat.R$style: int TextAppearance_AppCompat_Headline
dagger.android.support.R$styleable: int Toolbar_titleTextAppearance
androidx.collection.LongSparseArray: boolean containsValue(java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: CoordinatorLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
kotlin.ranges.CharProgression: kotlin.ranges.CharProgression$Companion Companion
androidx.fragment.app.FragmentManagerNonConfig
com.example.revolut.rates.R$drawable: R$drawable()
androidx.core.view.ViewCompat: void setHasTransientState(android.view.View,boolean)
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_LOW
kotlin.sequences.GeneratorSequence$iterator$1: int getNextState()
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_3
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constrainedHeight
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean isParking()
androidx.appcompat.graphics.drawable.DrawableContainer: void setTintMode(android.graphics.PorterDuff$Mode)
dagger.android.support.R$color: int switch_thumb_material_dark
com.example.revolut.rates.R$attr: int homeLayout
androidx.customview.widget.ExploreByTouchHelper: int getFocusedVirtualView()
okio.BufferedSink: okio.BufferedSink writeUtf8CodePoint(int)
androidx.core.transition.TransitionKt$addListener$1: void invoke(android.transition.Transition)
com.google.gson.internal.bind.ArrayTypeAdapter
com.jakewharton.rxbinding3.widget.ToolbarNavigationClickObservable
io.reactivex.internal.operators.completable.CompletableLift: CompletableLift(io.reactivex.CompletableSource,io.reactivex.CompletableOperator)
androidx.collection.LruCache: java.lang.Object remove(java.lang.Object)
io.reactivex.internal.operators.observable.BlockingObservableMostRecent
androidx.appcompat.app.AppCompatDelegate: android.view.MenuInflater getMenuInflater()
kotlinx.coroutines.channels.AbstractChannel: void access$registerSelectReceive(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2)
kotlin.collections.AbstractSet: AbstractSet()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(short[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.MutexImpl: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double firstOrNull(double[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sorted-GBYM_sE(byte[])
androidx.appcompat.view.menu.ActionMenuItem: androidx.appcompat.view.menu.ActionMenuItem setExclusiveCheckable(boolean)
kotlin.UIntArray: void storage$annotations()
io.reactivex.internal.schedulers.NewThreadWorker
androidx.core.math.MathUtils: double clamp(double,double,double)
androidx.constraintlayout.solver.widgets.Barrier: void setAllowsGoneWidget(boolean)
com.google.gson.JsonSerializer
okhttp3.internal.http2.Http2Connection: void close()
androidx.lifecycle.extensions.R$styleable: int[] FontFamilyFont
okhttp3.internal.http.RealInterceptorChain
androidx.vectordrawable.R$drawable: int notification_bg
androidx.loader.R$styleable: int GradientColor_android_gradientRadius
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification
dagger.android.support.R$drawable: int abc_ic_star_half_black_36dp
kotlinx.coroutines.channels.AbstractChannel: void onReceiveDequeued()
androidx.drawerlayout.R$drawable: int notification_bg_normal
com.example.revolut.rates.R$styleable: int AppCompatTheme_editTextColor
io.reactivex.subjects.SingleSubject: boolean hasValue()
androidx.core.transition.TransitionKt$addListener$1
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT
androidx.appcompat.widget.ListPopupWindow: android.view.View getSelectedView()
androidx.viewpager.R$styleable: int ColorStateListItem_android_alpha
androidx.core.view.ViewKt: android.graphics.Bitmap drawToBitmap(android.view.View,android.graphics.Bitmap$Config)
dagger.android.support.R$styleable: int DrawerArrowToggle_spinBars
androidx.core.animation.AnimatorKt$addListener$4: AnimatorKt$addListener$4()
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type UNKNOWN
androidx.core.text.PrecomputedTextCompat$Params: int getBreakStrategy()
io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapNotNullTo$3
androidx.recyclerview.widget.GridLayoutManager: void setSpanCount(int)
io.reactivex.processors.MulticastProcessor: io.reactivex.processors.MulticastProcessor create(boolean)
io.reactivex.Observable: io.reactivex.Observable ambArray(io.reactivex.ObservableSource[])
com.example.revolut.rates.R$styleable: int SearchView_submitBackground
dagger.internal.DaggerCollections: java.util.LinkedHashMap newLinkedHashMapWithExpectedSize(int)
androidx.core.util.SparseLongArrayKt$valueIterator$1: boolean hasNext()
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_CHAIN
android.support.v4.media.RatingCompat: int RATING_5_STARS
kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$scheduleResumeAfterDelay$$inlined$Runnable$1
okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)
androidx.vectordrawable.R$drawable: int notification_template_icon_bg
kotlin.internal.RequireKotlin: kotlin.internal.RequireKotlinVersionKind versionKind()
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_1
androidx.databinding.adapters.ZoomControlsBindingAdapter: ZoomControlsBindingAdapter()
dagger.android.support.R$style: int Base_Widget_AppCompat_ListPopupWindow
kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc: java.lang.Object resumeToken
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_END
io.reactivex.internal.observers.ResumeSingleObserver: void onError(java.lang.Throwable)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence dropWhile(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
android.support.v4.media.session.MediaControllerCompat$TransportControls: void setRepeatMode(int)
androidx.fragment.R$drawable: int notification_template_icon_low_bg
retrofit2.CallAdapter: java.lang.reflect.Type responseType()
com.example.revolut.rates.R$style: int Widget_AppCompat_ImageButton
kotlin.collections.AbstractMutableList: int size()
okio.Buffer: void require(long)
androidx.collection.CircularIntArray: CircularIntArray(int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
io.reactivex.processors.MulticastProcessor: void onError(java.lang.Throwable)
io.reactivex.internal.subscriptions.SubscriptionHelper: io.reactivex.internal.subscriptions.SubscriptionHelper[] values()
androidx.drawerlayout.R$layout: int notification_template_part_chronometer
com.example.revolut.rates.R$attr: int actionBarTabTextStyle
androidx.core.R$styleable: int GradientColorItem_android_offset
io.reactivex.internal.util.AppendOnlyLinkedArrayList: void forEachWhile(io.reactivex.internal.util.AppendOnlyLinkedArrayList$NonThrowingPredicate)
androidx.appcompat.R$styleable: int ViewBackgroundHelper_android_background
androidx.appcompat.R$string: int abc_shareactionprovider_share_with
androidx.appcompat.R$styleable: int[] ActivityChooserView
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean hasNestedScrollingParent()
androidx.collection.ArraySet: void ensureCapacity(int)
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: long serialVersionUID
androidx.core.content.FileProvider: FileProvider()
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.versionedparcelable.VersionedParcel: void writeException(java.lang.Exception,int)
kotlinx.coroutines.BuildersKt: java.lang.Object runBlocking(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
com.example.revolut.rates.R$layout: int notification_template_part_time
kotlin.text.StringsKt___StringsKt: java.util.List zip(java.lang.CharSequence,java.lang.CharSequence)
kotlinx.coroutines.selects.SelectBuilderImpl$onTimeout$$inlined$Runnable$1: SelectBuilderImpl$onTimeout$$inlined$Runnable$1(kotlinx.coroutines.selects.SelectBuilderImpl,kotlin.jvm.functions.Function1)
io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent: android.widget.AbsListView component1()
androidx.databinding.adapters.TimePickerBindingAdapter: int getHour(android.widget.TimePicker)
okhttp3.Address: int hashCode()
dagger.android.support.R$styleable: int AppCompatTheme_spinnerStyle
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1
okhttp3.Headers: java.util.List values(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable timeout(io.reactivex.functions.Function,io.reactivex.Flowable)
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setHintDisplayActionInline(boolean)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean removeAll(java.util.List,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__RegexExtensionsJVMKt: StringsKt__RegexExtensionsJVMKt()
androidx.databinding.adapters.TableLayoutBindingAdapter
androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior: java.lang.Class value()
androidx.appcompat.R$styleable: int AppCompatTheme_tooltipFrameBackground
android.support.v4.media.MediaBrowserCompat: MediaBrowserCompat(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: int getSize()
kotlin.reflect.KMutableProperty1$Setter
androidx.appcompat.app.AlertController$AlertParams: boolean mRecycleOnMeasure
kotlin.collections.AbstractMap: java.util.Collection values()
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter CALENDAR
okhttp3.internal.ws.RealWebSocket: void onReadMessage(okio.ByteString)
androidx.core.graphics.RectKt: android.graphics.Region toRegion(android.graphics.RectF)
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Float,float)
io.reactivex.internal.fuseable.SimpleQueue: void clear()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.Maybe: io.reactivex.Single contains(java.lang.Object)
androidx.recyclerview.R$styleable: int RecyclerView_stackFromEnd
kotlin.math.MathKt__MathJVMKt: void absoluteValue$annotations(double)
kotlinx.coroutines.AbstractContinuation: java.lang.String toString()
androidx.lifecycle.extensions.R$id: int line1
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTextSelection(int,int)
androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener: void onPanelSlide(android.view.View,float)
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
androidx.appcompat.R$styleable: int View_android_theme
kotlinx.coroutines.scheduling.Task: kotlinx.coroutines.scheduling.TaskContext taskContext
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object single(kotlin.sequences.Sequence)
kotlin.text.StringsKt__StringsKt: kotlin.collections.CharIterator iterator(java.lang.CharSequence)
androidx.vectordrawable.R$id: int line1
androidx.core.content.FileProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])
io.reactivex.internal.util.NotificationLite: java.lang.Object getValue(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeDoOnEvent
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int endToStart
kotlin.jvm.JvmMultifileClass
io.reactivex.processors.ReplayProcessor: java.lang.Object[] getValues(java.lang.Object[])
io.reactivex.internal.operators.single.SingleDoOnSuccess: SingleDoOnSuccess(io.reactivex.SingleSource,io.reactivex.functions.Consumer)
androidx.lifecycle.AndroidViewModel
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: long serialVersionUID
com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent: int hashCode()
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
retrofit2.Invocation: java.lang.String toString()
androidx.core.graphics.PathParser$PathDataNode: void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float)
androidx.recyclerview.widget.RecyclerView: void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
kotlinx.coroutines.channels.LinkedListChannel: java.lang.Object offerInternal(java.lang.Object)
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback: void recycleTile(androidx.recyclerview.widget.TileList$Tile)
com.example.revolut.rates.R$styleable: int AppCompatTheme_windowActionBar
kotlinx.coroutines.test.TestCoroutineContext: java.util.List getExceptions()
androidx.constraintlayout.solver.Metrics: void reset()
androidx.core.R$id: int time
androidx.fragment.app.FragmentController: androidx.collection.SimpleArrayMap retainLoaderNonConfig()
kotlin.collections.AbstractList: boolean addAll(int,java.util.Collection)
io.reactivex.plugins.RxJavaPlugins: void setOnSingleAssembly(io.reactivex.functions.Function)
kotlin.collections.DoubleIterator: double nextDouble()
com.example.revolut.rates.R$dimen: int abc_dialog_padding_material
okhttp3.internal.connection.StreamAllocation: okhttp3.Route route()
androidx.databinding.ObservableByte
androidx.legacy.coreui.R$styleable: int FontFamilyFont_ttcIndex
androidx.appcompat.R$color: int bright_foreground_material_light
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver: long serialVersionUID
dagger.android.support.R$attr: int windowMinWidthMajor
retrofit2.KotlinExtensions: java.lang.Object awaitResponse(retrofit2.Call,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.appcompat.app.ActionBar: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
kotlin.jvm.internal.PropertyReference0Impl
androidx.appcompat.view.SupportActionModeWrapper: void setTitle(int)
kotlin.UnsafeLazyImpl: UnsafeLazyImpl(kotlin.jvm.functions.Function0)
dagger.android.R
com.example.revolut.rates.R$attr: int textAppearanceSearchResultTitle
com.example.revolut.rates.di.Injector: Injector()
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isRootContainer()
kotlin.text.Regex$Serialized$Companion: Regex$Serialized$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KType typeOf(kotlin.reflect.KClassifier,java.util.List,boolean)
dagger.android.support.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewAddEvent: com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewAddEvent copy$default(com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewAddEvent,android.view.ViewGroup,android.view.View,int,java.lang.Object)
android.support.v4.media.session.ParcelableVolumeInfo: int describeContents()
dagger.MapKey
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable longClicks$default(android.view.View,kotlin.jvm.functions.Function0,int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_HIDE_TOOLTIP
com.example.revolut.rates.R$styleable: int Toolbar_contentInsetRight
androidx.fragment.app.Fragment: boolean isStateSaved()
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
kotlin.reflect.KCallable$DefaultImpls: void typeParameters$annotations()
androidx.core.provider.SelfDestructiveThread: void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback)
androidx.recyclerview.widget.RecyclerView: void onRestoreInstanceState(android.os.Parcelable)
kotlinx.coroutines.EventLoopBase$DelayedRunnableTask
androidx.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_dark
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(long)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int GAP_HANDLING_NONE
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.NonCancellable INSTANCE
androidx.appcompat.R$attr: int textAppearanceSearchResultSubtitle
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List filterNotNull(java.lang.Iterable)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params build()
dagger.android.support.R$color: int primary_text_default_material_dark
kotlinx.coroutines.channels.AbstractChannel: AbstractChannel()
io.reactivex.internal.fuseable.QueueFuseable: int ANY
androidx.core.text.PrecomputedTextCompat$Params$Builder
io.reactivex.internal.schedulers.NewThreadScheduler
dagger.android.support.R$anim: int abc_slide_out_top
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setPublicVersion(android.app.Notification)
okhttp3.Protocol: okhttp3.Protocol get(java.lang.String)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
androidx.core.net.ConnectivityManagerCompat: int RESTRICT_BACKGROUND_STATUS_ENABLED
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_CHARACTER
kotlin.jvm.internal.MutablePropertyReference0: MutablePropertyReference0(java.lang.Object)
androidx.versionedparcelable.VersionedParcel: void writeNoException()
androidx.legacy.v4.R$drawable: int notification_template_icon_low_bg
kotlinx.coroutines.channels.BroadcastKt: kotlinx.coroutines.channels.BroadcastChannel broadcast$default(kotlinx.coroutines.channels.ReceiveChannel,int,kotlinx.coroutines.CoroutineStart,int,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable max(kotlin.sequences.Sequence)
com.example.revolut.rates.R$string: int abc_searchview_description_clear
androidx.constraintlayout.widget.Constraints: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
kotlinx.coroutines.CoroutineDispatcher
androidx.vectordrawable.R$id: int action_text
com.google.gson.internal.LinkedTreeMap: void clear()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
dagger.android.support.R$style: int Base_Theme_AppCompat_Light_Dialog
okhttp3.internal.http.RealResponseBody
androidx.recyclerview.widget.ListAdapter: int getItemCount()
com.example.revolut.rates.R$id: int left
androidx.databinding.adapters.TextViewBindingAdapter: void setLineSpacingMultiplier(android.widget.TextView,float)
kotlin.collections.ArraysKt___ArraysKt: boolean first(boolean[])
dagger.internal.MapProviderFactory$Builder: dagger.internal.MapProviderFactory build()
androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayout(boolean,int,int,int,int)
okhttp3.internal.http2.Http2Stream: boolean isLocallyInitiated()
android.support.v4.media.session.MediaSessionCompat$Callback: void onFastForward()
androidx.core.widget.ScrollerCompat: androidx.core.widget.ScrollerCompat create(android.content.Context)
androidx.versionedparcelable.VersionedParcel: VersionedParcel()
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_translationY
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context)
androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
kotlin.reflect.KClass: java.util.List getTypeParameters()
android.support.v4.media.session.MediaControllerCompat: void removeQueueItemAt(int)
io.reactivex.Observable: io.reactivex.Observable doOnNext(io.reactivex.functions.Consumer)
com.example.revolut.rates.R$attr: int height
dagger.android.support.R$dimen: int highlight_alpha_material_light
androidx.recyclerview.widget.RecyclerView$Adapter: void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
androidx.appcompat.R$layout: int abc_cascading_menu_item_layout
kotlin.collections.ArraysKt___ArraysKt: kotlin.collections.Grouping groupingBy(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.appcompat.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
androidx.fragment.R$id: int right_icon
androidx.constraintlayout.solver.widgets.ConstraintWidget: int HORIZONTAL
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeBasic()
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentById(int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void resolve()
kotlin.sequences.SequencesKt__SequencesKt$Sequence$1
androidx.appcompat.app.AppCompatActivity: void setSupportProgress(int)
androidx.core.view.WindowCompat: android.view.View requireViewById(android.view.Window,int)
okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)
androidx.databinding.library.baseAdapters.DataBinderMapperImpl
androidx.legacy.v4.R$id: int line3
kotlinx.coroutines.NonCancellable: boolean cancel(java.lang.Throwable)
io.reactivex.subscribers.TestSubscriber: TestSubscriber(long)
dagger.android.support.R$dimen: int abc_dropdownitem_icon_width
androidx.core.util.Pair: Pair(java.lang.Object,java.lang.Object)
com.example.revolut.rates.R$styleable: int ViewStubCompat_android_inflatedId
com.example.revolut.rates.data.model.CurrencyResponse: java.lang.String component1()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
androidx.appcompat.view.menu.ActionMenuItem: char getNumericShortcut()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
kotlinx.coroutines.scheduling.WorkQueue: boolean trySteal(kotlinx.coroutines.scheduling.WorkQueue,kotlinx.coroutines.scheduling.GlobalQueue)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.util.List asList-rL5Bavg(short[])
android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaControllerCompat getController()
androidx.core.widget.TintableCompoundButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.appcompat.widget.DecorToolbar: void setDefaultNavigationIcon(android.graphics.drawable.Drawable)
androidx.media.VolumeProviderCompat: int getMaxVolume()
io.reactivex.internal.operators.maybe.MaybeFilterSingle: MaybeFilterSingle(io.reactivex.SingleSource,io.reactivex.functions.Predicate)
kotlinx.coroutines.internal.ScopeOwnerCoroutine: boolean cancel(java.lang.Throwable)
androidx.customview.widget.ExploreByTouchHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews getContentView()
dagger.android.support.R$color: int abc_primary_text_material_light
dagger.android.DaggerApplication: dagger.android.AndroidInjector fragmentInjector()
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_EditText
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean removeAll(java.util.Collection,kotlin.sequences.Sequence)
io.reactivex.internal.operators.observable.ObservableInterval: ObservableInterval(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setDither(boolean)
androidx.appcompat.R$styleable: int[] AppCompatTheme
androidx.core.database.CursorKt: java.lang.Short getShortOrNull(android.database.Cursor,int)
dagger.android.HasActivityInjector
kotlin.UIntArray: boolean isEmpty()
kotlin.collections.MapsKt__MapWithDefaultKt: java.util.Map withDefault(java.util.Map,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop$BackpressureDropSubscriber: long serialVersionUID
kotlin.collections.CollectionsKt__CollectionsKt: java.util.Collection asCollection(java.lang.Object[])
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean)
dagger.android.support.R$string: int search_menu_title
dagger.android.support.R$attr: int logo
com.jakewharton.rxbinding3.core.R$id: int info
androidx.constraintlayout.widget.R$attr: int content
io.reactivex.internal.operators.flowable.FlowableTimer: FlowableTimer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.DeprecationLevel
com.example.revolut.rates.R$styleable: int AppCompatTheme_panelMenuListTheme
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: boolean validatePrepared(java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void optimize()
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(byte[])
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel distinctBy(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.LockFreeMPSCQueue: LockFreeMPSCQueue()
androidx.appcompat.R$drawable: int abc_list_selector_background_transition_holo_dark
androidx.databinding.adapters.AutoCompleteTextViewBindingAdapter: AutoCompleteTextViewBindingAdapter()
kotlin.sequences.SubSequence$iterator$1: int getPosition()
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setCenterRadius(float)
kotlin.coroutines.jvm.internal.Boxing: java.lang.Short boxShort(short)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable: FlowableFlatMapCompletable(io.reactivex.Flowable,io.reactivex.functions.Function,boolean,int)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int guideBegin
kotlin.UnsafeVariance
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Float max(java.lang.Iterable)
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceListItem
io.reactivex.android.plugins.RxAndroidPlugins: void reset()
io.reactivex.internal.operators.maybe.MaybeFlatten: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.schedulers.NewThreadWorker: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
androidx.core.view.NestedScrollingParent
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.internal.connection.StreamAllocation streamAllocation()
io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber: long serialVersionUID
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] plus(java.lang.Object[],java.lang.Object[])
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.ClosedRange,float)
androidx.recyclerview.widget.GridLayoutManager: int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(int)
androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
kotlin.collections.ArraysKt___ArraysKt: float single(float[])
kotlin.collections.GroupingKt__GroupingKt: GroupingKt__GroupingKt()
androidx.fragment.app.ListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder query(java.lang.String)
okio.ForwardingTimeout: ForwardingTimeout(okio.Timeout)
io.reactivex.Flowable: io.reactivex.Flowable doOnEach(io.reactivex.functions.Consumer)
androidx.appcompat.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
kotlin.collections.EmptyList: boolean isEmpty()
kotlinx.android.extensions.CacheImplementation: kotlinx.android.extensions.CacheImplementation$Companion Companion
androidx.viewpager.R$id: int tag_unhandled_key_listeners
androidx.appcompat.R$attr: int buttonIconDimen
androidx.vectordrawable.R$style: int TextAppearance_Compat_Notification_Line2
io.reactivex.Flowable: io.reactivex.Flowable concatMapEagerDelayError(io.reactivex.functions.Function,int,int,boolean)
androidx.constraintlayout.widget.ConstraintSet: void setVerticalBias(int,float)
kotlinx.coroutines.test.TestCoroutineContext: void assertAnyUnhandledException$default(kotlinx.coroutines.test.TestCoroutineContext,java.lang.String,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableWrapper: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.databinding.ObservableChar
com.example.revolut.rates.R$styleable: int ActionMode_background
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setNeutralButtonIcon(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
androidx.appcompat.R$attr: int textAppearanceListItem
com.example.revolut.rates.R$drawable: int abc_seekbar_tick_mark_material
com.jakewharton.rxbinding3.core.R$styleable: int GradientColor_android_tileMode
com.example.revolut.rates.R$styleable: int GradientColorItem_android_color
androidx.core.ktx.R$dimen: int notification_top_pad_large_text
androidx.appcompat.R$style: int Base_Widget_AppCompat_PopupWindow
com.example.revolut.rates.R$color: int abc_tint_spinner
android.support.v4.media.session.PlaybackStateCompat$CustomAction: java.lang.String getAction()
androidx.appcompat.R$color: int abc_input_method_navigation_guard
kotlinx.coroutines.channels.ActorScope: kotlinx.coroutines.channels.Channel getChannel()
kotlin.collections.ArraysKt___ArraysKt: byte[] sortedArray(byte[])
com.google.gson.internal.bind.DateTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.legacy.v4.R$styleable: int[] CoordinatorLayout
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1
com.example.revolut.rates.R$styleable: int ConstraintSet_android_orientation
kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc: AbstractSendChannel$TryOfferDesc(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListHead)
kotlinx.coroutines.EventLoop$DefaultImpls: void releaseInterceptedContinuation(kotlinx.coroutines.EventLoop,kotlin.coroutines.Continuation)
io.reactivex.internal.operators.completable.CompletableConcatIterable$ConcatInnerObserver: long serialVersionUID
okio.Buffer: long readHexadecimalUnsignedLong()
androidx.constraintlayout.solver.widgets.Rectangle: boolean contains(int,int)
androidx.annotation.RequiresPermission: boolean conditional()
io.reactivex.internal.operators.flowable.FlowablePublishAlt: void connect(io.reactivex.functions.Consumer)
androidx.recyclerview.widget.LinearLayoutManager: boolean supportsPredictiveItemAnimations()
androidx.fragment.R$styleable: int ColorStateListItem_alpha
dagger.android.support.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
kotlin.UnsafeLazyImpl: java.lang.Object getValue()
kotlin.contracts.ContractBuilderKt
io.reactivex.internal.util.ArrayListSupplier: io.reactivex.functions.Function asFunction()
kotlin.collections.ArraysKt__ArraysJVMKt: int contentDeepHashCode(java.lang.Object[])
androidx.media.R$layout
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,int)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(short,byte)
com.example.revolut.rates.R$attr: int titleMarginBottom
com.jakewharton.rxbinding3.widget.TextViewAfterTextChangeEvent: java.lang.String toString()
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean canShowOverflowMenu()
kotlin.sequences.DropWhileSequence$iterator$1: int getDropState()
androidx.legacy.v4.R$color: int secondary_text_default_material_light
kotlin.NotImplementedError: NotImplementedError()
kotlin.ranges.RangesKt___RangesKt: int coerceIn(int,kotlin.ranges.ClosedRange)
androidx.recyclerview.R$drawable: int notification_icon_background
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitle(java.lang.CharSequence)
androidx.loader.content.CursorLoader: java.lang.Object loadInBackground()
kotlin.collections.SlidingWindowKt
dagger.android.support.R$anim: int abc_fade_out
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
androidx.appcompat.widget.ContentFrameLayout: void dispatchFitSystemWindows(android.graphics.Rect)
androidx.databinding.ObservableField: long serialVersionUID
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel asReceiveChannel$default(kotlin.sequences.Sequence,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter beginObject()
kotlinx.coroutines.JobKt: void cancelChildren$default(kotlin.coroutines.CoroutineContext,java.lang.Throwable,int,java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setColumnAlignment(java.lang.String)
okhttp3.internal.http2.Header: java.lang.String TARGET_PATH_UTF8
kotlin.ranges.ClosedFloatingPointRange: boolean contains(java.lang.Comparable)
kotlinx.coroutines.EventLoopBase: boolean isCompleted()
androidx.appcompat.R$style: int Theme_AppCompat_DayNight
androidx.viewpager.R$styleable: int FontFamilyFont_fontStyle
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable)
androidx.versionedparcelable.VersionedParcel: double[] readDoubleArray()
androidx.appcompat.view.menu.MenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: long serialVersionUID
kotlinx.coroutines.channels.SendElement: void completeResumeSend(java.lang.Object)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory ATOMIC_INTEGER_ARRAY_FACTORY
androidx.databinding.ViewDataBinding: void setTo(short[],int,short)
kotlin.sequences.Sequence: java.util.Iterator iterator()
androidx.core.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$all$1: ChannelsKt__Channels_commonKt$all$1(kotlin.coroutines.Continuation)
kotlin.text.UStringsKt: long toULong(java.lang.String,int)
kotlin.collections.ArraysKt___ArraysKt: int sumBy(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.appcompat.app.ActionBar: void setLogo(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.widgets.ChainHead: float mTotalWeight
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isStateful()
androidx.coordinatorlayout.R$id: int time
okhttp3.internal.http2.Header: java.lang.String RESPONSE_STATUS_UTF8
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.properties.Delegates$observable$1
kotlinx.coroutines.selects.WhileSelectKt: java.lang.Object whileSelect(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.constraintlayout.solver.widgets.ResolutionNode
androidx.constraintlayout.solver.widgets.ConstraintWidget: int GONE
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean setVisible(boolean,boolean)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent)
androidx.core.view.ScaleGestureDetectorCompat
androidx.core.content.ContextKt
kotlin.text.StringsKt___StringsKt: java.lang.String filterNot(java.lang.String,kotlin.jvm.functions.Function1)
io.reactivex.processors.MulticastProcessor: io.reactivex.processors.MulticastProcessor create(int)
androidx.recyclerview.widget.SortedList$Callback: boolean areItemsTheSame(java.lang.Object,java.lang.Object)
okhttp3.internal.http1.Http1Codec: void writeRequest(okhttp3.Headers,java.lang.String)
com.example.revolut.rates.BuildConfig: java.lang.String BUILD_TYPE
com.example.revolut.rates.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
kotlin.collections.ArraysKt___ArraysKt: boolean[] sliceArray(boolean[],java.util.Collection)
kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty0 mutableProperty0(kotlin.jvm.internal.MutablePropertyReference0)
io.reactivex.observables.GroupedObservable
io.reactivex.Observable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function)
kotlin.jvm.internal.TypeReference: boolean equals(java.lang.Object)
androidx.asynclayoutinflater.R$styleable
androidx.recyclerview.widget.RecyclerView: void scrollTo(int,int)
io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlinx.coroutines.internal.ThreadLocalElement: kotlin.coroutines.CoroutineContext$Key getKey()
okhttp3.Request: okhttp3.Request$Builder newBuilder()
androidx.lifecycle.extensions.R$attr: int fontProviderFetchStrategy
kotlinx.coroutines.EventLoopBase: void removeDelayedImpl$kotlinx_coroutines_core(kotlinx.coroutines.EventLoopBase$DelayedTask)
io.reactivex.Observable: io.reactivex.Observable switchMapDelayError(io.reactivex.functions.Function,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: char getAlphabeticShortcut()
kotlin.coroutines.CoroutineContext$Key
dagger.android.FragmentKey: java.lang.Class value()
kotlin.collections.AbstractSet: boolean equals(java.lang.Object)
io.reactivex.observers.DisposableObserver: void onStart()
kotlin.text.Typography: char almostEqual
androidx.appcompat.R$styleable: int MenuItem_contentDescription
dagger.android.support.R$styleable: int Toolbar_titleMarginBottom
kotlinx.coroutines.ThreadPoolDispatcher: java.lang.String toString()
androidx.core.animation.AnimatorKt$doOnCancel$$inlined$addListener$1
kotlin.coroutines.SafeContinuation: kotlin.coroutines.SafeContinuation$Companion Companion
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[])
kotlin.jvm.internal.Ref$ShortRef
kotlinx.coroutines.channels.ActorJob
androidx.media.AudioAttributesCompat: int USAGE_NOTIFICATION_COMMUNICATION_REQUEST
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,io.reactivex.functions.Action)
androidx.drawerlayout.widget.DrawerLayout: boolean onKeyUp(int,android.view.KeyEvent)
dagger.android.support.R$styleable: int AppCompatTheme_editTextStyle
androidx.versionedparcelable.VersionedParcel: byte readByte(byte,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
androidx.legacy.coreui.R$color: int secondary_text_default_material_light
io.reactivex.internal.operators.single.SingleDoOnError: SingleDoOnError(io.reactivex.SingleSource,io.reactivex.functions.Consumer)
androidx.lifecycle.MediatorLiveData: void addSource(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
dagger.android.support.R$attr: int buttonTint
kotlin.ranges.IntProgressionIterator
dagger.android.support.R$bool: int abc_config_actionMenuItemAllCaps
com.example.revolut.rates.R$layout: int notification_template_part_chronometer
android.support.v4.media.session.MediaControllerCompat$TransportControls: void setShuffleMode(int)
com.example.revolut.rates.R$styleable: int TextAppearance_textAllCaps
androidx.legacy.coreui.R$styleable: int[] CoordinatorLayout_Layout
androidx.appcompat.widget.SearchView: int getInputType()
kotlin.MathKt__BigDecimalsKt: MathKt__BigDecimalsKt()
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams
io.reactivex.internal.schedulers.AbstractDirectTask: java.lang.Runnable getWrappedRunnable()
androidx.core.internal.view.SupportMenuItem: java.lang.CharSequence getTooltipText()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setViewIdResourceName(java.lang.String)
android.support.v4.os.ResultReceiver: int describeContents()
androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder: boolean setViewValue(android.view.View,android.database.Cursor,int)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] toULongArray(kotlin.ULong[])
androidx.databinding.adapters.ViewBindingAdapter$OnViewAttachedToWindow: void onViewAttachedToWindow(android.view.View)
io.reactivex.internal.operators.observable.ObservableLift
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapNotNullTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(byte[],kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.SortedList$BatchedCallback: void dispatchLastEvent()
com.jakewharton.rxbinding3.widget.AdapterViewItemSelectionEvent: android.view.View getSelectedView()
androidx.core.R$dimen: int notification_action_icon_size
com.example.revolut.rates.R$styleable: int AppCompatTheme_toolbarStyle
com.example.revolut.rates.R$id: int search_button
kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator getIterator()
com.example.revolut.rates.R$dimen: int notification_subtext_size
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.ULongRange until-eb3DHEI(long,long)
androidx.slidingpanelayout.R$dimen: int compat_control_corner_material
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void stop()
androidx.appcompat.app.WindowDecorActionBar: void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
androidx.media.R$attr: int font
androidx.core.view.ViewCompat: int getPaddingStart(android.view.View)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)
androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$1: void onTransitionPause(android.transition.Transition)
androidx.appcompat.app.ActionBar: void setDisplayShowHomeEnabled(boolean)
com.google.gson.JsonNull: com.google.gson.JsonElement deepCopy()
io.reactivex.internal.operators.observable.ObservableBlockingSubscribe
dagger.android.support.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
androidx.media.R$dimen: int notification_content_margin_start
kotlin.text.CharCategory: kotlin.text.CharCategory DECIMAL_DIGIT_NUMBER
kotlinx.coroutines.CoroutineId: kotlinx.coroutines.CoroutineId copy(long)
androidx.core.R$id: int forever
okio.Timeout: void waitUntilNotified(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty: FlowableSwitchIfEmpty(io.reactivex.Flowable,org.reactivestreams.Publisher)
androidx.appcompat.R$styleable: int ActionBar_contentInsetLeft
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_ActionBar
com.jakewharton.rxbinding3.core.R$styleable: int FontFamilyFont_ttcIndex
androidx.cursoradapter.widget.CursorAdapter: int FLAG_AUTO_REQUERY
androidx.asynclayoutinflater.R$style: int Widget_Compat_NotificationActionText
kotlin.ranges.CharRange: boolean contains(java.lang.Comparable)
kotlin.jvm.internal.SpreadBuilder: java.lang.Object[] toArray(java.lang.Object[])
androidx.recyclerview.widget.RecyclerView$LayoutManager: void stopIgnoringView(android.view.View)
dagger.android.DaggerApplication: dagger.android.AndroidInjector applicationInjector()
dagger.android.support.R$attr: int colorBackgroundFloating
androidx.core.view.MotionEventCompat: int ACTION_HOVER_EXIT
androidx.appcompat.R$styleable: int AppCompatTheme_windowNoTitle
androidx.core.graphics.PointKt: float component2(android.graphics.PointF)
androidx.legacy.coreutils.R$styleable: int FontFamily_fontProviderQuery
com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)
androidx.appcompat.widget.DecorToolbar: void setIcon(int)
io.reactivex.internal.operators.flowable.FlowableZip: FlowableZip(org.reactivestreams.Publisher[],java.lang.Iterable,io.reactivex.functions.Function,int,boolean)
androidx.recyclerview.widget.LinearLayoutManager: void setRecycleChildrenOnDetach(boolean)
com.example.revolut.rates.R$attr: int defaultQueryHint
androidx.core.util.SparseIntArrayKt$keyIterator$1: int nextInt()
dagger.android.support.R$drawable: int abc_list_selector_disabled_holo_light
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.appcompat.widget.AppCompatDrawableManager: void onConfigurationChanged(android.content.Context)
retrofit2.KotlinExtensions: java.lang.Object awaitNullable(retrofit2.Call,kotlin.coroutines.Continuation)
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeCutDrawable
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
androidx.databinding.ObservableBoolean: long serialVersionUID
dagger.android.support.R$dimen: int abc_progress_bar_height_material
androidx.appcompat.view.WindowCallbackWrapper: boolean onMenuOpened(int,android.view.Menu)
androidx.fragment.app.FragmentController: void dispatchCreate()
androidx.interpolator.view.animation.FastOutSlowInInterpolator: float getInterpolation(float)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.example.revolut.rates.R$attr: int layout_constraintVertical_chainStyle
kotlin.random.Random: int nextInt(int,int)
io.reactivex.annotations.Beta
okhttp3.Protocol: okhttp3.Protocol SPDY_3
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3
kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator getItemIterator()
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Display2
androidx.fragment.app.DialogFragment: void onCancel(android.content.DialogInterface)
androidx.core.animation.AnimatorKt$addPauseListener$1
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_CCM_SHA256
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
dagger.android.support.R$id: int buttonPanel
androidx.versionedparcelable.ParcelUtils: void toOutputStream(androidx.versionedparcelable.VersionedParcelable,java.io.OutputStream)
kotlinx.coroutines.NonCancellable: void cancelChildren(java.lang.Throwable)
kotlin.coroutines.experimental.ContinuationInterceptor$DefaultImpls: java.lang.Object fold(kotlin.coroutines.experimental.ContinuationInterceptor,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.coroutines.experimental.migration.CoroutinesMigrationKt: kotlin.jvm.functions.Function3 toExperimentalSuspendFunction(kotlin.jvm.functions.Function3)
dagger.android.support.R$attr: int controlBackground
android.support.v4.media.session.MediaControllerCompat$TransportControls: void prepareFromSearch(java.lang.String,android.os.Bundle)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setNumericShortcut(char,int)
kotlin.jvm.internal.MutablePropertyReference0Impl: java.lang.String getName()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String)
kotlin.Result$Failure: int hashCode()
io.reactivex.internal.operators.flowable.FlowableGroupJoin: FlowableGroupJoin(io.reactivex.Flowable,org.reactivestreams.Publisher,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
com.example.revolut.rates.di.AppModule_ProvideRetrofitFactory: retrofit2.Retrofit proxyProvideRetrofit(com.example.revolut.rates.di.AppModule)
io.reactivex.internal.schedulers.ScheduledDirectPeriodicTask
com.example.revolut.rates.R$id: int ifRoom
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int goneEndMargin
com.example.revolut.rates.R$id: int src_in
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CancellableContinuation: java.lang.Object tryResume(java.lang.Object,java.lang.Object)
androidx.core.view.ViewCompat: void setY(android.view.View,float)
io.reactivex.functions.BiConsumer
androidx.drawerlayout.R$id: int actions
com.jakewharton.rxbinding3.widget.RatingBarChangeEvent: android.widget.RatingBar component1()
android.support.v4.media.session.PlaybackStateCompat: java.lang.String toString()
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver: long serialVersionUID
androidx.collection.LruCache: int size()
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeShareDrawable
io.reactivex.internal.subscribers.QueueDrainSubscriber: boolean cancelled
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAutoMirrored(boolean)
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.internal.Symbol access$getRESUME_ACTIVE$p()
androidx.lifecycle.LiveData: LiveData()
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(boolean[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.jakewharton.rxbinding3.widget.RxTextView: io.reactivex.Observable editorActions$default(android.widget.TextView,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityRecordCompat: androidx.core.view.accessibility.AccessibilityRecordCompat obtain()
io.reactivex.internal.operators.flowable.FlowableSkipLast
androidx.recyclerview.widget.RecyclerView: boolean hasPendingAdapterUpdates()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()
androidx.core.view.inputmethod.InputContentInfoCompat: androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: long serialVersionUID
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
androidx.media.R$id: int blocking
kotlinx.coroutines.channels.AbstractSendChannel: boolean isFull()
androidx.media.AudioAttributesCompatParcelizer
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$sumByDouble$1
kotlinx.coroutines.internal.ThreadSafeHeap: ThreadSafeHeap()
okhttp3.internal.cache.InternalCache: okhttp3.Response get(okhttp3.Request)
retrofit2.Retrofit$Builder: java.util.List converterFactories()
android.support.v4.media.session.MediaSessionCompat$QueueItem: java.lang.Object getQueueItem()
androidx.recyclerview.R$styleable: int GradientColor_android_startColor
androidx.databinding.BaseObservable: void addOnPropertyChangedCallback(androidx.databinding.Observable$OnPropertyChangedCallback)
io.reactivex.internal.observers.BasicFuseableObserver: void dispose()
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean isAutoMirrored()
androidx.recyclerview.R$attr: int fontProviderAuthority
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed: FlowableSkipLastTimed(io.reactivex.Flowable,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int,boolean)
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,boolean,boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumHeight()
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(byte[],byte,int,int)
androidx.core.animation.AnimatorKt$doOnRepeat$$inlined$addListener$1: void onAnimationRepeat(android.animation.Animator)
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver$OtherObserver: long serialVersionUID
androidx.core.util.LogWriter: LogWriter(java.lang.String)
androidx.recyclerview.R$dimen: int compat_button_inset_horizontal_material
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Body2
androidx.databinding.adapters.CompoundButtonBindingAdapter
androidx.legacy.coreutils.R$style: int TextAppearance_Compat_Notification_Info
dagger.android.support.R$attr: int showDividers
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
com.example.revolut.rates.R$anim: int abc_popup_exit
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setShowingHintText(boolean)
io.reactivex.Single: io.reactivex.Single zipWith(io.reactivex.SingleSource,io.reactivex.functions.BiFunction)
kotlinx.coroutines.channels.LinkedListChannel: boolean isBufferAlwaysEmpty()
androidx.lifecycle.extensions.R$styleable: int CoordinatorLayout_keylines
androidx.core.app.FrameMetricsAggregator: int SWAP_INDEX
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel map(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
com.example.revolut.rates.R$color: int background_material_light
io.reactivex.internal.util.OpenHashSet
androidx.core.view.MotionEventCompat: int ACTION_SCROLL
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence getConfirmLabel()
com.google.gson.FieldNamingStrategy: java.lang.String translateName(java.lang.reflect.Field)
androidx.appcompat.view.SupportActionModeWrapper: android.view.MenuInflater getMenuInflater()
com.example.revolut.rates.R$style: int Widget_AppCompat_ButtonBar
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(boolean[])
kotlin.text.CharCategory: int getValue()
androidx.media.R$drawable: int notification_bg_low_pressed
io.reactivex.subjects.SingleSubject: void subscribeActual(io.reactivex.SingleObserver)
com.example.revolut.rates.R$styleable: int ConstraintSet_android_layout_marginTop
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBar
androidx.vectordrawable.R$id: int blocking
androidx.appcompat.widget.Toolbar: void dismissPopupMenus()
io.reactivex.internal.functions.Functions$HashSetCallable: io.reactivex.internal.functions.Functions$HashSetCallable[] values()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_3DES_EDE_CBC_SHA
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_AUTHENTICATION_EXPIRED
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable: MaybeFlatMapIterableFlowable(io.reactivex.MaybeSource,io.reactivex.functions.Function)
androidx.annotation.VisibleForTesting: int otherwise()
androidx.lifecycle.extensions.R$styleable: int[] CoordinatorLayout
androidx.appcompat.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)
com.google.gson.internal.bind.SqlDateTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.appcompat.view.menu.ListMenuItemView
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity
kotlin.reflect.KClass: boolean isAbstract()
com.example.revolut.rates.R$styleable: int ActionBar_subtitle
io.reactivex.schedulers.Schedulers: io.reactivex.Scheduler trampoline()
kotlinx.coroutines.scheduling.CoroutineScheduler: int MAX_SUPPORTED_POOL_SIZE
retrofit2.adapter.rxjava2.Result: retrofit2.adapter.rxjava2.Result error(java.lang.Throwable)
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable: FlowableConcatMapCompletable(io.reactivex.Flowable,io.reactivex.functions.Function,io.reactivex.internal.util.ErrorMode,int)
androidx.customview.R$attr: int fontVariationSettings
kotlin.coroutines.experimental.AbstractCoroutineContextElement: kotlin.coroutines.experimental.CoroutineContext minusKey(kotlin.coroutines.experimental.CoroutineContext$Key)
kotlin.UByteArray: java.util.Iterator iterator()
kotlin.coroutines.CombinedContext: boolean equals(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence windowed(kotlin.sequences.Sequence,int,int,boolean,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClickable(boolean)
kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1: StringsKt___StringsKt$asIterable$$inlined$Iterable$1(java.lang.CharSequence)
com.example.revolut.rates.R$attr: int layout_constraintWidth_max
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_COLUMN_INT
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(boolean[],kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.flowable.FlowableDefer: FlowableDefer(java.util.concurrent.Callable)
io.reactivex.internal.schedulers.ScheduledRunnable
dagger.android.AndroidInjector$Builder: void seedInstance(java.lang.Object)
io.reactivex.internal.schedulers.ImmediateThinScheduler
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List sortedByDescending(java.lang.Iterable,kotlin.jvm.functions.Function1)
io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode: long serialVersionUID
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
androidx.databinding.library.baseAdapters.R$id
io.reactivex.internal.operators.flowable.FlowableMapNotification: void subscribeActual(org.reactivestreams.Subscriber)
okio.Buffer$UnsafeCursor: long offset
androidx.appcompat.R$drawable: int abc_ic_star_black_16dp
kotlinx.coroutines.ScheduledKt: kotlinx.coroutines.TimeoutCancellationException TimeoutCancellationException(long,java.util.concurrent.TimeUnit,kotlinx.coroutines.Job)
io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher)
io.reactivex.internal.observers.EmptyCompletableObserver: long serialVersionUID
kotlin.UShort: int hashCode()
androidx.lifecycle.extensions.R$color: int ripple_material_light
com.example.revolut.rates.viewmodel.CurrenciesViewModel: void setRepository(com.example.revolut.rates.data.repository.CurrenciesRepository)
io.reactivex.android.MainThreadDisposable
kotlinx.coroutines.DefaultExecutor: void run()
io.reactivex.internal.operators.observable.ObservableCache: void onError(java.lang.Throwable)
com.example.revolut.rates.R$string: int abc_searchview_description_voice
com.example.revolut.rates.R$styleable: int ActionBar_title
io.reactivex.Observable: io.reactivex.Observable takeLast(int)
com.jakewharton.rxbinding3.widget.SeekBarChangeEvent: SeekBarChangeEvent(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.R$id: int radio
io.reactivex.internal.subscriptions.ScalarSubscription: boolean offer(java.lang.Object,java.lang.Object)
kotlin.sequences.SequenceScope: java.lang.Object yieldAll(java.lang.Iterable,kotlin.coroutines.Continuation)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator reversed(java.util.Comparator)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5(long[])
androidx.fragment.app.Fragment: void setHasOptionsMenu(boolean)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause
com.jakewharton.rxbinding3.widget.AdapterDataChangeObservable$ObserverDisposable$dataSetObserver$1
androidx.appcompat.view.SupportActionModeWrapper: void setSubtitle(int)
io.reactivex.Flowable: io.reactivex.Flowable onTerminateDetach()
androidx.recyclerview.widget.SortedList: int size()
okhttp3.internal.io.FileSystem
kotlin.collections.ArraysKt___ArraysKt: double reduceRight(double[],kotlin.jvm.functions.Function2)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(int)
androidx.cursoradapter.widget.CursorAdapter: android.content.Context mContext
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcelable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean onStateChange(int[])
io.reactivex.Observable: io.reactivex.Observable switchMap(io.reactivex.functions.Function,int)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
androidx.constraintlayout.solver.SolverVariable: java.lang.String toString()
androidx.core.app.SharedElementCallback
kotlin.text.Typography: char quote
io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)
io.reactivex.Completable: io.reactivex.Completable delaySubscription(long,java.util.concurrent.TimeUnit)
com.jakewharton.rxbinding3.core.R$layout: int notification_template_part_chronometer
androidx.appcompat.view.menu.MenuPopupHelper: void setAnchorView(android.view.View)
com.example.revolut.rates.R$attr: int dialogCornerRadius
android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onAudioInfoChanged(int,int,int,int,int)
androidx.appcompat.widget.ListPopupWindow: void setDropDownAlwaysVisible(boolean)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void validateNode$kotlinx_coroutines_core(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.UShort: int SIZE_BYTES
androidx.appcompat.R$styleable: int FontFamilyFont_android_fontStyle
androidx.appcompat.R$style: int Widget_AppCompat_Spinner
kotlin.text.StringsKt___StringsKt: char random(java.lang.CharSequence,kotlin.random.Random)
com.google.gson.JsonElement: long getAsLong()
dagger.releasablereferences.ForReleasableReferences: java.lang.Class value()
kotlin.collections.ArraysKt___ArraysKt: int sumBy(short[],kotlin.jvm.functions.Function1)
androidx.media.R$layout: int notification_template_big_media
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.appcompat.R$drawable: int notification_bg_normal
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onFocusChanged(boolean,int,android.graphics.Rect)
io.reactivex.Single: io.reactivex.Single ambArray(io.reactivex.SingleSource[])
dagger.android.support.R$style: int AlertDialog_AppCompat_Light
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setPathSegment(int,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(short[])
kotlin.reflect.KParameter: boolean isOptional()
androidx.constraintlayout.widget.R$id: int spread_inside
androidx.databinding.adapters.TableLayoutBindingAdapter: void setCollapseColumns(android.widget.TableLayout,java.lang.CharSequence)
androidx.appcompat.R$styleable: int AppCompatTextView_lineHeight
androidx.core.view.AccessibilityDelegateCompat
dagger.android.support.R$style: int Theme_AppCompat_Light_NoActionBar
androidx.core.content.ContentResolverCompat
androidx.documentfile.R
kotlinx.coroutines.CancellableContinuation: void resumeUndispatchedWithException(kotlinx.coroutines.CoroutineDispatcher,java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean lastOrNull(boolean[],kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: java.lang.Comparable coerceAtMost(java.lang.Comparable,java.lang.Comparable)
io.reactivex.internal.operators.flowable.FlowablePublishClassic
kotlin.jvm.internal.MagicApiIntrinsics: void voidMagicApiCall(int)
androidx.appcompat.R$attr: int colorError
kotlin.collections.BooleanIterator: java.lang.Boolean next()
com.example.revolut.rates.R$style: int CurrencySymbolStyle
kotlinx.coroutines.CancelHandler: CancelHandler()
io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(java.lang.Iterable,io.reactivex.functions.Function)
kotlinx.coroutines.channels.BroadcastChannelKt: kotlinx.coroutines.channels.BroadcastChannel BroadcastChannel(int)
okhttp3.internal.platform.Platform: int WARN
androidx.databinding.ViewStubProxy: android.view.ViewStub getViewStub()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.example.revolut.rates.R$id: int disableHome
androidx.appcompat.R$style: int TextAppearance_AppCompat_Body2
io.reactivex.internal.operators.maybe.MaybeIgnoreElement: void subscribeActual(io.reactivex.MaybeObserver)
okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isMultiLine()
io.reactivex.internal.operators.flowable.FlowableSampleTimed: FlowableSampleTimed(io.reactivex.Flowable,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
kotlin.text.StringsKt___StringsKt$groupingBy$1: java.lang.Object keyOf(java.lang.Object)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintVertical_weight
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: boolean offer(java.lang.Object,java.lang.Object)
androidx.core.widget.CompoundButtonCompat
io.reactivex.internal.operators.completable.CompletableDefer: CompletableDefer(java.util.concurrent.Callable)
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutMainMaybeObserver: long serialVersionUID
androidx.recyclerview.widget.ItemTouchHelper$Callback: int convertToRelativeDirection(int,int)
androidx.appcompat.app.ActionBar: int NAVIGATION_MODE_TABS
kotlin.jvm.internal.Reflection: java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set intersect(java.lang.Iterable,java.lang.Iterable)
androidx.core.view.accessibility.AccessibilityEventCompat: androidx.core.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent)
androidx.core.view.DisplayCutoutCompat: int getSafeInsetTop()
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder bold(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1)
io.reactivex.internal.observers.DisposableLambdaObserver: void dispose()
kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object poll()
com.jakewharton.rxbinding3.widget.RxTextView
kotlin.text.CharCategory: kotlin.text.CharCategory MATH_SYMBOL
okhttp3.Call$Factory
androidx.core.util.LongSparseArrayKt$keyIterator$1: int getIndex()
androidx.appcompat.widget.DropDownListView: boolean isInTouchMode()
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher: void subscribeActual(io.reactivex.MaybeObserver)
kotlin.collections.CollectionsKt___CollectionsKt: double sumByDouble(java.lang.Iterable,kotlin.jvm.functions.Function1)
com.example.revolut.rates.databinding.RatesItemBindingImpl: boolean setVariable(int,java.lang.Object)
kotlin.Experimental$Level: kotlin.Experimental$Level[] values()
androidx.appcompat.view.menu.MenuBuilder: void flagActionItems()
com.example.revolut.rates.view.MainActivity: void isLoading(boolean)
okhttp3.internal.connection.RouteSelector$Selection
dagger.android.support.R$attr: int actionModeSelectAllDrawable
io.reactivex.android.plugins.RxAndroidPlugins: void setMainThreadSchedulerHandler(io.reactivex.functions.Function)
com.example.revolut.rates.R$dimen: int abc_dialog_list_padding_top_no_title
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable mutate()
io.reactivex.Observable: io.reactivex.Maybe singleElement()
androidx.print.PrintHelper
androidx.appcompat.app.ActionBar$TabListener: void onTabReselected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String)
dagger.android.support.R$styleable: int MenuView_android_itemTextAppearance
com.jakewharton.rxbinding3.widget.RxRatingBar: com.jakewharton.rxbinding3.InitialValueObservable ratingChanges(android.widget.RatingBar)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
com.google.gson.JsonSerializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)
androidx.appcompat.R$style: int Platform_V21_AppCompat
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString)
androidx.fragment.app.Fragment: java.lang.Object getHost()
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable
kotlin.ranges.URangesKt___URangesKt: byte coerceIn-b33U2AM(byte,byte,byte)
kotlin.collections.EmptyList: int indexOf(java.lang.Object)
com.example.revolut.rates.R$styleable: int ColorStateListItem_android_color
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(int[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.reactivex.internal.util.BlockingHelper: void verifyNonBlocking()
androidx.appcompat.R$styleable: int GradientColor_android_startColor
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_goneMarginRight
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.RequestBody)
kotlin.collections.AbstractList$Companion: void checkBoundsIndexes$kotlin_stdlib(int,int,int)
androidx.lifecycle.ViewModelProviders$DefaultFactory: ViewModelProviders$DefaultFactory(android.app.Application)
androidx.core.text.ICUCompat: java.lang.String maximizeAndGetScript(java.util.Locale)
com.example.revolut.rates.R$id: int forever
io.reactivex.Maybe: io.reactivex.Maybe retry(long,io.reactivex.functions.Predicate)
kotlin.LazyKt__LazyKt: kotlin.Lazy lazyOf(java.lang.Object)
kotlinx.coroutines.channels.AbstractSendChannel: boolean offer(java.lang.Object)
androidx.fragment.app.FragmentManager: java.util.List getFragments()
okio.Buffer: int readUtf8CodePoint()
io.reactivex.internal.queue.SpscLinkedArrayQueue: boolean isEmpty()
com.jakewharton.rxbinding3.core.R$id: int normal
androidx.appcompat.R$styleable: int CoordinatorLayout_keylines
io.reactivex.Flowable: io.reactivex.Flowable rebatchRequests(int)
com.example.revolut.rates.R$attr: int backgroundTintMode
androidx.viewpager.widget.PagerTabStrip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.reactivex.subscribers.SerializedSubscriber
androidx.databinding.adapters.ViewStubBindingAdapter: ViewStubBindingAdapter()
androidx.appcompat.R$styleable: int ActionBar_popupTheme
androidx.databinding.adapters.DatePickerBindingAdapter: void setListeners(android.widget.DatePicker,int,int,int,android.widget.DatePicker$OnDateChangedListener,androidx.databinding.InverseBindingListener,androidx.databinding.InverseBindingListener,androidx.databinding.InverseBindingListener)
io.reactivex.observers.DisposableMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.R$attr: int dropdownListPreferredItemHeight
androidx.appcompat.widget.ListPopupWindow: int getHeight()
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(short[],int,int)
io.reactivex.internal.observers.FutureObserver: FutureObserver()
io.reactivex.Maybe: io.reactivex.Single toSingle(java.lang.Object)
androidx.appcompat.app.AppCompatActivity
dagger.android.support.R$layout: int notification_action_tombstone
androidx.recyclerview.widget.AsyncListUtil$DataCallback: void recycleData(java.lang.Object[],int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_LONG_CLICK
androidx.core.graphics.PorterDuffKt: android.graphics.PorterDuffXfermode toXfermode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.functions.ObjectHelper: int compare(int,int)
kotlin.collections.ULongIterator: ULongIterator()
androidx.core.app.NotificationCompat: java.lang.String getSortKey(android.app.Notification)
androidx.appcompat.R$dimen: int abc_button_inset_vertical_material
androidx.core.net.ConnectivityManagerCompat: int RESTRICT_BACKGROUND_STATUS_WHITELISTED
dagger.android.support.R$drawable: int notify_panel_notification_icon_bg
com.google.gson.JsonArray: int size()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintStart_toEndOf
io.reactivex.internal.operators.observable.ObservableSingleMaybe
io.reactivex.Maybe: io.reactivex.Flowable flattenAsFlowable(io.reactivex.functions.Function)
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: long serialVersionUID
androidx.appcompat.R$dimen: int tooltip_vertical_padding
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel flatMap(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
kotlin.internal.RequireKotlinVersionKind: kotlin.internal.RequireKotlinVersionKind COMPILER_VERSION
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setFilterBitmap(boolean)
kotlin.text.Typography: char ndash
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadPing(okio.ByteString)
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
kotlin.random.URandomKt: byte[] nextUBytes-Wvrt4B4(kotlin.random.Random,byte[],int,int)
kotlin.text.StringsKt__StringsKt: int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean)
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
androidx.databinding.adapters.CardViewBindingAdapter: CardViewBindingAdapter()
android.support.v4.media.session.MediaSessionCompat: void setShuffleMode(int)
kotlin.reflect.KFunction$DefaultImpls
io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource,int)
com.example.revolut.rates.di.AppComponent: void inject(com.example.revolut.rates.data.repository.CurrenciesRepository)
androidx.core.widget.ContentLoadingProgressBar: ContentLoadingProgressBar(android.content.Context)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object singleOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.maybe.MaybeUsing: MaybeUsing(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(byte[],java.lang.Iterable)
androidx.media.R$layout: int notification_template_part_time
androidx.databinding.ViewDataBinding: void setContainedBinding(androidx.databinding.ViewDataBinding)
okio.BufferedSource: okio.Buffer buffer()
androidx.core.text.TextDirectionHeuristicCompat: boolean isRtl(char[],int,int)
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function5)
androidx.core.content.res.ComplexColorCompat: boolean isGradient()
kotlin.collections.IndexedValue: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(byte[],java.lang.Iterable)
io.reactivex.processors.ReplayProcessor: java.lang.Object[] getValues()
androidx.viewpager.widget.ViewPager: void onSizeChanged(int,int,int,int)
kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred(kotlinx.coroutines.Job)
androidx.core.transition.TransitionKt$addListener$4: TransitionKt$addListener$4()
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_ListView_DropDown
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: java.lang.String toString()
com.example.revolut.rates.R$id: int groups
kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_NUMBER
androidx.core.view.ViewGroupKt: void updateMargins$default(android.view.ViewGroup$MarginLayoutParams,int,int,int,int,int,java.lang.Object)
androidx.appcompat.widget.ScrollingTabContainerView: void onMeasure(int,int)
androidx.lifecycle.extensions.R$dimen: int notification_top_pad
androidx.core.view.InputDeviceCompat: int SOURCE_TRACKBALL
androidx.core.provider.FontRequest: java.util.List getCertificates()
io.reactivex.internal.operators.observable.ObservableInternalHelper: java.util.concurrent.Callable replayCallable(io.reactivex.Observable,int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlinx.coroutines.sync.MutexKt: java.lang.Object withLock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation,int,java.lang.Object)
androidx.appcompat.R$styleable: int Toolbar_popupTheme
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_START
androidx.core.util.AtomicFile: java.io.FileOutputStream startWrite()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.util.List asList-QwZRm1k(long[])
androidx.lifecycle.extensions.R$layout: int notification_template_icon_group
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$singleOrNull$3: ChannelsKt__Channels_commonKt$singleOrNull$3(kotlin.coroutines.Continuation)
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass createKotlinClass(java.lang.Class,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(long[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.reflect.KClass: boolean isCompanion()
io.reactivex.Maybe: io.reactivex.Maybe zipWith(io.reactivex.MaybeSource,io.reactivex.functions.BiFunction)
com.example.revolut.rates.R$style: int Base_AlertDialog_AppCompat_Light
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable autoConnect(int,io.reactivex.functions.Consumer)
kotlinx.coroutines.scheduling.NonBlockingContext: kotlinx.coroutines.scheduling.TaskMode getTaskMode()
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTitle()
kotlin.text.StringsKt___StringsKt: java.util.List map(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
okhttp3.Cookie: java.lang.String value()
androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)
androidx.core.view.ViewCompat: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setTransitionStyle(int)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)
androidx.core.graphics.PathKt: android.graphics.Path plus(android.graphics.Path,android.graphics.Path)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,java.lang.Object)
androidx.drawerlayout.R$id: int time
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.solver.ArrayRow: void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row)
kotlinx.coroutines.EventLoop$Factory
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable hovers$default(android.view.View,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$minus$4: java.util.Iterator iterator()
androidx.constraintlayout.solver.widgets.ConstraintAnchor: void setStrength(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength)
androidx.appcompat.R$attr: int tint
io.reactivex.internal.operators.observable.ObserverResourceWrapper: boolean isDisposed()
io.reactivex.internal.util.NotificationLite$SubscriptionNotification: long serialVersionUID
androidx.fragment.R$styleable: int CoordinatorLayout_keylines
androidx.recyclerview.widget.RecyclerView$LayoutManager: void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect)
androidx.core.ktx.R$styleable: int FontFamilyFont_android_fontWeight
dagger.android.support.R$styleable: int AppCompatTheme_colorPrimaryDark
androidx.appcompat.graphics.drawable.DrawableWrapper: int[] getState()
kotlin.jvm.internal.ClassReference: void isAbstract$annotations()
io.reactivex.internal.operators.flowable.FlowableDistinct: FlowableDistinct(io.reactivex.Flowable,io.reactivex.functions.Function,java.util.concurrent.Callable)
kotlin.jvm.functions.Function18
kotlin.jvm.internal.FunctionReference: boolean isExternal()
androidx.core.view.MotionEventCompat: int AXIS_DISTANCE
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
com.example.revolut.rates.R$integer: int config_tooltipAnimTime
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
io.reactivex.internal.util.ExceptionHelper
androidx.legacy.v4.R$dimen: int notification_large_icon_width
com.example.revolut.rates.R$layout: int abc_cascading_menu_item_layout
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanIndex(int,int)
com.example.revolut.rates.R$style: int Base_Theme_AppCompat
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Display1
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(double[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ActionBarContainer: boolean onHoverEvent(android.view.MotionEvent)
dagger.android.support.R$styleable: int AppCompatTheme_windowActionBar
kotlin.collections.ShortIterator: short nextShort()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)
com.google.gson.annotations.SerializedName
androidx.core.app.NotificationCompat: java.lang.String EXTRA_LARGE_ICON
androidx.customview.R$id: int notification_main_column
androidx.legacy.v4.R$styleable: int FontFamilyFont_fontWeight
dagger.android.support.R$style: int Widget_AppCompat_ButtonBar
io.reactivex.CompletableObserver: void onError(java.lang.Throwable)
com.example.revolut.rates.R$attr: int fontProviderFetchStrategy
com.example.revolut.rates.R$id: int fill_horizontal
androidx.fragment.R$styleable: int CoordinatorLayout_Layout_layout_keyline
io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)
dagger.android.support.R$layout: int abc_search_dropdown_item_icons_2line
kotlin.UShortArray: boolean addAll(java.util.Collection)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedMeasuredHeight(android.view.View)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List optimizeReadOnlyList(java.util.List)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1: CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1(java.lang.Iterable)
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)
okhttp3.internal.http.HttpCodec: void flushRequest()
com.example.revolut.rates.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.example.revolut.rates.R$id: int action_mode_close_button
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float singleOrNull(float[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character max(char[])
io.reactivex.Observable: void blockingSubscribe()
dagger.android.support.R$attr: int listPreferredItemHeight
androidx.constraintlayout.widget.R$id: int gone
dagger.android.support.R$styleable: int AppCompatImageView_tintMode
io.reactivex.internal.operators.flowable.FlowableTakeLast
androidx.databinding.ObservableArrayList: void addOnListChangedCallback(androidx.databinding.ObservableList$OnListChangedCallback)
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()
androidx.swiperefreshlayout.R$dimen
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith(java.lang.String,java.lang.String,boolean)
dagger.android.support.R$styleable: int AlertDialog_singleChoiceItemLayout
androidx.appcompat.R$styleable: int AppCompatTheme_dividerHorizontal
okhttp3.internal.http.HttpMethod: boolean redirectsToGet(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void invalidateSelf()
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainEmitLast: long serialVersionUID
androidx.fragment.R$attr
kotlin.collections.EmptyIterator: java.lang.Object next()
androidx.core.graphics.PictureKt: android.graphics.Picture record(android.graphics.Picture,int,int,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(byte[],int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long min(long[])
androidx.appcompat.R$attr: int actionModeShareDrawable
com.example.revolut.rates.R$styleable: int[] Toolbar
kotlin.text.UStringsKt: java.lang.String toString-JSWoG40(long,int)
io.reactivex.internal.operators.observable.ObservableTimeoutTimed: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_YES
com.example.revolut.rates.R$color: int secondary_text_disabled_material_light
kotlinx.coroutines.EventLoop$DefaultImpls
io.reactivex.Maybe: io.reactivex.Single flatMapSingle(io.reactivex.functions.Function)
kotlin.coroutines.jvm.internal.DebugMetadata: int[] l()
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.recyclerview.R$styleable: int FontFamilyFont_android_font
androidx.core.app.FrameMetricsAggregator: int ANIMATION_DURATION
androidx.media.R$styleable: int GradientColor_android_endX
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: int getArity()
kotlin.text.Regex: java.lang.Object writeReplace()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
okhttp3.internal.http.HttpHeaders: int skipUntil(java.lang.String,int,java.lang.String)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: void value$annotations()
dagger.android.support.R$drawable: int abc_spinner_mtrl_am_alpha
androidx.appcompat.R$drawable: int abc_text_cursor_material
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(long[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.example.revolut.rates.view.adapter.CurrenciesAdapter$CurrenciesViewHolder: CurrenciesAdapter$CurrenciesViewHolder(com.example.revolut.rates.view.adapter.CurrenciesAdapter,android.view.View)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
androidx.vectordrawable.R$attr: int alpha
io.reactivex.internal.subscribers.LambdaSubscriber: boolean isDisposed()
androidx.appcompat.R$attr: int layout_behavior
androidx.recyclerview.R$string
kotlinx.coroutines.CancelHandlerBase: CancelHandlerBase()
androidx.media.R$drawable: int notification_bg
kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull()
androidx.core.os.CancellationSignal: void throwIfCanceled()
androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener: boolean onShareTargetSelected(androidx.appcompat.widget.ShareActionProvider,android.content.Intent)
androidx.fragment.R$dimen: int notification_content_margin_start
androidx.appcompat.R$string: int abc_searchview_description_submit
dagger.android.DaggerService
io.reactivex.internal.operators.observable.ObservableSerialized: ObservableSerialized(io.reactivex.Observable)
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_BOTTOM
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: java.lang.Object foldRight(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
kotlin.ranges.CharProgression: java.lang.String toString()
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$OtherObserver: long serialVersionUID
androidx.legacy.coreui.R$id: int chronometer
androidx.appcompat.widget.LinearLayoutCompat: void onLayout(boolean,int,int,int,int)
com.google.gson.FieldAttributes: java.util.Collection getAnnotations()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
io.reactivex.flowables.ConnectableFlowable
kotlin.jvm.internal.CharCompanionObject: char MIN_SURROGATE
io.reactivex.internal.subscribers.SubscriberResourceWrapper: long serialVersionUID
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: kotlin.UByte get(int)
androidx.appcompat.widget.ButtonBarLayout
androidx.customview.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.versionedparcelable.VersionedParcelize
io.reactivex.internal.operators.single.SingleError
com.example.revolut.rates.R$drawable: int abc_ic_star_black_16dp
io.reactivex.internal.subscribers.FutureSubscriber: java.lang.Object get(long,java.util.concurrent.TimeUnit)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
androidx.core.widget.TextViewCompat: void setFirstBaselineToTopHeight(android.widget.TextView,int)
okhttp3.internal.http.HttpHeaders: okhttp3.Headers varyHeaders(okhttp3.Response)
androidx.coordinatorlayout.R$id: int icon_group
io.reactivex.internal.operators.observable.ObservableSingleMaybe: void subscribeActual(io.reactivex.MaybeObserver)
androidx.core.graphics.PathSegment: boolean equals(java.lang.Object)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOf(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(byte[])
androidx.core.animation.AnimatorKt$doOnRepeat$$inlined$addListener$1: void onAnimationStart(android.animation.Animator)
androidx.slidingpanelayout.R$id: int time
androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])
androidx.fragment.app.FragmentTabHost: void setup(android.content.Context,androidx.fragment.app.FragmentManager)
kotlinx.coroutines.internal.LockFreeLinkedListNode$describeRemove$1
androidx.lifecycle.extensions.R$drawable: int notification_icon_background
androidx.constraintlayout.solver.widgets.Helper: int mWidgetsCount
kotlin.ranges.IntRange: java.lang.Integer getStart()
androidx.appcompat.view.menu.ListMenuItemView: boolean showsIcon()
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.ClosedRange,int)
androidx.appcompat.R$styleable: int FontFamilyFont_android_fontWeight
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setProgress(int,int,boolean)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintVertical_bias
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_WRITER
io.reactivex.internal.operators.completable.CompletableConcat: void subscribeActual(io.reactivex.CompletableObserver)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapTo$3: java.lang.Object invokeSuspend(java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function5)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat
com.jakewharton.rxbinding3.view.MenuItemActionViewExpandEvent: android.view.MenuItem getMenuItem()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: int lastIndexOf(java.lang.Object)
androidx.core.transition.TransitionKt: android.transition.Transition$TransitionListener doOnPause(android.transition.Transition,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.String toString()
androidx.legacy.coreui.R$string
com.jakewharton.rxbinding3.core.R$id: int notification_main_column
io.reactivex.internal.operators.observable.ObservableFilter
androidx.appcompat.widget.SwitchCompat: void drawableStateChanged()
kotlin.jvm.internal.StringCompanionObject
androidx.appcompat.widget.LinearLayoutCompat: void onDraw(android.graphics.Canvas)
dagger.android.support.R$styleable: int AppCompatTextHelper_android_drawableBottom
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
androidx.core.view.NestedScrollingChild
dagger.android.support.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
android.support.v4.media.session.MediaSessionCompat: void sendSessionEvent(java.lang.String,android.os.Bundle)
androidx.appcompat.R$style: int Widget_AppCompat_DrawerArrowToggle
okio.Buffer: okio.BufferedSink writeInt(int)
androidx.appcompat.R$styleable: int[] ViewBackgroundHelper
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(int[])
androidx.appcompat.R$dimen: int abc_disabled_alpha_material_dark
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)
io.reactivex.internal.operators.observable.ObservableInternalHelper: io.reactivex.functions.Function zipIterable(io.reactivex.functions.Function)
okhttp3.MultipartBody$Part: okhttp3.Headers headers()
android.support.v4.media.MediaMetadataCompat$Builder: android.support.v4.media.MediaMetadataCompat$Builder putString(java.lang.String,java.lang.String)
androidx.recyclerview.widget.ItemTouchHelper: void onChildViewAttachedToWindow(android.view.View)
androidx.appcompat.R$attr: int overlapAnchor
androidx.core.os.LocaleListCompat: java.util.Locale get(int)
com.google.gson.JsonSerializationContext
dagger.android.DaggerFragment_MembersInjector
com.jakewharton.rxbinding3.widget.AdapterViewItemSelectionEvent: java.lang.String toString()
androidx.vectordrawable.R$attr: int layout_insetEdge
io.reactivex.MaybeOperator
androidx.lifecycle.extensions.R$id: int right_side
io.reactivex.functions.Function
androidx.appcompat.view.menu.ListMenuPresenter: java.lang.String VIEWS_TAG
androidx.recyclerview.R$dimen: int notification_content_margin_start
androidx.appcompat.app.WindowDecorActionBar$TabImpl: void setPosition(int)
androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setText(int)
androidx.viewpager.widget.ViewPager$OnPageChangeListener
dagger.android.support.R$styleable: int Toolbar_android_minHeight
kotlin.jvm.internal.FunctionReference: boolean isOperator()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$elementAtOrElse$1
io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.example.revolut.rates.R$attr: int textAllCaps
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
kotlin.text.CharCategory: java.lang.String getCode()
kotlinx.coroutines.Deferred$DefaultImpls
kotlinx.coroutines.EventLoopKt: kotlinx.coroutines.EventLoop EventLoop$default(java.lang.Thread,kotlinx.coroutines.Job,int,java.lang.Object)
androidx.appcompat.R$styleable: int SwitchCompat_track
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isItemChanged()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateByTo$3: java.lang.Object invokeSuspend(java.lang.Object)
io.reactivex.CompletableObserver
kotlin.text.StringsKt__StringsJVMKt: java.lang.String capitalize(java.lang.String)
dagger.android.support.R$attr: int buttonGravity
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxWith(double[],java.util.Comparator)
com.example.revolut.rates.R$style: int Platform_V25_AppCompat
androidx.fragment.R$styleable: int[] CoordinatorLayout_Layout
io.reactivex.internal.operators.single.SingleSubscribeOn: SingleSubscribeOn(io.reactivex.SingleSource,io.reactivex.Scheduler)
com.example.revolut.rates.R$dimen: int abc_button_padding_horizontal_material
kotlinx.coroutines.internal.ThreadSafeHeap: void addLast(kotlinx.coroutines.internal.ThreadSafeHeapNode)
androidx.constraintlayout.widget.ConstraintSet: void addToHorizontalChain(int,int,int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isInHorizontalChain()
androidx.core.graphics.ColorKt: float component1(android.graphics.Color)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
androidx.appcompat.R$layout: int abc_activity_chooser_view
androidx.media.MediaBrowserProtocol: int CLIENT_MSG_UNREGISTER_CALLBACK_MESSENGER
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode getOriginalNext()
androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)
androidx.appcompat.R$styleable: int SearchView_android_maxWidth
androidx.core.widget.ScrollerCompat: boolean springBack(int,int,int,int,int,int)
androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)
io.reactivex.internal.operators.flowable.FlowableFromIterable: FlowableFromIterable(java.lang.Iterable)
kotlinx.coroutines.ThreadPoolDispatcher: java.lang.String access$getName$p(kotlinx.coroutines.ThreadPoolDispatcher)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_256_GCM_SHA384
androidx.appcompat.R$attr: int listLayout
androidx.constraintlayout.solver.widgets.ConstraintWidget: void updateDrawPosition()
androidx.swiperefreshlayout.R$id: int notification_main_column
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup
dagger.android.support.R$styleable: int SearchView_submitBackground
kotlin.collections.TypeAliasesKt: void LinkedHashMap$annotations()
androidx.core.view.ViewCompat: int LAYOUT_DIRECTION_RTL
okio.BufferedSource: void readFully(byte[])
io.reactivex.internal.observers.QueueDrainObserver: boolean cancelled
androidx.legacy.coreutils.R$id: int italic
androidx.viewpager.widget.ViewPager: int getCurrentItem()
com.jakewharton.rxbinding3.widget.SeekBarStopChangeEvent: SeekBarStopChangeEvent(android.widget.SeekBar)
okio.BufferedSink: okio.BufferedSink writeShortLe(int)
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int SELECTION_MODE_NONE
androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$1: TransitionKt$doOnStart$$inlined$addListener$1(kotlin.jvm.functions.Function1)
kotlinx.coroutines.DefaultTimeSource: java.lang.Runnable trackTask(java.lang.Runnable)
okhttp3.CertificatePinner: int hashCode()
kotlinx.coroutines.CoroutineExceptionHandler
kotlin.coroutines.jvm.internal.SuspendFunction
io.reactivex.internal.operators.completable.CompletableDelay
androidx.collection.CircularArray: CircularArray(int)
io.reactivex.internal.subscribers.ForEachWhileSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionView(int)
androidx.fragment.app.FragmentManagerState
androidx.appcompat.R$layout: int abc_list_menu_item_layout
androidx.core.app.NotificationCompat$WearableExtender: android.graphics.Bitmap getBackground()
android.support.v4.media.MediaDescriptionCompat: java.lang.String getMediaId()
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: int getRecycledViewCount(int)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Button
androidx.vectordrawable.R$attr: int fontProviderFetchStrategy
dagger.android.support.R$drawable: int notification_bg_low_normal
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: GridLayoutManager$SpanSizeLookup()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
kotlin.ranges.IntProgression$Companion: kotlin.ranges.IntProgression fromClosedRange(int,int,int)
io.reactivex.SingleConverter
dagger.android.DaggerDialogFragment: void onAttach(android.content.Context)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_maxHeight
kotlin.properties.ReadWriteProperty: void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableRetryPredicate
io.reactivex.internal.functions.Functions: java.util.concurrent.Callable createHashSet()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: MenuPopupWindow$MenuDropDownListView(android.content.Context,boolean)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int circleConstraint
androidx.media.R$attr: int alpha
kotlin.jvm.internal.markers.KMutableCollection
io.reactivex.Flowable: io.reactivex.Flowable observeOn(io.reactivex.Scheduler,boolean)
com.example.revolut.rates.R$style: int CurrencyValueStyle
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toSet(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(char[],java.util.Collection,kotlin.jvm.functions.Function2)
com.example.revolut.rates.view.adapter.CurrenciesAdapter: java.util.ArrayList access$getCurrenciesList$p(com.example.revolut.rates.view.adapter.CurrenciesAdapter)
kotlinx.coroutines.CoroutineScope
kotlin.jvm.internal.IntCompanionObject: int SIZE_BYTES
io.reactivex.Single: io.reactivex.Single retry(io.reactivex.functions.Predicate)
androidx.fragment.R$styleable: int GradientColor_android_endColor
androidx.fragment.R$color
kotlin.UnsignedKt
kotlin.collections.ArraysKt___ArraysKt: boolean all(byte[],kotlin.jvm.functions.Function1)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: void resetSolverVariable(androidx.constraintlayout.solver.Cache)
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainEmitLast: long serialVersionUID
kotlin.UInt: kotlin.UInt$Companion Companion
com.example.revolut.rates.R$styleable: int[] ConstraintLayout_placeholder
io.reactivex.processors.MulticastProcessor: void startUnbounded()
com.jakewharton.rxbinding3.widget.TextViewEditorActionEvent: int getActionId()
com.example.revolut.rates.R$attr: int buttonStyleSmall
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode getAffectedNode()
androidx.core.util.LruCacheKt$lruCache$3: void invoke(boolean,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.graphics.TypefaceCompatApi28Impl
androidx.recyclerview.widget.ItemTouchHelper: void startDrag(androidx.recyclerview.widget.RecyclerView$ViewHolder)
kotlin.reflect.KMutableProperty$Setter
androidx.constraintlayout.widget.ConstraintSet: int INVISIBLE
androidx.constraintlayout.solver.widgets.ConstraintWidget: void updateFromSolver(androidx.constraintlayout.solver.LinearSystem)
io.reactivex.internal.operators.flowable.FlowableMaterialize
androidx.core.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification_Time
okhttp3.internal.http.HttpMethod: boolean invalidatesCache(java.lang.String)
kotlin.jvm.functions.Function3
androidx.core.animation.AnimatorKt$addListener$2: void invoke(android.animation.Animator)
com.jakewharton.rxbinding3.internal.AlwaysTrue: java.lang.Object invoke(java.lang.Object)
okhttp3.Route
kotlinx.coroutines.channels.Channel$Factory
androidx.lifecycle.extensions.R$dimen: int notification_right_side_padding_top
com.jakewharton.rxbinding3.InitialValueObservable
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler onComputationScheduler(io.reactivex.Scheduler)
kotlin.ranges.UIntRange: int hashCode()
androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
kotlinx.coroutines.channels.ProducerJob$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.channels.ProducerJob,kotlin.coroutines.CoroutineContext$Key)
androidx.constraintlayout.solver.SolverVariable: int STRENGTH_NONE
androidx.recyclerview.widget.StaggeredGridLayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
kotlin.sequences.DropSequence$iterator$1: void setLeft(int)
androidx.databinding.ObservableArrayList: void removeRange(int,int)
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation)
io.reactivex.internal.operators.maybe.MaybeToSingle: MaybeToSingle(io.reactivex.MaybeSource,java.lang.Object)
okhttp3.Address: java.net.Proxy proxy()
kotlinx.coroutines.internal.LockFreeLinkedListNode$describeRemove$1: java.lang.Object failure(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object)
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertError(io.reactivex.functions.Predicate)
androidx.media.AudioAttributesCompat: int CONTENT_TYPE_MOVIE
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4
io.reactivex.plugins.RxJavaPlugins: io.reactivex.CompletableObserver onSubscribe(io.reactivex.Completable,io.reactivex.CompletableObserver)
androidx.constraintlayout.widget.Constraints: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
kotlinx.coroutines.JobSupport: void continueCompleting$kotlinx_coroutines_core(kotlinx.coroutines.ChildJob,java.lang.Object)
androidx.core.util.SparseArrayKt$keyIterator$1: boolean hasNext()
kotlin.collections.ArraysKt___ArraysKt: void reverse(int[])
kotlinx.coroutines.Deferred$DefaultImpls: boolean isComputing(kotlinx.coroutines.Deferred)
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: LockFreeLinkedListNode$RemoveFirstDesc(kotlinx.coroutines.internal.LockFreeLinkedListNode)
dagger.android.support.R$id: int text2
androidx.versionedparcelable.VersionedParcel: void writeDoubleArray(double[])
androidx.loader.content.CursorLoader: android.database.Cursor loadInBackground()
androidx.viewpager.widget.ViewPager: void clearOnPageChangeListeners()
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()
kotlin.text.RegexKt: kotlin.text.MatchResult access$findNext(java.util.regex.Matcher,int,java.lang.CharSequence)
androidx.core.content.res.ComplexColorCompat: boolean onStateChanged(int[])
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertValuesOnly(java.lang.Object[])
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
io.reactivex.internal.subscribers.BlockingSubscriber: void cancel()
io.reactivex.Flowable: io.reactivex.Flowable distinctUntilChanged()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_MEDIUM
io.reactivex.Flowable: io.reactivex.Flowable merge(java.lang.Iterable,int,int)
androidx.core.app.ActivityCompat: void finishAfterTransition(android.app.Activity)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8(boolean[])
androidx.appcompat.graphics.drawable.DrawableContainer: void setTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat: void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)
okhttp3.internal.http2.Http2
androidx.core.ktx.R$layout: int notification_template_icon_group
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(char[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int lookForSelectablePosition(int,boolean)
androidx.appcompat.graphics.drawable.DrawableContainer: void setAlpha(int)
io.reactivex.internal.operators.maybe.MaybePeek: MaybePeek(io.reactivex.MaybeSource,io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Action,io.reactivex.functions.Action)
com.example.revolut.rates.R$styleable: int StateListDrawable_android_visible
io.reactivex.Maybe: io.reactivex.Maybe fromAction(io.reactivex.functions.Action)
io.reactivex.processors.AsyncProcessor: void onError(java.lang.Throwable)
androidx.coordinatorlayout.R$color: int secondary_text_default_material_light
kotlin.collections.CollectionsKt___CollectionsKt: int lastIndexOf(java.lang.Iterable,java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.functions.Function,int,io.reactivex.ObservableSource[])
androidx.appcompat.widget.TintTypedArray: java.lang.String getString(int)
androidx.constraintlayout.widget.R$attr: int layout_goneMarginBottom
androidx.appcompat.R$styleable: int Spinner_android_entries
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
io.reactivex.annotations.SchedulerSupport: java.lang.String COMPUTATION
androidx.vectordrawable.R$color: int ripple_material_light
androidx.loader.R$layout: int notification_template_part_time
androidx.core.view.ViewGroupCompat: int getLayoutMode(android.view.ViewGroup)
androidx.core.app.NotificationCompat: int GROUP_ALERT_CHILDREN
androidx.legacy.coreui.R$styleable: int GradientColor_android_gradientRadius
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.databinding.adapters.ViewBindingAdapter$OnViewDetachedFromWindow
androidx.constraintlayout.solver.SolverVariable: int STRENGTH_HIGH
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitle(java.lang.CharSequence)
androidx.appcompat.view.menu.MenuItemImpl: boolean showsTextAsAction()
io.reactivex.observers.BaseTestConsumer: boolean checkSubscriptionOnce
io.reactivex.internal.operators.flowable.FlowableToListSingle: FlowableToListSingle(io.reactivex.Flowable,java.util.concurrent.Callable)
androidx.legacy.coreutils.R$layout: int notification_action_tombstone
io.reactivex.observers.DisposableCompletableObserver: void dispose()
androidx.appcompat.R$style: int Platform_AppCompat
androidx.core.view.accessibility.AccessibilityRecordCompat: void setBeforeText(java.lang.CharSequence)
androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)
okhttp3.Headers: java.lang.String get(java.lang.String)
androidx.loader.content.Loader$OnLoadCompleteListener: void onLoadComplete(androidx.loader.content.Loader,java.lang.Object)
androidx.core.R$string
com.google.gson.internal.Primitives: boolean isWrapperType(java.lang.reflect.Type)
kotlinx.coroutines.selects.SelectBuilder: void invoke(kotlinx.coroutines.selects.SelectClause2,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void getOutline(android.graphics.Outline)
androidx.appcompat.view.menu.SubMenuBuilder: SubMenuBuilder(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
androidx.appcompat.widget.DropDownListView: boolean onHoverEvent(android.view.MotionEvent)
androidx.appcompat.R$styleable: int StateListDrawable_android_exitFadeDuration
androidx.swiperefreshlayout.R$id: int normal
androidx.recyclerview.widget.SortedList: java.lang.Object removeItemAt(int)
kotlin.coroutines.jvm.internal.DebugMetadataKt: java.lang.StackTraceElement getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
okio.GzipSource: long read(okio.Buffer,long)
androidx.core.widget.NestedScrollView: boolean onNestedFling(android.view.View,float,float,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte singleOrNull(byte[],kotlin.jvm.functions.Function1)
kotlin.text.CharsKt__CharKt: CharsKt__CharKt()
kotlin.jvm.internal.MutablePropertyReference
kotlinx.coroutines.BuildersKt: java.lang.Object withContext$default(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,int,java.lang.Object)
androidx.appcompat.widget.TooltipCompat
io.reactivex.subscribers.TestSubscriber: io.reactivex.subscribers.TestSubscriber create()
com.example.revolut.rates.R$id: int line1
dagger.android.support.R$styleable: int[] SearchView
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterNotTo$1
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder name(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableSingleSingle: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.maybe.MaybeIsEmptySingle: void subscribeActual(io.reactivex.SingleObserver)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence distinct(kotlin.sequences.Sequence)
androidx.media.R$styleable: int GradientColor_android_centerColor
kotlin.UIntArray: boolean add(java.lang.Object)
androidx.databinding.adapters.TextViewBindingAdapter: void setMaxLength(android.widget.TextView,int)
kotlin.TypeAliasesKt: void ConcurrentModificationException$annotations()
androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int)
androidx.slidingpanelayout.R$style
kotlin.io.FilesKt__UtilsKt: FilesKt__UtilsKt()
com.example.revolut.rates.R$dimen: int abc_text_size_title_material
dagger.Subcomponent$Builder
androidx.swiperefreshlayout.R$attr: int fontVariationSettings
com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent: AbsListViewScrollEvent(android.widget.AbsListView,int,int,int,int)
com.example.revolut.rates.R$styleable: int GradientColor_android_gradientRadius
androidx.fragment.app.Fragment: void onPictureInPictureModeChanged(boolean)
io.reactivex.internal.operators.flowable.FlowableDelay
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean isInTouchMode()
androidx.media.R$dimen: int notification_main_column_padding_top
androidx.core.view.ViewKt: void setVisible(android.view.View,boolean)
androidx.core.ktx.R$styleable: int ColorStateListItem_android_alpha
androidx.legacy.v4.R$id: int media_actions
androidx.appcompat.app.ActionBar: void setWindowTitle(java.lang.CharSequence)
androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getBeforeText()
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable: void subscribeActual(io.reactivex.CompletableObserver)
androidx.legacy.coreui.R$attr: int ttcIndex
kotlin.sequences.SequencesKt___SequencesKt: int sumOfInt(kotlin.sequences.Sequence)
kotlin.collections.EmptyList: boolean containsAll(java.util.Collection)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.util.Map,java.util.Map)
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationCancel(android.view.View)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainAll(java.util.List,kotlin.jvm.functions.Function1)
androidx.legacy.coreui.R$id: int left
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
androidx.databinding.adapters.SearchViewBindingAdapter$OnSuggestionSelect
androidx.recyclerview.R$id: int text2
androidx.fragment.app.FragmentController: void dispatchOptionsMenuClosed(android.view.Menu)
com.example.revolut.rates.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
androidx.appcompat.R$id: int icon
androidx.legacy.coreui.R$styleable: int[] FontFamilyFont
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Iterable onEach(java.lang.Iterable,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionBarTabBarStyle
kotlin.reflect.KClass: java.lang.String getQualifiedName()
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence)
androidx.lifecycle.Lifecycle
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setPriority(int)
io.reactivex.internal.operators.observable.ObservableRetryWhen
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(float[],java.lang.Object[],kotlin.jvm.functions.Function2)
dagger.android.support.R$dimen: int abc_action_bar_default_padding_start_material
com.example.revolut.rates.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor getExecutor()
kotlin.collections.MapsKt___MapsKt: boolean any(java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.util.SparseIntArrayKt: kotlin.collections.IntIterator valueIterator(android.util.SparseIntArray)
androidx.media.R$styleable: int FontFamily_fontProviderFetchTimeout
com.example.revolut.rates.viewmodel.CurrenciesViewModel: com.example.revolut.rates.data.repository.CurrenciesRepository repository
io.reactivex.observers.TestObserver: boolean isDisposed()
kotlinx.coroutines.scheduling.WorkQueue$pollExternal$1: kotlinx.coroutines.scheduling.WorkQueue$pollExternal$1 INSTANCE
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean addChildrenToSolver(androidx.constraintlayout.solver.LinearSystem)
kotlin.ranges.ULongRange: boolean equals(java.lang.Object)
androidx.coordinatorlayout.R$dimen: int compat_button_inset_vertical_material
io.reactivex.Observable: io.reactivex.Observable combineLatest(java.lang.Iterable,io.reactivex.functions.Function,int)
android.support.v4.media.MediaMetadataCompat: int size()
kotlinx.coroutines.CoroutineStart$WhenMappings: int[] $EnumSwitchMapping$0
okhttp3.WebSocket: boolean send(okio.ByteString)
androidx.appcompat.R$styleable: int ActionBar_homeAsUpIndicator
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener: void onDrawerSlide(android.view.View,float)
androidx.recyclerview.widget.RecyclerView: long getChildItemId(android.view.View)
androidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)
io.reactivex.internal.util.QueueDrain: boolean done()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(short[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BroadcastChannel: kotlinx.coroutines.channels.SubscriptionReceiveChannel openSubscription()
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn: void subscribeActual(io.reactivex.Observer)
okio.Buffer: okio.Buffer readFrom(java.io.InputStream)
androidx.coordinatorlayout.R$dimen: int notification_media_narrow_margin
io.reactivex.Observable: io.reactivex.Observable doOnTerminate(io.reactivex.functions.Action)
androidx.recyclerview.widget.LinearLayoutManager: void onRestoreInstanceState(android.os.Parcelable)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context,int)
com.google.gson.JsonElement: float getAsFloat()
kotlin.jvm.internal.MagicApiIntrinsics: java.lang.Object anyMagicApiCall(java.lang.Object)
com.example.revolut.rates.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int)
androidx.media.VolumeProviderCompat$Callback: void onVolumeChanged(androidx.media.VolumeProviderCompat)
com.example.revolut.rates.BuildConfig: int VERSION_CODE
kotlin.collections.CollectionsKt__IteratorsJVMKt: CollectionsKt__IteratorsJVMKt()
okhttp3.internal.connection.RealConnection: void onStream(okhttp3.internal.http2.Http2Stream)
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence getInProgressLabel()
kotlin.coroutines.experimental.CombinedContext: kotlin.coroutines.experimental.CoroutineContext$Element get(kotlin.coroutines.experimental.CoroutineContext$Key)
androidx.slidingpanelayout.R$styleable: int GradientColor_android_centerX
io.reactivex.internal.operators.maybe.MaybeZipIterable: MaybeZipIterable(java.lang.Iterable,io.reactivex.functions.Function)
com.example.revolut.rates.R$id: int list_item
kotlin.collections.ArraysKt___ArraysKt: int sumBy(long[],kotlin.jvm.functions.Function1)
io.reactivex.internal.observers.BiConsumerSingleObserver
androidx.customview.widget.ExploreByTouchHelper: int HOST_ID
dagger.android.DaggerApplication_MembersInjector
androidx.vectordrawable.R$color: int secondary_text_default_material_light
androidx.coordinatorlayout.R$color: int ripple_material_light
androidx.legacy.v4.R$id: int icon_group
com.example.revolut.rates.R$color: int dim_foreground_material_dark
androidx.constraintlayout.solver.widgets.ConstraintAnchor: void setGoneMargin(int)
androidx.appcompat.view.menu.SubMenuBuilder: boolean isGroupDividerEnabled()
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintCircleRadius
androidx.appcompat.view.menu.SubMenuBuilder: void setGroupDividerEnabled(boolean)
kotlinx.coroutines.TimeoutCancellationException
com.example.revolut.rates.R$color: int primary_text_disabled_material_light
android.support.v4.media.RatingCompat: int RATING_4_STARS
io.reactivex.internal.fuseable.HasUpstreamCompletableSource
com.example.revolut.rates.R$styleable: int Toolbar_logo
kotlinx.coroutines.CompletableDeferred$DefaultImpls
io.reactivex.observers.DisposableCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.appcompat.app.AlertController$AlertParams: boolean mIsMultiChoice
androidx.appcompat.R$styleable: int SwitchCompat_switchMinWidth
kotlinx.coroutines.channels.ConflatedBroadcastChannel: void access$registerSelectSend(kotlinx.coroutines.channels.ConflatedBroadcastChannel,kotlinx.coroutines.selects.SelectInstance,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.constraintlayout.widget.ConstraintSet: void centerHorizontally(int,int,int,int,int,int,int,float)
io.reactivex.plugins.RxJavaPlugins
androidx.constraintlayout.widget.ConstraintSet: void connect(int,int,int,int)
androidx.core.view.ViewKt: android.graphics.Bitmap drawToBitmap$default(android.view.View,android.graphics.Bitmap$Config,int,java.lang.Object)
kotlin.text.UStringsKt: kotlin.UByte toUByteOrNull(java.lang.String,int)
okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors()
io.reactivex.internal.observers.EmptyCompletableObserver: void onError(java.lang.Throwable)
kotlinx.coroutines.channels.AbstractChannel: java.lang.Object receive(kotlin.coroutines.Continuation)
androidx.loader.R$dimen: int notification_top_pad
androidx.core.ktx.R$styleable: int FontFamily_fontProviderFetchStrategy
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(int[],int)
kotlin.text.MatcherMatchResult$groupValues$1: int indexOf(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer: void onBoundsChange(android.graphics.Rect)
kotlin.io.AccessDeniedException: AccessDeniedException(java.io.File,java.io.File,java.lang.String)
io.reactivex.internal.operators.single.SingleDoOnSuccess
androidx.recyclerview.widget.RecyclerView: void onLayout(boolean,int,int,int,int)
io.reactivex.internal.observers.LambdaObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber: long serialVersionUID
io.reactivex.internal.subscribers.LambdaSubscriber: void dispose()
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
androidx.appcompat.app.AppCompatDialog: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
kotlin.sequences.TakeSequence$iterator$1: void setLeft(int)
androidx.constraintlayout.widget.Placeholder: void onDraw(android.graphics.Canvas)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedScroll(android.view.View,int,int,int,int,int)
androidx.core.app.ShareCompat$IntentReader: int getStreamCount()
com.example.revolut.rates.R$attr: int layout_constraintLeft_creator
kotlin.text.CharsKt__CharJVMKt: int digitOf(char,int)
dagger.android.DaggerActivity_MembersInjector: void injectFragmentInjector(dagger.android.DaggerActivity,dagger.android.DispatchingAndroidInjector)
androidx.swiperefreshlayout.R$style: int TextAppearance_Compat_Notification_Info
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy MISSING
androidx.core.animation.AnimatorKt$addPauseListener$1: void invoke(android.animation.Animator)
io.reactivex.internal.operators.maybe.MaybeToFlowable: MaybeToFlowable(io.reactivex.MaybeSource)
dagger.android.support.R$styleable: int View_android_focusable
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)
io.reactivex.CompletableEmitter: void onError(java.lang.Throwable)
io.reactivex.Observable: io.reactivex.Single sequenceEqual(io.reactivex.ObservableSource,io.reactivex.ObservableSource)
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_RECOMMENDATION
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(char[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isSelected()
kotlin.reflect.KVariance: kotlin.reflect.KVariance valueOf(java.lang.String)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.google.gson.JsonPrimitive: boolean isNumber()
androidx.appcompat.R$color: int foreground_material_dark
androidx.coordinatorlayout.R$id: int icon
androidx.viewpager.R$styleable: int GradientColor_android_centerX
dagger.android.support.R$styleable: int[] LinearLayoutCompat
com.example.revolut.rates.R$color: int abc_search_url_text_normal
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(float[],kotlin.jvm.functions.Function1)
okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String,int,int)
androidx.core.ktx.R$styleable: int FontFamily_fontProviderCerts
android.support.v4.media.session.MediaControllerCompat$TransportControls: void prepare()
io.reactivex.processors.FlowableProcessor: boolean hasComplete()
androidx.core.view.MenuItemCompat$OnActionExpandListener: boolean onMenuItemActionCollapse(android.view.MenuItem)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertValueSetOnly(java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(char[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast: void subscribeActual(org.reactivestreams.Subscriber)
androidx.constraintlayout.solver.widgets.Guideline: void cyclePosition()
androidx.appcompat.R$drawable: int notification_bg_low_normal
okio.HashingSink: okio.ByteString hash()
androidx.appcompat.view.ActionBarPolicy: int getMaxActionButtons()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspotBounds(int,int,int,int)
dagger.android.support.R$dimen: int abc_dialog_min_width_minor
androidx.annotation.IntRange: long to()
com.google.gson.JsonElement: java.math.BigDecimal getAsBigDecimal()
androidx.constraintlayout.solver.Metrics: long additionalMeasures
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter LONG
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPackageName(java.lang.CharSequence)
dagger.android.DaggerService: DaggerService()
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1)
com.jakewharton.rxbinding3.widget.RatingBarChangeEvent: com.jakewharton.rxbinding3.widget.RatingBarChangeEvent copy(android.widget.RatingBar,float,boolean)
dagger.android.support.R$string: int abc_action_bar_home_description
kotlin.UShortArray: int getSize()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)
androidx.core.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence)
com.example.revolut.rates.R$styleable: int AppCompatTheme_colorPrimary
androidx.appcompat.widget.PopupMenu: PopupMenu(android.content.Context,android.view.View)
androidx.core.provider.FontRequest: FontRequest(java.lang.String,java.lang.String,java.lang.String,int)
androidx.loader.content.AsyncTaskLoader: boolean onCancelLoad()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setChecked(boolean)
io.reactivex.internal.operators.single.SingleLift
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy DROP
io.reactivex.Maybe: io.reactivex.Flowable concatWith(io.reactivex.MaybeSource)
androidx.recyclerview.widget.RecyclerView: int NO_POSITION
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
okhttp3.CacheControl: boolean immutable()
io.reactivex.observers.ResourceCompletableObserver: void dispose()
androidx.loader.content.CursorLoader: void setSelectionArgs(java.lang.String[])
dagger.android.support.R$id: int showTitle
kotlin.coroutines.jvm.internal.Boxing: java.lang.Integer boxInt(int)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
kotlinx.coroutines.ExceptionsKt: void addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable)
kotlin.text.StringsKt__StringsKt: java.lang.String padEnd$default(java.lang.String,int,char,int,java.lang.Object)
androidx.databinding.InverseBindingMethod: java.lang.String method()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List reversed-GBYM_sE(byte[])
androidx.appcompat.widget.ActionBarContextView: void killMode()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.lang.Iterable,java.lang.Iterable)
androidx.core.view.KeyEventDispatcher: boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)
androidx.lifecycle.extensions.R$attr: int ttcIndex
io.reactivex.processors.AsyncProcessor: boolean hasThrowable()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: int indexOf(float)
kotlin.jvm.internal.Ref$CharRef
com.jakewharton.rxbinding3.widget.RatingBarChangeEvent: boolean equals(java.lang.Object)
androidx.core.content.pm.ShortcutInfoCompat: java.lang.CharSequence getDisabledMessage()
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
okhttp3.internal.ws.RealWebSocket: void onReadPong(okio.ByteString)
com.google.gson.internal.LinkedTreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)
io.reactivex.internal.schedulers.NewThreadScheduler: io.reactivex.Scheduler$Worker createWorker()
androidx.loader.R$style: int TextAppearance_Compat_Notification_Line2
androidx.viewpager.widget.ViewPager: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
kotlinx.coroutines.channels.TickerMode: kotlinx.coroutines.channels.TickerMode valueOf(java.lang.String)
androidx.appcompat.R$drawable: int abc_seekbar_track_material
androidx.lifecycle.extensions.R$styleable: int FontFamilyFont_android_ttcIndex
kotlin.jvm.internal.SpreadBuilder: SpreadBuilder(int)
kotlin.jvm.internal.Intrinsics: void checkFieldIsNotNull(java.lang.Object,java.lang.String,java.lang.String)
androidx.appcompat.graphics.drawable.DrawableWrapper: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.appcompat.view.ContextThemeWrapper: void attachBaseContext(android.content.Context)
io.reactivex.internal.operators.maybe.MaybeEqualSingle: MaybeEqualSingle(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.BiPredicate)
androidx.constraintlayout.solver.Metrics: long matchConnectionResolved
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
com.example.revolut.rates.R$attr: int layout_keyline
androidx.core.graphics.PathParser: boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
com.example.revolut.rates.R$drawable: int icon_thb
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl getExpandedItem()
com.google.gson.JsonArray: double getAsDouble()
com.example.revolut.rates.R$styleable: int AppCompatTheme_activityChooserViewStyle
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
io.reactivex.internal.operators.observable.ObservableTakeUntil
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trimEnd(java.lang.CharSequence,kotlin.jvm.functions.Function1)
com.jakewharton.rxbinding3.widget.AdapterViewItemLongClickEvent: android.widget.AdapterView component1()
io.reactivex.internal.operators.maybe.MaybeOnErrorReturn: void subscribeActual(io.reactivex.MaybeObserver)
kotlin.collections.UCollectionsKt___UCollectionsKt: byte[] toUByteArray(java.util.Collection)
com.google.gson.internal.$Gson$Types: java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object groupByTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: java.lang.Comparable maxOf(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)
dagger.android.support.R$id: int split_action_bar
androidx.appcompat.app.AppCompatDialog: void onStop()
androidx.constraintlayout.widget.R$attr: int layout_constraintLeft_creator
io.reactivex.internal.observers.FutureObserver: boolean isDisposed()
io.reactivex.subjects.MaybeSubject: boolean hasThrowable()
dagger.android.support.R$styleable: int[] ButtonBarLayout
io.reactivex.internal.schedulers.SchedulerPoolFactory: void shutdown()
com.jakewharton.rxbinding3.core.R$styleable: int GradientColor_android_endX
androidx.swiperefreshlayout.R$dimen: int notification_action_text_size
io.reactivex.internal.queue.SpscLinkedArrayQueue
okio.Buffer: okio.Buffer writeShortLe(int)
androidx.drawerlayout.R$dimen: int notification_large_icon_height
dagger.android.support.R$attr: int subtitleTextAppearance
okhttp3.internal.Util: java.util.Comparator NATURAL_ORDER
io.reactivex.internal.operators.flowable.FlowableRetryWhen
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy: FlowableOnBackpressureBufferStrategy(io.reactivex.Flowable,long,io.reactivex.functions.Action,io.reactivex.BackpressureOverflowStrategy)
androidx.core.view.ViewCompat: float getAlpha(android.view.View)
androidx.appcompat.R$drawable: int tooltip_frame_dark
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int bottom
dagger.android.support.DaggerFragment_MembersInjector: DaggerFragment_MembersInjector(javax.inject.Provider)
androidx.core.util.ObjectsCompat
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe: MaybeTimeoutMaybe(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)
kotlin.collections.ArraysKt___ArraysKt: short single(short[])
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2: ComparisonsKt__ComparisonsKt$thenBy$2(java.util.Comparator,java.util.Comparator,kotlin.jvm.functions.Function1)
io.reactivex.internal.subscribers.QueueDrainSubscriber: long requested()
androidx.databinding.ViewDataBinding: boolean getFromList(android.util.SparseBooleanArray,int)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink)
io.reactivex.internal.observers.InnerQueuedObserverSupport: void innerComplete(io.reactivex.internal.observers.InnerQueuedObserver)
com.example.revolut.rates.R$styleable: int AppCompatTheme_textAppearanceListItem
com.example.revolut.rates.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
androidx.viewpager.R$drawable
androidx.coordinatorlayout.R$id: int normal
androidx.legacy.coreutils.R$id: int notification_main_column
androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener: void onChildViewDetachedFromWindow(android.view.View)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: CoordinatorLayout$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
androidx.appcompat.R$style: int Theme_AppCompat_Light_Dialog_Alert
kotlinx.coroutines.CommonPool: void usePrivatePool$kotlinx_coroutines_core()
androidx.annotation.DimenRes
androidx.legacy.coreutils.R$id: int async
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_DOWNLOAD_STATUS
kotlinx.coroutines.channels.ArrayBroadcastChannel: boolean cancel(java.lang.Throwable)
androidx.media.MediaSessionManager$RemoteUserInfo: int getPid()
com.example.revolut.rates.R$color: int secondary_text_default_material_light
androidx.core.graphics.ColorKt: int getRed(int)
com.example.revolut.rates.di.AppModule: com.example.revolut.rates.data.RatesApi provideRatesApi()
androidx.appcompat.R$layout: int abc_list_menu_item_checkbox
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence)
com.example.revolut.rates.R$attr: int splitTrack
androidx.core.graphics.RectKt: android.graphics.Rect plus(android.graphics.Rect,android.graphics.Point)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void setTag(android.view.View,java.lang.Object)
androidx.fragment.R$id
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constrainedWidth
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(float[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.flowable.FlowableAllSingle: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.flowable.FlowableInternalHelper: io.reactivex.functions.Consumer subscriberOnError(org.reactivestreams.Subscriber)
kotlin.SinceKotlin
kotlinx.coroutines.CoroutineStart$WhenMappings: int[] $EnumSwitchMapping$1
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addLastIfPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1)
okhttp3.MultipartBody: long contentLength()
dagger.android.support.R$styleable: int TextAppearance_android_textColorLink
com.google.gson.internal.bind.CollectionTypeAdapterFactory: CollectionTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor)
io.reactivex.subjects.MaybeSubject
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()
kotlinx.coroutines.scheduling.WorkQueue$pollExternal$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(long[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$Style: androidx.core.app.NotificationCompat$Builder mBuilder
kotlin.text.StringsKt__StringsKt: java.util.List lines(java.lang.CharSequence)
io.reactivex.Maybe: io.reactivex.Maybe empty()
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
androidx.core.view.ViewCompat: float getZ(android.view.View)
io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair: long serialVersionUID
kotlin.sequences.TakeWhileSequence$iterator$1: java.lang.Object getNextItem()
io.reactivex.internal.observers.ConsumerSingleObserver: ConsumerSingleObserver(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)
androidx.appcompat.R$drawable: int notify_panel_notification_icon_bg
androidx.annotation.LongDef: boolean flag()
io.reactivex.internal.subscriptions.SubscriptionHelper: io.reactivex.internal.subscriptions.SubscriptionHelper CANCELLED
dagger.android.support.R$styleable: int Toolbar_contentInsetRight
androidx.databinding.ViewDataBinding: void unbind()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(double[],double[])
kotlin.coroutines.experimental.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.experimental.CoroutineContext$Key)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore(java.lang.String,char,java.lang.String)
com.example.revolut.rates.R$styleable: int AppCompatTheme_editTextStyle
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object minWith(kotlinx.coroutines.channels.ReceiveChannel,java.util.Comparator,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState RETIRING
androidx.recyclerview.R$attr: int layout_keyline
androidx.legacy.coreui.R$id: int forever
androidx.swiperefreshlayout.R$dimen: int notification_top_pad
dagger.android.support.R$style: int Base_V7_Theme_AppCompat_Dialog
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
io.reactivex.Flowable: io.reactivex.Flowable doOnRequest(io.reactivex.functions.LongConsumer)
io.reactivex.Observable: io.reactivex.Observable publish(io.reactivex.functions.Function)
kotlinx.coroutines.EventLoop$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.EventLoop,kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object single(java.util.List)
kotlin.jvm.internal.ByteSpreadBuilder: int getSize(java.lang.Object)
okhttp3.FormBody$Builder
androidx.appcompat.R$styleable: int SearchView_goIcon
androidx.customview.widget.ViewDragHelper: boolean isEdgeTouched(int)
androidx.legacy.coreui.R$layout
io.reactivex.Flowable: io.reactivex.Single collect(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)
androidx.customview.R$attr: int font
okhttp3.internal.http.HttpDate: long MAX_DATE
io.reactivex.Observable: io.reactivex.Single any(io.reactivex.functions.Predicate)
io.reactivex.Observable: io.reactivex.Single elementAtOrError(long)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_SHA
io.reactivex.internal.operators.observable.ObservableDoAfterNext: void subscribeActual(io.reactivex.Observer)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setCompanionWidget(java.lang.Object)
com.example.revolut.rates.R$attr: int textColorSearchUrl
androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter$Builder setTextDirectionHeuristic(androidx.core.text.TextDirectionHeuristicCompat)
androidx.core.view.ViewCompat: int LAYER_TYPE_HARDWARE
androidx.drawerlayout.R$styleable: int FontFamilyFont_android_font
androidx.appcompat.widget.ActivityChooserView: void onAttachedToWindow()
androidx.constraintlayout.solver.SolverVariable: void removeFromRow(androidx.constraintlayout.solver.ArrayRow)
androidx.media.R$layout: int notification_template_part_chronometer
androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
io.reactivex.Flowable: io.reactivex.Flowable concatMapIterable(io.reactivex.functions.Function,int)
androidx.recyclerview.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
androidx.core.R$styleable: int GradientColor_android_endX
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroupAlertBehavior(int)
androidx.appcompat.R$color: int abc_primary_text_disable_only_material_dark
com.jakewharton.rxbinding3.core.R$id
io.reactivex.Observable: io.reactivex.Observable skip(long,java.util.concurrent.TimeUnit)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder retryOnConnectionFailure(boolean)
androidx.appcompat.view.menu.MenuPopupHelper: boolean tryShow(int,int)
io.reactivex.Maybe: io.reactivex.Maybe defer(java.util.concurrent.Callable)
androidx.customview.R$style: int Widget_Compat_NotificationActionText
kotlin.collections.AbstractList: java.util.ListIterator listIterator(int)
androidx.core.app.NotificationCompat: int BADGE_ICON_NONE
androidx.appcompat.R$styleable: int GradientColor_android_startY
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_0
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,int,int,boolean)
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSubText(java.lang.CharSequence)
io.reactivex.internal.schedulers.ScheduledRunnable: boolean isDisposed()
kotlin.sequences.IndexingSequence: IndexingSequence(kotlin.sequences.Sequence)
com.example.revolut.rates.R$style: int Base_V28_Theme_AppCompat_Light
kotlin.jvm.internal.ClassReference: java.util.List getTypeParameters()
kotlin.sequences.FlatteningSequence: kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.FlatteningSequence)
androidx.appcompat.R$styleable: int SearchView_closeIcon
androidx.core.util.SparseLongArrayKt: boolean contains(android.util.SparseLongArray,int)
com.example.revolut.rates.R$anim: int abc_slide_in_bottom
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(float[],int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(double[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.observable.ObservablePublish: io.reactivex.observables.ConnectableObservable create(io.reactivex.ObservableSource)
androidx.databinding.ObservableField: ObservableField()
kotlin.coroutines.jvm.internal.BaseContinuationImpl
io.reactivex.internal.operators.completable.CompletableResumeNext
kotlin.text.DelimitedRangesSequence$iterator$1: void setCurrentStartIndex(int)
kotlinx.coroutines.internal.AnnotationsKt: void JvmMultifileClass$annotations()
androidx.core.graphics.PaintCompat
androidx.recyclerview.R$id: int forever
kotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaPrimitiveType(kotlin.reflect.KClass)
io.reactivex.internal.subscribers.BlockingLastSubscriber: void onNext(java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(short[])
androidx.media.VolumeProviderCompat: void setCallback(androidx.media.VolumeProviderCompat$Callback)
dagger.android.support.DaggerAppCompatActivity: dagger.android.AndroidInjector fragmentInjector()
io.reactivex.internal.operators.single.SingleDelayWithCompletable: void subscribeActual(io.reactivex.SingleObserver)
androidx.legacy.v4.R$id: int none
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: int lastIndexOf(java.lang.Object)
androidx.loader.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.constraintlayout.solver.SolverVariable: SolverVariable(java.lang.String,androidx.constraintlayout.solver.SolverVariable$Type)
dagger.android.support.R$id: int top
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry: void subscribe(org.reactivestreams.Subscriber[])
androidx.appcompat.R$styleable: int SearchView_android_imeOptions
dagger.android.support.R$attr: int radioButtonStyle
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void setDx(int)
androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)
com.google.gson.TypeAdapter: java.lang.Object fromJson(java.lang.String)
androidx.print.R
io.reactivex.processors.AsyncProcessor: void onSubscribe(org.reactivestreams.Subscription)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int getCurrentVolume(java.lang.Object)
androidx.core.ktx.R$layout: int notification_action_tombstone
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setCallback(java.lang.Runnable)
androidx.core.provider.SelfDestructiveThread$ReplyCallback: void onReply(java.lang.Object)
com.google.gson.JsonArray: JsonArray(int)
androidx.core.view.ViewGroupCompat
io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,long)
androidx.appcompat.R$attr: int buttonStyleSmall
androidx.core.app.TaskStackBuilder$SupportParentable
android.support.v4.media.session.PlaybackStateCompat: long ACTION_SKIP_TO_QUEUE_ITEM
androidx.media.VolumeProviderCompat: VolumeProviderCompat(int,int,int)
androidx.core.ktx.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.core.widget.ScrollerCompat: boolean isFinished()
com.google.gson.stream.JsonReader: boolean hasNext()
com.example.revolut.rates.R$color: int bright_foreground_material_dark
androidx.drawerlayout.R$layout
com.example.revolut.rates.R$styleable: int AlertDialog_android_layout
kotlin.sequences.TakeWhileSequence$iterator$1: int getNextState()
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean getReverseLayout()
androidx.appcompat.widget.SearchView: android.os.Parcelable onSaveInstanceState()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isEditable()
androidx.core.view.inputmethod.InputContentInfoCompat: InputContentInfoCompat(android.net.Uri,android.content.ClipDescription,android.net.Uri)
androidx.fragment.R$dimen: int notification_small_icon_background_padding
androidx.databinding.ViewDataBinding: long getFromArray(long[],int)
androidx.core.view.ViewCompat: void setBackground(android.view.View,android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
androidx.annotation.TransitionRes
androidx.vectordrawable.R$attr: int layout_anchor
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality[] values()
androidx.drawerlayout.R$style: int Widget_Compat_NotificationActionContainer
io.reactivex.Observable: io.reactivex.Observable takeWhile(io.reactivex.functions.Predicate)
com.example.revolut.rates.R$attr: int trackTintMode
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.CharSequence getLabel()
androidx.recyclerview.widget.LinearSmoothScroller: float calculateSpeedPerPixel(android.util.DisplayMetrics)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object lastOrNull(kotlin.sequences.Sequence)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List takeLastWhile(java.util.List,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationMode(int)
androidx.databinding.ObservableMap: void addOnMapChangedCallback(androidx.databinding.ObservableMap$OnMapChangedCallback)
androidx.core.app.NotificationCompat$WearableExtender: int getCustomContentHeight()
com.example.revolut.rates.R$color: int primary_dark_material_dark
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long getChangeDuration()
io.reactivex.Observable: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function,boolean)
androidx.core.ktx.R$styleable: int[] FontFamily
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object offerInternal(java.lang.Object)
com.example.revolut.rates.R$dimen: int abc_action_button_min_height_material
io.reactivex.internal.operators.flowable.FlowableCollect: FlowableCollect(io.reactivex.Flowable,java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)
androidx.fragment.R$styleable: int FontFamilyFont_android_ttcIndex
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable attachEvents(android.view.View)
androidx.cursoradapter.widget.SimpleCursorAdapter: void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[])
kotlin.text.StringsKt__StringsKt: java.lang.String substringBeforeLast(java.lang.String,java.lang.String,java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable scanWith(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)
android.support.v4.media.session.MediaControllerCompat: java.lang.Object getMediaController()
io.reactivex.Observable: io.reactivex.Observable concatEager(java.lang.Iterable)
io.reactivex.internal.subscriptions.DeferredScalarSubscription: void cancel()
io.reactivex.Single: io.reactivex.Flowable repeat()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
com.jakewharton.rxbinding3.widget.RxToolbar
android.support.v4.media.MediaMetadataCompat: android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object)
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_fontWeight
kotlin.internal.PureReifiable
io.reactivex.Flowable: io.reactivex.Flowable switchMapSingleDelayError(io.reactivex.functions.Function)
io.reactivex.Completable: io.reactivex.Single toSingleDefault(java.lang.Object)
com.google.gson.JsonArray: byte getAsByte()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
io.reactivex.internal.operators.single.SingleUsing: SingleUsing(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)
androidx.constraintlayout.widget.ConstraintSet: void constrainCircle(int,int,int,float)
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: boolean isEmpty()
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget mFirst
androidx.appcompat.R$style: int Widget_AppCompat_Toolbar
io.reactivex.internal.operators.single.SingleFlatMapMaybe: SingleFlatMapMaybe(io.reactivex.SingleSource,io.reactivex.functions.Function)
androidx.appcompat.widget.SearchView$OnQueryTextListener: boolean onQueryTextSubmit(java.lang.String)
kotlin.UByte: kotlin.UByte$Companion Companion
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void jumpToCurrentState()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(java.lang.Object[],java.lang.Object[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.AbstractChannelKt: java.lang.Object POLL_FAILED
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
androidx.databinding.adapters.ViewBindingAdapter: void setPaddingBottom(android.view.View,float)
androidx.fragment.R$drawable: int notification_bg_low_pressed
android.support.v4.app.INotificationSideChannel$Stub$Proxy: android.os.IBinder mRemote
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.Job,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.recyclerview.R$attr: int fontProviderQuery
com.google.gson.JsonObject: com.google.gson.JsonObject getAsJsonObject(java.lang.String)
com.example.revolut.rates.R$color: int foreground_material_dark
kotlin.jvm.internal.IntCompanionObject: int SIZE_BITS
kotlinx.coroutines.scheduling.CoroutineScheduler: java.lang.String access$getSchedulerName$p(kotlinx.coroutines.scheduling.CoroutineScheduler)
io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
androidx.slidingpanelayout.R$integer
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object groupBy(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
android.support.v4.media.session.MediaControllerCompat$TransportControls
dagger.android.support.R$dimen: int abc_action_button_min_width_overflow_material
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.R$id: int screen
com.example.revolut.rates.di.AppModule_ProvideCurrenciesRepositoryFactory: com.example.revolut.rates.di.AppModule_ProvideCurrenciesRepositoryFactory create(com.example.revolut.rates.di.AppModule)
android.support.v4.media.session.IMediaControllerCallback: void onRepeatModeChanged(int)
io.reactivex.internal.util.VolatileSizeArrayList: void clear()
androidx.media.R$id: int forever
io.reactivex.Notification: boolean isOnNext()
androidx.recyclerview.widget.RecyclerView: void offsetChildrenVertical(int)
kotlinx.coroutines.channels.BroadcastKt: kotlinx.coroutines.channels.BroadcastChannel broadcast(kotlinx.coroutines.channels.ReceiveChannel,int,kotlinx.coroutines.CoroutineStart)
io.reactivex.internal.operators.completable.CompletableFromCallable
androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean isPendingInitialRun()
kotlin.text.StringsKt___StringsKt: java.lang.Character minWith(java.lang.CharSequence,java.util.Comparator)
io.reactivex.internal.observers.FutureSingleObserver: void onSuccess(java.lang.Object)
io.reactivex.subjects.AsyncSubject: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
kotlin.ranges.RangesKt___RangesKt: char random(kotlin.ranges.CharRange,kotlin.random.Random)
io.reactivex.internal.operators.flowable.FlowableToList: FlowableToList(io.reactivex.Flowable,java.util.concurrent.Callable)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3(short[])
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object single(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long singleOrNull(long[])
io.reactivex.internal.operators.flowable.FlowableReduceMaybe: void subscribeActual(io.reactivex.MaybeObserver)
kotlinx.coroutines.intrinsics.UndispatchedKt
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
io.reactivex.internal.operators.mixed.CompletableAndThenObservable: CompletableAndThenObservable(io.reactivex.CompletableSource,io.reactivex.ObservableSource)
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$RepeatWhenSubscriber: long serialVersionUID
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(char[],kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe: void subscribeActual(io.reactivex.Observer)
com.jakewharton.rxbinding3.widget.SeekBarChangeEvent: android.widget.SeekBar getView()
dagger.android.support.R$id: int custom
kotlin.io.FilePathComponents: java.util.List getSegments()
androidx.slidingpanelayout.R$id: int notification_main_column
androidx.fragment.app.Fragment: java.lang.Object getReturnTransition()
dagger.android.support.R$id: int expand_activities_button
com.google.gson.JsonElement: int getAsInt()
androidx.recyclerview.widget.RecyclerView: void clearOnChildAttachStateChangeListeners()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: AnimatedStateListDrawableCompat()
kotlin.jvm.internal.Reflection: kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference)
androidx.core.view.accessibility.AccessibilityEventCompat: void setAction(android.view.accessibility.AccessibilityEvent,int)
androidx.appcompat.R$dimen: int tooltip_corner_radius
androidx.appcompat.widget.DropDownListView: boolean onTouchEvent(android.view.MotionEvent)
androidx.core.util.Preconditions: java.util.Collection checkCollectionElementsNotNull(java.util.Collection,java.lang.String)
io.reactivex.Observable: io.reactivex.Observable observeOn(io.reactivex.Scheduler,boolean,int)
io.reactivex.internal.observers.FutureObserver: void onError(java.lang.Throwable)
dagger.android.support.R$styleable: int MenuItem_android_title
io.reactivex.internal.operators.maybe.MaybeDefer: void subscribeActual(io.reactivex.MaybeObserver)
kotlin.text.Typography: char doublePrime
androidx.core.view.MenuKt: int getSize(android.view.Menu)
kotlin.concurrent.ThreadsKt$thread$thread$1: void run()
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
androidx.customview.R$dimen: int compat_control_corner_material
kotlinx.coroutines.JobImpl: JobImpl(kotlinx.coroutines.Job)
androidx.appcompat.widget.DecorToolbar: void dismissPopupMenus()
io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function4)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel dropWhile$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.CharProgression step(kotlin.ranges.CharProgression,int)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)
androidx.constraintlayout.solver.Metrics: long errors
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.Collection filterIsInstanceTo(java.lang.Object[],java.util.Collection,java.lang.Class)
kotlin.ranges.RangesKt___RangesKt: java.lang.Long toLongExactOrNull(double)
androidx.appcompat.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
androidx.media.MediaSessionManager$RemoteUserInfo: MediaSessionManager$RemoteUserInfo(java.lang.String,int,int)
androidx.collection.SparseArrayCompat: void removeAtRange(int,int)
androidx.core.os.BuildCompat
androidx.core.app.RemoteInput: java.lang.CharSequence[] getChoices()
androidx.core.app.NotificationCompat$MessagingStyle: NotificationCompat$MessagingStyle(java.lang.CharSequence)
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_endColor
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification_Time_Media
androidx.constraintlayout.solver.ArrayLinkedVariables: void clear()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: boolean isEmpty()
android.support.v4.media.session.PlaybackStateCompat: long ACTION_SET_REPEAT_MODE
io.reactivex.internal.operators.observable.ObservableReduceMaybe: ObservableReduceMaybe(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)
io.reactivex.internal.disposables.EmptyDisposable: io.reactivex.internal.disposables.EmptyDisposable INSTANCE
com.example.revolut.rates.R$style: int Base_ThemeOverlay_AppCompat_Dark
androidx.media.MediaBrowserServiceCompat$Result: void sendError(android.os.Bundle)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
androidx.loader.R$id: int tag_transition_group
kotlin.sequences.SequencesKt___SequencesKt: int count(kotlin.sequences.Sequence)
androidx.slidingpanelayout.R$styleable: int ColorStateListItem_alpha
androidx.appcompat.view.menu.MenuItemImpl: boolean isCheckable()
dagger.android.support.DaggerApplication: DaggerApplication()
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class,java.lang.String)
io.reactivex.observers.BaseTestConsumer: int initialFusionMode
okhttp3.internal.http2.Http2Connection: void setSettings(okhttp3.internal.http2.Settings)
com.example.revolut.rates.R$styleable: int SwitchCompat_track
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(android.view.ViewGroup$LayoutParams)
android.support.v4.media.session.MediaSessionCompat$Callback: void onPlayFromSearch(java.lang.String,android.os.Bundle)
io.reactivex.processors.UnicastProcessor: boolean hasThrowable()
io.reactivex.internal.operators.flowable.FlowableConcatMap
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
kotlin.collections.AbstractIterator
okio.DeflaterSink: void close()
dagger.Provides
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ActionMode
io.reactivex.internal.operators.observable.ObservableReplay$InnerDisposable: long serialVersionUID
androidx.appcompat.R$dimen: int abc_alert_dialog_button_bar_height
kotlin.reflect.KProperty$Accessor: kotlin.reflect.KProperty getProperty()
androidx.vectordrawable.R$drawable: int notification_tile_bg
androidx.loader.R$id: int normal
io.reactivex.internal.util.AppendOnlyLinkedArrayList: void add(java.lang.Object)
androidx.core.widget.EdgeEffectCompat: boolean onPull(float,float)
androidx.appcompat.R$color: int primary_dark_material_dark
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(int[])
androidx.swiperefreshlayout.R$style: int TextAppearance_Compat_Notification_Time
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter ATOMIC_INTEGER_ARRAY
androidx.appcompat.widget.ActivityChooserView: void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView$Adapter: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List)
androidx.constraintlayout.widget.ConstraintSet: void setHorizontalWeight(int,float)
kotlin.StandardKt
com.example.revolut.rates.R$attr: int tickMarkTint
kotlin.sequences.TakeSequence: java.util.Iterator iterator()
kotlin.coroutines.SafeContinuation
com.jakewharton.rxbinding3.view.ViewAttachAttachedEvent: android.view.View getView()
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionBarWidgetTheme
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(int[])
androidx.appcompat.view.menu.MenuPopupHelper: void setGravity(int)
kotlin.jvm.internal.LongCompanionObject: long MIN_VALUE
io.reactivex.Single: io.reactivex.Single unsafeCreate(io.reactivex.SingleSource)
androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$1: void onTransitionPause(android.transition.Transition)
androidx.drawerlayout.widget.DrawerLayout: void onRtlPropertiesChanged(int)
io.reactivex.internal.operators.observable.ObservableNever
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setRecycleOnMeasureEnabled(boolean)
dagger.android.DaggerDialogFragment_MembersInjector: void injectChildFragmentInjector(dagger.android.DaggerDialogFragment,dagger.android.DispatchingAndroidInjector)
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doAfterTerminated(io.reactivex.functions.Action)
androidx.core.util.LruCacheKt$lruCache$4: LruCacheKt$lruCache$4(kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4,int,int)
android.support.v4.media.session.MediaSessionCompat$Callback: void onPlay()
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1: CollectionsKt___CollectionsKt$groupingBy$1(java.lang.Iterable,kotlin.jvm.functions.Function1)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY
androidx.appcompat.R$color: int switch_thumb_material_dark
io.reactivex.internal.operators.observable.ObservableTakeLast: ObservableTakeLast(io.reactivex.ObservableSource,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLast-PpDY95g(byte[],int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(long[],kotlin.jvm.functions.Function1)
androidx.appcompat.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
io.reactivex.Single: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.app.WindowDecorActionBar: void setCustomView(android.view.View)
androidx.databinding.MergedDataBinderMapper: void addMapper(java.lang.String)
kotlin.collections.CollectionsKt__IteratorsKt: java.util.Iterator withIndex(java.util.Iterator)
androidx.appcompat.R$attr: int switchStyle
io.reactivex.internal.operators.flowable.FlowableCollectSingle: FlowableCollectSingle(io.reactivex.Flowable,java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Large
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
androidx.customview.R$styleable: int GradientColor_android_startY
androidx.core.app.Person$Builder: androidx.core.app.Person build()
kotlin.annotation.AnnotationRetention: kotlin.annotation.AnnotationRetention BINARY
kotlinx.coroutines.scheduling.WorkQueue: int size$kotlinx_coroutines_core()
androidx.databinding.ViewDataBinding: boolean setVariable(int,java.lang.Object)
com.example.revolut.rates.R$color: int tooltip_background_dark
kotlin.collections.ArraysKt___ArraysKt: long single(long[])
kotlin.ranges.IntRange: kotlin.ranges.IntRange access$getEMPTY$cp()
dagger.android.support.R$styleable: int AlertDialog_showTitle
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_Dark
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduce(java.lang.Iterable,kotlin.jvm.functions.Function2)
androidx.core.graphics.drawable.WrappedDrawable: android.graphics.drawable.Drawable getWrappedDrawable()
androidx.loader.R$layout: int notification_action_tombstone
com.jakewharton.rxbinding3.view.RxView: io.reactivex.functions.Consumer visibility(android.view.View)
androidx.legacy.coreui.R$attr: int fontProviderAuthority
retrofit2.http.QueryMap: boolean encoded()
kotlin.sequences.FlatteningSequence: kotlin.jvm.functions.Function1 access$getIterator$p(kotlin.sequences.FlatteningSequence)
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(short[],kotlin.jvm.functions.Function1)
androidx.versionedparcelable.VersionedParcel: void writeString(java.lang.String)
com.example.revolut.rates.R$styleable: int FontFamilyFont_android_fontVariationSettings
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object filterTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.appcompat.view.ActionMode$Callback: boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_DIMENSIONS
androidx.legacy.coreui.R$styleable: int GradientColor_android_startX
kotlin.jvm.internal.Reflection: Reflection()
androidx.appcompat.graphics.drawable.DrawableWrapper: int getMinimumHeight()
androidx.appcompat.R$styleable: int SwitchCompat_android_thumb
kotlin.sequences.SequencesKt___SequencesKt: void forEachIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
io.reactivex.subjects.UnicastSubject: io.reactivex.subjects.UnicastSubject create(int,java.lang.Runnable,boolean)
io.reactivex.internal.util.ConnectConsumer: void accept(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableFromCallable: java.lang.Object call()
android.support.v4.media.MediaBrowserCompat$ItemCallback: void onItemLoaded(android.support.v4.media.MediaBrowserCompat$MediaItem)
kotlin.text.Typography: char greater
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(char[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List take-PpDY95g(byte[],int)
kotlinx.coroutines.channels.AbstractSendChannel: boolean isClosedForSend()
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
com.example.revolut.rates.R$styleable: int ActionBarLayout_android_layout_gravity
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int getId()
androidx.appcompat.view.menu.ListMenuPresenter: void saveHierarchyState(android.os.Bundle)
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureDrop(io.reactivex.functions.Consumer)
io.reactivex.subjects.SingleSubject: void onSuccess(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel zip(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minWith(java.lang.Object[],java.util.Comparator)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Widget_Button
kotlin.UShortArray: void clear()
androidx.lifecycle.extensions.R$id: int notification_main_column
io.reactivex.internal.util.ErrorMode: io.reactivex.internal.util.ErrorMode[] values()
com.google.gson.JsonArray: com.google.gson.JsonElement remove(int)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter DOUBLE
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setClassName(java.lang.CharSequence)
io.reactivex.Scheduler$Worker: long now(java.util.concurrent.TimeUnit)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: int AUTO_CONSTRAINT_CREATOR
io.reactivex.subjects.CompletableSubject: boolean hasThrowable()
io.reactivex.internal.subscribers.BlockingBaseSubscriber: void onComplete()
androidx.appcompat.R$drawable: int tooltip_frame_light
androidx.swiperefreshlayout.R$style: int Widget_Compat_NotificationActionContainer
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(java.lang.Object[],int,int,int,java.lang.Object)
io.reactivex.Single: io.reactivex.Flowable toFlowable()
io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(io.reactivex.functions.Function,org.reactivestreams.Publisher[])
androidx.media.AudioAttributesCompat: boolean equals(java.lang.Object)
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_startColor
dagger.android.support.R$id: int progress_horizontal
io.reactivex.internal.queue.MpscLinkedQueue: boolean offer(java.lang.Object)
kotlin.sequences.IndexingSequence$iterator$1: void setIndex(int)
kotlin.text.Typography: char leftDoubleQuote
com.example.revolut.rates.R$color: int notification_action_color_filter
io.reactivex.internal.operators.flowable.FlowableConcatArray$ConcatArraySubscriber: long serialVersionUID
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
io.reactivex.internal.observers.BlockingMultiObserver
com.example.revolut.rates.BR
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintGuide_begin
android.support.v4.media.session.PlaybackStateCompat$Actions
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
io.reactivex.internal.operators.flowable.FlowableLimit: void subscribeActual(org.reactivestreams.Subscriber)
androidx.slidingpanelayout.R$id: int action_divider
androidx.legacy.coreui.R$styleable: int ColorStateListItem_alpha
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: ViewLayoutChangeEvent(android.view.View,int,int,int,int,int,int,int,int)
androidx.core.app.NotificationCompat: boolean isGroupSummary(android.app.Notification)
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
dagger.android.support.R$attr: int windowFixedHeightMajor
androidx.core.graphics.drawable.TintAwareDrawable: void setTint(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat
kotlinx.coroutines.AbstractCoroutine: void start(kotlinx.coroutines.CoroutineStart,java.lang.Object,kotlin.jvm.functions.Function2)
io.reactivex.internal.queue.SpscArrayQueue: boolean isEmpty()
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean addAll(java.util.Collection,kotlin.sequences.Sequence)
androidx.lifecycle.ViewModelStores
androidx.legacy.coreui.R$styleable: int GradientColor_android_endY
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
kotlinx.coroutines.RunnableKt: java.lang.Runnable Runnable(kotlin.jvm.functions.Function0)
kotlin.UByteArray
androidx.vectordrawable.R$dimen: int compat_button_inset_horizontal_material
androidx.media.R$drawable: int notification_template_icon_low_bg
androidx.databinding.adapters.TabHostBindingAdapter: void setCurrentTab(android.widget.TabHost,int)
io.reactivex.internal.queue.SpscLinkedArrayQueue: boolean offer(java.lang.Object)
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
androidx.coordinatorlayout.R$dimen: int notification_main_column_padding_top
android.support.v4.media.MediaMetadataCompat$LongKey
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isLongClickable()
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)
android.support.v4.app.INotificationSideChannel$Stub: int TRANSACTION_cancel
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference)
androidx.vectordrawable.R$id: int right_side
androidx.vectordrawable.R$attr: int fontProviderAuthority
io.reactivex.internal.disposables.ArrayCompositeDisposable: boolean setResource(int,io.reactivex.disposables.Disposable)
android.support.v4.media.session.IMediaSession: void playFromMediaId(java.lang.String,android.os.Bundle)
androidx.core.view.NestedScrollingParentHelper
androidx.appcompat.view.menu.ActionMenuItem: int getOrder()
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
androidx.core.app.ShareCompat: java.lang.String getCallingPackage(android.app.Activity)
kotlin.collections.CollectionsKt__ReversedViewsKt: java.util.List asReversed(java.util.List)
com.google.gson.stream.JsonReader: boolean nextBoolean()
okio.Buffer: long size()
androidx.recyclerview.widget.SortedList: void addAll(java.util.Collection)
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable: MaybeFlatMapObservable(io.reactivex.MaybeSource,io.reactivex.functions.Function)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
okio.Okio
androidx.lifecycle.extensions.R$layout: int notification_template_part_time
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintStart_toEndOf
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object elementAtOrNull(kotlin.sequences.Sequence,int)
io.reactivex.internal.operators.flowable.FlowableSwitchMap: void subscribeActual(org.reactivestreams.Subscriber)
kotlinx.coroutines.channels.ActorScope
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setTitle(int)
androidx.collection.CircularArray: CircularArray()
kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.internal.Symbol UNDEFINED
androidx.legacy.coreutils.R$layout
androidx.core.graphics.ColorKt: float component4(long)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
kotlin.UShortArray: boolean containsAll(java.util.Collection)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float)
kotlin.UIntArray: boolean equals-impl0(int[],int[])
io.reactivex.Observable: io.reactivex.Observable merge(java.lang.Iterable)
androidx.drawerlayout.R$dimen: int notification_main_column_padding_top
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
okio.Buffer: okio.Buffer$UnsafeCursor readAndWriteUnsafe()
androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List windowed(java.lang.Iterable,int,int,boolean,kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
kotlin.reflect.KMutableProperty2$Setter
androidx.appcompat.R$layout: int select_dialog_singlechoice_material
kotlin.Result: boolean isFailure-impl(java.lang.Object)
kotlinx.coroutines.AbstractCoroutine
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(int,int,int)
androidx.appcompat.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
dagger.android.support.R$attr: int actionOverflowMenuStyle
androidx.appcompat.view.WindowCallbackWrapper: void onWindowFocusChanged(boolean)
androidx.legacy.coreui.R$style: int TextAppearance_Compat_Notification_Info
dagger.android.support.R$dimen: int abc_text_size_menu_material
io.reactivex.internal.observers.BasicFuseableObserver: void onComplete()
androidx.collection.CircularIntArray: int popLast()
io.reactivex.internal.observers.BasicQueueDisposable: boolean offer(java.lang.Object,java.lang.Object)
kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.CloseableCoroutineDispatcher asCoroutineDispatcher(java.util.concurrent.ExecutorService)
androidx.core.widget.NestedScrollView: boolean executeKeyEvent(android.view.KeyEvent)
android.support.v4.media.session.PlaybackStateCompat: int REPEAT_MODE_NONE
androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)
okhttp3.internal.Util: java.lang.String[] intersect(java.util.Comparator,java.lang.String[],java.lang.String[])
androidx.appcompat.R$style: int AlertDialog_AppCompat
kotlin.reflect.KParameter: kotlin.reflect.KType getType()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object first(java.lang.Iterable,kotlin.jvm.functions.Function1)
okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.example.revolut.rates.R$styleable: int ActionBar_logo
dagger.android.support.R$styleable: int SearchView_queryBackground
io.reactivex.internal.operators.flowable.FlowableUsing: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int orientation
okio.Buffer: okio.Buffer writeLong(long)
kotlin.io.FilePathComponents: java.io.File subPath(int,int)
dagger.android.support.R$attr: int thumbTintMode
com.example.revolut.rates.viewmodel.CurrenciesViewModel: androidx.lifecycle.MutableLiveData getCurrencies()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.example.revolut.rates.RatesApp_MembersInjector: void injectMembers(com.example.revolut.rates.RatesApp)
androidx.customview.widget.ViewDragHelper$Callback: int getViewVerticalDragRange(android.view.View)
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)
kotlin.collections.ArraysKt___ArraysJvmKt: int[] plus(int[],int)
kotlin.random.Random$Default: boolean nextBoolean()
dagger.android.support.R$attr: int tickMark
androidx.lifecycle.extensions.R$attr: int fontProviderCerts
retrofit2.http.Query: boolean encoded()
kotlin.UIntArray: kotlin.collections.UIntIterator iterator-impl(int[])
kotlin.jvm.internal.TypeIntrinsics: int getFunctionArity(java.lang.Object)
androidx.recyclerview.widget.AsyncDifferConfig$Builder
androidx.slidingpanelayout.R$id: int chronometer
androidx.appcompat.R$attr: int textAppearanceSmallPopupMenu
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedFragment(java.lang.String)
androidx.appcompat.widget.DecorToolbar: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.fragment.app.Fragment: void onResume()
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken getParameterized(java.lang.reflect.Type,java.lang.reflect.Type[])
kotlin.text.StringsKt__StringsKt: java.lang.String trim(java.lang.String,char[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable[] sortedArray(java.lang.Comparable[])
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
okhttp3.HttpUrl: java.lang.String queryParameterName(int)
com.example.revolut.rates.R$styleable: int TextAppearance_android_textColorLink
androidx.core.app.NotificationCompat: android.os.Bundle getExtras(android.app.Notification)
androidx.appcompat.R$attr: int ratingBarStyleSmall
android.support.v4.media.session.MediaSessionCompat: void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)
dagger.android.support.R$drawable: int abc_ic_clear_material
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_ListPopupWindow
dagger.android.support.R$id: int action_menu_presenter
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doOnCancel(io.reactivex.functions.Action)
kotlin.collections.AbstractIterator: java.lang.Object next()
dagger.android.support.R$dimen: int notification_right_side_padding_top
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMultiLine(boolean)
android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()
com.jakewharton.rxbinding3.widget.SeekBarProgressChangeEvent: int getProgress()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(int[],kotlin.jvm.functions.Function1)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspot(float,float)
kotlin.UByte: int hashCode()
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget mHead
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$any$3
dagger.android.support.R$attr: int showText
androidx.collection.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobCancellationNode
kotlinx.coroutines.channels.ArrayBroadcastChannel: boolean close(java.lang.Throwable)
androidx.core.os.LocaleListCompat: java.lang.String toLanguageTags()
kotlinx.coroutines.selects.SelectBuilderImpl: void invoke(kotlinx.coroutines.selects.SelectClause2,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.annotation.CallSuper
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator()
androidx.media.R$integer: int status_bar_notification_info_maxnum
androidx.core.content.FileProvider: boolean onCreate()
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther: ObservableDelaySubscriptionOther(io.reactivex.ObservableSource,io.reactivex.ObservableSource)
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_fontWeight
kotlin.text.StringsKt___StringsKt: java.util.List mapIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2)
kotlin.sequences.SubSequence: SubSequence(kotlin.sequences.Sequence,int,int)
io.reactivex.internal.operators.flowable.FlowableSwitchMap: FlowableSwitchMap(io.reactivex.Flowable,io.reactivex.functions.Function,int,boolean)
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorListener doOnRepeat(android.animation.Animator,kotlin.jvm.functions.Function1)
androidx.core.view.PointerIconCompat: int TYPE_CROSSHAIR
dagger.android.support.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
androidx.vectordrawable.R$style: int Widget_Compat_NotificationActionText
dagger.android.support.R$style: int Base_Widget_AppCompat_SearchView
androidx.media.R$styleable: int FontFamily_fontProviderAuthority
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestInnerSubscriber: long serialVersionUID
androidx.lifecycle.LifecycleService: void onStart(android.content.Intent,int)
android.support.v4.media.session.MediaControllerCompat$Callback: void onSessionEvent(java.lang.String,android.os.Bundle)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel asReceiveChannel(java.lang.Iterable,kotlin.coroutines.CoroutineContext)
androidx.vectordrawable.R$id: int notification_background
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_JOYSTICK
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_GESTURE_DETECTION_END
okio.ByteString: int indexOf(okio.ByteString)
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
io.reactivex.subjects.BehaviorSubject: void onNext(java.lang.Object)
kotlin.contracts.ContractBuilder: kotlin.contracts.Returns returns()
androidx.loader.R$styleable: int FontFamilyFont_android_fontWeight
androidx.appcompat.graphics.drawable.DrawableContainer: void setHotspotBounds(int,int,int,int)
com.jakewharton.rxbinding3.widget.AdapterViewItemSelectionEvent: boolean equals(java.lang.Object)
androidx.core.hardware.fingerprint.FingerprintManagerCompat
com.jakewharton.rxbinding3.view.MenuItemActionViewExpandEvent
dagger.android.support.R$styleable: int AppCompatTextHelper_android_textAppearance
kotlin.ULong: boolean equals(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void indices$annotations(int[])
io.reactivex.subscribers.DefaultSubscriber: void cancel()
com.example.revolut.rates.R$styleable: int ActionBar_height
androidx.viewpager.R$id: int action_text
io.reactivex.internal.disposables.EmptyDisposable: boolean isDisposed()
androidx.media.MediaBrowserProtocol: int SERVICE_MSG_ON_CONNECT_FAILED
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean)
androidx.core.view.ViewCompat: void setFitsSystemWindows(android.view.View,boolean)
kotlinx.coroutines.test.TestCoroutineContext: void assertUnhandledException(java.lang.String,kotlin.jvm.functions.Function1)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher: FlowableConcatMapEagerPublisher(org.reactivestreams.Publisher,io.reactivex.functions.Function,int,int,io.reactivex.internal.util.ErrorMode)
androidx.recyclerview.widget.RecyclerView: boolean hasFixedSize()
io.reactivex.internal.queue.SpscLinkedArrayQueue: void clear()
androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState
androidx.appcompat.view.StandaloneActionMode: void setTitle(java.lang.CharSequence)
io.reactivex.internal.util.EmptyComponent
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
kotlin.text.MatchResult$DefaultImpls: kotlin.text.MatchResult$Destructured getDestructured(kotlin.text.MatchResult)
androidx.fragment.R$attr: int layout_behavior
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character firstOrNull(char[])
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: java.lang.String[] getParticipants()
androidx.appcompat.graphics.drawable.StateListDrawable: boolean isStateful()
okio.Buffer: void skip(long)
kotlin.UByteArray: boolean remove(java.lang.Object)
androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()
androidx.versionedparcelable.VersionedParcel: void writeDouble(double,int)
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: void setDefaultSwipeDirs(int)
io.reactivex.processors.UnicastProcessor: void onComplete()
com.jakewharton.rxbinding3.view.RxMenuItem: io.reactivex.Observable actionViewEvents(android.view.MenuItem)
androidx.constraintlayout.solver.widgets.WidgetContainer: void updateDrawPosition()
okio.BufferedSource: long indexOfElement(okio.ByteString)
androidx.appcompat.R$style: int Widget_AppCompat_SeekBar
okhttp3.internal.io.FileSystem: void rename(java.io.File,java.io.File)
androidx.databinding.ObservableMap: void removeOnMapChangedCallback(androidx.databinding.ObservableMap$OnMapChangedCallback)
kotlin.collections.AbstractMutableList: java.lang.Object remove(int)
io.reactivex.Flowable: io.reactivex.Flowable error(java.util.concurrent.Callable)
androidx.recyclerview.widget.RecyclerView: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.lifecycle.ProcessLifecycleOwnerInitializer: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(int[],kotlin.jvm.functions.Function1)
io.reactivex.Flowable: io.reactivex.Flowable zipWith(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean,int)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintBottom_creator
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT
kotlin.Result: int hashCode()
kotlin.collections.MapsKt__MapsJVMKt: java.util.SortedMap toSortedMap(java.util.Map)
io.reactivex.internal.operators.single.SingleMap
androidx.recyclerview.widget.LinearLayoutManager: void setReverseLayout(boolean)
androidx.databinding.MapChangeRegistry
androidx.databinding.ObservableList$OnListChangedCallback: ObservableList$OnListChangedCallback()
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int getMaxVolume()
androidx.customview.widget.ViewDragHelper: void captureChildView(android.view.View,int)
dagger.android.support.R$string: int status_bar_notification_info_overflow
dagger.android.support.R$style: int Base_Widget_AppCompat_Button
androidx.core.location.LocationKt: double component1(android.location.Location)
androidx.appcompat.R$dimen: int notification_small_icon_size_as_large
com.google.gson.internal.bind.TimeTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
kotlinx.coroutines.internal.LockFreeMPSCQueueCore: int ADD_FROZEN
io.reactivex.internal.operators.completable.CompletableConcatArray
com.jakewharton.rxbinding3.internal.AlwaysTrue: java.lang.Object invoke()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintWidth_default
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.ClosedRange,float)
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: kotlinx.coroutines.internal.LockFreeLinkedListNode oldNext
dagger.android.support.R$drawable: int abc_ic_menu_share_mtrl_alpha
androidx.appcompat.view.menu.SubMenuBuilder: android.view.MenuItem getItem()
dagger.android.HasFragmentInjector: dagger.android.AndroidInjector fragmentInjector()
androidx.collection.ArrayMap: boolean removeAll(java.util.Collection)
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
androidx.media.AudioAttributesCompat: int getUsage()
kotlin.Pair: java.lang.Object component1()
androidx.versionedparcelable.VersionedParcel: void writeParcelable(android.os.Parcelable,int)
androidx.core.R$dimen: int notification_large_icon_height
io.reactivex.Flowable: io.reactivex.Flowable retry(long)
androidx.appcompat.graphics.drawable.DrawableWrapper: void jumpToCurrentState()
androidx.constraintlayout.widget.ConstraintSet: void setMargin(int,int,int)
com.example.revolut.rates.R$attr: int thumbTint
dagger.android.support.R$style: int Theme_AppCompat_NoActionBar
kotlinx.coroutines.scheduling.TaskMode: kotlinx.coroutines.scheduling.TaskMode[] values()
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_ARCHIVE
androidx.appcompat.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_MARK_AS_READ
androidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModel create(java.lang.Class)
androidx.cursoradapter.widget.CursorAdapter: androidx.cursoradapter.widget.CursorFilter mCursorFilter
com.google.gson.JsonArray: com.google.gson.JsonElement get(int)
androidx.appcompat.app.AppCompatDialog: boolean dispatchKeyEvent(android.view.KeyEvent)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort--ajY-9A(int[])
io.reactivex.internal.operators.maybe.MaybeOnErrorReturn: MaybeOnErrorReturn(io.reactivex.MaybeSource,io.reactivex.functions.Function)
dagger.android.support.R$id: int expanded_menu
io.reactivex.Flowable: io.reactivex.Flowable repeat()
okio.Buffer: long readLong()
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent copy$default(com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent,android.view.View,int,int,int,int,int,int,int,int,int,java.lang.Object)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_android_orientation
kotlin.reflect.KFunction: boolean isSuspend()
io.reactivex.internal.disposables.DisposableHelper: void reportDisposableSet()
androidx.appcompat.widget.ActionMenuView: boolean isOverflowReserved()
androidx.constraintlayout.widget.ConstraintLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
io.reactivex.internal.operators.maybe.MaybeOnErrorComplete
androidx.appcompat.widget.SearchView$OnQueryTextListener
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int)
com.google.gson.JsonParser: com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader)
androidx.fragment.R$styleable: int GradientColor_android_centerX
kotlin.collections.ArraysKt___ArraysKt: ArraysKt___ArraysKt()
io.reactivex.internal.operators.flowable.FlowableDistinct: void subscribeActual(org.reactivestreams.Subscriber)
androidx.viewpager.widget.ViewPager: int getOffscreenPageLimit()
dagger.android.support.R$styleable: int PopupWindowBackgroundState_state_above_anchor
androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()
kotlinx.coroutines.CoroutineScope: boolean isActive()
androidx.lifecycle.extensions.R$style: int TextAppearance_Compat_Notification
androidx.customview.R$style: int TextAppearance_Compat_Notification_Title
kotlinx.coroutines.CoroutineId: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.ByteIterator iterator(byte[])
androidx.lifecycle.extensions.R$attr: int fontProviderPackage
okhttp3.OkHttpClient: int connectTimeoutMillis()
androidx.core.graphics.PathParser$PathDataNode: float[] mParams
io.reactivex.internal.operators.completable.CompletableMergeIterable: void subscribeActual(io.reactivex.CompletableObserver)
com.example.revolut.rates.R$attr: int progressBarStyle
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher
kotlin.jvm.internal.FloatSpreadBuilder: float[] toArray()
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)
kotlin.collections.CollectionsKt___CollectionsKt: int sumOfByte(java.lang.Iterable)
androidx.collection.LongSparseArray: void removeAt(int)
kotlin.collections.ArraysKt___ArraysKt: boolean any(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.ThreadPoolDispatcherKt: kotlinx.coroutines.ThreadPoolDispatcher newFixedThreadPoolContext(int,java.lang.String)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDrawY(int)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8: java.util.Iterator iterator()
androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener
androidx.appcompat.view.menu.BaseMenuPresenter: void setId(int)
io.reactivex.internal.util.ArrayListSupplier: java.lang.Object apply(java.lang.Object)
androidx.appcompat.R$styleable: int SearchView_queryBackground
androidx.appcompat.R$styleable: int View_paddingEnd
androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(double[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(java.lang.Object[])
kotlin.collections.MapsKt___MapsKt: boolean none(java.util.Map)
io.reactivex.internal.disposables.CancellableDisposable
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
androidx.vectordrawable.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
androidx.lifecycle.extensions.R$styleable: int GradientColor_android_endColor
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.example.revolut.rates.R$id: int action_mode_bar_stub
kotlin.ranges.LongRange: boolean contains(java.lang.Comparable)
io.reactivex.internal.operators.flowable.BlockingFlowableNext: java.util.Iterator iterator()
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.channels.ChannelIterator iterator()
androidx.core.view.WindowCompat: int FEATURE_ACTION_BAR_OVERLAY
kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object receive(kotlin.coroutines.Continuation)
kotlin.reflect.KCallable$DefaultImpls: void isOpen$annotations()
dagger.android.support.R$attr: int color
com.example.revolut.rates.R$color: int material_blue_grey_950
androidx.core.os.OperationCanceledException: OperationCanceledException(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableRefCount: FlowableRefCount(io.reactivex.flowables.ConnectableFlowable,int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
io.reactivex.Flowable: io.reactivex.Maybe reduce(io.reactivex.functions.BiFunction)
dagger.android.support.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
androidx.legacy.coreutils.R$layout: int notification_action
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter endArray()
io.reactivex.internal.operators.observable.ObservableIntervalRange
okhttp3.internal.Internal: java.io.IOException timeoutExit(okhttp3.Call,java.io.IOException)
kotlin.sequences.FilteringSequence$iterator$1: int getNextState()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void pause(java.lang.Object)
com.example.revolut.rates.R$attr: int searchViewStyle
kotlin.collections.ArraysKt___ArraysKt: boolean none(float[])
androidx.legacy.coreui.R$style: int TextAppearance_Compat_Notification_Title
androidx.slidingpanelayout.R$attr: int fontStyle
dagger.android.support.R$styleable: int ViewStubCompat_android_inflatedId
androidx.lifecycle.MethodCallsLogger: boolean approveCall(java.lang.String,int)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setColorFilter(android.graphics.ColorFilter)
androidx.customview.R$style: int TextAppearance_Compat_Notification_Time
androidx.legacy.coreutils.R$styleable: int GradientColor_android_type
io.reactivex.Single: io.reactivex.Single doOnTerminate(io.reactivex.functions.Action)
androidx.appcompat.widget.AbsActionBarView: void postShowOverflowMenu()
androidx.appcompat.widget.SwitchCompat: void onDraw(android.graphics.Canvas)
androidx.appcompat.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,androidx.core.view.WindowInsetsCompat)
android.support.v4.media.session.MediaSessionCompat: java.lang.String KEY_TOKEN
com.example.revolut.rates.R$id: int center_vertical
io.reactivex.internal.observers.InnerQueuedObserver: InnerQueuedObserver(io.reactivex.internal.observers.InnerQueuedObserverSupport,int)
androidx.fragment.app.DialogFragment: int STYLE_NO_TITLE
kotlin.jvm.functions.Function7: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.io.TextStreamsKt: void forEachLine(java.io.Reader,kotlin.jvm.functions.Function1)
kotlin.KotlinVersion: int MAX_COMPONENT_VALUE
kotlinx.coroutines.channels.Closed: java.lang.Object tryResumeReceive(java.lang.Object,java.lang.Object)
kotlin.collections.GroupingKt__GroupingKt: java.util.Map reduce(kotlin.collections.Grouping,kotlin.jvm.functions.Function3)
androidx.core.ktx.R$layout: int notification_template_part_chronometer
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumHeight()
androidx.core.content.SharedPreferencesKt
com.jakewharton.rxbinding3.core.R$id: int action_image
androidx.appcompat.view.menu.MenuBuilder: boolean isShortcutKey(int,android.view.KeyEvent)
com.example.revolut.rates.R$styleable: int AppCompatTheme_colorControlNormal
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed: FlowableTakeLastTimed(io.reactivex.Flowable,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int,boolean)
io.reactivex.internal.operators.observable.ObservablePublishAlt
io.reactivex.Flowable: io.reactivex.Flowable subscribeOn(io.reactivex.Scheduler)
androidx.legacy.v4.R$id: int time
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewAddEvent: android.view.ViewGroup getView()
kotlin.ranges.UIntProgression: boolean isEmpty()
io.reactivex.internal.util.VolatileSizeArrayList: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservableDoFinally: void subscribeActual(io.reactivex.Observer)
androidx.slidingpanelayout.R$styleable: int FontFamily_fontProviderFetchStrategy
io.reactivex.plugins.RxJavaPlugins: boolean isLockdown()
kotlin.collections.EmptySet: long serialVersionUID
androidx.customview.R$styleable: int GradientColor_android_centerY
kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeFilterSingle: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.plugins.RxJavaPlugins: void setInitSingleSchedulerHandler(io.reactivex.functions.Function)
io.reactivex.internal.operators.parallel.ParallelFromPublisher: ParallelFromPublisher(org.reactivestreams.Publisher,int,int)
androidx.appcompat.app.WindowDecorActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
com.example.revolut.rates.R$string: int something_went_wrong
io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(java.lang.Iterable,io.reactivex.functions.Function)
com.jakewharton.rxbinding3.widget.TextViewEditorActionEvent: android.widget.TextView getView()
io.reactivex.internal.util.EndConsumerHelper: boolean validate(io.reactivex.disposables.Disposable,io.reactivex.disposables.Disposable,java.lang.Class)
com.example.revolut.rates.R$dimen: int notification_content_margin_start
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment END
kotlin.io.ConstantsKt
androidx.drawerlayout.R$dimen: int compat_notification_large_icon_max_width
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: float weight
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch(java.util.List,int,int,kotlin.jvm.functions.Function1)
androidx.core.content.pm.PermissionInfoCompat: int getProtection(android.content.pm.PermissionInfo)
androidx.appcompat.view.WindowCallbackWrapper: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet,int)
com.example.revolut.rates.R$attr: int windowFixedWidthMajor
kotlin.jvm.internal.CallableReference: CallableReference()
io.reactivex.subjects.AsyncSubject: boolean hasValue()
okhttp3.Headers: java.util.Set names()
kotlin.math.MathKt__MathJVMKt: float log2(float)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlin.coroutines.experimental.RestrictsSuspension
androidx.loader.R$styleable: int ColorStateListItem_android_alpha
io.reactivex.internal.operators.completable.CompletableToObservable: CompletableToObservable(io.reactivex.CompletableSource)
kotlinx.coroutines.scheduling.WorkQueue$pollExternal$1: boolean invoke(kotlinx.coroutines.scheduling.Task)
io.reactivex.internal.observers.FutureSingleObserver: boolean isDone()
okhttp3.internal.platform.Platform: java.lang.String toString()
androidx.databinding.adapters.SearchViewBindingAdapter
androidx.legacy.coreutils.R$dimen: int notification_right_icon_size
io.reactivex.subjects.ReplaySubject: void onComplete()
androidx.media.MediaSessionManager$RemoteUserInfo: boolean equals(java.lang.Object)
com.example.revolut.rates.R$styleable: int SearchView_closeIcon
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertNoValues()
androidx.appcompat.R$layout: int abc_alert_dialog_title_material
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)
com.google.gson.JsonElement: boolean isJsonPrimitive()
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(char[],char,int,int,int,java.lang.Object)
kotlin.collections.CollectionsKt__IterablesKt: java.util.Collection convertToSetForSetOperation(java.lang.Iterable)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean dispatchOnCreate()
dagger.android.support.R$styleable: int TextAppearance_android_textColorHint
kotlinx.coroutines.internal.LockFreeLinkedListNode: LockFreeLinkedListNode()
kotlin.collections.ArraysKt___ArraysKt: byte last(byte[])
androidx.lifecycle.ProcessLifecycleOwnerInitializer: ProcessLifecycleOwnerInitializer()
com.jakewharton.rxbinding3.view.ViewAttachDetachedEvent: ViewAttachDetachedEvent(android.view.View)
okhttp3.internal.cache.DiskLruCache$Snapshot: void close()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
kotlinx.coroutines.channels.ConflatedChannel: boolean isBufferEmpty()
kotlin.sequences.TakeSequence$iterator$1: void remove()
androidx.fragment.app.FragmentController: void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
kotlin.collections.EmptySet: java.lang.Object[] toArray()
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: boolean offer(java.lang.Object,java.lang.Object)
okhttp3.internal.Util: java.lang.String trimSubstring(java.lang.String,int,int)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertValue(io.reactivex.functions.Predicate)
androidx.appcompat.widget.ActionMenuView: boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl)
kotlinx.coroutines.CoroutineName: kotlinx.coroutines.CoroutineName copy$default(kotlinx.coroutines.CoroutineName,java.lang.String,int,java.lang.Object)
dagger.android.support.R$attr: int windowNoTitle
kotlin.text.Regex: kotlin.text.MatchResult find(java.lang.CharSequence,int)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_visibility
io.reactivex.subjects.BehaviorSubject: java.lang.Throwable getThrowable()
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilOtherSubscriber: long serialVersionUID
kotlin.text.Regex: kotlin.sequences.Sequence findAll$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object)
dagger.android.support.R$drawable: int abc_item_background_holo_dark
com.example.revolut.rates.di.AppModule_ProvideRatesApiFactory
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnKeyListener mOnKeyListener
androidx.coordinatorlayout.R$color
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
androidx.viewpager.widget.PagerTitleStrip: PagerTitleStrip(android.content.Context)
androidx.swiperefreshlayout.R$id: int line1
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber
androidx.appcompat.R$styleable: int StateListDrawable_android_dither
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_constraint_referenced_ids
kotlinx.coroutines.internal.SystemPropsKt: java.lang.String systemProp(java.lang.String)
dagger.android.support.R$layout
kotlin.properties.ObservableProperty: ObservableProperty(java.lang.Object)
com.example.revolut.rates.R$dimen: int abc_dialog_fixed_width_major
com.google.gson.reflect.TypeToken: java.lang.reflect.Type getType()
kotlin.ranges.URangesKt___URangesKt: short coerceAtMost-5PvTz6A(short,short)
androidx.constraintlayout.solver.widgets.Guideline: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor()
androidx.core.view.PointerIconCompat: int TYPE_HORIZONTAL_DOUBLE_ARROW
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)
androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)
kotlin.jvm.PurelyImplements: java.lang.String value()
io.reactivex.internal.operators.maybe.MaybeConcatArray
com.example.revolut.rates.R$styleable: int ConstraintSet_android_layout_marginLeft
androidx.core.graphics.BitmapKt: android.graphics.Bitmap scale(android.graphics.Bitmap,int,int,boolean)
kotlin.ExtensionFunctionType
androidx.versionedparcelable.VersionedParcel: char[] readCharArray(char[],int)
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.internal.operators.observable.ObservableCombineLatest
androidx.appcompat.R$styleable: int Toolbar_contentInsetStart
io.reactivex.internal.util.NotificationLite: java.lang.Object disposable(io.reactivex.disposables.Disposable)
kotlin.collections.AbstractMap: boolean equals(java.lang.Object)
androidx.appcompat.R$styleable: int[] PopupWindowBackgroundState
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(int[],int,int,int,java.lang.Object)
androidx.loader.R$styleable: int FontFamilyFont_ttcIndex
androidx.appcompat.R$attr: int fontProviderQuery
okhttp3.Interceptor$Chain
androidx.recyclerview.widget.RecyclerView$LayoutManager: void postOnAnimation(java.lang.Runnable)
androidx.appcompat.R$styleable: int ActionBar_progressBarStyle
com.example.revolut.rates.R$styleable: int FontFamilyFont_android_fontWeight
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1
androidx.appcompat.widget.ListPopupWindow: void setInputMethodMode(int)
com.example.revolut.rates.R$id: int actions
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
kotlin.sequences.TransformingIndexedSequence$iterator$1: java.util.Iterator getIterator()
androidx.appcompat.view.StandaloneActionMode: java.lang.CharSequence getTitle()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(java.lang.Object[],int)
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.Character)
io.reactivex.internal.operators.observable.ObservableAny
io.reactivex.Maybe: io.reactivex.Maybe doOnTerminate(io.reactivex.functions.Action)
kotlin.jvm.internal.Intrinsics: void throwIllegalState()
androidx.appcompat.R$layout: int notification_template_part_chronometer
io.reactivex.internal.observers.QueueDrainObserver: boolean done()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent)
io.reactivex.internal.operators.single.SingleContains: SingleContains(io.reactivex.SingleSource,java.lang.Object,io.reactivex.functions.BiPredicate)
androidx.recyclerview.widget.TileList$Tile: java.lang.Object[] mItems
androidx.appcompat.view.ActionBarPolicy: int getStackedTabMaxWidth()
com.example.revolut.rates.R$styleable: int AppCompatTheme_alertDialogStyle
androidx.core.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_YES
com.example.revolut.rates.R$id: int search_close_btn
android.support.v4.media.session.IMediaSession: long getFlags()
androidx.recyclerview.R$attr: int layout_dodgeInsetEdges
io.reactivex.internal.util.VolatileSizeArrayList: java.util.ListIterator listIterator(int)
androidx.constraintlayout.widget.R$styleable: int[] ConstraintLayout_Layout
androidx.appcompat.view.menu.MenuBuilder: int size()
androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback
retrofit2.http.HeaderMap
androidx.appcompat.app.ActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)
kotlinx.coroutines.sync.MutexImpl$lockSuspend$$inlined$suspendAtomicCancellableCoroutine$lambda$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.appcompat.R$style: int Theme_AppCompat_DayNight_NoActionBar
com.example.revolut.rates.R$styleable: int SwitchCompat_trackTintMode
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setMinWidth(int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setQueryParameter(java.lang.String,java.lang.String)
androidx.core.app.NotificationCompat$Action
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List mapIndexedNotNull(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(double[],java.lang.Iterable)
androidx.core.internal.view.SupportMenuItem: android.view.View getActionView()
androidx.core.text.PrecomputedTextCompat: android.text.PrecomputedText getPrecomputedText()
androidx.appcompat.widget.DecorToolbar: void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
com.example.revolut.rates.R$color: int notification_icon_bg_color
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: java.lang.Object get(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int FOCUS_INPUT
androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable runOn(io.reactivex.Scheduler)
kotlinx.coroutines.JobNode: void dispose()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShortcut(char,char,int,int)
kotlin.PublishedApi
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintHideIcon(boolean)
dagger.android.support.R$style: int Widget_AppCompat_Light_SearchView
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean isPointInChildBounds(android.view.View,int,int)
com.example.revolut.rates.R$string: int abc_menu_meta_shortcut_label
androidx.core.R$dimen: int notification_subtext_size
androidx.appcompat.widget.DecorContentParent: void setWindowTitle(java.lang.CharSequence)
androidx.core.app.ServiceCompat: void stopForeground(android.app.Service,int)
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinator: long serialVersionUID
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getHeightMode()
androidx.viewpager.R$styleable: int[] FontFamilyFont
com.jakewharton.rxbinding3.InitialValueObservable: io.reactivex.Observable skipInitialValue()
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintEnd_toStartOf
androidx.appcompat.R$attr: int trackTintMode
androidx.constraintlayout.solver.widgets.ConstraintWidget: int mOffsetX
androidx.appcompat.app.WindowDecorActionBar: void onContentScrollStopped()
kotlin.jvm.internal.ReflectionFactory: ReflectionFactory()
dagger.android.support.R$styleable: int AppCompatSeekBar_tickMark
okhttp3.internal.cache.DiskLruCache$Editor
androidx.viewpager.widget.ViewPager$SavedState: java.lang.String toString()
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource[],io.reactivex.functions.Function)
kotlinx.coroutines.scheduling.CoroutineScheduler: int access$getCreatedWorkers$p(kotlinx.coroutines.scheduling.CoroutineScheduler)
kotlin.ranges.IntProgression
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment)
kotlinx.coroutines.channels.Send: void resumeSendClosed(kotlinx.coroutines.channels.Closed)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.EmptyList: boolean addAll(int,java.util.Collection)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: boolean contains(java.lang.Object)
androidx.appcompat.widget.DecorToolbar: java.lang.CharSequence getSubtitle()
androidx.appcompat.R$styleable: int AppCompatTheme_checkedTextViewStyle
kotlin.contracts.ConditionalEffect
androidx.appcompat.widget.ListPopupWindow: int getHorizontalOffset()
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintBaseline_creator
io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingLeft
kotlin.text.DelimitedRangesSequence$iterator$1: void setNextState(int)
io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sorted(java.util.Comparator)
io.reactivex.Single: io.reactivex.Completable toCompletable()
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map groupBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: void onDestroyActionMode(androidx.appcompat.view.ActionMode)
androidx.core.os.LocaleListCompat: java.util.Locale getFirstMatch(java.lang.String[])
androidx.coordinatorlayout.R$styleable: int FontFamily_fontProviderAuthority
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint getPaint()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getLeftDecorationWidth(android.view.View)
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)
io.reactivex.Observable: io.reactivex.Single sequenceEqual(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiPredicate,int)
android.support.v4.media.MediaDescriptionCompat: android.os.Bundle getExtras()
kotlin.TypeCastException: TypeCastException(java.lang.String)
androidx.collection.LruCache: int maxSize()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(boolean[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.appcompat.app.ActionBar: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
kotlin.text.StringsKt__IndentKt: java.lang.String trimIndent(java.lang.String)
dagger.android.support.R$dimen: int abc_dialog_fixed_width_major
kotlinx.coroutines.internal.ThreadLocalElement
okio.ByteString: okio.ByteString sha512()
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-ctEhBpI(int[],int[])
androidx.appcompat.R$styleable: int SwitchCompat_thumbTextPadding
androidx.drawerlayout.widget.DrawerLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat build()
com.example.revolut.rates.R$attr: int layout_constraintBottom_toTopOf
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier: ObservableBufferBoundarySupplier(io.reactivex.ObservableSource,java.util.concurrent.Callable,java.util.concurrent.Callable)
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMark
kotlin.sequences.DropWhileSequence$iterator$1: void setNextItem(java.lang.Object)
androidx.appcompat.widget.PopupMenu: PopupMenu(android.content.Context,android.view.View,int)
io.reactivex.internal.operators.observable.ObservablePublish: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.subscribers.BlockingFirstSubscriber: BlockingFirstSubscriber()
io.reactivex.internal.operators.flowable.FlowableElementAtSingle: FlowableElementAtSingle(io.reactivex.Flowable,long,java.lang.Object)
com.example.revolut.rates.di.AppModule: com.example.revolut.rates.data.repository.CurrenciesRepository provideCurrenciesRepository()
io.reactivex.Observable: io.reactivex.Observable switchMapDelayError(io.reactivex.functions.Function)
kotlin.collections.DoubleIterator: java.lang.Object next()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(java.time.Duration)
kotlin.collections.ArraysKt___ArraysKt: int indexOf(byte[],byte)
com.jakewharton.rxbinding3.core.R$style: int TextAppearance_Compat_Notification_Info
okhttp3.Challenge: java.lang.String scheme()
androidx.media.AudioAttributesCompat: int USAGE_ASSISTANT
androidx.recyclerview.widget.ItemTouchHelper: void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
io.reactivex.Observable: io.reactivex.Observable sample(long,java.util.concurrent.TimeUnit,boolean)
okio.Options: int size()
androidx.core.ktx.R$id: int action_divider
androidx.customview.R$integer
okhttp3.internal.connection.RealConnection: boolean isEligible(okhttp3.Address,okhttp3.Route)
io.reactivex.Flowable: io.reactivex.Flowable buffer(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.internal.subscribers.BasicFuseableSubscriber: boolean beforeDownstream()
androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewLayoutPosition()
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable drags(android.view.View)
androidx.lifecycle.extensions.R$id: int time
androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener: SlidingPaneLayout$SimplePanelSlideListener()
io.reactivex.Observable: io.reactivex.Observable startWith(java.lang.Object)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_transformPivotY
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationZ(float)
android.support.v4.media.session.PlaybackStateCompat: int SHUFFLE_MODE_GROUP
androidx.media.MediaBrowserProtocol: java.lang.String DATA_RESULT_RECEIVER
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
dagger.android.support.HasSupportFragmentInjector: dagger.android.AndroidInjector supportFragmentInjector()
com.example.revolut.rates.DataBinderMapperImpl: java.lang.String convertBrIdToString(int)
androidx.core.util.Pools$Pool
android.support.v4.media.session.MediaControllerCompat: void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
androidx.appcompat.widget.ThemedSpinnerAdapter: void setDropDownViewTheme(android.content.res.Resources$Theme)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
dagger.android.support.R$style: int TextAppearance_AppCompat_Display1
androidx.appcompat.view.menu.MenuBuilder: android.graphics.drawable.Drawable getHeaderIcon()
com.google.gson.Gson: void toJson(java.lang.Object,java.lang.Appendable)
androidx.customview.R$styleable: int ColorStateListItem_android_color
androidx.fragment.R$dimen: int compat_button_inset_horizontal_material
io.reactivex.processors.UnicastProcessor: void onNext(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeNever: io.reactivex.internal.operators.maybe.MaybeNever INSTANCE
okhttp3.TlsVersion: okhttp3.TlsVersion SSL_3_0
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$single$3: ChannelsKt__Channels_commonKt$single$3(kotlin.coroutines.Continuation)
androidx.versionedparcelable.ParcelField
androidx.core.R$drawable: int notification_template_icon_low_bg
com.example.revolut.rates.R$color: int abc_tint_switch_track
androidx.appcompat.app.ActionBar: androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback)
io.reactivex.Flowable: io.reactivex.Flowable interval(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.R$styleable: int AppCompatTheme_editTextBackground
dagger.android.support.DaggerApplication_MembersInjector: DaggerApplication_MembersInjector(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
kotlin.Experimental$Level: kotlin.Experimental$Level WARNING
dagger.android.support.R$string: int abc_font_family_button_material
io.reactivex.internal.observers.ForEachWhileObserver: long serialVersionUID
androidx.core.util.HalfKt
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map groupByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$attr: int titleTextColor
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntProgression step(kotlin.ranges.UIntProgression,int)
android.support.v4.media.MediaMetadataCompat: java.util.Set keySet()
io.reactivex.Single: io.reactivex.Flowable mergeWith(io.reactivex.SingleSource)
androidx.appcompat.widget.ListPopupWindow: void setAnimationStyle(int)
kotlin.jvm.internal.ClassReference: void visibility$annotations()
androidx.databinding.adapters.TextViewBindingAdapter: java.lang.String getTextString(android.widget.TextView)
kotlin.Result$Companion: Result$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: float last(float[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ActionBar
kotlin.coroutines.experimental.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.experimental.CoroutineContext$Element get(kotlin.coroutines.experimental.ContinuationInterceptor,kotlin.coroutines.experimental.CoroutineContext$Key)
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: long serialVersionUID
androidx.coordinatorlayout.R$styleable: int[] GradientColor
kotlin.ranges.IntRange: boolean isEmpty()
okio.ForwardingSource: long read(okio.Buffer,long)
com.example.revolut.rates.R$style: int Widget_AppCompat_Spinner_DropDown
androidx.recyclerview.widget.ItemTouchHelper$Callback: androidx.recyclerview.widget.RecyclerView$ViewHolder chooseDropTarget(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,int)
kotlin.text.CharsKt
dagger.android.support.R$attr: int actionModeCutDrawable
okhttp3.internal.http.HttpCodec: void cancel()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int)
androidx.recyclerview.R$styleable: int FontFamilyFont_fontStyle
kotlinx.coroutines.channels.Channel$Factory: kotlinx.coroutines.channels.Channel invoke$default(kotlinx.coroutines.channels.Channel$Factory,int,int,java.lang.Object)
kotlinx.coroutines.YieldKt: void checkCompletion(kotlin.coroutines.CoroutineContext)
com.example.revolut.rates.R$id: int onDateChanged
kotlinx.coroutines.CoroutineExceptionHandlerImplKt
kotlinx.coroutines.channels.ActorKt: kotlinx.coroutines.channels.SendChannel actor$default(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
dagger.android.support.R$styleable: int[] ViewStubCompat
kotlin.collections.AbstractList: void add(int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
kotlinx.coroutines.TimeoutCancellationException: TimeoutCancellationException(java.lang.String)
androidx.appcompat.R$attr: int titleTextAppearance
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_SearchResult_Title
com.example.revolut.rates.R$id: int showCustom
androidx.constraintlayout.widget.R$id: int end
kotlinx.coroutines.CancellableContinuation$DefaultImpls
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
androidx.appcompat.R$attr: int voiceIcon
com.example.revolut.rates.R$attr: int windowMinWidthMajor
org.intellij.lang.annotations.Flow: java.lang.String RETURN_METHOD_TARGET
io.reactivex.internal.operators.flowable.FlowableDoFinally
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte singleOrNull(byte[])
com.example.revolut.rates.R$id: int normal
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
androidx.appcompat.R$attr: int fontProviderAuthority
retrofit2.http.FormUrlEncoded
dagger.android.support.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
android.support.v4.media.session.MediaSessionCompatApi24$Callback: void onPrepare()
androidx.core.view.ViewCompat: void cancelDragAndDrop(android.view.View)
com.example.revolut.rates.R$drawable: int abc_ic_voice_search_api_material
com.example.revolut.rates.R$attr: int panelBackground
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier
androidx.databinding.ViewDataBinding: android.graphics.drawable.Drawable getDrawableFromResource(android.view.View,int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int INVISIBLE
kotlinx.coroutines.CommonPool: boolean isGoodCommonPool$kotlinx_coroutines_core(java.lang.Class,java.util.concurrent.ExecutorService)
androidx.fragment.R$id: int action_text
com.jakewharton.rxbinding3.core.R$string: int status_bar_notification_info_overflow
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int getLastIndex-QwZRm1k(long[])
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noStore()
androidx.appcompat.R$dimen: int abc_dialog_corner_radius_material
kotlinx.coroutines.CoroutineDispatcher: java.lang.String toString()
androidx.fragment.R$attr: int font
io.reactivex.internal.operators.completable.CompletableHide: CompletableHide(io.reactivex.CompletableSource)
androidx.appcompat.R$attr: int homeAsUpIndicator
com.example.revolut.rates.R$styleable: int AppCompatTheme_spinnerStyle
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getResourceId()
androidx.databinding.OnRebindCallback: void onBound(androidx.databinding.ViewDataBinding)
dagger.android.support.R$id: int action_bar_activity_content
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(float[],kotlin.jvm.functions.Function1)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void connectedTo(androidx.constraintlayout.solver.widgets.ConstraintWidget)
io.reactivex.internal.disposables.SequentialDisposable: boolean update(io.reactivex.disposables.Disposable)
io.reactivex.internal.observers.FutureSingleObserver: void onError(java.lang.Throwable)
kotlin.jvm.internal.TypeIntrinsics: java.util.List asMutableList(java.lang.Object)
androidx.constraintlayout.widget.R$attr: int layout_constraintBottom_toTopOf
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier: ObservableWindowBoundarySupplier(io.reactivex.ObservableSource,java.util.concurrent.Callable,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View,int)
kotlinx.coroutines.CoroutineName: kotlinx.coroutines.CoroutineName$Key Key
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_16
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable longClicks(android.view.View,kotlin.jvm.functions.Function0)
dagger.android.AndroidInjection: void inject(android.app.Service)
com.example.revolut.rates.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1: SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1(kotlin.sequences.Sequence)
com.jakewharton.rxbinding3.core.R$id: int tag_transition_group
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy valueOf(java.lang.String)
androidx.core.util.Pair: java.lang.String toString()
com.example.revolut.rates.R$color: int dim_foreground_disabled_material_dark
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setAlwaysBadged()
androidx.legacy.v4.R$styleable: int FontFamilyFont_fontStyle
com.example.revolut.rates.R$string: int abc_menu_function_shortcut_label
io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(java.lang.Iterable,int,int)
com.example.revolut.rates.R$drawable: int abc_list_focused_holo
androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.example.revolut.rates.R$attr: int editTextBackground
androidx.fragment.app.ListFragment: void setListShownNoAnimation(boolean)
io.reactivex.internal.functions.Functions: io.reactivex.functions.Action notificationOnComplete(io.reactivex.functions.Consumer)
androidx.appcompat.R$attr: int windowNoTitle
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getTextSelectionStart()
dagger.android.support.R$dimen: int abc_text_size_body_2_material
com.jakewharton.rxbinding3.widget.ToolbarNavigationClickObservable: void subscribeActual(io.reactivex.Observer)
dagger.android.support.R$drawable: int abc_list_selector_holo_light
io.reactivex.internal.operators.single.SingleDelayWithObservable
androidx.databinding.ObservableArrayMap
retrofit2.Response: java.lang.Object body()
androidx.legacy.coreui.R$styleable: int[] GradientColorItem
okhttp3.HttpUrl: java.lang.String encodedPath()
androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat from(android.content.Context)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
dagger.android.support.R$style: int Theme_AppCompat_Dialog_MinWidth
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection valueOf(java.lang.String)
com.example.revolut.rates.R$dimen: int tooltip_y_offset_touch
androidx.loader.R$id: int italic
kotlin.io.LinesSequence$iterator$1: java.lang.Object next()
kotlin.io.FileTreeWalk: java.util.Iterator iterator()
androidx.appcompat.app.WindowDecorActionBar: int getNavigationMode()
io.reactivex.internal.observers.InnerQueuedObserver: long serialVersionUID
kotlin.collections.EmptySet: boolean add(java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int getIndexInArray()
androidx.collection.ArraySet: ArraySet(int)
androidx.appcompat.app.AppCompatDelegate: void onSaveInstanceState(android.os.Bundle)
android.support.v4.media.session.IMediaSession: void sendCustomAction(java.lang.String,android.os.Bundle)
androidx.asynclayoutinflater.R$drawable: int notification_bg_low_normal
android.support.v4.media.session.IMediaControllerCallback$Stub: android.support.v4.media.session.IMediaControllerCallback asInterface(android.os.IBinder)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6
kotlin.collections.unsigned.UArraysKt___UArraysKt: void lastIndex$annotations(long[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(boolean[],java.lang.Iterable)
androidx.core.view.ViewCompat: void setScaleX(android.view.View,float)
com.example.revolut.rates.R$attr: int layout_goneMarginRight
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.SubMenu getSubMenu()
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification_Info
io.reactivex.internal.operators.observable.ObservableFromFuture
dagger.android.support.R$attr: int listMenuViewStyle
androidx.core.view.MotionEventCompat: int AXIS_TOUCH_MAJOR
dagger.android.support.R$attr: int srcCompat
com.google.gson.internal.LinkedTreeMap: java.lang.Object get(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax: void accept(java.lang.Object)
kotlin.UInt$Companion
kotlin.collections.ArraysKt___ArraysKt: char[] sliceArray(char[],kotlin.ranges.IntRange)
androidx.core.graphics.drawable.IconCompat: int mInt1
com.jakewharton.rxbinding3.core.R$drawable
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence zipWithNext(kotlin.sequences.Sequence)
androidx.core.transition.TransitionKt$addListener$2: TransitionKt$addListener$2()
androidx.recyclerview.R$dimen: int notification_large_icon_height
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)
kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection copy$default(kotlin.reflect.KTypeProjection,kotlin.reflect.KVariance,kotlin.reflect.KType,int,java.lang.Object)
com.example.revolut.rates.R$id: int beginning
kotlin.WasExperimental
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long minBy(long[],kotlin.jvm.functions.Function1)
androidx.databinding.DataBindingUtil: androidx.databinding.DataBindingComponent getDefaultComponent()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxBy(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.R$id: int action_image
kotlin.text.StringsKt__StringsKt: StringsKt__StringsKt()
androidx.vectordrawable.R$styleable: int FontFamilyFont_android_fontStyle
androidx.core.view.ViewKt: void updatePadding(android.view.View,int,int,int,int)
com.example.revolut.rates.R$string: R$string()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filter(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringBuilderJVMKt: StringsKt__StringBuilderJVMKt()
androidx.recyclerview.widget.ItemTouchUIUtil: void onSelected(android.view.View)
com.example.revolut.rates.data.model.Rate: com.example.revolut.rates.data.model.Rate access$getEMPTY$cp()
androidx.appcompat.R$style: int Widget_AppCompat_SearchView
androidx.appcompat.R$styleable: int SearchView_queryHint
io.reactivex.internal.queue.SpscArrayQueue: boolean offer(java.lang.Object,java.lang.Object)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.example.revolut.rates.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
androidx.legacy.coreui.R$id: int notification_main_column
androidx.appcompat.R$style: int Theme_AppCompat_DayNight_Dialog
kotlinx.coroutines.JobSupport: void registerSelectClause1Internal$kotlinx_coroutines_core(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.markers.KMappedMarker
okio.ByteString: long serialVersionUID
io.reactivex.observers.DisposableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
androidx.versionedparcelable.VersionedParcel: void writeLong(long)
androidx.core.text.BidiFormatter: boolean isRtl(java.lang.CharSequence)
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber$MergeInnerObserver: long serialVersionUID
kotlinx.coroutines.channels.AbstractSendChannel$onSend$1
androidx.coordinatorlayout.R$id: int action_text
com.example.revolut.rates.R$style: int Theme_AppCompat_Light_Dialog_Alert
com.google.gson.stream.JsonWriter: void setLenient(boolean)
kotlin.sequences.SubSequence: kotlin.sequences.Sequence take(int)
kotlinx.coroutines.ThreadContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext)
androidx.appcompat.app.AlertDialog$Builder: android.content.Context getContext()
kotlinx.coroutines.scheduling.WorkQueue
okhttp3.Call: boolean isCanceled()
androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)
io.reactivex.functions.BiConsumer: void accept(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean any(double[],kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: void onError(java.lang.Throwable)
androidx.recyclerview.widget.DividerItemDecoration: int HORIZONTAL
com.example.revolut.rates.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
androidx.appcompat.view.ActionBarPolicy
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(int[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.view.MarginLayoutParamsCompat: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
androidx.annotation.LongDef: long[] value()
androidx.legacy.coreui.R$styleable: int FontFamilyFont_font
com.jakewharton.rxbinding3.view.ViewScrollChangeEvent: int component3()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isChecked()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.FitWindowsLinearLayout
kotlin.Pair: java.lang.String toString()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object consumeEach(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher
okhttp3.internal.connection.ConnectInterceptor: okhttp3.OkHttpClient client
androidx.core.view.ViewCompat: float getElevation(android.view.View)
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.DisplayCutoutCompat: boolean equals(java.lang.Object)
kotlin.Metadata: int[] mv()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
io.reactivex.observers.TestObserver: void cancel()
io.reactivex.internal.operators.observable.ObservableFromPublisher: ObservableFromPublisher(org.reactivestreams.Publisher)
io.reactivex.internal.operators.flowable.FlowableAutoConnect
androidx.databinding.adapters.AdapterViewBindingAdapter$OnItemSelectedComponentListener: AdapterViewBindingAdapter$OnItemSelectedComponentListener(androidx.databinding.adapters.AdapterViewBindingAdapter$OnItemSelected,androidx.databinding.adapters.AdapterViewBindingAdapter$OnNothingSelected,androidx.databinding.InverseBindingListener)
com.example.revolut.rates.databinding.ActivityMainBinding: com.example.revolut.rates.databinding.ActivityMainBinding inflate(android.view.LayoutInflater,java.lang.Object)
androidx.databinding.adapters.SwitchBindingAdapter: void setSwitchTextAppearance(android.widget.Switch,int)
kotlin.UInt$Companion: UInt$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.UInt: java.lang.String toString()
androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()
androidx.coordinatorlayout.R$attr: int alpha
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] sliceArray(java.lang.Object[],java.util.Collection)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintWidth_max
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(char[],char[])
kotlin.jvm.internal.CharCompanionObject: int SIZE_BITS
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(boolean[],kotlin.jvm.functions.Function2)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setAlpha(int)
androidx.drawerlayout.R$style: int Widget_Compat_NotificationActionText
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(char[],int)
android.support.v4.media.session.MediaSessionCompat$Callback: void onSetCaptioningEnabled(boolean)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder disableHtmlEscaping()
io.reactivex.Completable: io.reactivex.Completable doAfterTerminate(io.reactivex.functions.Action)
okhttp3.internal.http1.Http1Codec: okio.Sink newFixedLengthSink(long)
io.reactivex.internal.observers.ResumeSingleObserver
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnDismissListener mOnDismissListener
io.reactivex.internal.operators.flowable.FlowableRefCount
io.reactivex.internal.operators.flowable.FlowableTimeout
kotlin.jvm.JvmOverloads
com.example.revolut.rates.R$id: int currency_image
io.reactivex.internal.operators.single.SingleDoAfterSuccess: SingleDoAfterSuccess(io.reactivex.SingleSource,io.reactivex.functions.Consumer)
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function9)
androidx.appcompat.widget.DecorToolbar: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
androidx.appcompat.R$drawable: int abc_btn_check_material
okhttp3.EventListener: void connectEnd(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol)
kotlin.UnsignedKt: long ulongDivide-eb3DHEI(long,long)
kotlin.ranges.ULongProgression$Companion: kotlin.ranges.ULongProgression fromClosedRange-7ftBX0g(long,long,long)
androidx.core.ktx.R$dimen: int compat_notification_large_icon_max_width
io.reactivex.internal.operators.observable.ObservableRepeatUntil: ObservableRepeatUntil(io.reactivex.Observable,io.reactivex.functions.BooleanSupplier)
io.reactivex.internal.operators.completable.CompletableDoOnEvent: void subscribeActual(io.reactivex.CompletableObserver)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2
kotlin.LazyThreadSafetyMode
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort max-rL5Bavg(short[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong minWith-zrEWJaI(long[],java.util.Comparator)
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarTabStyle
android.support.v4.media.session.IMediaSession: void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KMutableProperty0 mutableProperty0(kotlin.jvm.internal.MutablePropertyReference0)
androidx.core.provider.FontsContractCompat: java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal)
com.google.gson.JsonArray: com.google.gson.JsonElement deepCopy()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_LARGE
dagger.android.support.R$drawable: int abc_ab_share_pack_mtrl_alpha
kotlin.collections.GroupingKt__GroupingKt: java.util.Map aggregateTo(kotlin.collections.Grouping,java.util.Map,kotlin.jvm.functions.Function4)
io.reactivex.Flowable: io.reactivex.Flowable sorted()
androidx.core.graphics.ColorKt: float component3(long)
androidx.appcompat.view.menu.MenuView$ItemView: boolean prefersCondensedTitle()
android.support.v4.media.MediaDescriptionCompat: long BT_FOLDER_TYPE_ARTISTS
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBar getSupportActionBar()
androidx.versionedparcelable.VersionedParcel: void writeString(java.lang.String,int)
androidx.lifecycle.ProcessLifecycleOwnerInitializer
com.example.revolut.rates.R$dimen: int abc_action_bar_content_inset_with_nav
androidx.loader.content.Loader: void forceLoad()
dagger.android.support.R$id: int search_edit_frame
io.reactivex.internal.operators.single.SingleFromPublisher
com.example.revolut.rates.R$dimen: int abc_seekbar_track_background_height_material
androidx.core.provider.SelfDestructiveThread: java.lang.Object postAndWait(java.util.concurrent.Callable,int)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int)
kotlinx.coroutines.selects.SelectBuilderImpl: void handleBuilderException(java.lang.Throwable)
io.reactivex.internal.fuseable.HasUpstreamObservableSource: io.reactivex.ObservableSource source()
android.support.v4.media.MediaDescriptionCompat: java.lang.CharSequence getSubtitle()
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setOptimizationLevel(int)
androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SUB_TEXT
io.reactivex.internal.operators.observable.ObservableObserveOn: void subscribeActual(io.reactivex.Observer)
androidx.databinding.adapters.ListenerUtil: java.lang.Object trackListener(android.view.View,java.lang.Object,int)
io.reactivex.subjects.UnicastSubject: void onComplete()
kotlin.jvm.internal.LocalVariableReference
io.reactivex.internal.operators.observable.ObservableElementAtSingle
androidx.appcompat.R$drawable: int abc_ic_star_black_48dp
com.example.revolut.rates.R$id: int async
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$1: void resumeWithException(java.lang.Throwable)
androidx.core.view.ViewConfigurationCompat
io.reactivex.internal.operators.observable.ObservableSkipWhile
kotlin.text.MatcherMatchResult$groupValues$1
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe: ObservableSwitchMapMaybe(io.reactivex.Observable,io.reactivex.functions.Function,boolean)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_goneMarginStart
androidx.core.view.ViewGroupKt: void forEachIndexed(android.view.ViewGroup,kotlin.jvm.functions.Function2)
okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route)
io.reactivex.internal.util.OpenHashSet: boolean remove(java.lang.Object)
io.reactivex.internal.util.LinkedArrayList
androidx.media.R$id: int line3
androidx.core.util.TimeUtils: int HUNDRED_DAY_FIELD_LEN
androidx.appcompat.widget.ToolbarWidgetWrapper: void setIcon(int)
io.reactivex.internal.schedulers.ComputationScheduler: void start()
dagger.android.support.R$drawable: int abc_item_background_holo_light
kotlin.jvm.internal.TypeIntrinsics: java.util.Map asMutableMap(java.lang.Object,java.lang.String)
androidx.core.app.AppOpsManagerCompat: int MODE_ALLOWED
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)
android.support.v4.media.session.MediaControllerCompat: boolean isCaptioningEnabled()
kotlin.io.FilesKt__UtilsKt: java.io.File resolve(java.io.File,java.lang.String)
io.reactivex.plugins.RxJavaPlugins: org.reactivestreams.Subscriber onSubscribe(io.reactivex.Flowable,org.reactivestreams.Subscriber)
androidx.constraintlayout.solver.ArrayRow: java.lang.String toString()
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy DEFAULT
io.reactivex.processors.BehaviorProcessor
kotlinx.coroutines.Job: boolean isActive()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.appcompat.app.ActionBar: int DISPLAY_SHOW_HOME
dagger.android.support.R$attr: int displayOptions
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter name(java.lang.String)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: long serialVersionUID
android.support.v4.media.session.IMediaSession: void seekTo(long)
okio.Buffer: okio.BufferedSink writeByte(int)
androidx.recyclerview.R$styleable: int[] ColorStateListItem
retrofit2.http.GET
dagger.android.DaggerApplication
com.jakewharton.rxbinding3.widget.AdapterViewNothingSelectionEvent: java.lang.String toString()
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle setConversationTitle(java.lang.CharSequence)
androidx.legacy.coreui.R$layout: int notification_template_part_chronometer
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle: FlowableFlatMapSingle(io.reactivex.Flowable,io.reactivex.functions.Function,boolean,int)
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc
androidx.appcompat.graphics.drawable.DrawableContainer: int getAlpha()
io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher)
io.reactivex.Completable: io.reactivex.Completable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,io.reactivex.CompletableSource)
androidx.appcompat.R$dimen: int notification_content_margin_start
androidx.appcompat.widget.ListPopupWindow: int getSelectedItemPosition()
kotlin.text.Regex: java.lang.String toString()
androidx.appcompat.view.menu.ActionMenuItemView: void onConfigurationChanged(android.content.res.Configuration)
kotlin.coroutines.experimental.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.experimental.CoroutineContext plus(kotlin.coroutines.experimental.CoroutineContext$Element,kotlin.coroutines.experimental.CoroutineContext)
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_fontWeight
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setNumericShortcut(char,int)
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable detaches(android.view.View)
com.jakewharton.rxbinding3.view.ViewAttachEvent: ViewAttachEvent(kotlin.jvm.internal.DefaultConstructorMarker)
com.jakewharton.rxbinding3.view.RxMenuItem: io.reactivex.Observable actionViewEvents$default(android.view.MenuItem,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.example.revolut.rates.R$styleable: int AppCompatTheme_windowMinWidthMinor
io.reactivex.internal.operators.completable.CompletableSubscribeOn
com.example.revolut.rates.R$styleable: int AppCompatTextView_lineHeight
io.reactivex.internal.subscriptions.AsyncSubscription
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(long[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.appcompat.R$drawable: int abc_list_longpressed_holo
com.example.revolut.rates.R$styleable: int MenuItem_android_menuCategory
dagger.android.support.R$layout: int notification_template_big_media_narrow
dagger.android.ServiceKey: java.lang.Class value()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getChildDrawingOrder(int,int)
kotlin.text.StringsKt___StringsKt: java.lang.Character lastOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.viewpager.R$id: int action_container
okhttp3.OkHttpClient: int pingIntervalMillis()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_APPLICATION
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setAlpha(int)
okhttp3.Headers$Builder: Headers$Builder()
androidx.lifecycle.extensions.R$id: int action_divider
androidx.versionedparcelable.R
androidx.core.net.TrafficStatsCompat: void tagSocket(java.net.Socket)
com.example.revolut.rates.R$dimen: int compat_control_corner_material
io.reactivex.processors.UnicastProcessor: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.AppCompatSpinner
kotlin.text.Regex$fromInt$$inlined$apply$lambda$1
androidx.appcompat.widget.ActionMenuView$ActionMenuChildView: boolean needsDividerBefore()
androidx.appcompat.widget.ActivityChooserView: void setProvider(androidx.core.view.ActionProvider)
androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
android.support.v4.media.session.PlaybackStateCompat: int STATE_BUFFERING
androidx.viewpager.widget.PagerTabStrip: void setBackgroundColor(int)
androidx.constraintlayout.widget.ConstraintSet: int MATCH_CONSTRAINT_WRAP
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setShortcut(char,char,int,int)
io.reactivex.internal.operators.observable.ObservableCollectSingle: ObservableCollectSingle(io.reactivex.ObservableSource,java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)
androidx.recyclerview.widget.OrientationHelper: int HORIZONTAL
io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty
kotlin.collections.EmptyList: boolean removeAll(java.util.Collection)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateBy$2: ChannelsKt__Channels_commonKt$associateBy$2(kotlin.coroutines.Continuation)
io.reactivex.internal.schedulers.IoScheduler: void shutdown()
kotlin.random.Random$Default: Random$Default(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.R$style: int Theme_AppCompat_Dialog
androidx.core.util.SparseBooleanArrayKt: boolean isNotEmpty(android.util.SparseBooleanArray)
androidx.appcompat.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter)
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1: java.lang.Object keyOf(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateBy$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
androidx.databinding.ViewDataBinding: double parse(java.lang.String,double)
io.reactivex.internal.operators.flowable.FlowableInternalHelper: io.reactivex.functions.Consumer subscriberOnNext(org.reactivestreams.Subscriber)
androidx.lifecycle.extensions.R$drawable: int notify_panel_notification_icon_bg
io.reactivex.Completable: io.reactivex.Completable delay(long,java.util.concurrent.TimeUnit)
androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()
androidx.core.widget.TextViewCompat: int getAutoSizeStepGranularity(android.widget.TextView)
io.reactivex.internal.observers.BiConsumerSingleObserver: BiConsumerSingleObserver(io.reactivex.functions.BiConsumer)
kotlinx.coroutines.intrinsics.UndispatchedKt: java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.AbstractCoroutine,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.ranges.RangesKt___RangesKt: int coerceAtLeast(int,int)
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet)
io.reactivex.Flowable: io.reactivex.Flowable timeout(org.reactivestreams.Publisher,io.reactivex.functions.Function,org.reactivestreams.Publisher)
androidx.appcompat.view.menu.MenuBuilder: void setGroupEnabled(int,boolean)
com.example.revolut.rates.R$attr: int textAppearanceLargePopupMenu
okhttp3.Dns
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(char[])
com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()
io.reactivex.internal.operators.flowable.FlowableRepeat$RepeatSubscriber: long serialVersionUID
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener)
androidx.constraintlayout.widget.R$attr: int layout_constraintStart_toStartOf
androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: long serialVersionUID
androidx.databinding.adapters.TextViewBindingAdapter: void setDrawableRight(android.widget.TextView,android.graphics.drawable.Drawable)
androidx.vectordrawable.R$id: int right
kotlin.text.StringsKt___StringsKt: void forEach(java.lang.CharSequence,kotlin.jvm.functions.Function1)
okhttp3.internal.http.UnrepeatableRequestBody
kotlin.coroutines.experimental.migration.ContextMigration$Key: ContextMigration$Key(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.text.CharCategory: kotlin.text.CharCategory FORMAT
com.example.revolut.rates.R$styleable: int DrawerArrowToggle_spinBars
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewAddEvent
retrofit2.HttpException: HttpException(retrofit2.Response)
androidx.recyclerview.R$drawable: int notify_panel_notification_icon_bg
dagger.android.support.R$dimen: int abc_action_bar_stacked_tab_max_width
kotlin.UIntArray: java.util.Iterator iterator()
kotlin.coroutines.experimental.SafeContinuation: kotlin.coroutines.experimental.CoroutineContext getContext()
io.reactivex.internal.observers.FutureObserver: java.lang.Object get()
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
com.jakewharton.rxbinding3.core.R$id: int icon_group
androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)
kotlinx.coroutines.channels.ArrayChannel: boolean isBufferFull()
dagger.android.support.R$string: int abc_searchview_description_query
androidx.appcompat.widget.DecorToolbar: void setNavigationContentDescription(java.lang.CharSequence)
android.support.v4.media.MediaMetadataCompat$Builder: android.support.v4.media.MediaMetadataCompat$Builder putBitmap(java.lang.String,android.graphics.Bitmap)
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.ULong: long unbox-impl()
androidx.fragment.R$id: int line3
androidx.coordinatorlayout.widget.CoordinatorLayout
androidx.legacy.coreutils.R$id: int blocking
kotlin.random.URandomKt
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment BEGIN
io.reactivex.internal.subscriptions.EmptySubscription: io.reactivex.internal.subscriptions.EmptySubscription INSTANCE
okhttp3.ConnectionSpec: java.util.List cipherSuites()
com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent: boolean equals(java.lang.Object)
kotlinx.coroutines.EventLoopBase$DelayedTask: java.lang.String toString()
androidx.core.content.pm.ShortcutManagerCompat
androidx.core.net.UriKt: android.net.Uri toUri(java.lang.String)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$reduce$1: ChannelsKt__Channels_commonKt$reduce$1(kotlin.coroutines.Continuation)
androidx.customview.R$id
androidx.appcompat.view.menu.MenuBuilder$Callback
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(short[],java.lang.Iterable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int hashCode()
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainNoLast: long serialVersionUID
io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver: long serialVersionUID
io.reactivex.subjects.MaybeSubject: void onComplete()
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_layout_keyline
androidx.fragment.app.FragmentPagerAdapter: android.os.Parcelable saveState()
androidx.media.R$integer: int cancel_button_image_alpha
androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat create(android.graphics.Bitmap,float,float)
io.reactivex.observers.SerializedObserver
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)
androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()
androidx.appcompat.widget.SwitchCompat: SwitchCompat(android.content.Context,android.util.AttributeSet,int)
okhttp3.internal.Util: boolean verifyAsIpAddress(java.lang.String)
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher
kotlin.text.CharCategory: kotlin.text.CharCategory valueOf(java.lang.String)
android.support.v4.media.MediaBrowserCompat$ConnectionCallback: MediaBrowserCompat$ConnectionCallback()
android.support.v4.media.MediaBrowserCompat$MediaItem: java.util.List fromMediaItemList(java.util.List)
kotlin.text.UStringsKt: int toUInt(java.lang.String,int)
androidx.slidingpanelayout.widget.SlidingPaneLayout
androidx.appcompat.R$styleable: int SwitchCompat_splitTrack
kotlin.text.StringsKt___StringsKt: java.lang.Character firstOrNull(java.lang.CharSequence)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean isBlocking()
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: RecyclerView$AdapterDataObserver()
androidx.constraintlayout.widget.ConstraintSet: void centerHorizontally(int,int)
kotlin.UByteArray: boolean contains-7apg3OU(byte)
kotlin.reflect.KClass: kotlin.reflect.KVisibility getVisibility()
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.BiFunction getOnObservableSubscribe()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTooltipText(java.lang.CharSequence)
androidx.vectordrawable.R$styleable: int GradientColor_android_endColor
dagger.Subcomponent
io.reactivex.internal.operators.flowable.FlowableAll: FlowableAll(io.reactivex.Flowable,io.reactivex.functions.Predicate)
okhttp3.HttpUrl: java.lang.String query()
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
androidx.core.widget.TextViewCompat: int[] getAutoSizeTextAvailableSizes(android.widget.TextView)
com.example.revolut.rates.R$styleable: int SearchView_android_focusable
io.reactivex.Observable: io.reactivex.Single last(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(double[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
kotlinx.coroutines.CoroutineId
androidx.core.graphics.BitmapKt: android.graphics.Bitmap createBitmap$default(int,int,android.graphics.Bitmap$Config,int,java.lang.Object)
dagger.internal.MapProviderFactory$Builder
dagger.android.support.R$styleable: int MenuItem_alphabeticModifiers
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(float[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.Symbol
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: long serialVersionUID
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean getPadding(android.graphics.Rect)
io.reactivex.internal.schedulers.ExecutorScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)
androidx.media.R$styleable: int FontFamilyFont_android_fontWeight
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
androidx.core.view.MotionEventCompat: int AXIS_THROTTLE
io.reactivex.disposables.ActionDisposable: long serialVersionUID
android.support.v4.media.MediaBrowserCompat$MediaItem: int getFlags()
dagger.android.support.R$style: int TextAppearance_AppCompat
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List zip(java.lang.Iterable,java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull()
androidx.constraintlayout.widget.ConstraintHelper: void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: int lastIndexOf(java.lang.Object)
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable publish()
androidx.appcompat.R$integer: int config_tooltipAnimTime
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
io.reactivex.internal.operators.single.SingleDetach
dagger.android.support.R$attr: int searchIcon
com.google.gson.TypeAdapter: java.lang.Object fromJson(java.io.Reader)
androidx.databinding.adapters.AdapterViewBindingAdapter: AdapterViewBindingAdapter()
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KCallable computeReflected()
androidx.appcompat.R$styleable: int AlertDialog_android_layout
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
androidx.appcompat.app.AppCompatDelegate: void onPostResume()
androidx.core.graphics.RegionKt: android.graphics.Region not(android.graphics.Region)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
com.example.revolut.rates.R$attr: int titleMarginEnd
androidx.appcompat.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
androidx.core.app.JobIntentService: void setInterruptIfStopped(boolean)
com.google.gson.Gson: com.google.gson.GsonBuilder newBuilder()
retrofit2.SkipCallbackExecutor
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator: long serialVersionUID
kotlin.ranges.URangesKt___URangesKt: boolean contains-Gab390E(kotlin.ranges.ULongRange,int)
android.support.v4.media.session.MediaSessionCompat: java.lang.String ARGUMENT_MEDIA_ATTRIBUTE
io.reactivex.internal.subscriptions.BasicQueueSubscription: boolean offer(java.lang.Object,java.lang.Object)
kotlinx.coroutines.scheduling.BackgroundDispatcher
io.reactivex.internal.operators.observable.ObservableAll: void subscribeActual(io.reactivex.Observer)
com.example.revolut.rates.R$styleable: int MenuItem_android_id
io.reactivex.internal.subscriptions.AsyncSubscription: void dispose()
kotlin.coroutines.experimental.CoroutinesKt: kotlin.coroutines.experimental.Continuation createCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.experimental.Continuation)
io.reactivex.internal.operators.flowable.AbstractFlowableWithUpstream: org.reactivestreams.Publisher source()
android.support.v4.media.session.PlaybackStateCompat: int getErrorCode()
androidx.loader.R$styleable: int[] GradientColor
androidx.appcompat.R$dimen: int hint_pressed_alpha_material_light
io.reactivex.observers.BaseTestConsumer: java.lang.Thread lastThread
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,androidx.core.app.Person)
com.example.revolut.rates.databinding.RatesItemBindingImpl: boolean onFieldChange(int,java.lang.Object,int)
androidx.constraintlayout.solver.widgets.Barrier: boolean allowsGoneWidget()
io.reactivex.annotations.BackpressureKind: io.reactivex.annotations.BackpressureKind SPECIAL
kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1
androidx.appcompat.R$style: int Base_Widget_AppCompat_RatingBar
io.reactivex.internal.operators.parallel.ParallelReduce
kotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,kotlin.sequences.Sequence)
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_ERROR
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)
kotlinx.coroutines.DeferredKt: kotlinx.coroutines.Deferred async$default(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
okhttp3.internal.connection.RealConnection: java.net.Socket socket()
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence filterIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2)
androidx.constraintlayout.widget.Group: Group(android.content.Context,android.util.AttributeSet,int)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat getParent()
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator nullsLast(java.util.Comparator)
kotlin.text.StringsKt___StringsKt: java.lang.Object foldRightIndexed(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function3)
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver: long serialVersionUID
androidx.customview.R$styleable: int GradientColor_android_startX
io.reactivex.internal.util.QueueDrainHelper: boolean checkTerminated(boolean,boolean,io.reactivex.Observer,boolean,io.reactivex.internal.fuseable.SimpleQueue,io.reactivex.disposables.Disposable,io.reactivex.internal.util.ObservableQueueDrain)
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
okhttp3.HttpUrl: java.util.List pathSegments()
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(android.view.ViewGroup$LayoutParams)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(java.lang.Comparable[])
androidx.core.graphics.drawable.IconCompat: void checkResource(android.content.Context)
com.example.revolut.rates.R$dimen: int compat_button_padding_horizontal_material
androidx.core.transition.TransitionKt
androidx.loader.R$color: int notification_icon_bg_color
okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
androidx.databinding.ViewDataBinding: int getFromList(android.util.SparseIntArray,int)
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification: MaybeFlatMapNotification(io.reactivex.MaybeSource,io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)
androidx.core.animation.AnimatorKt$doOnStart$$inlined$addListener$1: AnimatorKt$doOnStart$$inlined$addListener$1(kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
kotlinx.coroutines.CoroutineId: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
androidx.core.widget.NestedScrollView: boolean isSmoothScrollingEnabled()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabelFor(android.view.View,int)
com.example.revolut.rates.common.DoubleToStringKt: java.lang.String roundedString(double)
com.example.revolut.rates.R$styleable: int SearchView_goIcon
io.reactivex.Single: java.lang.Object to(io.reactivex.functions.Function)
androidx.appcompat.R$style: int Widget_Support_CoordinatorLayout
androidx.customview.widget.ExploreByTouchHelper
com.example.revolut.rates.R$id: int SHIFT
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(boolean[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber: long serialVersionUID
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setupDimensionRatio(boolean,boolean,boolean,boolean)
androidx.appcompat.view.StandaloneActionMode: void setTitleOptionalHint(boolean)
androidx.slidingpanelayout.widget.SlidingPaneLayout: android.os.Parcelable onSaveInstanceState()
kotlin.math.MathKt__MathJVMKt: void ulp$annotations(float)
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setImportant(boolean)
com.google.gson.reflect.TypeToken: boolean equals(java.lang.Object)
androidx.core.view.MotionEventCompat: int ACTION_POINTER_INDEX_SHIFT
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isStateful()
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn: FlowableUnsubscribeOn(io.reactivex.Flowable,io.reactivex.Scheduler)
io.reactivex.disposables.CompositeDisposable: CompositeDisposable(io.reactivex.disposables.Disposable[])
androidx.databinding.adapters.CardViewBindingAdapter: void setContentPaddingTop(androidx.cardview.widget.CardView,int)
androidx.recyclerview.widget.RecyclerView: int getChildDrawingOrder(int,int)
dagger.android.support.R$styleable: int ActionBar_backgroundSplit
androidx.core.ktx.R$id: int info
dagger.android.support.R$styleable: int SearchView_android_imeOptions
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
io.reactivex.internal.disposables.DisposableHelper: boolean isDisposed()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
dagger.android.support.R$styleable: int ActionBar_titleTextStyle
androidx.databinding.ObservableList$OnListChangedCallback: void onItemRangeInserted(androidx.databinding.ObservableList,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLast-PpDY95g(byte[],int)
androidx.appcompat.widget.DecorToolbar: void animateToVisibility(int)
com.example.revolut.rates.R$styleable: int[] ActionBarLayout
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: java.lang.Object get(int)
io.reactivex.internal.operators.completable.CompletableEmpty
androidx.appcompat.widget.AbsActionBarView: boolean onHoverEvent(android.view.MotionEvent)
kotlin.sequences.SequencesKt___SequencesKt$minus$1: java.util.Iterator iterator()
androidx.loader.R$id
kotlinx.coroutines.scheduling.WorkQueue: boolean add(kotlinx.coroutines.scheduling.Task,kotlinx.coroutines.scheduling.GlobalQueue)
androidx.recyclerview.widget.LinearSmoothScroller: int calculateDtToFit(int,int,int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(long[])
okhttp3.Request$Builder: okhttp3.Request$Builder get()
retrofit2.Invocation: java.lang.reflect.Method method()
kotlin.text.StringsKt__StringsJVMKt: boolean equals(java.lang.String,java.lang.String,boolean)
okhttp3.FormBody$Builder: okhttp3.FormBody build()
kotlin.collections.UArraysKt: byte random-oSF2wD8(byte[],kotlin.random.Random)
kotlin.UInt: java.lang.String toString-impl(int)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_fontStyle
kotlinx.coroutines.ResumeModeKt: void resumeUninterceptedWithExceptionMode(kotlin.coroutines.Continuation,java.lang.Throwable,int)
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setTabListener(androidx.appcompat.app.ActionBar$TabListener)
io.reactivex.android.plugins.RxAndroidPlugins: io.reactivex.Scheduler initMainThreadScheduler(java.util.concurrent.Callable)
dagger.android.support.R$drawable: int abc_seekbar_thumb_material
com.example.revolut.rates.di.DaggerAppComponent$Builder: com.example.revolut.rates.di.DaggerAppComponent$Builder appModule(com.example.revolut.rates.di.AppModule)
kotlin.collections.IndexingIterable: IndexingIterable(kotlin.jvm.functions.Function0)
androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener: void onPanelOpened(android.view.View)
androidx.databinding.ViewDataBinding: void setTo(java.util.List,int,java.lang.Object)
androidx.core.os.TraceKt
io.reactivex.internal.schedulers.RxThreadFactory: RxThreadFactory(java.lang.String,int,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void saveToolbarHierarchyState(android.util.SparseArray)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertValueSequenceOnly(java.lang.Iterable)
io.reactivex.schedulers.Timed
okhttp3.internal.platform.Platform: java.util.List alpnProtocolNames(java.util.List)
androidx.annotation.RequiresApi
androidx.core.view.ViewCompat: void jumpDrawablesToCurrentState(android.view.View)
androidx.databinding.ListChangeRegistry: void notifyRemoved(androidx.databinding.ObservableList,int,int)
androidx.slidingpanelayout.R$styleable: int FontFamily_fontProviderFetchTimeout
io.reactivex.internal.util.QueueDrain
com.google.gson.internal.bind.JsonTreeReader: void promoteNameToValue()
androidx.core.app.ShareCompat: void configureMenuItem(android.view.Menu,int,androidx.core.app.ShareCompat$IntentBuilder)
androidx.recyclerview.widget.AsyncListUtil$DataCallback: void fillData(java.lang.Object[],int,int)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
androidx.appcompat.R$string: int abc_font_family_button_material
retrofit2.converter.gson.GsonConverterFactory
kotlin.UIntArray: boolean removeAll(java.util.Collection)
com.example.revolut.rates.R$id: int text
androidx.core.graphics.BitmapCompat
io.reactivex.internal.util.ErrorMode
androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_DEFAULT
kotlinx.coroutines.CoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber: long serialVersionUID
androidx.legacy.coreui.R$styleable: int FontFamilyFont_android_ttcIndex
okhttp3.ResponseBody
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStopped(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(float[])
androidx.appcompat.view.menu.MenuView$ItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)
dagger.android.support.R$attr: int textAppearanceSearchResultSubtitle
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence)
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec CLEARTEXT
androidx.appcompat.widget.WithHint: java.lang.CharSequence getHint()
com.example.revolut.rates.data.managers.NetworkManager
androidx.appcompat.widget.ThemedSpinnerAdapter: android.content.res.Resources$Theme getDropDownViewTheme()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removeAllQueryParameters(java.lang.String)
androidx.constraintlayout.widget.R$id: int top
androidx.viewpager.R$styleable: int FontFamily_fontProviderCerts
com.example.revolut.rates.R$styleable: int DrawerArrowToggle_color
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,boolean)
androidx.appcompat.view.menu.MenuWrapperFactory: android.view.SubMenu wrapSupportSubMenu(android.content.Context,androidx.core.internal.view.SupportSubMenu)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256
androidx.core.util.Preconditions
androidx.core.util.LongSparseArrayKt: android.util.LongSparseArray plus(android.util.LongSparseArray,android.util.LongSparseArray)
dagger.android.support.R$dimen: int abc_text_size_caption_material
com.example.revolut.rates.databinding.ActivityMainBinding: void setViewModel(com.example.revolut.rates.viewmodel.CurrenciesViewModel)
okio.ByteString
androidx.annotation.Dimension: int unit()
io.reactivex.Single: io.reactivex.Single amb(java.lang.Iterable)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
kotlin.internal.PlatformImplementations: kotlin.random.Random defaultPlatformRandom()
androidx.appcompat.R$attr: int ratingBarStyle
androidx.constraintlayout.widget.Guideline: Guideline(android.content.Context,android.util.AttributeSet,int)
io.reactivex.Observer: void onSubscribe(io.reactivex.disposables.Disposable)
kotlin.ranges.RangesKt___RangesKt: double coerceIn(double,double,double)
androidx.appcompat.R$style: int Base_AlertDialog_AppCompat_Light
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
okhttp3.Headers: java.lang.String toString()
kotlin.reflect.KClass$DefaultImpls: void supertypes$annotations()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setArrowDimensions(float,float)
kotlin.text.StringsKt__StringsJVMKt: boolean regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean)
com.jakewharton.rxbinding3.core.R$string
kotlin.ranges.URangesKt___URangesKt: boolean contains-ULb-yJY(kotlin.ranges.ULongRange,byte)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addUnsafeNonAscii(java.lang.String,java.lang.String)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BIT_SET
com.jakewharton.rxbinding3.R
androidx.coordinatorlayout.R$id: int line3
com.example.revolut.rates.R$drawable: int abc_ic_search_api_material
io.reactivex.internal.operators.observable.ObservableScalarXMap: io.reactivex.Observable scalarXMap(java.lang.Object,io.reactivex.functions.Function)
kotlinx.coroutines.ThreadEventLoop
com.example.revolut.rates.data.model.Rate: com.example.revolut.rates.data.model.Rate$Companion Companion
androidx.core.view.GestureDetectorCompat: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
com.google.gson.internal.Streams: void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)
androidx.core.ktx.R$styleable: int[] FontFamilyFont
androidx.recyclerview.widget.RecyclerView: void addFocusables(java.util.ArrayList,int,int)
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.DisposableHandle attachChild(kotlinx.coroutines.Job)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String)
androidx.lifecycle.extensions.R$style: int TextAppearance_Compat_Notification_Line2
androidx.recyclerview.widget.LinearSmoothScroller: int calculateTimeForDeceleration(int)
androidx.core.provider.FontsContractCompat$Columns: int RESULT_CODE_OK
kotlinx.coroutines.channels.ProducerJob$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.channels.ProducerJob,kotlinx.coroutines.Job)
io.reactivex.Observable: io.reactivex.Single toMap(io.reactivex.functions.Function)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setItemCount(int)
androidx.viewpager.widget.PagerTitleStrip
androidx.core.net.ConnectivityManagerCompat: int RESTRICT_BACKGROUND_STATUS_DISABLED
io.reactivex.processors.ReplayProcessor: boolean hasValue()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearColorFilter()
androidx.fragment.app.FragmentTabHost: android.os.Parcelable onSaveInstanceState()
com.example.revolut.rates.R$attr: int thickness
androidx.appcompat.app.AppCompatDelegate: void invalidateOptionsMenu()
io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,int)
okhttp3.CertificatePinner$Builder
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
kotlin.NotImplementedError: NotImplementedError(java.lang.String)
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence windowedSequence$default(java.lang.CharSequence,int,int,boolean,int,java.lang.Object)
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean onTouchEvent(android.view.MotionEvent)
io.reactivex.internal.operators.flowable.FlowableLastSingle
kotlin.Result: java.lang.String toString-impl(java.lang.Object)
androidx.appcompat.widget.ActionMenuPresenter$SavedState: android.os.Parcelable$Creator CREATOR
com.example.revolut.rates.R$styleable: int AnimatedStateListDrawableCompat_android_visible
kotlin.ULongArray: long[] unbox-impl()
androidx.appcompat.view.menu.MenuBuilder: boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState
androidx.fragment.app.Fragment: android.os.Bundle getArguments()
io.reactivex.Completable: io.reactivex.Completable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.CompletableSource)
io.reactivex.internal.observers.DisposableLambdaObserver: DisposableLambdaObserver(io.reactivex.Observer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int,long,java.util.concurrent.TimeUnit)
kotlin.collections.ArraysKt___ArraysJvmKt: double[] copyInto$default(double[],double[],int,int,int,int,java.lang.Object)
androidx.slidingpanelayout.widget.SlidingPaneLayout: void onSizeChanged(int,int,int,int)
io.reactivex.internal.operators.observable.ObservablePublishAlt: ObservablePublishAlt(io.reactivex.ObservableSource)
io.reactivex.internal.operators.maybe.MaybeToPublisher: io.reactivex.internal.operators.maybe.MaybeToPublisher INSTANCE
kotlinx.coroutines.DispatchedTask: java.lang.Throwable getExceptionalResult(java.lang.Object)
okhttp3.internal.Internal: boolean equalsNonHost(okhttp3.Address,okhttp3.Address)
com.example.revolut.rates.R$attr: int constraintSet
kotlinx.coroutines.CancellableContinuation
okhttp3.internal.http2.Http2Codec
androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int goneBottomMargin
okhttp3.internal.platform.Platform: Platform()
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context,android.util.AttributeSet)
dagger.Lazy: java.lang.Object get()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_NULL_SHA
androidx.coordinatorlayout.R$attr: int layout_anchor
com.example.revolut.rates.databinding.ActivityMainBindingImpl: boolean onFieldChange(int,java.lang.Object,int)
kotlin.random.URandomKt: int nextUInt-a8DCA5k(kotlin.random.Random,int,int)
androidx.core.widget.TextViewCompat: int getMinLines(android.widget.TextView)
androidx.versionedparcelable.VersionedParcel: boolean[] readBooleanArray()
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Snapshot get(java.lang.String)
okhttp3.MultipartBody: void writeTo(okio.BufferedSink)
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollHorizontalThumbDrawable
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: android.view.View component1()
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(android.view.View)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_EMPTY_RENEGOTIATION_INFO_SCSV
dagger.android.support.R$dimen: int abc_panel_menu_list_width
androidx.vectordrawable.R$drawable: int notification_template_icon_low_bg
androidx.recyclerview.widget.LinearLayoutManager: int findFirstCompletelyVisibleItemPosition()
com.example.revolut.rates.R$styleable: int Toolbar_maxButtonHeight
android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
kotlin.jvm.internal.PrimitiveSpreadBuilder
io.reactivex.internal.operators.flowable.FlowableGenerate: FlowableGenerate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction,io.reactivex.functions.Consumer)
kotlin.collections.AbstractCollection: java.lang.String toString()
com.jakewharton.rxbinding3.core.R$dimen: int notification_right_side_padding_top
androidx.appcompat.R$style: int TextAppearance_AppCompat_Display4
androidx.appcompat.R$attr: int subMenuArrow
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
com.example.revolut.rates.R$attr: R$attr()
dagger.android.support.R$attr: int buttonBarNeutralButtonStyle
androidx.constraintlayout.solver.widgets.Snapshot: void applyTo(androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.legacy.v4.R$styleable: int FontFamily_fontProviderFetchStrategy
kotlin.jvm.internal.FunctionBase: int getArity()
androidx.versionedparcelable.VersionedParcel: void writeInt(int)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle)
androidx.appcompat.R$color: int material_deep_teal_200
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Single onAssembly(io.reactivex.Single)
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionBarSplitStyle
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void addState(int[],android.graphics.drawable.Drawable,int)
kotlin.collections.AbstractSet$Companion: AbstractSet$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.BuildersKt: java.lang.Object run(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.random.RandomKt: void checkRangeBounds(long,long)
android.support.v4.media.MediaDescriptionCompat: long BT_FOLDER_TYPE_GENRES
androidx.databinding.adapters.CalendarViewBindingAdapter
com.example.revolut.rates.R$style: int TextAppearance_Compat_Notification_Title_Media
androidx.media.R$styleable: int FontFamilyFont_fontWeight
dagger.android.support.R$id: int action_text
kotlin.text.Regex: java.util.Set getOptions()
kotlin.sequences.MergingSequence$iterator$1: java.util.Iterator getIterator1()
kotlin.jvm.internal.PrimitiveSpreadBuilder: java.lang.Object toArray(java.lang.Object,java.lang.Object)
kotlin.collections.CharIterator: CharIterator()
kotlinx.coroutines.scheduling.WorkQueueKt: int BUFFER_CAPACITY_BASE
dagger.android.support.R$layout: int notification_template_part_time
kotlin.system.TimingKt: long measureTimeMillis(kotlin.jvm.functions.Function0)
dagger.android.support.R$string: int abc_search_hint
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(char[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$attr: int buttonTintMode
kotlin.collections.CollectionsKt___CollectionsKt: long sumOfLong(java.lang.Iterable)
io.reactivex.Maybe: io.reactivex.Maybe timeout(long,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.AlertDialogLayout
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: java.lang.Long get(int)
kotlin.collections.EmptyList: void clear()
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: void onDetachedFromWindow()
androidx.legacy.coreutils.R$attr: int fontProviderPackage
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable publish()
androidx.core.transition.TransitionKt$addListener$5
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
io.reactivex.Observable: io.reactivex.Observable switchMapSingleDelayError(io.reactivex.functions.Function)
com.example.revolut.rates.R$dimen: int abc_text_size_display_1_material
androidx.appcompat.R$color: int background_material_light
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewRemoveEvent
kotlin.text.MatchGroup
androidx.appcompat.R$style: int Base_V7_Theme_AppCompat_Dialog
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_Button
io.reactivex.functions.Function4: java.lang.Object apply(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.legacy.coreutils.R$styleable: int[] GradientColor
kotlin.contracts.ContractBuilder$DefaultImpls
kotlin.TypeAliasesKt: void Comparator$annotations()
kotlinx.coroutines.ExecutorCoroutineDispatcherBase: int hashCode()
kotlinx.coroutines.internal.ThreadLocalElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
io.reactivex.internal.operators.completable.CompletableMergeArray: void subscribeActual(io.reactivex.CompletableObserver)
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce(kotlin.coroutines.CoroutineContext,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollOffset()
androidx.collection.SparseArrayCompat: boolean isEmpty()
androidx.coordinatorlayout.R$layout: int notification_template_part_chronometer
androidx.appcompat.R$drawable: int notification_bg_low
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout
io.reactivex.internal.schedulers.IoScheduler: IoScheduler(java.util.concurrent.ThreadFactory)
io.reactivex.internal.operators.flowable.FlowableRepeat: void subscribeActual(org.reactivestreams.Subscriber)
okio.Buffer: void clear()
com.jakewharton.rxbinding3.core.R$attr: int fontStyle
okhttp3.internal.http.HttpDate: java.lang.String format(java.util.Date)
dagger.android.support.R$attr: int trackTint
kotlinx.coroutines.CoroutineContextKt: java.lang.String DEBUG_PROPERTY_VALUE_AUTO
androidx.appcompat.R$id: int forever
androidx.recyclerview.widget.ItemTouchHelper$Callback: float getMoveThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.example.revolut.rates.R$string: int abc_menu_shift_shortcut_label
androidx.core.view.DragStartHelper: void attach()
kotlin.collections.CollectionsKt
androidx.recyclerview.widget.SortedList: int indexOf(java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItem: boolean hasSubMenu()
kotlinx.coroutines.test.TestCoroutineContext: long advanceTimeBy(long,java.util.concurrent.TimeUnit)
androidx.versionedparcelable.VersionedParcel: android.os.Parcelable readParcelable(android.os.Parcelable,int)
androidx.appcompat.R$styleable: int ActionBar_contentInsetRight
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
okhttp3.Challenge: Challenge(java.lang.String,java.lang.String)
com.example.revolut.rates.R$styleable: int[] AnimatedStateListDrawableItem
kotlin.jvm.functions.Function5
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)
kotlin.ranges.CharProgressionIterator: int getStep()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(int)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintBottom_toBottomOf
io.reactivex.internal.operators.observable.ObservableSkipWhile: ObservableSkipWhile(io.reactivex.ObservableSource,io.reactivex.functions.Predicate)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] plus-kzHmqpY(long[],java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(short[],int)
kotlin.text.StringsKt___StringsKt: java.lang.Character maxBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.reactivex.processors.BehaviorProcessor: boolean hasSubscribers()
com.google.gson.internal.PreJava9DateFormatProvider: PreJava9DateFormatProvider()
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_MEDIA_ID
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(long[])
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PROGRESS_INDETERMINATE
com.jakewharton.rxbinding3.widget.SeekBarChangeEvent
androidx.constraintlayout.solver.widgets.ConstraintWidget: int CHAIN_SPREAD_INSIDE
io.reactivex.internal.operators.observable.ObservableSingleSingle: ObservableSingleSingle(io.reactivex.ObservableSource,java.lang.Object)
com.example.revolut.rates.R$styleable: int AppCompatTheme_buttonBarStyle
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
androidx.drawerlayout.R$styleable: int FontFamily_fontProviderQuery
io.reactivex.internal.operators.completable.CompletableFromCallable: void subscribeActual(io.reactivex.CompletableObserver)
androidx.core.R$color
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector: FlowableWindowBoundarySelector(io.reactivex.Flowable,org.reactivestreams.Publisher,io.reactivex.functions.Function,int)
androidx.viewpager.R$id: int blocking
androidx.appcompat.view.WindowCallbackWrapper: void onAttachedToWindow()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void requestLayout()
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_goneMarginLeft
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REPORT_VIEW_IDS
kotlin.collections.MovingSubList: void move(int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_TOOLTIP
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintHeight_default
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder)
androidx.appcompat.R$attr: int textAllCaps
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_INPUT_METHOD
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$reduce$1: java.lang.Object invokeSuspend(java.lang.Object)
io.reactivex.Flowable: io.reactivex.Single collectInto(java.lang.Object,io.reactivex.functions.BiConsumer)
io.reactivex.internal.operators.maybe.MaybeMergeArray
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setType(java.lang.String)
androidx.core.util.SizeKt
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(int[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int Toolbar_titleMargin
androidx.core.app.NotificationCompat$MessagingStyle$Message
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
com.example.revolut.rates.R$styleable: int MenuView_subMenuArrow
androidx.appcompat.R$styleable: int AppCompatImageView_android_src
okhttp3.Cache: int writeSuccessCount()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setRoleDescription(java.lang.CharSequence)
io.reactivex.Completable: io.reactivex.Observable toObservable()
androidx.appcompat.R$color: int primary_text_default_material_dark
kotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaClass(kotlin.reflect.KClass)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removePathSegment(int)
androidx.databinding.adapters.TimePickerBindingAdapter: void setListeners(android.widget.TimePicker,android.widget.TimePicker$OnTimeChangedListener,androidx.databinding.InverseBindingListener,androidx.databinding.InverseBindingListener)
io.reactivex.internal.operators.observable.ObservableCache
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(double[])
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachViewAt(int)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(byte,short)
dagger.android.support.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
androidx.fragment.app.FragmentManager: void popBackStack(java.lang.String,int)
androidx.appcompat.R$attr: int drawerArrowStyle
kotlin.jvm.functions.Function5: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableAnySingle: io.reactivex.Flowable fuseToFlowable()
com.jakewharton.rxbinding3.core.R$styleable: int GradientColor_android_startY
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: long serialVersionUID
kotlinx.coroutines.NonCancellable: boolean isCancelled()
androidx.loader.R$dimen: int notification_action_text_size
dagger.android.support.R$dimen: int abc_config_prefDialogWidth
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_BUTTON
io.reactivex.internal.operators.parallel.ParallelSortedJoin: void subscribeActual(org.reactivestreams.Subscriber)
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)
androidx.appcompat.widget.ActionBarOverlayLayout: void initFeature(int)
androidx.recyclerview.R$id: int text
dagger.android.support.R$attr: int colorButtonNormal
dagger.android.support.R$styleable: int Toolbar_subtitleTextColor
com.example.revolut.rates.R$drawable: int abc_text_cursor_material
androidx.fragment.app.Fragment: void postponeEnterTransition()
kotlin.collections.AbstractMap: int hashCode()
io.reactivex.disposables.Disposables: io.reactivex.disposables.Disposable disposed()
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener: boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintContentIntentLaunchesActivity()
com.example.revolut.rates.R$layout: int abc_screen_content_include
retrofit2.http.Body
androidx.viewpager.widget.ViewPager: void onMeasure(int,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associate(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc
dagger.android.support.R$id: int parentPanel
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResources()
kotlin.jvm.JvmSuppressWildcards: boolean suppress()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(float[],java.util.Collection,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
androidx.appcompat.widget.ActionBarContainer: boolean onTouchEvent(android.view.MotionEvent)
io.reactivex.internal.fuseable.SimpleQueue: boolean offer(java.lang.Object)
androidx.appcompat.app.ActionBar: int NAVIGATION_MODE_LIST
androidx.core.graphics.RectKt: android.graphics.RectF or(android.graphics.RectF,android.graphics.RectF)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
kotlin.coroutines.ContinuationInterceptor$DefaultImpls
androidx.databinding.ObservableParcelable
kotlin.collections.AbstractMutableMap
io.reactivex.Maybe: io.reactivex.Maybe retry()
androidx.core.content.ContextKt: void withStyledAttributes(android.content.Context,int,int[],kotlin.jvm.functions.Function1)
androidx.lifecycle.AndroidViewModel: AndroidViewModel(android.app.Application)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long maxBy(long[],kotlin.jvm.functions.Function1)
com.google.gson.internal.Primitives: boolean isPrimitive(java.lang.reflect.Type)
com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent: int getScrollState()
com.example.revolut.rates.R$string: int abc_action_mode_done
io.reactivex.subjects.BehaviorSubject: boolean hasThrowable()
androidx.fragment.R$id: int forever
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
androidx.core.view.ActionProvider: boolean onPerformDefaultAction()
com.google.gson.JsonArray: void add(java.lang.Boolean)
androidx.core.graphics.ColorKt: float getLuminance(int)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_elevation
androidx.legacy.v4.R$style: int Widget_Compat_NotificationActionText
com.example.revolut.rates.R$drawable: int abc_list_selector_holo_light
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: int requestFusion(int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegments(java.lang.String)
androidx.asynclayoutinflater.R$attr: int fontProviderCerts
kotlinx.coroutines.JobImpl
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_COLLAPSE
androidx.coordinatorlayout.R$styleable: int GradientColorItem_android_color
androidx.constraintlayout.widget.ConstraintSet: void setTranslationY(int,float)
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_FONT_NOT_FOUND
io.reactivex.internal.operators.flowable.FlowableInternalHelper: io.reactivex.functions.Function flatMapWithCombiner(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
com.example.revolut.rates.R$attr: int actionModeFindDrawable
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.constraintlayout.widget.Group: Group(android.content.Context)
kotlin.collections.MapsKt__MapsKt: java.util.Map filterTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.completable.CompletableEmpty: io.reactivex.Completable INSTANCE
androidx.appcompat.app.ActionBar: void removeTabAt(int)
androidx.appcompat.widget.DecorContentParent: void dismissPopups()
com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent
androidx.core.ktx.R$drawable: int notification_icon_background
androidx.core.database.sqlite.SQLiteCursorCompat: void setFillWindowForwardOnly(android.database.sqlite.SQLiteCursor,boolean)
io.reactivex.exceptions.OnErrorNotImplementedException: long serialVersionUID
okhttp3.Cache
com.example.revolut.rates.R$bool: int abc_action_bar_embed_tabs
androidx.core.ktx.R$drawable: int notification_action_background
androidx.core.text.SpannedStringKt: android.text.Spanned toSpanned(java.lang.CharSequence)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_goneMarginRight
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong getOrNull-r7IrZao(long[],int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(int,int)
io.reactivex.internal.queue.SpscLinkedArrayQueue: SpscLinkedArrayQueue(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setIntents(android.content.Intent[])
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_4
com.example.revolut.rates.viewmodel.CurrenciesViewModel_MembersInjector: void injectMembers(com.example.revolut.rates.viewmodel.CurrenciesViewModel)
androidx.constraintlayout.widget.Constraints$LayoutParams: float alpha
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Display4
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.recyclerview.widget.OrientationHelper: int getEndPadding()
com.google.gson.internal.ConstructorConstructor: java.lang.String toString()
androidx.vectordrawable.R$id: int action_container
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener: void onDrawerOpened(android.view.View)
okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.core.util.SparseArrayKt: boolean contains(android.util.SparseArray,int)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object count(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.coroutines.SafeContinuation: java.lang.Object getOrThrow()
com.jakewharton.rxbinding3.core.R$attr: int alpha
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1
androidx.constraintlayout.solver.LinearSystem: void reset()
dagger.android.support.R$style: int Theme_AppCompat_DayNight
androidx.asynclayoutinflater.R$id: int title
kotlin.reflect.KMutableProperty: kotlin.reflect.KMutableProperty$Setter getSetter()
androidx.core.graphics.PathParser$PathDataNode: char mType
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setExtras(android.os.Bundle)
dagger.android.support.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
androidx.loader.content.Loader: void onForceLoad()
androidx.constraintlayout.solver.ArrayLinkedVariables
kotlin.sequences.FlatteningSequence: java.util.Iterator iterator()
dagger.internal.ReferenceReleasingProvider: dagger.internal.ReferenceReleasingProvider create(javax.inject.Provider,dagger.internal.ReferenceReleasingProviderManager)
androidx.appcompat.widget.AlertDialogLayout: void onLayout(boolean,int,int,int,int)
com.example.revolut.rates.R$styleable: int CoordinatorLayout_keylines
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
androidx.recyclerview.widget.OrientationHelper: int getTotalSpaceChange()
androidx.appcompat.R$attr: int actionBarDivider
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext)
io.reactivex.internal.operators.flowable.FlowableDebounce: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: int compareTo(java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListHead
dagger.android.support.R$styleable: int AppCompatTheme_radioButtonStyle
io.reactivex.Flowable: io.reactivex.Flowable ambWith(org.reactivestreams.Publisher)
kotlin.UInt: int hashCode-impl(int)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class)
kotlinx.coroutines.DeferredKt: kotlinx.coroutines.Deferred async(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlinx.coroutines.Job,kotlin.jvm.functions.Function2)
io.reactivex.internal.operators.flowable.FlowableWindowBoundary: FlowableWindowBoundary(io.reactivex.Flowable,org.reactivestreams.Publisher,int)
kotlinx.coroutines.scheduling.TaskContext
androidx.vectordrawable.R$attr: int fontProviderQuery
io.reactivex.Flowable: io.reactivex.Flowable mergeArrayDelayError(org.reactivestreams.Publisher[])
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object mapIndexedTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
io.reactivex.Maybe: io.reactivex.Maybe timeout(io.reactivex.MaybeSource)
androidx.constraintlayout.solver.ArrayLinkedVariables: java.lang.String toString()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object filterTo(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
io.reactivex.internal.operators.observable.ObservableTimeout
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.lifecycle.LiveData: void removeObservers(androidx.lifecycle.LifecycleOwner)
androidx.media.MediaBrowserProtocol: java.lang.String EXTRA_SESSION_BINDER
androidx.core.content.res.ResourcesCompat$FontCallback: ResourcesCompat$FontCallback()
io.reactivex.internal.operators.observable.ObservableSubscribeOn
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$single$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.TimeSource: long nanoTime()
kotlinx.coroutines.JobSupport: void handleJobException$kotlinx_coroutines_core(java.lang.Throwable)
kotlinx.android.extensions.CacheImplementation: kotlinx.android.extensions.CacheImplementation HASH_MAP
androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry
kotlin.sequences.USequencesKt___USequencesKt: USequencesKt___USequencesKt()
androidx.recyclerview.widget.RecyclerView$Recycler: RecyclerView$Recycler(androidx.recyclerview.widget.RecyclerView)
io.reactivex.internal.util.NotificationLite
androidx.coordinatorlayout.widget.ViewGroupUtils: void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)
kotlin.UShortArray: java.util.Iterator iterator()
com.example.revolut.rates.R$attr: int fastScrollHorizontalTrackDrawable
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode fromHttp2(int)
kotlin.coroutines.SafeContinuation: void resumeWith(java.lang.Object)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean removeAll(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.core.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)
androidx.recyclerview.widget.SortedList: void beginBatchedUpdates()
androidx.appcompat.R$styleable: int SearchView_commitIcon
androidx.constraintlayout.widget.R$attr: int layout_constraintHorizontal_weight
androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)
androidx.media.R$style: int TextAppearance_Compat_Notification_Info
com.jakewharton.rxbinding3.widget.RxAdapter
androidx.constraintlayout.widget.Barrier: int END
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(java.lang.Iterable,io.reactivex.functions.Function)
androidx.recyclerview.widget.RecyclerView: void scrollToPosition(int)
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
kotlinx.coroutines.internal.LockFreeMPSCQueueCore: kotlinx.coroutines.internal.LockFreeMPSCQueueCore next()
kotlin.text.StringsKt__StringsKt: java.lang.String removeSuffix(java.lang.String,java.lang.CharSequence)
com.google.gson.FieldAttributes: java.lang.annotation.Annotation getAnnotation(java.lang.Class)
kotlin.text.UStringsKt: java.lang.String toString-olVBNx4(short,int)
androidx.core.app.NotificationCompat$WearableExtender
kotlin.ranges.ULongRange$Companion: kotlin.ranges.ULongRange getEMPTY()
kotlin.text.StringsKt__StringNumberConversionsKt: StringsKt__StringNumberConversionsKt()
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
dagger.android.support.R$layout: int abc_expanded_menu_layout
kotlin.jvm.internal.ClassReference: boolean isInner()
androidx.legacy.coreutils.R$id: int action_text
kotlin.jvm.functions.Function12: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
dagger.Subcomponent: java.lang.Class[] modules()
com.example.revolut.rates.R$drawable: int icon_mxn
okio.Buffer: long indexOf(byte,long,long)
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: boolean isEmpty()
io.reactivex.internal.operators.flowable.FlowableJust: java.lang.Object call()
androidx.appcompat.widget.ViewStubCompat: void draw(android.graphics.Canvas)
androidx.legacy.coreui.R$integer
androidx.legacy.v4.R$styleable: int GradientColor_android_gradientRadius
androidx.drawerlayout.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setIcon(androidx.core.graphics.drawable.IconCompat)
io.reactivex.processors.AsyncProcessor: boolean hasComplete()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long max(long[])
android.support.v4.media.MediaBrowserCompat: java.lang.String EXTRA_MEDIA_ID
com.example.revolut.rates.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
io.reactivex.Flowable: io.reactivex.Flowable concatEager(java.lang.Iterable)
io.reactivex.Flowable: io.reactivex.Single toMap(io.reactivex.functions.Function,io.reactivex.functions.Function)
androidx.recyclerview.widget.SortedList: void replaceAll(java.lang.Object[],boolean)
androidx.coordinatorlayout.R$attr: int keylines
kotlin.jvm.internal.MutableLocalVariableReference: void set(java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int mVerticalResolution
androidx.recyclerview.widget.LinearSmoothScroller: int getHorizontalSnapPreference()
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList getHorizontalGuidelines()
io.reactivex.subjects.MaybeSubject: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.constraintlayout.solver.Metrics: long nonresolvedWidgets
dagger.android.support.DaggerAppCompatDialogFragment_MembersInjector: dagger.MembersInjector create(javax.inject.Provider)
io.reactivex.internal.operators.maybe.MaybeToSingle
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher: void subscribeActual(io.reactivex.MaybeObserver)
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMinor
io.reactivex.Single: io.reactivex.Single merge(io.reactivex.SingleSource)
dagger.android.support.R$dimen: int notification_big_circle_margin
androidx.appcompat.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
com.example.revolut.rates.R$dimen: int abc_action_bar_content_inset_material
androidx.appcompat.R$dimen: int abc_dialog_list_padding_top_no_title
okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)
androidx.legacy.coreui.R$styleable: int FontFamily_fontProviderQuery
androidx.collection.CircularArray
okhttp3.OkHttpClient: java.util.List connectionSpecs()
androidx.core.view.ViewCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
kotlin.collections.AbstractCollection: int size()
androidx.recyclerview.widget.AdapterListUpdateCallback: AdapterListUpdateCallback(androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable getCurrent()
androidx.appcompat.widget.Toolbar: void onLayout(boolean,int,int,int,int)
com.jakewharton.rxbinding3.core.R$style: int Widget_Compat_NotificationActionContainer
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(short[],short,int,int,int,java.lang.Object)
androidx.constraintlayout.widget.ConstraintHelper: int[] mIds
android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder: android.support.v4.media.session.PlaybackStateCompat$CustomAction build()
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder italic(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1)
androidx.appcompat.app.WindowDecorActionBar: void doHide(boolean)
okhttp3.Response: okhttp3.CacheControl cacheControl()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearAnimationCallbacks(android.graphics.drawable.Drawable)
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionBarItemBackground
androidx.core.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[],int)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replaceFirst(java.lang.String,char,char,boolean)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast
kotlin.sequences.TransformingIndexedSequence
androidx.constraintlayout.solver.widgets.Barrier: boolean allowedInBarrier()
kotlin.jvm.internal.PropertyReference0: PropertyReference0(java.lang.Object)
androidx.appcompat.R$dimen: int abc_search_view_preferred_width
androidx.appcompat.widget.DecorToolbar: void setIcon(android.graphics.drawable.Drawable)
com.google.gson.JsonStreamParser
androidx.fragment.app.FragmentHostCallback: java.lang.Object onGetHost()
dagger.android.support.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
androidx.appcompat.R$color: int accent_material_dark
io.reactivex.subjects.ReplaySubject: java.lang.Object getValue()
dagger.android.support.R$dimen: int abc_text_size_display_4_material
retrofit2.http.Url
androidx.constraintlayout.solver.widgets.ResolutionAnchor: int CHAIN_CONNECTION
androidx.core.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)
kotlinx.coroutines.EventLoopBase$DelayedTask: EventLoopBase$DelayedTask(kotlinx.coroutines.EventLoopBase,long,java.util.concurrent.TimeUnit)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintHeight_max
androidx.coordinatorlayout.R$id: int left
kotlin.collections.AbstractMap: java.lang.Object get(java.lang.Object)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TITLE_BIG
androidx.appcompat.view.menu.MenuAdapter: int getCount()
io.reactivex.subjects.MaybeSubject: void subscribeActual(io.reactivex.MaybeObserver)
com.example.revolut.rates.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary: void subscribeActual(org.reactivestreams.Subscriber)
okio.HashingSink: okio.HashingSink sha1(okio.Sink)
androidx.core.text.HtmlKt: java.lang.String toHtml$default(android.text.Spanned,int,int,java.lang.Object)
androidx.media.AudioAttributesCompat: java.lang.String toString()
com.example.revolut.rates.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
okhttp3.HttpUrl: boolean equals(java.lang.Object)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Title_Inverse
kotlin.collections.ArraysKt___ArraysKt: char reduceIndexed(char[],kotlin.jvm.functions.Function3)
androidx.media.R$id: int time
com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent: java.lang.CharSequence getText()
androidx.core.view.DragStartHelper$OnDragStartListener
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()
androidx.legacy.coreui.R$styleable: int GradientColorItem_android_color
androidx.legacy.coreutils.R$string
io.reactivex.Observable: io.reactivex.Observable startWith(java.lang.Iterable)
com.example.revolut.rates.R$attr: int toolbarStyle
androidx.appcompat.R$attr: int logoDescription
androidx.media.MediaSessionManager$RemoteUserInfo: java.lang.String getPackageName()
androidx.loader.app.LoaderManager: void markForRedelivery()
com.jakewharton.rxbinding3.view.ViewAttachAttachedEvent: boolean equals(java.lang.Object)
androidx.media.VolumeProviderCompat$Callback
io.reactivex.subjects.ReplaySubject: void onError(java.lang.Throwable)
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$1: kotlin.coroutines.experimental.CoroutineContext getContext()
com.example.revolut.rates.DataBinderMapperImpl: java.util.List collectDependencies()
androidx.viewpager.widget.PagerAdapter: int getItemPosition(java.lang.Object)
dagger.android.support.R$attr: int windowFixedHeightMinor
androidx.core.view.MenuKt$iterator$1: void remove()
dagger.android.support.R$style: int Base_Widget_AppCompat_Light_ActionBar
androidx.core.view.PointerIconCompat: int TYPE_HAND
io.reactivex.processors.UnicastProcessor
io.reactivex.Flowable: io.reactivex.Flowable delay(org.reactivestreams.Publisher,io.reactivex.functions.Function)
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_centerY
com.google.gson.JsonArray: int getAsInt()
androidx.vectordrawable.R$attr: int font
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setUsesChronometer(boolean)
io.reactivex.internal.queue.MpscLinkedQueue: void clear()
android.support.v4.media.session.MediaControllerCompat$Callback: android.support.v4.media.session.IMediaControllerCallback getIControllerCallback()
io.reactivex.Observable: io.reactivex.Observable scanWith(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)
com.google.gson.JsonPrimitive: int hashCode()
androidx.constraintlayout.solver.widgets.ResolutionNode: void addDependent(androidx.constraintlayout.solver.widgets.ResolutionNode)
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function3)
kotlinx.coroutines.internal.SystemPropsKt: boolean systemProp(java.lang.String,boolean)
androidx.recyclerview.R$id: int blocking
androidx.core.widget.PopupMenuCompat
kotlin.collections.SetsKt___SetsKt: java.util.Set plus(java.util.Set,java.lang.Object[])
androidx.fragment.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
io.reactivex.internal.util.AtomicThrowable: java.lang.Throwable terminate()
androidx.lifecycle.extensions.R$dimen: int notification_top_pad_large_text
kotlin.jvm.internal.Intrinsics: void throwIllegalArgument(java.lang.String)
com.jakewharton.rxbinding3.view.MenuItemActionViewCollapseEvent: java.lang.String toString()
okhttp3.internal.tls.CertificateChainCleaner: CertificateChainCleaner()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_goneMarginRight
androidx.recyclerview.R$attr: int fastScrollEnabled
com.jakewharton.rxbinding3.internal.Preconditions
dagger.android.DispatchingAndroidInjector: void inject(java.lang.Object)
kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1: void dispose()
dagger.android.support.R$styleable: int ActionMode_closeItemLayout
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(char[],kotlin.ranges.IntRange)
androidx.core.graphics.PathKt: java.lang.Iterable flatten(android.graphics.Path,float)
com.jakewharton.rxbinding3.widget.RxSeekBar
androidx.viewpager.R$styleable: int[] GradientColor
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onLayoutDirectionChanged(int)
androidx.fragment.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
com.google.gson.internal.LazilyParsedNumber: LazilyParsedNumber(java.lang.String)
io.reactivex.internal.operators.observable.ObservableGroupBy: ObservableGroupBy(io.reactivex.ObservableSource,io.reactivex.functions.Function,io.reactivex.functions.Function,int,boolean)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
kotlinx.coroutines.channels.RendezvousChannel: boolean isBufferAlwaysFull()
androidx.fragment.app.FragmentStatePagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)
androidx.versionedparcelable.VersionedParcelize: java.lang.String jetifyAs()
androidx.core.util.AtomicFile: void delete()
androidx.coordinatorlayout.R$styleable: int[] CoordinatorLayout
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_FOLLOW
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(java.lang.Object[],java.util.Collection)
androidx.lifecycle.extensions.R$styleable: int FontFamily_fontProviderCerts
dagger.android.support.R$styleable: int SearchView_android_maxWidth
androidx.core.graphics.CanvasKt: void withMatrix(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$elementAtOrElse$1: ChannelsKt__Channels_commonKt$elementAtOrElse$1(kotlin.coroutines.Continuation)
com.example.revolut.rates.R$id
androidx.appcompat.app.AlertController$AlertParams: int mIconId
kotlin.UByte$Companion: UByte$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.annotation.FloatRange: boolean toInclusive()
androidx.lifecycle.Lifecycle$State
androidx.customview.R$styleable: int ColorStateListItem_android_alpha
androidx.appcompat.R$style: int Base_Widget_AppCompat_RatingBar_Small
androidx.appcompat.app.ActionBar: void setDisplayShowTitleEnabled(boolean)
io.reactivex.internal.util.SorterFunction: java.util.List apply(java.util.List)
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionBarDivider
androidx.appcompat.app.AppCompatDialog: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
com.example.revolut.rates.R$styleable: int Toolbar_subtitleTextAppearance
androidx.legacy.coreutils.R$styleable: int[] GradientColorItem
androidx.appcompat.R$color: int tooltip_background_dark
kotlin.contracts.ContractBuilder: kotlin.contracts.ReturnsNotNull returnsNotNull()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc describeRemoveFirst()
androidx.viewpager.widget.PagerAdapter: void finishUpdate(android.view.View)
androidx.core.view.MenuKt
io.reactivex.subscribers.TestSubscriber: io.reactivex.subscribers.TestSubscriber requestMore(long)
androidx.swiperefreshlayout.R$attr: int fontProviderPackage
io.reactivex.processors.MulticastProcessor$MulticastSubscription: long serialVersionUID
androidx.legacy.v4.R$layout: int notification_template_custom_big
androidx.customview.widget.ViewDragHelper: int EDGE_RIGHT
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams()
com.jakewharton.rxbinding3.view.ViewScrollChangeEvent: int component4()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean canApplyTheme()
androidx.appcompat.widget.DecorContentParent: boolean hasIcon()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(char[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.drawerlayout.R$string: int status_bar_notification_info_overflow
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduceRightIndexed(java.util.List,kotlin.jvm.functions.Function3)
io.reactivex.Maybe: io.reactivex.Observable flatMapObservable(io.reactivex.functions.Function)
kotlin.jvm.functions.Function6: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableCache$CacheDisposable: long serialVersionUID
androidx.core.ktx.R$style: int TextAppearance_Compat_Notification
io.reactivex.internal.operators.observable.ObserverResourceWrapper: void onError(java.lang.Throwable)
androidx.appcompat.widget.Toolbar: boolean showOverflowMenu()
androidx.core.net.UriKt
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(int[],java.lang.Object[])
dagger.android.support.DaggerApplication_MembersInjector: void injectMembers(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapIndexedTo$1
kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext)
kotlin.collections.UArraysKt: int random-2D5oskM(int[],kotlin.random.Random)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.fragment.app.FragmentManager: void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
io.reactivex.processors.UnicastProcessor: io.reactivex.processors.UnicastProcessor create(int,java.lang.Runnable)
io.reactivex.observers.BaseTestConsumer: boolean awaitTerminalEvent(long,java.util.concurrent.TimeUnit)
io.reactivex.Single: io.reactivex.Single retry()
kotlin.collections.MapsKt___MapsKt: boolean all(java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.util.Preconditions: int checkArgumentPositive(int,java.lang.String)
androidx.appcompat.widget.ToolbarWidgetWrapper: void animateToVisibility(int)
com.example.revolut.rates.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(double[],int)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: LockFreeLinkedListNode$AbstractAtomicDesc()
kotlinx.coroutines.NodeList
io.reactivex.internal.operators.observable.ObservableSkipLast: ObservableSkipLast(io.reactivex.ObservableSource,int)
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry: ParallelDoOnNextTry(io.reactivex.parallel.ParallelFlowable,io.reactivex.functions.Consumer,io.reactivex.functions.BiFunction)
androidx.constraintlayout.widget.ConstraintSet: void centerHorizontallyRtl(int,int,int,int,int,int,int,float)
kotlin.UByte: byte MIN_VALUE
io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function3)
androidx.appcompat.R$styleable: int AlertDialog_buttonIconDimen
com.google.gson.FieldNamingStrategy
androidx.appcompat.view.StandaloneActionMode: void setTitle(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(byte[])
androidx.core.view.MenuCompat
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.reactivex.internal.util.OpenHashSet: OpenHashSet(int,float)
androidx.media.MediaBrowserServiceCompat: java.lang.String SERVICE_INTERFACE
okhttp3.WebSocket: long queueSize()
com.example.revolut.rates.R$style: int Platform_V21_AppCompat_Light
io.reactivex.internal.operators.flowable.FlowableElementAt: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.constraintlayout.solver.Metrics: long oldresolvedWidgets
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(boolean[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.observable.ObservableInternalHelper: io.reactivex.functions.Action observerOnComplete(io.reactivex.Observer)
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_MESSAGE
io.reactivex.internal.operators.completable.CompletableAndThenCompletable: void subscribeActual(io.reactivex.CompletableObserver)
com.example.revolut.rates.R$styleable: int[] RecycleListView
com.example.revolut.rates.R$id: int SYM
io.reactivex.internal.operators.flowable.FlowableRangeLong
okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)
androidx.media.R$color: int ripple_material_light
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_LEFT
androidx.core.app.NotificationCompat: int STREAM_DEFAULT
androidx.versionedparcelable.VersionedParcel: int[] readIntArray()
androidx.lifecycle.extensions.R$id: int tag_transition_group
com.example.revolut.rates.R$color: int abc_search_url_text
com.example.revolut.rates.R$drawable: int notification_bg_normal_pressed
kotlin.collections.AbstractMutableList
kotlin.jvm.internal.ClassReference: java.util.List getSupertypes()
androidx.core.view.ViewCompat$FocusRelativeDirection
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator: long serialVersionUID
io.reactivex.Observable: io.reactivex.Observable mergeArray(int,int,io.reactivex.ObservableSource[])
androidx.core.graphics.drawable.BitmapDrawableKt: android.graphics.drawable.BitmapDrawable toDrawable(android.graphics.Bitmap,android.content.res.Resources)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List map(java.lang.Iterable,kotlin.jvm.functions.Function1)
io.reactivex.internal.subscribers.InnerQueuedSubscriber: boolean isDone()
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function getComputationSchedulerHandler()
com.jakewharton.rxbinding3.view.ViewAttachAttachedEvent: com.jakewharton.rxbinding3.view.ViewAttachAttachedEvent copy(android.view.View)
kotlin.collections.EmptyList: java.lang.Void get(int)
androidx.appcompat.R$styleable: int SearchView_searchHintIcon
com.example.revolut.rates.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
androidx.appcompat.R$styleable: int MenuGroup_android_checkableBehavior
com.example.revolut.rates.R$styleable: int MenuItem_android_titleCondensed
androidx.legacy.app.ActionBarDrawerToggle$DelegateProvider: androidx.legacy.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
kotlin.UShort: short MAX_VALUE
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(boolean[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: ActivityChooserModel$HistoricalRecord(java.lang.String,long,float)
io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(org.reactivestreams.Publisher[],io.reactivex.functions.Function,int)
androidx.appcompat.app.ActionBar: void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback: ActionMenuItemView$PopupCallback()
okhttp3.internal.ws.WebSocketProtocol
io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable: FlowableIgnoreElementsCompletable(io.reactivex.Flowable)
androidx.legacy.coreutils.R
com.jakewharton.rxbinding3.core.R$drawable: int notification_bg
androidx.appcompat.widget.Toolbar: void setLogo(int)
io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getOptimizerWrapHeight()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAutoMirrored(boolean)
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function3)
okhttp3.internal.connection.StreamAllocation: void cancel()
androidx.core.graphics.RegionKt: android.graphics.Region minus(android.graphics.Region,android.graphics.Region)
androidx.appcompat.widget.DecorToolbar: void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)
dagger.android.support.R$color: int ripple_material_light
kotlin.collections.CollectionsKt___CollectionsJvmKt: CollectionsKt___CollectionsJvmKt()
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: FlowableGroupBy$GroupBySubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,io.reactivex.functions.Function,int,boolean,java.util.Map,java.util.Queue)
dagger.android.support.R$id: int homeAsUp
androidx.fragment.R$layout: int notification_action
androidx.drawerlayout.R$attr: int fontProviderFetchTimeout
kotlin.text.Regex: java.util.List split$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object)
kotlin.Deprecated: java.lang.String message()
io.reactivex.Single: io.reactivex.Single compose(io.reactivex.SingleTransformer)
androidx.media.R$dimen: int notification_media_narrow_margin
androidx.recyclerview.widget.SortedList
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List flatMap(java.lang.Iterable,kotlin.jvm.functions.Function1)
io.reactivex.Maybe: io.reactivex.Flowable repeat(long)
androidx.constraintlayout.widget.ConstraintSet: int START
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder hostOnlyDomain(java.lang.String)
io.reactivex.internal.queue.MpscLinkedQueue: java.lang.Object poll()
okio.Buffer: byte readByte()
androidx.slidingpanelayout.widget.SlidingPaneLayout: int getSliderFadeColor()
kotlinx.coroutines.InactiveNodeList: InactiveNodeList(kotlinx.coroutines.NodeList)
androidx.appcompat.R$color: int secondary_text_disabled_material_light
androidx.appcompat.view.menu.MenuItemImpl: void setActionViewExpanded(boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class)
kotlinx.coroutines.LazyDeferredKt: kotlinx.coroutines.Deferred lazyDefer(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
io.reactivex.internal.operators.flowable.FlowableTake: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.R$styleable: int AnimatedStateListDrawableCompat_android_visible
androidx.core.view.ViewCompat: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.appcompat.R$color: int foreground_material_light
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: long serialVersionUID
kotlin.collections.ArraysKt___ArraysKt: boolean none(float[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: void forEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringsJVMKt: byte[] encodeToByteArray$default(java.lang.String,int,int,boolean,int,java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable interval(long,java.util.concurrent.TimeUnit)
androidx.cursoradapter.widget.ResourceCursorAdapter: ResourceCursorAdapter(android.content.Context,int,android.database.Cursor,boolean)
com.jakewharton.rxbinding3.core.R$styleable: int[] FontFamily
androidx.lifecycle.ReportFragment: void onStop()
androidx.lifecycle.LifecycleService
io.reactivex.internal.operators.parallel.ParallelConcatMap
com.google.gson.JsonElement: boolean isJsonObject()
androidx.appcompat.widget.PopupMenu
androidx.appcompat.R$styleable: int FontFamilyFont_fontStyle
okhttp3.internal.connection.RealConnection: okhttp3.Protocol protocol()
kotlin.io.FilesKt__UtilsKt: java.io.File createTempFile$default(java.lang.String,java.lang.String,java.io.File,int,java.lang.Object)
androidx.vectordrawable.R$attr: int fontVariationSettings
kotlinx.coroutines.Cancelled: Cancelled(kotlinx.coroutines.Job,java.lang.Throwable)
dagger.android.support.R$attr: int windowMinWidthMinor
io.reactivex.observers.TestObserver: boolean hasSubscription()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT
androidx.legacy.coreui.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
dagger.android.support.R$styleable: int TextAppearance_android_typeface
kotlin.ranges.UIntRange: java.lang.Comparable getEndInclusive()
kotlin.coroutines.CombinedContext$Serialized$Companion
kotlin.collections.ArraysKt___ArraysKt: int reduceRight(int[],kotlin.jvm.functions.Function2)
okhttp3.MediaType
androidx.constraintlayout.widget.Placeholder: Placeholder(android.content.Context,android.util.AttributeSet,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] sliceArray-kzHmqpY(long[],java.util.Collection)
androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(int)
androidx.appcompat.R$styleable: int AppCompatTheme_dialogCornerRadius
androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(java.lang.Object[],int)
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarVisibility(boolean)
kotlin.jvm.internal.TypeIntrinsics: java.util.Map castToMap(java.lang.Object)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_goneMarginTop
androidx.appcompat.R$styleable: int ActionBar_contentInsetEndWithActions
kotlin.coroutines.CombinedContext
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
androidx.core.view.ScrollingView: int computeVerticalScrollRange()
androidx.core.view.MenuKt: java.util.Iterator iterator(android.view.Menu)
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getGravity()
androidx.core.animation.AnimatorKt$addListener$3
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder clear(java.lang.StringBuilder)
kotlin.random.Random$Default: double nextDouble(double)
io.reactivex.internal.subscriptions.ArrayCompositeSubscription: boolean setResource(int,org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableElementAt: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayHomeAsUpEnabled(boolean)
androidx.appcompat.R$styleable: int[] FontFamilyFont
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed
kotlin.reflect.KProperty0: java.lang.Object getDelegate()
androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_PREVIOUS_HTML_ELEMENT
kotlin.sequences.ConstrainedOnceSequence
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int,boolean)
androidx.viewpager.widget.ViewPager: boolean canScrollHorizontally(int)
androidx.core.view.PointerIconCompat: int TYPE_ARROW
dagger.android.HasActivityInjector: dagger.android.AndroidInjector activityInjector()
kotlin.collections.CollectionsKt__MutableCollectionsKt: java.util.List shuffled(java.lang.Iterable,kotlin.random.Random)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle)
kotlinx.coroutines.CancellableContinuationKt: kotlinx.coroutines.DisposableHandle removeOnCancel(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.reactivex.internal.operators.completable.CompletableTimeout
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
kotlinx.coroutines.CancellableContinuationKt: kotlinx.coroutines.DisposableHandle disposeOnCompletion(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.DisposableHandle)
kotlin.jvm.internal.Lambda: java.lang.String toString()
androidx.appcompat.widget.ListPopupWindow: void setSelection(int)
android.support.v4.media.MediaBrowserCompat$MediaItem: java.lang.String toString()
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams()
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintStart_toEndOf
io.reactivex.processors.PublishProcessor: void onSubscribe(org.reactivestreams.Subscription)
dagger.android.support.R$id: int cancel_action
dagger.android.support.R$id: int title
io.reactivex.internal.operators.single.SingleDefer
android.support.v4.media.session.MediaSessionCompat$Callback: void onSkipToPrevious()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean canApplyTheme()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()
androidx.legacy.coreutils.R$id: int tag_unhandled_key_listeners
io.reactivex.Observable: io.reactivex.Observable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateByTo$1: ChannelsKt__Channels_commonKt$associateByTo$1(kotlin.coroutines.Continuation)
okhttp3.internal.http2.Http2Stream: boolean isOpen()
androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)
androidx.recyclerview.widget.RecyclerView: void stopNestedScroll(int)
androidx.appcompat.widget.SwitchCompat: void jumpDrawablesToCurrentState()
io.reactivex.internal.operators.completable.CompletableFromUnsafeSource: void subscribeActual(io.reactivex.CompletableObserver)
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_ALBUM_ART_URI
androidx.core.view.ViewParentCompat: void onStopNestedScroll(android.view.ViewParent,android.view.View,int)
androidx.recyclerview.R$dimen: int notification_main_column_padding_top
dagger.android.AndroidInjector
kotlin.ranges.LongRange: boolean contains(long)
io.reactivex.Flowable: java.lang.Object blockingSingle(java.lang.Object)
kotlin.ExceptionsKt
io.reactivex.subjects.ReplaySubject: io.reactivex.subjects.ReplaySubject createWithSize(int)
androidx.appcompat.R$styleable: int Toolbar_titleMarginEnd
okhttp3.internal.tls.CertificateChainCleaner
androidx.lifecycle.extensions.R$styleable: int GradientColor_android_endX
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.example.revolut.rates.R$attr: int actionModeBackground
org.intellij.lang.annotations.JdkConstants
androidx.media.MediaBrowserServiceCompat: int RESULT_OK
kotlinx.coroutines.ExecutorCoroutineDispatcherBase: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1: java.lang.Object invokeSuspend(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableObserveOn: void subscribeActual(org.reactivestreams.Subscriber)
androidx.recyclerview.R$dimen: int notification_small_icon_size_as_large
io.reactivex.internal.util.AppendOnlyLinkedArrayList: void forEachWhile(java.lang.Object,io.reactivex.functions.BiPredicate)
androidx.appcompat.R$id: int edit_query
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mPositiveButtonListener
com.google.gson.JsonElement: com.google.gson.JsonElement deepCopy()
kotlinx.coroutines.internal.SystemPropsKt: int getAVAILABLE_PROCESSORS()
androidx.customview.R$color
androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightObserver: long serialVersionUID
androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider
androidx.legacy.v4.R$id: int start
io.reactivex.functions.Function8
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.os.Bundle getExtras()
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean canScroll(android.view.View,boolean,int,int,int)
kotlin.random.URandomKt: long nextULong(kotlin.random.Random)
androidx.slidingpanelayout.R$id: int icon_group
okio.ByteString: int compareTo(okio.ByteString)
com.jakewharton.rxbinding3.widget.SeekBarProgressChangeEvent: android.widget.SeekBar getView()
io.reactivex.subjects.PublishSubject: void onError(java.lang.Throwable)
io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,int,boolean)
kotlin.coroutines.jvm.internal.Boxing: java.lang.Double boxDouble(double)
io.reactivex.Observable: io.reactivex.Observable merge(java.lang.Iterable,int,int)
com.example.revolut.rates.R$dimen: int abc_action_bar_overflow_padding_start_material
androidx.recyclerview.widget.LinearLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
kotlinx.coroutines.CoroutineId: long component1()
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintBaseline_creator
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScreenReaderFocusable(boolean)
androidx.lifecycle.extensions.R$styleable: int[] GradientColorItem
androidx.core.os.LocaleListCompat: boolean equals(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Iterable withIndex-QwZRm1k(long[])
io.reactivex.internal.operators.observable.BlockingObservableLatest: java.util.Iterator iterator()
androidx.databinding.library.baseAdapters.DataBinderMapperImpl: androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View[],int)
dagger.android.support.R$drawable: int abc_vector_test
okhttp3.OkHttpClient: java.net.Proxy proxy()
kotlin.jvm.internal.TypeIntrinsics
io.reactivex.SingleObserver: void onSuccess(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(int[],int,int)
androidx.databinding.CallbackRegistry: void copyCallbacks(java.util.List)
androidx.core.provider.FontsContractCompat$Columns: java.lang.String RESULT_CODE
kotlin.reflect.KClass$DefaultImpls: void isSealed$annotations()
com.jakewharton.rxbinding3.core.R$styleable: int FontFamilyFont_font
androidx.appcompat.widget.DecorToolbar: boolean hideOverflowMenu()
android.support.v4.media.session.PlaybackStateCompat: long getActions()
kotlin.jvm.internal.Ref$LongRef: Ref$LongRef()
androidx.lifecycle.extensions.R$styleable: int FontFamily_fontProviderAuthority
kotlinx.coroutines.CoroutineScopeKt: boolean isActive(kotlinx.coroutines.CoroutineScope)
io.reactivex.internal.operators.completable.CompletableError
com.example.revolut.rates.R$attr: int spinnerStyle
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
androidx.recyclerview.widget.RecyclerView$RecyclerListener
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: kotlinx.coroutines.selects.SelectBuilderImpl getInstance()
com.jakewharton.rxbinding3.core.R$attr: int fontProviderCerts
androidx.appcompat.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)
androidx.core.text.BidiFormatter$Builder: BidiFormatter$Builder(java.util.Locale)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getRight()
androidx.swiperefreshlayout.R$attr: int ttcIndex
kotlinx.coroutines.RunnableKt$Runnable$1: RunnableKt$Runnable$1(kotlin.jvm.functions.Function0)
dagger.android.support.R$style: int TextAppearance_AppCompat_Small_Inverse
dagger.android.support.R$color: int highlighted_text_material_light
kotlin.reflect.KMutableProperty
okio.ByteString: okio.ByteString hmacSha256(okio.ByteString)
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
dagger.android.support.R$id: int multiply
kotlin.jvm.internal.PropertyReference2Impl: PropertyReference2Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
androidx.recyclerview.R$attr: int stackFromEnd
kotlinx.coroutines.ThreadPoolDispatcher: int access$getNThreads$p(kotlinx.coroutines.ThreadPoolDispatcher)
kotlin.collections.AbstractList: int hashCode()
androidx.core.animation.AnimatorKt$doOnPause$$inlined$addPauseListener$1: void onAnimationResume(android.animation.Animator)
com.example.revolut.rates.R$dimen: int currency_symbol_margin_start
okhttp3.MediaType: boolean equals(java.lang.Object)
androidx.recyclerview.R$dimen: int notification_action_icon_size
okio.Buffer: okio.BufferedSink writeHexadecimalUnsignedLong(long)
androidx.loader.R$layout: int notification_action
android.support.v4.media.session.PlaybackStateCompat: int REPEAT_MODE_INVALID
androidx.core.view.MotionEventCompat: int AXIS_HSCROLL
androidx.cursoradapter.widget.SimpleCursorAdapter: int[] mFrom
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle
retrofit2.KotlinExtensions$await$4$2
io.reactivex.internal.operators.flowable.FlowableUsing
kotlin.collections.LongIterator: java.lang.Object next()
androidx.fragment.app.FragmentPagerAdapter: androidx.fragment.app.Fragment getItem(int)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintAvoidBackgroundClipping(boolean)
io.reactivex.internal.disposables.DisposableContainer: boolean delete(io.reactivex.disposables.Disposable)
androidx.appcompat.view.menu.MenuView
androidx.appcompat.R$styleable: int MenuView_android_windowAnimationStyle
com.example.revolut.rates.R$attr: int layout_behavior
androidx.slidingpanelayout.R$id: int info
androidx.lifecycle.LifecycleService: LifecycleService()
io.reactivex.subscribers.TestSubscriber: boolean isDisposed()
androidx.media.AudioAttributesCompat$AttributeContentType
dagger.android.support.R$styleable: int LinearLayoutCompat_android_gravity
io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty: ObservableSwitchIfEmpty(io.reactivex.ObservableSource,io.reactivex.ObservableSource)
androidx.core.util.SparseArrayKt$valueIterator$1: boolean hasNext()
kotlin.internal.RequireKotlinVersionKind: kotlin.internal.RequireKotlinVersionKind API_VERSION
kotlinx.coroutines.DispatchedTask: kotlin.coroutines.Continuation getDelegate()
androidx.appcompat.R$id: int src_atop
androidx.legacy.coreui.R$id: int notification_main_column_container
io.reactivex.subjects.Subject
kotlin.text.CharsKt__CharJVMKt: int checkRadix(int)
dagger.android.support.R$drawable: int abc_cab_background_top_mtrl_alpha
io.reactivex.internal.operators.maybe.MaybeSubscribeOn
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumWidth()
kotlin.ranges.RangesKt___RangesKt: float coerceIn(float,float,float)
kotlinx.coroutines.channels.ChannelIterator: java.lang.Object hasNext(kotlin.coroutines.Continuation)
dagger.android.support.R$style: int Theme_AppCompat_Light_DarkActionBar
io.reactivex.Observable: io.reactivex.Observable window(long,long)
com.example.revolut.rates.R$id: int search_edit_frame
kotlin.jvm.internal.PropertyReference2Impl: kotlin.reflect.KDeclarationContainer getOwner()
io.reactivex.Observable: io.reactivex.Observable delay(long,java.util.concurrent.TimeUnit)
kotlin.sequences.DropSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.DropSequence)
dagger.android.support.R$style: int Base_Widget_AppCompat_ActionBar_TabView
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged: FlowableDistinctUntilChanged(io.reactivex.Flowable,io.reactivex.functions.Function,io.reactivex.functions.BiPredicate)
kotlinx.coroutines.test.TestCoroutineContext$$special$$inlined$CoroutineExceptionHandler$1
androidx.appcompat.R$attr: int buttonBarNeutralButtonStyle
kotlinx.coroutines.ChildContinuation
androidx.lifecycle.extensions.R$id: int normal
io.reactivex.internal.util.EndConsumerHelper: boolean setOnce(java.util.concurrent.atomic.AtomicReference,org.reactivestreams.Subscription,java.lang.Class)
com.jakewharton.rxbinding3.core.RxNestedScrollView: io.reactivex.Observable scrollChangeEvents(androidx.core.widget.NestedScrollView)
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper(android.content.Context,android.content.res.Resources$Theme)
io.reactivex.internal.operators.flowable.FlowableNever
kotlin.collections.ArraysKt___ArraysKt: long random(long[],kotlin.random.Random)
androidx.appcompat.app.AppCompatDelegate: int FEATURE_SUPPORT_ACTION_BAR_OVERLAY
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CUT
okhttp3.internal.http2.Http2Stream: okio.Sink getSink()
android.support.v4.media.session.IMediaSession: boolean sendMediaButton(android.view.KeyEvent)
androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)
io.reactivex.internal.schedulers.NonBlockingThread
io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function8)
io.reactivex.internal.operators.flowable.FlowableSingleSingle: FlowableSingleSingle(io.reactivex.Flowable,java.lang.Object)
io.reactivex.internal.schedulers.NewThreadWorker: void dispose()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int getIntrinsicWidth()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(java.lang.Object[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean performAction(int,android.os.Bundle)
okhttp3.internal.io.FileSystem: long size(java.io.File)
dagger.android.support.R$anim: int abc_popup_enter
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams
kotlin.jvm.internal.TypeIntrinsics: java.util.Map$Entry asMutableMapEntry(java.lang.Object,java.lang.String)
androidx.fragment.app.Fragment: boolean isResumed()
dagger.android.support.R$attr: int editTextColor
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_DATE
androidx.core.view.MenuItemCompat$OnActionExpandListener
androidx.legacy.v4.R$styleable: int GradientColor_android_startX
androidx.constraintlayout.widget.R$attr
androidx.appcompat.R$layout: int abc_alert_dialog_button_bar_material
androidx.core.view.ViewCompat: int LAYOUT_DIRECTION_INHERIT
androidx.databinding.ViewDataBinding$IncludedLayouts: ViewDataBinding$IncludedLayouts(int)
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
androidx.core.animation.AnimatorKt$addListener$4
okio.Buffer: okio.ByteString readByteString()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(int[],java.lang.Iterable)
com.jakewharton.rxbinding3.core.R$id: int async
com.example.revolut.rates.R$styleable: int MenuGroup_android_menuCategory
androidx.recyclerview.R$dimen: int item_touch_helper_swipe_escape_velocity
kotlin.io.FilesKt__UtilsKt: boolean copyRecursively(java.io.File,java.io.File,boolean,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KCallable computeReflected()
androidx.core.view.accessibility.AccessibilityEventCompat: int getMovementGranularity(android.view.accessibility.AccessibilityEvent)
dagger.android.support.R$styleable: int Toolbar_navigationIcon
com.example.revolut.rates.data.model.Rate: java.lang.String getCode()
androidx.vectordrawable.R$styleable: int[] ColorStateListItem
io.reactivex.internal.operators.observable.ObservableTimeInterval: void subscribeActual(io.reactivex.Observer)
androidx.core.graphics.MatrixKt
io.reactivex.internal.observers.InnerQueuedObserver: void onNext(java.lang.Object)
androidx.appcompat.R$attr: int initialActivityCount
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionModeCutDrawable
dagger.android.support.R$styleable: int Spinner_android_entries
okhttp3.OkHttpClient: boolean retryOnConnectionFailure()
io.reactivex.internal.operators.observable.ObservableElementAtSingle: io.reactivex.Observable fuseToObservable()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_RC4_128_SHA
androidx.core.ktx.R$id: int actions
okio.Buffer: okio.Buffer$UnsafeCursor readAndWriteUnsafe(okio.Buffer$UnsafeCursor)
kotlinx.coroutines.DeferredKt
androidx.vectordrawable.R$attr: int fontProviderPackage
androidx.drawerlayout.R$dimen: int compat_button_inset_vertical_material
okhttp3.internal.http2.Http2Codec: void writeRequestHeaders(okhttp3.Request)
android.support.v4.media.session.MediaControllerCompat$Callback: void onRepeatModeChanged(int)
io.reactivex.internal.observers.CallbackCompletableObserver: long serialVersionUID
kotlin.random.Random$Default: int nextInt(int)
com.google.gson.internal.bind.JsonTreeWriter: JsonTreeWriter()
androidx.appcompat.app.AlertController$AlertParams: android.view.View mView
dagger.internal.DaggerCollections: boolean hasDuplicates(java.util.List)
kotlin.ULong: long MAX_VALUE
androidx.viewpager.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.drawerlayout.R$styleable: int GradientColor_android_gradientRadius
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop
org.intellij.lang.annotations.Language: java.lang.String value()
kotlin.ranges.URangesKt___URangesKt: int random(kotlin.ranges.UIntRange,kotlin.random.Random)
retrofit2.http.HEAD
io.reactivex.internal.util.VolatileSizeArrayList: boolean containsAll(java.util.Collection)
io.reactivex.internal.operators.parallel.ParallelJoin
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function getInitNewThreadSchedulerHandler()
androidx.core.util.LongSparseArrayKt: void forEach(android.util.LongSparseArray,kotlin.jvm.functions.Function2)
okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)
androidx.legacy.coreui.R$dimen: int compat_notification_large_icon_max_width
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: java.lang.String toString()
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality ARABIC_NUMBER
kotlinx.coroutines.EventLoopBase: void scheduleResumeAfterDelay(long,java.util.concurrent.TimeUnit,kotlinx.coroutines.CancellableContinuation)
kotlinx.coroutines.channels.BroadcastKt: kotlinx.coroutines.channels.BroadcastChannel broadcast$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.media.R$style: int TextAppearance_Compat_Notification_Info_Media
kotlin.collections.ArraysKt___ArraysKt: boolean last(boolean[])
com.google.gson.GsonBuilder
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)
kotlin.text.CharCategory: kotlin.text.CharCategory LETTER_NUMBER
androidx.legacy.app.ActionBarDrawerToggle: void setHomeAsUpIndicator(int)
androidx.appcompat.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(char[],char,int,int,int,java.lang.Object)
androidx.databinding.ObservableByte: long serialVersionUID
kotlin.text.Regex: Regex(java.util.regex.Pattern)
dagger.android.support.R$color: int dim_foreground_material_light
kotlin.sequences.SequencesKt__SequenceBuilderKt: kotlin.sequences.Sequence sequence(kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object pollInternal()
androidx.databinding.ViewDataBinding: boolean onFieldChange(int,java.lang.Object,int)
androidx.core.widget.ScrollerCompat: void fling(int,int,int,int,int,int,int,int)
io.reactivex.internal.operators.flowable.BlockingFlowableIterable
androidx.appcompat.R$color: int switch_thumb_normal_material_light
kotlinx.coroutines.channels.Closed: java.lang.Object getOfferResult()
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat
android.support.v4.media.session.MediaControllerCompat$TransportControls: void skipToPrevious()
androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor getTarget()
com.example.revolut.rates.R$dimen: int abc_button_inset_vertical_material
androidx.legacy.v4.R$id: int right_side
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(int[],java.lang.Iterable)
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: void dispose()
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(long[],kotlin.jvm.functions.Function1)
androidx.recyclerview.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
androidx.core.net.TrafficStatsCompat: void setThreadStatsTag(int)
kotlin.TuplesKt: java.util.List toList(kotlin.Pair)
androidx.swiperefreshlayout.R$color
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener)
androidx.core.graphics.ShaderKt
io.reactivex.internal.operators.observable.ObservableInternalHelper: io.reactivex.functions.BiFunction simpleBiGenerator(io.reactivex.functions.BiConsumer)
androidx.core.animation.AnimatorKt$doOnRepeat$$inlined$addListener$1: void onAnimationEnd(android.animation.Animator)
kotlinx.coroutines.channels.ChannelsKt: kotlin.jvm.functions.Function1 consumes(kotlinx.coroutines.channels.ReceiveChannel)
androidx.appcompat.widget.SearchView$OnCloseListener
com.google.gson.internal.ConstructorConstructor
kotlinx.coroutines.Deferred: kotlinx.coroutines.selects.SelectClause1 getOnAwait()
androidx.legacy.coreui.R$attr: int layout_behavior
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: androidx.core.view.AccessibilityDelegateCompat getItemDelegate()
androidx.constraintlayout.widget.R$attr: int constraint_referenced_ids
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: java.lang.Object get(int)
com.example.revolut.rates.R$dimen: int abc_text_size_subhead_material
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedNotNullTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(float[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(float[],float,int,int)
io.reactivex.Flowable: io.reactivex.Flowable concat(java.lang.Iterable)
com.example.revolut.rates.RatesApp: boolean isNetworkConnected()
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: BasicFuseableConditionalSubscriber(io.reactivex.internal.fuseable.ConditionalSubscriber)
androidx.appcompat.view.menu.MenuView$ItemView: void setChecked(boolean)
androidx.coordinatorlayout.R$styleable: int FontFamily_fontProviderFetchTimeout
com.example.revolut.rates.R$styleable: int AppCompatImageView_tintMode
com.google.gson.internal.bind.util.ISO8601Utils: java.lang.String format(java.util.Date,boolean,java.util.TimeZone)
io.reactivex.internal.subscribers.QueueDrainSubscriber: QueueDrainSubscriber(org.reactivestreams.Subscriber,io.reactivex.internal.fuseable.SimplePlainQueue)
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBefore$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
io.reactivex.internal.observers.BlockingFirstObserver: BlockingFirstObserver()
kotlin.io.FilesKt__UtilsKt: boolean endsWith(java.io.File,java.io.File)
androidx.appcompat.R$color: int primary_text_disabled_material_light
androidx.appcompat.view.menu.BaseMenuPresenter: void addItemView(android.view.View,int)
kotlin.collections.CollectionsKt___CollectionsJvmKt: void reverse(java.util.List)
androidx.constraintlayout.solver.widgets.ChainHead
dagger.android.support.R$layout: int select_dialog_item_material
dagger.android.support.R$styleable: int TextAppearance_android_shadowRadius
androidx.recyclerview.widget.RecyclerView: boolean isAnimating()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED
androidx.appcompat.app.ActionBar: void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void play(java.lang.Object)
com.example.revolut.rates.R$id: int dataBinding
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: boolean isItalic()
io.reactivex.internal.disposables.ListCompositeDisposable: void dispose()
okhttp3.internal.http1.Http1Codec: boolean isClosed()
androidx.fragment.app.FragmentController: void dispatchLowMemory()
io.reactivex.internal.operators.flowable.FlowableInterval: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(char[],kotlin.jvm.functions.Function1)
androidx.customview.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.selects.SelectBuilderImpl: void access$doAfterSelect(kotlinx.coroutines.selects.SelectBuilderImpl)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_MD5
io.reactivex.internal.operators.observable.ObserverResourceWrapper: void setResource(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableMapNotification: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: long serialVersionUID
androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)
io.reactivex.internal.disposables.ListCompositeDisposable: boolean isDisposed()
kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt: kotlin.sequences.Sequence buildSequence(kotlin.jvm.functions.Function2)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter nullValue()
kotlinx.coroutines.DispatchedTask$DefaultImpls: void run(kotlinx.coroutines.DispatchedTask)
com.jakewharton.rxbinding3.core.R$styleable: int GradientColor_android_centerY
androidx.fragment.app.DialogFragment: void showNow(androidx.fragment.app.FragmentManager,java.lang.String)
androidx.legacy.coreutils.R$styleable: int GradientColor_android_centerY
io.reactivex.internal.operators.flowable.FlowableLift: FlowableLift(io.reactivex.Flowable,io.reactivex.FlowableOperator)
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_HIGH
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
okhttp3.internal.proxy.NullProxySelector: void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)
retrofit2.http.FieldMap
io.reactivex.internal.operators.flowable.FlowableRetryWhen: FlowableRetryWhen(io.reactivex.Flowable,io.reactivex.functions.Function)
androidx.databinding.DataBinderMapper: java.lang.String convertBrIdToString(int)
androidx.constraintlayout.solver.widgets.Barrier: void analyze(int)
androidx.core.ktx.R$styleable: int FontFamilyFont_fontVariationSettings
kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)
androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.example.revolut.rates.R$dimen: int notification_main_column_padding_top
kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String c()
kotlin.collections.ArraysKt___ArraysKt: boolean any(int[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.DecorToolbar: void setLogo(android.graphics.drawable.Drawable)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: int getSize()
androidx.drawerlayout.R$styleable: int ColorStateListItem_android_alpha
kotlin.ranges.UIntProgression$Companion: kotlin.ranges.UIntProgression fromClosedRange-Nkh28Cs(int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(short[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.view.ViewCompat: void setRotation(android.view.View,float)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Long toLongOrNull(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver$InnerObserver: long serialVersionUID
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(float[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long firstOrNull(long[])
androidx.databinding.adapters.ImageViewBindingAdapter: ImageViewBindingAdapter()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int getOpacity()
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence)
com.jakewharton.rxbinding3.core.R$id: int action_divider
io.reactivex.Observable: io.reactivex.Observable intervalRange(long,long,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.Flowable: io.reactivex.Flowable zip(java.lang.Iterable,io.reactivex.functions.Function)
com.example.revolut.rates.R$dimen: int abc_text_size_body_2_material
com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent: int hashCode()
androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat$Builder setContentType(int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cache(okhttp3.Cache)
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker: boolean isDisposed()
kotlin.collections.ArraysKt___ArraysKt: long single(long[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.core.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)
androidx.core.app.ActivityCompat: android.net.Uri getReferrer(android.app.Activity)
androidx.drawerlayout.widget.DrawerLayout: void closeDrawers()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
com.example.revolut.rates.R$style: int Widget_AppCompat_TextView_SpinnerItem
androidx.core.view.NestedScrollingChild: void stopNestedScroll()
io.reactivex.processors.FlowableProcessor: boolean hasSubscribers()
io.reactivex.internal.operators.observable.ObservablePublishAlt: void resetIf(io.reactivex.disposables.Disposable)
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
okhttp3.Request: okhttp3.Headers headers()
androidx.drawerlayout.R$id: int blocking
androidx.databinding.adapters.ViewBindingAdapter: void setPaddingRight(android.view.View,float)
io.reactivex.internal.operators.observable.ObservablePublishSelector: ObservablePublishSelector(io.reactivex.ObservableSource,io.reactivex.functions.Function)
kotlinx.coroutines.AbstractContinuation: java.lang.Object getSuccessfulResult(java.lang.Object)
androidx.appcompat.R$attr: int fontProviderCerts
com.example.revolut.rates.R$attr: int stackFromEnd
io.reactivex.internal.observers.FutureObserver: boolean cancel(boolean)
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Class,java.lang.Object)
com.example.revolut.rates.R$anim
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(short[],java.lang.Object,kotlin.jvm.functions.Function2)
dagger.android.support.R$attr: int buttonPanelSideLayout
androidx.appcompat.widget.DropDownListView: int NO_POSITION
okhttp3.internal.ws.RealWebSocket: void loopReader()
android.support.v4.media.session.MediaSessionCompat$QueueItem: java.util.List fromQueueItemList(java.util.List)
kotlinx.coroutines.InactiveNodeList: java.lang.String toString()
kotlin.Pair: int hashCode()
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int dodgeInsetEdges
androidx.vectordrawable.R$id: int line3
androidx.customview.widget.ExploreByTouchHelper: void invalidateVirtualView(int,int)
kotlin.math.MathKt: void E$annotations()
com.example.revolut.rates.R$attr: int listLayout
androidx.appcompat.widget.ActionBarOverlayLayout: void onWindowVisibilityChanged(int)
androidx.appcompat.view.menu.MenuBuilder: void setGroupVisible(int,boolean)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PROGRESS_MAX
androidx.appcompat.widget.ActivityChooserModel$ActivitySorter
dagger.android.support.R$styleable: int AppCompatTheme_tooltipForegroundColor
kotlin.text.StringsKt___StringsKt: java.util.List flatMap(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(byte[],int,int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isRoot()
kotlin.io.FilesKt__FileReadWriteKt: void writeBytes(java.io.File,byte[])
androidx.core.view.GestureDetectorCompat: boolean isLongpressEnabled()
androidx.appcompat.view.menu.MenuItemImpl: void setExclusiveCheckable(boolean)
io.reactivex.internal.operators.flowable.FlowableTimeout: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.math.MathKt__MathJVMKt: void sign$annotations(int)
androidx.coordinatorlayout.R$styleable: int GradientColor_android_centerY
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context)
androidx.recyclerview.widget.ItemTouchUIUtil: void clearView(android.view.View)
androidx.recyclerview.R$dimen: int fastscroll_margin
io.reactivex.internal.observers.BlockingBaseObserver: java.lang.Object blockingGet()
androidx.appcompat.R$attr: int actionViewClass
com.example.revolut.rates.R$attr: int layout_goneMarginEnd
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode getErrorCode()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel take$default(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
androidx.media.MediaBrowserProtocol: java.lang.String DATA_CALLBACK_TOKEN
com.example.revolut.rates.R$styleable: int Spinner_android_prompt
dagger.android.support.R$styleable: int Toolbar_logo
androidx.fragment.app.ListFragment: void setSelection(int)
io.reactivex.internal.subscribers.QueueDrainSubscriber: boolean enter()
androidx.media.MediaBrowserProtocol: java.lang.String DATA_ROOT_HINTS
dagger.android.support.R$integer: int abc_config_activityShortDur
kotlin.KotlinVersion$Companion: KotlinVersion$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.R$drawable: int abc_btn_switch_to_on_mtrl_00012
kotlin.text.StringsKt__StringsKt: int lastIndexOfAny(java.lang.CharSequence,java.util.Collection,int,boolean)
io.reactivex.Notification: java.lang.Object getValue()
kotlin.collections.ArraysKt___ArraysKt: void forEach(char[],kotlin.jvm.functions.Function1)
com.jakewharton.rxbinding3.widget.SeekBarStartChangeEvent: android.widget.SeekBar getView()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_PARENT
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: boolean isDisposed()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.Menu getMenu()
kotlin.TypeAliasesKt: void IllegalStateException$annotations()
io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged: ObservableDistinctUntilChanged(io.reactivex.ObservableSource,io.reactivex.functions.Function,io.reactivex.functions.BiPredicate)
androidx.constraintlayout.widget.ConstraintSet: void constrainMaxWidth(int,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getNumericModifiers()
kotlin.collections.AbstractCollection: void clear()
androidx.customview.R$drawable: int notification_icon_background
androidx.versionedparcelable.VersionedParcel: void writeSizeF(android.util.SizeF,int)
androidx.appcompat.widget.DecorContentParent: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.appcompat.widget.DrawableUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)
okio.Buffer: java.lang.String readString(long,java.nio.charset.Charset)
kotlin.jvm.internal.MutablePropertyReference1Impl: MutablePropertyReference1Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
okhttp3.internal.http2.Http2Connection$Builder: Http2Connection$Builder(boolean)
io.reactivex.internal.operators.single.SingleDematerialize: SingleDematerialize(io.reactivex.Single,io.reactivex.functions.Function)
io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit)
io.reactivex.internal.observers.ForEachWhileObserver: ForEachWhileObserver(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
dagger.android.support.R$attr: int state_above_anchor
dagger.android.support.R$style: int Base_Widget_AppCompat_Button_Borderless
io.reactivex.internal.operators.observable.ObservableSerialized
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintWidth_percent
kotlin.sequences.TransformingSequence$iterator$1: void remove()
io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.maybe.MaybeCreate$Emitter: long serialVersionUID
com.example.revolut.rates.R$attr: int layout_constrainedHeight
io.reactivex.Scheduler: Scheduler()
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8
dagger.android.support.R$drawable: int abc_text_select_handle_right_mtrl_light
io.reactivex.internal.operators.flowable.FlowableSequenceEqual
androidx.recyclerview.widget.ItemTouchHelper$Callback: int DEFAULT_DRAG_ANIMATION_DURATION
io.reactivex.Observable: io.reactivex.Observable concatArrayEager(int,int,io.reactivex.ObservableSource[])
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
androidx.fragment.app.FragmentTransitionImpl
androidx.core.view.GravityCompat
androidx.appcompat.widget.ContentFrameLayout: void onAttachedToWindow()
kotlin.UShortArray: boolean add(java.lang.Object)
dagger.android.ActivityKey
kotlinx.coroutines.channels.AbstractChannel$enqueueReceive$$inlined$addLastIfPrevAndIf$1: AbstractChannel$enqueueReceive$$inlined$addLastIfPrevAndIf$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.channels.AbstractChannel)
retrofit2.KotlinExtensions: java.lang.Object await(retrofit2.Call,kotlin.coroutines.Continuation)
kotlin.ranges.URangesKt___URangesKt: URangesKt___URangesKt()
kotlin.jvm.internal.MagicApiIntrinsics: int intMagicApiCall(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView$State: boolean hasTargetScrollPosition()
com.example.revolut.rates.R$drawable: int abc_tab_indicator_mtrl_alpha
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionBar_Solid
android.support.v4.media.MediaBrowserCompat: void connect()
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver: long serialVersionUID
kotlin.sequences.DropSequence$iterator$1: java.util.Iterator getIterator()
dagger.internal.MapProviderFactory: dagger.internal.MapProviderFactory$Builder builder(int)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: FingerprintManagerCompat$CryptoObject(javax.crypto.Cipher)
kotlin.jvm.internal.ArrayIteratorKt
io.reactivex.Flowable: io.reactivex.Flowable retryWhen(io.reactivex.functions.Function)
io.reactivex.Maybe: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)
com.example.revolut.rates.view.MainActivity: void newBaseNotify(java.lang.String)
androidx.appcompat.view.menu.MenuAdapter: MenuAdapter(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int)
io.reactivex.internal.operators.observable.ObservableDetach: void subscribeActual(io.reactivex.Observer)
androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)
androidx.fragment.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind UNKNOWN
androidx.appcompat.R$style: int Widget_AppCompat_Button
com.example.revolut.rates.R$dimen: int compat_button_padding_vertical_material
okio.Buffer: long indexOf(okio.ByteString,long)
android.support.v4.media.session.MediaSessionCompat: void ensureClassLoader(android.os.Bundle)
dagger.android.support.R$style: int Widget_AppCompat_RatingBar_Small
com.example.revolut.rates.R$attr: int actionModeCloseDrawable
kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.channels.SubscriptionReceiveChannel openSubscription()
io.reactivex.Observable: io.reactivex.Observable map(io.reactivex.functions.Function)
androidx.drawerlayout.R$dimen: int notification_action_text_size
androidx.databinding.adapters.FrameLayoutBindingAdapter: FrameLayoutBindingAdapter()
com.google.gson.internal.JavaVersion: boolean isJava9OrLater()
androidx.appcompat.R$color: int tooltip_background_light
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object offerInternal(java.lang.Object)
androidx.recyclerview.widget.AsyncDifferConfig$Builder: androidx.recyclerview.widget.AsyncDifferConfig$Builder setBackgroundThreadExecutor(java.util.concurrent.Executor)
dagger.internal.DelegateFactory: DelegateFactory()
androidx.appcompat.view.menu.MenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
androidx.appcompat.app.ActionBarDrawerToggle$Delegate: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
androidx.fragment.app.FragmentController: void dispatchConfigurationChanged(android.content.res.Configuration)
androidx.databinding.ObservableList$OnListChangedCallback
io.reactivex.schedulers.Schedulers: io.reactivex.Scheduler single()
androidx.appcompat.widget.ToolbarWidgetWrapper: int getHeight()
androidx.core.graphics.ColorKt: int getBlue(int)
kotlin.UByteArray: byte[] constructor-impl(byte[])
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(byte[],kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_COPY
com.google.gson.internal.LazilyParsedNumber: java.lang.Object writeReplace()
kotlin.io.FilePathComponents: kotlin.io.FilePathComponents copy$default(kotlin.io.FilePathComponents,java.io.File,java.util.List,int,java.lang.Object)
kotlinx.coroutines.ResumeModeKt: void MODE_ATOMIC_DEFAULT$annotations()
io.reactivex.internal.operators.observable.ObservableAny: void subscribeActual(io.reactivex.Observer)
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(boolean[])
kotlinx.coroutines.test.TestCoroutineContext$$special$$inlined$CoroutineExceptionHandler$1: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: boolean isSpinEnabled()
kotlin.collections.ArraysKt___ArraysKt: boolean contains(double[],double)
androidx.appcompat.R$style: int Widget_AppCompat_ActionBar
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int MATCH_CONSTRAINT_WRAP
com.example.revolut.rates.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
dagger.android.support.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder certificatePinner(okhttp3.CertificatePinner)
androidx.core.app.NotificationCompat: int BADGE_ICON_SMALL
androidx.arch.core.executor.DefaultTaskExecutor
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status FINISHED
kotlin.ranges.IntRange: IntRange(int,int)
io.reactivex.observers.BaseTestConsumer: int valueCount()
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function4)
io.reactivex.internal.observers.BasicIntQueueDisposable: boolean offer(java.lang.Object)
androidx.appcompat.widget.ActionBarContextView: void closeMode()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_goneMarginTop
kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.channels.ReceiveChannel openSubscription()
androidx.core.view.ViewCompat: void setLayerType(android.view.View,int,android.graphics.Paint)
androidx.appcompat.widget.ActivityChooserView: androidx.appcompat.widget.ListPopupWindow getListPopupWindow()
com.example.revolut.rates.R$style: R$style()
androidx.core.ktx.R$styleable: int GradientColor_android_centerColor
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
android.support.v4.media.session.MediaSessionCompat$Callback: void onSeekTo(long)
dagger.android.support.R$styleable: int Toolbar_collapseContentDescription
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setDrawingOrder(int)
io.reactivex.Flowable: io.reactivex.Observable toObservable()
androidx.core.view.TintableBackgroundView
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_LOCAL_ONLY
com.example.revolut.rates.RatesApp_MembersInjector: void injectRetrofit(com.example.revolut.rates.RatesApp,retrofit2.Retrofit)
androidx.appcompat.R$dimen: int abc_progress_bar_height_material
kotlin.collections.AbstractMap: boolean containsEntry$kotlin_stdlib(java.util.Map$Entry)
androidx.constraintlayout.widget.R$attr: int layout_constraintLeft_toRightOf
io.reactivex.internal.operators.observable.AbstractObservableWithUpstream: io.reactivex.ObservableSource source
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener: void onPageScrolled(int,float,int)
androidx.appcompat.R$styleable: int ActionBar_height
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BYTE
androidx.fragment.app.ListFragment: int getSelectedItemPosition()
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(double[],int)
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe: io.reactivex.Flowable fuseToFlowable()
androidx.coordinatorlayout.R$dimen: int notification_large_icon_width
dagger.android.support.R$attr: int textAppearanceLargePopupMenu
io.reactivex.MaybeEmitter: boolean isDisposed()
androidx.core.os.LocaleListCompat: java.lang.Object unwrap()
io.reactivex.internal.subscriptions.DeferredScalarSubscription: boolean tryCancel()
com.example.revolut.rates.R$id: int message
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol SEND_RESUMED
androidx.legacy.v4.R$id: int end
androidx.core.view.accessibility.AccessibilityRecordCompat: void setChecked(boolean)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
androidx.core.view.GravityCompat: int END
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler onNewThreadScheduler(io.reactivex.Scheduler)
androidx.appcompat.R$anim: int abc_slide_out_bottom
kotlin.jvm.internal.Intrinsics: void throwNpe()
androidx.core.graphics.PathKt: android.graphics.Path xor(android.graphics.Path,android.graphics.Path)
androidx.core.view.ViewGroupCompat: int LAYOUT_MODE_OPTICAL_BOUNDS
io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)
io.reactivex.internal.disposables.EmptyDisposable: void clear()
androidx.legacy.coreutils.R$integer: int status_bar_notification_info_maxnum
androidx.appcompat.R$style: int TextAppearance_AppCompat_Caption
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setCheckable(boolean)
io.reactivex.internal.operators.completable.CompletableToObservable: void subscribeActual(io.reactivex.Observer)
kotlinx.coroutines.ThreadPoolDispatcher
retrofit2.Call
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short max(short[])
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void invalidateDrawable(android.graphics.drawable.Drawable)
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()
androidx.core.widget.ScrollerCompat: boolean isOverScrolled()
io.reactivex.internal.util.EndConsumerHelper: boolean validate(org.reactivestreams.Subscription,org.reactivestreams.Subscription,java.lang.Class)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(long[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.FunctionReference: int getArity()
io.reactivex.subjects.CompletableSubject: boolean hasComplete()
kotlin.io.FilesKt__FilePathComponentsKt: boolean isRooted(java.io.File)
androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List zip(java.lang.Iterable,java.lang.Object[])
androidx.collection.LongSparseArray: void delete(long)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: boolean contains-VKZWuLQ(long)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(char[])
kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setOngoing(boolean)
androidx.constraintlayout.widget.ConstraintHelper: void onMeasure(int,int)
androidx.vectordrawable.R$styleable: int ColorStateListItem_android_color
io.reactivex.subscribers.TestSubscriber$EmptySubscriber: io.reactivex.subscribers.TestSubscriber$EmptySubscriber[] values()
androidx.recyclerview.widget.RecyclerView$State: int getRemainingScrollVertical()
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintCircle
io.reactivex.Flowable: io.reactivex.Flowable timestamp(io.reactivex.Scheduler)
com.example.revolut.rates.R$color: int bright_foreground_disabled_material_light
io.reactivex.internal.subscriptions.AsyncSubscription: boolean replaceResource(io.reactivex.disposables.Disposable)
com.example.revolut.rates.R$styleable: int GradientColor_android_type
kotlin.jvm.KotlinReflectionNotSupportedError
androidx.constraintlayout.widget.ConstraintSet: void setBarrierType(int,int)
com.jakewharton.rxbinding3.core.R$dimen: int compat_control_corner_material
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-WpHrYlw$default(byte[],byte,int,int,int,java.lang.Object)
io.reactivex.functions.Cancellable: void cancel()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA
io.reactivex.internal.observers.BlockingFirstObserver: void onNext(java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getLength(int)
kotlin.jvm.internal.FunctionBase
dagger.android.support.R$id: int action_bar_subtitle
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(int[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$none$3: ChannelsKt__Channels_commonKt$none$3(kotlin.coroutines.Continuation)
androidx.interpolator.view.animation.LookupTableInterpolator: LookupTableInterpolator(float[])
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isScrollable()
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getLayoutPosition()
androidx.fragment.app.FragmentTabHost: void onTabChanged(java.lang.String)
com.example.revolut.rates.R$style: int Base_Theme_AppCompat_Dialog
kotlin.jvm.internal.MutablePropertyReference0Impl
androidx.recyclerview.widget.RecyclerView: void stopScroll()
okhttp3.internal.http2.Http2Codec: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
androidx.core.app.ActivityCompat: void finishAffinity(android.app.Activity)
androidx.loader.R$dimen: int notification_top_pad_large_text
androidx.recyclerview.widget.GridLayoutManager: boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
io.reactivex.Flowable: io.reactivex.Flowable never()
okhttp3.Request$Builder
io.reactivex.internal.operators.parallel.ParallelMap: void subscribe(org.reactivestreams.Subscriber[])
androidx.core.widget.ListPopupWindowCompat: android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: boolean all(long[],kotlin.jvm.functions.Function1)
com.google.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.String)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$fold$1
kotlin.ranges.URangesKt___URangesKt: boolean contains-fz5IDCE(kotlin.ranges.UIntRange,long)
okhttp3.Request$Builder: okhttp3.Request$Builder delete()
kotlinx.coroutines.CompletedExceptionallyKt: java.lang.Object toState(java.lang.Object)
androidx.asynclayoutinflater.R$color: int ripple_material_light
kotlin.io.FileTreeWalk: kotlin.io.FileWalkDirection access$getDirection$p(kotlin.io.FileTreeWalk)
androidx.core.view.ViewKt: int getMarginEnd(android.view.View)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: boolean contains(byte)
okhttp3.internal.Util: int indexOf(java.util.Comparator,java.lang.String[],java.lang.String)
androidx.core.net.TrafficStatsCompat: int getThreadStatsTag()
com.google.gson.TypeAdapter: TypeAdapter()
androidx.media.MediaBrowserServiceCompat: android.os.Bundle getBrowserRootHints()
androidx.loader.R$dimen: int compat_button_inset_vertical_material
dagger.android.support.R$id: int action_divider
androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int)
com.example.revolut.rates.R$attr: int layout_constraintGuide_begin
kotlinx.coroutines.scheduling.WorkQueue$pollExternal$1
androidx.recyclerview.R$drawable
androidx.appcompat.R$style: int Base_V23_Theme_AppCompat_Light
io.reactivex.internal.disposables.DisposableHelper: boolean validate(io.reactivex.disposables.Disposable,io.reactivex.disposables.Disposable)
okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.slidingpanelayout.R$dimen: int notification_large_icon_width
androidx.core.R$id: int chronometer
androidx.core.view.ViewKt$postDelayed$runnable$1: void run()
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CoroutineStart: CoroutineStart(java.lang.String,int)
io.reactivex.annotations.SchedulerSupport: java.lang.String CUSTOM
androidx.databinding.adapters.ToolbarBindingAdapter: ToolbarBindingAdapter()
androidx.appcompat.R$styleable: int[] CompoundButton
androidx.appcompat.widget.ListPopupWindow: void clearListSelection()
androidx.databinding.DataBindingUtil: androidx.databinding.ViewDataBinding bind(android.view.View)
dagger.android.DispatchingAndroidInjector_Factory: java.lang.Object get()
io.reactivex.subjects.PublishSubject: void onNext(java.lang.Object)
okhttp3.internal.connection.RealConnection: okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams(okhttp3.internal.connection.StreamAllocation)
dagger.android.support.R$drawable: int abc_list_pressed_holo_dark
com.example.revolut.rates.R$color: int abc_hint_foreground_material_light
io.reactivex.internal.operators.single.SingleDelayWithPublisher: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.Single: io.reactivex.Single fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable()
androidx.drawerlayout.R$dimen: int notification_large_icon_width
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfterLast$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.CoroutineName: kotlinx.coroutines.CoroutineName copy(java.lang.String)
com.jakewharton.rxbinding3.core.R$styleable: int FontFamilyFont_android_fontStyle
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnConditionalSubscriber: long serialVersionUID
kotlin.coroutines.experimental.SequenceBuilder: java.lang.Object yield(java.lang.Object,kotlin.coroutines.experimental.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addLastIf(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0)
io.reactivex.internal.schedulers.NewThreadScheduler: NewThreadScheduler(java.util.concurrent.ThreadFactory)
kotlin.text.RegexOption: kotlin.text.RegexOption valueOf(java.lang.String)
androidx.appcompat.widget.ListPopupWindow: boolean performItemClick(int)
androidx.appcompat.R$layout: int notification_template_part_time
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams
com.example.revolut.rates.R$styleable: int MenuGroup_android_orderInCategory
androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
kotlin.sequences.SequencesKt___SequencesKt: boolean none(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.DecorToolbar: void setNavigationIcon(int)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_REMOTE_INPUT_HISTORY
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light
kotlin.collections.UShortIterator
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void endAnimations()
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableMap(java.lang.Object)
androidx.core.view.MotionEventCompat: float getX(android.view.MotionEvent,int)
androidx.core.view.inputmethod.InputContentInfoCompat: android.net.Uri getContentUri()
kotlinx.coroutines.channels.ProducerJob$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.channels.ProducerJob,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.util.SparseBooleanArrayKt: kotlin.collections.BooleanIterator valueIterator(android.util.SparseBooleanArray)
kotlin.reflect.KParameter$DefaultImpls
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-JQknh5Q(byte[],java.lang.Iterable)
androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)
androidx.appcompat.widget.AbsActionBarView: boolean hideOverflowMenu()
kotlin.collections.SlidingWindowKt: kotlin.sequences.Sequence windowedSequence(kotlin.sequences.Sequence,int,int,boolean,boolean)
com.google.gson.internal.reflect.ReflectionAccessor
kotlinx.coroutines.channels.Closed: java.lang.Throwable closeCause
android.support.v4.media.MediaMetadataCompat: android.support.v4.media.MediaDescriptionCompat getDescription()
io.reactivex.internal.subscriptions.SubscriptionHelper: boolean setOnce(java.util.concurrent.atomic.AtomicReference,org.reactivestreams.Subscription,long)
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationEnd(android.animation.Animator)
kotlinx.coroutines.DispatchedContinuation: void resumeUndispatched(java.lang.Object)
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
androidx.appcompat.R$string: int status_bar_notification_info_overflow
androidx.core.text.StringKt
com.example.revolut.rates.R$style: int ThemeOverlay_AppCompat_Dark
io.reactivex.Maybe: io.reactivex.Flowable concatDelayError(java.lang.Iterable)
io.reactivex.Single: io.reactivex.Maybe filter(io.reactivex.functions.Predicate)
kotlin.coroutines.experimental.migration.ExperimentalContextMigration$Key
kotlin.ranges.ULongProgression: boolean isEmpty()
okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)
kotlinx.coroutines.DispatchersKt: java.lang.String IO_PARALLELISM_PROPERTY_NAME
io.reactivex.internal.disposables.EmptyDisposable: void complete(io.reactivex.CompletableObserver)
androidx.core.graphics.ShaderKt: void transform(android.graphics.Shader,kotlin.jvm.functions.Function1)
io.reactivex.FlowableOnSubscribe: void subscribe(io.reactivex.FlowableEmitter)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int)
kotlin.reflect.KProperty: kotlin.reflect.KProperty$Getter getGetter()
io.reactivex.internal.operators.observable.ObservableTimeoutTimed
io.reactivex.internal.subscribers.LambdaSubscriber: boolean hasCustomOnError()
com.jakewharton.rxbinding3.core.R$drawable: int notify_panel_notification_icon_bg
androidx.media.R$id: int end_padder
kotlin.UIntArray: boolean retainAll(java.util.Collection)
retrofit2.http.Headers: java.lang.String[] value()
com.example.revolut.rates.R$color: int color_grey_900
dagger.android.support.R$attr: int buttonBarPositiveButtonStyle
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(short[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.fragment.app.FragmentController: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
androidx.appcompat.R$style: int Widget_AppCompat_ListView
okhttp3.Protocol: okhttp3.Protocol QUIC
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(short[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_DISMISS
androidx.constraintlayout.widget.Group: Group(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.observable.ObservableZip
dagger.android.support.R$drawable: int abc_cab_background_top_material
com.example.revolut.rates.R$dimen: int abc_text_size_headline_material
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: int getSize()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)
kotlinx.coroutines.internal.LockFreeMPMCQueueNode
androidx.appcompat.widget.DecorToolbar: boolean isOverflowMenuShowPending()
kotlinx.coroutines.DebugKt: java.lang.String getHexAddress(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableRetryPredicate: FlowableRetryPredicate(io.reactivex.Flowable,long,io.reactivex.functions.Predicate)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type getType()
com.example.revolut.rates.R$attr: int tooltipForegroundColor
androidx.appcompat.R$drawable: int abc_list_selector_background_transition_holo_light
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onDetachedFromWindow()
io.reactivex.Observable: io.reactivex.Observable mergeWith(io.reactivex.MaybeSource)
okhttp3.Handshake: java.util.List localCertificates()
kotlin.collections.ArraysKt___ArraysKt: double averageOfShort(java.lang.Short[])
androidx.lifecycle.MediatorLiveData: void onInactive()
dagger.android.support.R$drawable: int abc_text_select_handle_middle_mtrl_dark
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pushObserver(okhttp3.internal.http2.PushObserver)
androidx.appcompat.widget.ListPopupWindow: void setSoftInputMode(int)
com.google.gson.stream.JsonToken
androidx.annotation.VisibleForTesting: int PROTECTED
androidx.viewpager.R$id: int line3
io.reactivex.internal.operators.observable.ObservableDematerialize: void subscribeActual(io.reactivex.Observer)
androidx.core.view.ViewKt: int getMarginBottom(android.view.View)
androidx.viewpager.R$dimen: int compat_control_corner_material
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode--ajY-9A(int[])
androidx.legacy.coreutils.R$styleable: int GradientColorItem_android_color
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAutoMirrored(boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object first(java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte singleOrNull-GBYM_sE(byte[])
androidx.appcompat.widget.ListPopupWindow
kotlin.coroutines.experimental.CombinedContext: int hashCode()
io.reactivex.subjects.CompletableSubject: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.coordinatorlayout.R$styleable: int GradientColor_android_centerX
com.google.gson.JsonArray: char getAsCharacter()
kotlin.text.MatchNamedGroupCollection
androidx.viewpager.R$id: int forever
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable from(org.reactivestreams.Publisher)
androidx.core.animation.AnimatorKt$addListener$4: void invoke(android.animation.Animator)
androidx.annotation.RequiresPermission$Write
kotlin.Triple: kotlin.Triple copy$default(kotlin.Triple,java.lang.Object,java.lang.Object,java.lang.Object,int,java.lang.Object)
com.google.gson.Gson
androidx.collection.ArraySet: ArraySet(androidx.collection.ArraySet)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onStateChange(int[])
okhttp3.Call: okhttp3.Response execute()
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentHostCallback: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)
kotlin.Lazy: java.lang.Object getValue()
kotlin.coroutines.experimental.Continuation: void resumeWithException(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(byte[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
android.support.v4.media.MediaBrowserCompat: void subscribe(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)
androidx.recyclerview.widget.RecyclerView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
androidx.constraintlayout.widget.Guideline: void onMeasure(int,int)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateBy$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.livedata.R
dagger.android.support.R$attr: int homeLayout
androidx.fragment.R$styleable: int FontFamily_fontProviderPackage
androidx.appcompat.R$color: int ripple_material_light
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void setTargetPosition(int)
kotlin.reflect.KProperty1
androidx.media.AudioAttributesCompat: int USAGE_NOTIFICATION_COMMUNICATION_INSTANT
kotlin.jvm.functions.Function14
androidx.legacy.v4.R$drawable: int notification_tile_bg
kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc: boolean validatePrepared(java.lang.Object)
dagger.android.support.R$color: int dim_foreground_material_dark
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: long serialVersionUID
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
io.reactivex.Completable: io.reactivex.Completable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)
androidx.core.content.pm.ShortcutInfoCompat$Builder: ShortcutInfoCompat$Builder(android.content.Context,java.lang.String)
kotlinx.coroutines.ChildJob: java.lang.Object invoke(java.lang.Object)
androidx.coordinatorlayout.R$dimen: int notification_content_margin_start
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_scaleX
androidx.appcompat.view.SupportActionModeWrapper: java.lang.CharSequence getTitle()
dagger.android.support.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
androidx.appcompat.R$style: int Base_Widget_AppCompat_Button_Small
io.reactivex.internal.operators.maybe.MaybeMergeArray: void subscribeActual(org.reactivestreams.Subscriber)
android.support.v4.media.session.IMediaControllerCallback$Stub
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_goneMarginRight
androidx.appcompat.app.WindowDecorActionBar$TabImpl: java.lang.Object getTag()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
androidx.appcompat.widget.AbsActionBarView: void onConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.MenuInflater getMenuInflater()
androidx.lifecycle.SingleGeneratedAdapterObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int VERTICAL
dagger.android.support.R$attr: int switchMinWidth
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver$OtherObserver: long serialVersionUID
com.example.revolut.rates.R$dimen: int abc_action_bar_default_padding_end_material
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter()
kotlin.internal.RequireKotlinVersionKind
io.reactivex.internal.operators.completable.CompletableToSingle: CompletableToSingle(io.reactivex.CompletableSource,java.util.concurrent.Callable,java.lang.Object)
kotlinx.coroutines.ChildContinuation: java.lang.Object invoke(java.lang.Object)
kotlin.collections.EmptyList: boolean add(java.lang.Void)
dagger.android.support.R$id: int activity_chooser_view_content
kotlinx.coroutines.CancelHandlerBase
androidx.appcompat.R$styleable: int[] ColorStateListItem
kotlin.collections.UShortIterator: void remove()
io.reactivex.Observable: io.reactivex.Single toMultimap(io.reactivex.functions.Function)
kotlinx.coroutines.internal.LockFreeLinkedListNode$describeRemove$1: void finishOnSuccess(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.appcompat.view.menu.BaseWrapper: java.lang.Object getWrappedObject()
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence reversed(java.lang.CharSequence)
androidx.collection.CircularArray: int size()
io.reactivex.internal.operators.completable.CompletableDoFinally: CompletableDoFinally(io.reactivex.CompletableSource,io.reactivex.functions.Action)
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key)
androidx.core.graphics.ColorKt: float component4(android.graphics.Color)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBefore$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter UUID
io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function3)
com.google.gson.JsonObject: boolean has(java.lang.String)
androidx.appcompat.widget.ActionMenuView: void onMeasure(int,int)
androidx.appcompat.app.ActionBar: void setHideOffset(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void onBoundsChange(android.graphics.Rect)
android.support.v4.media.MediaMetadataCompatApi21$Builder: void putBitmap(java.lang.Object,java.lang.String,android.graphics.Bitmap)
androidx.appcompat.widget.PopupMenu: void show()
kotlin.collections.EmptyList: boolean remove(java.lang.Object)
com.jakewharton.rxbinding3.core.R$dimen: int compat_notification_large_icon_max_width
android.support.v4.media.session.MediaSessionCompat: void setFlags(int)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
kotlin.Metadata: java.lang.String pn()
kotlin.ranges.IntRange$Companion
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_REPEAT_MODE
dagger.android.support.R$drawable: int abc_scrubber_primary_mtrl_alpha
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCanOpenPopup(boolean)
androidx.fragment.R$style: int TextAppearance_Compat_Notification_Line2
com.example.revolut.rates.R$id: int loading_layout
androidx.appcompat.R$styleable: int Toolbar_android_gravity
dagger.android.support.R$styleable: int ActionBar_homeLayout
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[],int,int,int)
androidx.core.view.ViewCompat: void setElevation(android.view.View,float)
kotlin.jvm.functions.Function0
com.example.revolut.rates.data.model.CurrencyResponse: void setBase(java.lang.String)
androidx.core.app.NotificationCompat: int getActionCount(android.app.Notification)
androidx.constraintlayout.widget.Barrier: int RIGHT
androidx.recyclerview.widget.DiffUtil$ItemCallback: java.lang.Object getChangePayload(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowablePublish: io.reactivex.flowables.ConnectableFlowable create(io.reactivex.Flowable,int)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintTop_creator
androidx.lifecycle.FullLifecycleObserverAdapter
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection filterNotTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1)
dagger.android.support.R$styleable: int AppCompatTheme_panelMenuListTheme
androidx.asynclayoutinflater.R$dimen: int compat_notification_large_icon_max_width
androidx.databinding.MergedDataBinderMapper
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegment(java.lang.String)
io.reactivex.internal.schedulers.SingleScheduler: SingleScheduler(java.util.concurrent.ThreadFactory)
androidx.core.view.NestedScrollingParent2: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapTo$1: java.lang.Object invokeSuspend(java.lang.Object)
okhttp3.internal.http1.Http1Codec: void writeRequestHeaders(okhttp3.Request)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.view.WindowCallbackWrapper: void onActionModeStarted(android.view.ActionMode)
com.example.revolut.rates.R$id: int spread_inside
androidx.appcompat.R$styleable: int GradientColor_android_endX
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(androidx.appcompat.app.ActionBar$LayoutParams)
io.reactivex.Observable: io.reactivex.Observable doAfterNext(io.reactivex.functions.Consumer)
com.google.gson.Gson: java.lang.String toJson(com.google.gson.JsonElement)
io.reactivex.observers.ResourceMaybeObserver: boolean isDisposed()
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,boolean)
androidx.appcompat.graphics.drawable.DrawableContainer: void setDither(boolean)
io.reactivex.internal.schedulers.SchedulerPoolFactory: void start()
androidx.core.widget.ScrollerCompat: void abortAnimation()
kotlin.collections.ArraysKt___ArraysKt: boolean none(char[])
dagger.android.support.R$styleable: int AppCompatTheme_dialogPreferredPadding
kotlinx.coroutines.selects.SelectBuilder$DefaultImpls: void invoke(kotlinx.coroutines.selects.SelectBuilder,kotlinx.coroutines.selects.SelectClause2,kotlin.jvm.functions.Function2)
dagger.android.support.R$id: int notification_main_column
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followRedirects(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup
androidx.legacy.coreui.R$attr: int fontProviderFetchStrategy
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DISMISS
kotlin.collections.MapsKt___MapsKt: void forEach(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.coroutines.experimental.ContinuationInterceptor$DefaultImpls
io.reactivex.internal.subscribers.QueueDrainSubscriber
io.reactivex.internal.observers.BlockingMultiObserver: boolean blockingAwait(long,java.util.concurrent.TimeUnit)
io.reactivex.internal.util.ObservableQueueDrain
androidx.databinding.ObservableDouble: android.os.Parcelable$Creator CREATOR
androidx.core.view.ViewKt: boolean isGone(android.view.View)
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_android_fontWeight
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3: int compare(java.lang.Object,java.lang.Object)
okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)
com.example.revolut.rates.R$id: int search_mag_icon
kotlin.sequences.SequenceScope: java.lang.Object yieldAll(kotlin.sequences.Sequence,kotlin.coroutines.Continuation)
androidx.core.view.MotionEventCompat: int AXIS_RTRIGGER
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHeading(boolean)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence mapNotNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int SwitchCompat_android_textOff
io.reactivex.internal.observers.InnerQueuedObserver: void setDone()
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: void onComplete()
androidx.coordinatorlayout.R$id: int line1
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mNegativeButtonListener
io.reactivex.internal.operators.observable.ObservableDistinct: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.widget.AppCompatCheckedTextView: AppCompatCheckedTextView(android.content.Context,android.util.AttributeSet)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(int[])
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setLenient()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel withIndex$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
androidx.appcompat.app.AppCompatDelegate: void setCompatVectorFromResourcesEnabled(boolean)
kotlin.coroutines.experimental.migration.ExperimentalContextMigration$Key: ExperimentalContextMigration$Key(kotlin.jvm.internal.DefaultConstructorMarker)
io.reactivex.internal.operators.single.SingleCreate
androidx.core.util.LongSparseArrayKt: boolean containsValue(android.util.LongSparseArray,java.lang.Object)
androidx.core.view.accessibility.AccessibilityManagerCompat
dagger.android.support.DaggerApplication_MembersInjector: void injectSupportFragmentInjector(dagger.android.support.DaggerApplication,dagger.android.DispatchingAndroidInjector)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(long[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.reactivex.Maybe: io.reactivex.Maybe timer(long,java.util.concurrent.TimeUnit)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.graphics.drawable.IconCompat: int mInt2
io.reactivex.internal.subscriptions.EmptySubscription: void request(long)
okio.Buffer: java.lang.String readUtf8(long)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
okio.ByteString: java.lang.String base64()
androidx.appcompat.R$id: int info
kotlin.UByteArray: void storage$annotations()
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable: void subscribeActual(org.reactivestreams.Subscriber)
androidx.collection.ArraySet: java.util.Iterator iterator()
androidx.constraintlayout.solver.LinearSystem: void addCenterPoint(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int)
kotlin.ranges.ULongProgression: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservableGenerate: void subscribeActual(io.reactivex.Observer)
androidx.databinding.adapters.TextViewBindingAdapter: void setDrawableTop(android.widget.TextView,android.graphics.drawable.Drawable)
androidx.databinding.ObservableList$OnListChangedCallback: void onChanged(androidx.databinding.ObservableList)
org.reactivestreams.Subscriber
kotlin.UByte: boolean equals-impl(byte,java.lang.Object)
kotlin.jvm.internal.PrimitiveSpreadBuilder: int getPosition()
io.reactivex.internal.operators.single.SingleTimeout: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.flowable.AbstractFlowableWithUpstream: io.reactivex.Flowable source
io.reactivex.Observable: io.reactivex.Observable sample(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.view.MotionEventCompat: int AXIS_RUDDER
androidx.core.app.CoreComponentFactory
androidx.media.R$id: int right_side
androidx.vectordrawable.R$attr: int coordinatorLayoutStyle
okhttp3.internal.Util: int decodeHexDigit(char)
com.example.revolut.rates.base.BaseViewModel: void setLoading(androidx.lifecycle.MutableLiveData)
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_3
okhttp3.CacheControl$Builder: CacheControl$Builder()
kotlin.SynchronizedLazyImpl
androidx.databinding.library.baseAdapters.BR
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
dagger.android.support.R$style: int Theme_AppCompat_Dialog_Alert
io.reactivex.internal.operators.observable.ObservableLastSingle
com.example.revolut.rates.di.AppModule_ProvideRetrofitFactory
io.reactivex.internal.operators.flowable.FlowableDebounceTimed: FlowableDebounceTimed(io.reactivex.Flowable,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.vectordrawable.R$styleable: int GradientColor_android_gradientRadius
com.example.revolut.rates.R$attr: int panelMenuListWidth
okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)
kotlin.ranges.ULongRange: kotlin.ranges.ULongRange access$getEMPTY$cp()
io.reactivex.internal.operators.observable.ObservableFromCallable: ObservableFromCallable(java.util.concurrent.Callable)
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewRemoveEvent: ViewGroupHierarchyChildViewRemoveEvent(android.view.ViewGroup,android.view.View)
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: void cancel()
kotlin.jvm.internal.PropertyReference0Impl: java.lang.Object get()
androidx.swiperefreshlayout.R$styleable: int FontFamily_fontProviderPackage
androidx.databinding.ViewDataBinding: boolean updateLiveDataRegistration(int,androidx.lifecycle.LiveData)
dagger.android.support.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: void onAuthenticationFailed()
androidx.core.app.NotificationCompat: int PRIORITY_LOW
androidx.core.ktx.R$styleable: int FontFamily_fontProviderAuthority
io.reactivex.subjects.UnicastSubject: void onNext(java.lang.Object)
okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)
io.reactivex.internal.operators.maybe.MaybeToObservable: io.reactivex.MaybeSource source()
io.reactivex.subscribers.ResourceSubscriber: void dispose()
androidx.core.app.NotificationCompat: int VISIBILITY_SECRET
androidx.fragment.R$color: int notification_action_color_filter
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: boolean contains(double)
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_10
androidx.lifecycle.extensions.R$id: int action_image
io.reactivex.internal.subscriptions.EmptySubscription: java.lang.Object poll()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: void recycle()
androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
com.example.revolut.rates.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
dagger.android.support.R$attr: int switchTextAppearance
androidx.appcompat.R$drawable: int abc_tab_indicator_material
kotlin.ULongArray: java.lang.String toString-impl(long[])
okhttp3.internal.http2.Header: okio.ByteString value
androidx.customview.widget.ViewDragHelper: boolean isViewUnder(android.view.View,int,int)
io.reactivex.Maybe: io.reactivex.Flowable concat(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)
androidx.versionedparcelable.ParcelUtils
android.support.v4.media.session.PlaybackStateCompat: android.os.Bundle getExtras()
androidx.annotation.RequiresFeature
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.vectordrawable.R$id: int tag_unhandled_key_listeners
androidx.core.view.NestedScrollingParentHelper: NestedScrollingParentHelper(android.view.ViewGroup)
androidx.coordinatorlayout.R$drawable: int notification_bg_low_normal
androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)
okio.Buffer: int readInt()
kotlin.collections.ArraysKt___ArraysKt: float first(float[],kotlin.jvm.functions.Function1)
androidx.lifecycle.extensions.R$drawable: int notification_template_icon_low_bg
androidx.media.AudioAttributesCompat: androidx.media.AudioAttributesCompat wrap(java.lang.Object)
com.example.revolut.rates.R$styleable: int FontFamilyFont_fontStyle
io.reactivex.Completable: io.reactivex.CompletableObserver subscribeWith(io.reactivex.CompletableObserver)
kotlin.jvm.internal.CallableReference$NoReceiver: java.lang.Object readResolve()
androidx.core.ktx.R$styleable: int FontFamily_fontProviderPackage
androidx.core.transition.TransitionKt$addListener$listener$1: void onTransitionPause(android.transition.Transition)
androidx.core.app.NotificationCompat$Action$WearableExtender: boolean getHintDisplayActionInline()
androidx.appcompat.R$dimen: int abc_dropdownitem_icon_width
okhttp3.Dispatcher: java.util.List runningCalls()
kotlin.coroutines.intrinsics.IntrinsicsKt
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: long serialVersionUID
androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int)
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: android.media.AudioAttributes getAudioAttributes(java.lang.Object)
androidx.core.view.LayoutInflaterCompat: androidx.core.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater)
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarTabBarStyle
kotlin.collections.AbstractMap$keys$1: int getSize()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] sliceArray(java.lang.Object[],kotlin.ranges.IntRange)
dagger.android.support.R$styleable: int[] ColorStateListItem
androidx.viewpager.widget.ViewPager: int getChildDrawingOrder(int,int)
kotlin.sequences.IndexingSequence$iterator$1: void remove()
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationEnd(android.view.View)
androidx.fragment.app.FragmentHostCallback: android.view.View onFindViewById(int)
com.example.revolut.rates.R$styleable: int[] ActionBar
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(short[],kotlin.jvm.functions.Function2)
okhttp3.Request: okhttp3.RequestBody body()
dagger.android.support.R$layout: int notification_template_part_chronometer
androidx.constraintlayout.solver.widgets.ConstraintWidget: java.util.ArrayList mAnchors
io.reactivex.observers.TestObserver: io.reactivex.observers.TestObserver create(io.reactivex.Observer)
kotlin.collections.AbstractCollection: boolean add(java.lang.Object)
androidx.legacy.coreutils.R$id: int action_divider
okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)
kotlin.text.StringsKt___StringsKt: java.lang.Character maxWith(java.lang.CharSequence,java.util.Comparator)
io.reactivex.internal.schedulers.RxThreadFactory
com.example.revolut.rates.data.model.Rate$Companion
io.reactivex.Observable: io.reactivex.Observable switchMap(io.reactivex.functions.Function)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement: MaybeFlatMapSingleElement(io.reactivex.MaybeSource,io.reactivex.functions.Function)
androidx.constraintlayout.solver.Metrics: long extravariables
androidx.customview.R$id: int action_image
kotlin.sequences.IndexingSequence$iterator$1: java.lang.Object next()
io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty: void subscribeActual(io.reactivex.Observer)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float getOrNull(float[],int)
kotlin.collections.EmptyList: int size()
io.reactivex.internal.fuseable.QueueFuseable: int ASYNC
androidx.recyclerview.widget.LinearSmoothScroller: int SNAP_TO_START
androidx.core.util.SparseBooleanArrayKt: boolean containsValue(android.util.SparseBooleanArray,boolean)
androidx.databinding.adapters.SearchViewBindingAdapter$OnSuggestionClick: boolean onSuggestionClick(int)
dagger.android.support.R$styleable: int Toolbar_titleMargins
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_FILTER_KEY_EVENTS
com.example.revolut.rates.R$styleable: int AppCompatTheme_ratingBarStyleSmall
dagger.android.support.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
org.jetbrains.annotations.Contract: boolean pure()
io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeSubscription: long serialVersionUID
androidx.print.PrintHelper$OnPrintFinishCallback: void onFinish()
kotlinx.coroutines.CoroutineName: CoroutineName(java.lang.String)
dagger.android.support.R$attr: int dialogTheme
androidx.vectordrawable.graphics.drawable.Animatable2Compat
com.example.revolut.rates.R$styleable: int AppCompatTheme_controlBackground
kotlin.internal.ProgressionUtilKt: int getProgressionLastElement(int,int,int)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment
okhttp3.Callback: void onFailure(okhttp3.Call,java.io.IOException)
kotlin.text.RegexOption: kotlin.text.RegexOption[] values()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: UArraysKt___UArraysKt()
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
okio.Buffer: okio.Buffer writeLongLe(long)
androidx.versionedparcelable.VersionedParcel: void writeSparseBooleanArray(android.util.SparseBooleanArray,int)
kotlin.collections.MapsKt__MapsKt: MapsKt__MapsKt()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$5: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.EmptyList
androidx.core.view.InputDeviceCompat: int SOURCE_DPAD
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
androidx.core.app.ActivityCompat: void startPostponedEnterTransition(android.app.Activity)
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object)
com.example.revolut.rates.R$drawable: int abc_list_selector_disabled_holo_light
dagger.android.support.R$styleable: int AppCompatTheme_actionModeFindDrawable
dagger.android.support.R$styleable: int MenuGroup_android_visible
dagger.android.support.R$attr: int gapBetweenBars
androidx.core.app.NotificationCompat$BigPictureStyle: NotificationCompat$BigPictureStyle()
dagger.android.support.R$attr: int listDividerAlertDialog
androidx.customview.R$id: int action_text
com.example.revolut.rates.R$drawable: int abc_btn_radio_to_on_mtrl_015
kotlin.reflect.KMutableProperty1: kotlin.reflect.KMutableProperty1$Setter getSetter()
okio.Source: okio.Timeout timeout()
com.example.revolut.rates.R$string: int abc_search_hint
androidx.appcompat.view.menu.MenuItemImpl: int getItemId()
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.legacy.coreutils.R$styleable: int GradientColorItem_android_offset
io.reactivex.functions.Function8: java.lang.Object apply(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.google.gson.FieldAttributes: boolean hasModifier(int)
io.reactivex.internal.subscribers.BasicFuseableSubscriber: void fail(java.lang.Throwable)
io.reactivex.Completable
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$maxBy$1: ChannelsKt__Channels_commonKt$maxBy$1(kotlin.coroutines.Continuation)
androidx.appcompat.R$color: int abc_background_cache_hint_selector_material_light
io.reactivex.internal.operators.completable.CompletableFromUnsafeSource: CompletableFromUnsafeSource(io.reactivex.CompletableSource)
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.widget.TextView,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character maxWith(char[],java.util.Comparator)
io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
com.example.revolut.rates.R$styleable: int ActionBar_customNavigationLayout
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getDrawRight()
dagger.android.support.R$styleable: int AppCompatTheme_windowFixedHeightMajor
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel drop(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext)
androidx.customview.R$styleable
dagger.android.support.R$styleable: int Toolbar_logoDescription
androidx.core.view.ViewCompat: boolean hasNestedScrollingParent(android.view.View,int)
kotlinx.coroutines.Job$DefaultImpls: boolean cancel$default(kotlinx.coroutines.Job,java.lang.Throwable,int,java.lang.Object)
androidx.core.util.LongSparseArrayKt: boolean containsKey(android.util.LongSparseArray,long)
io.reactivex.internal.observers.BasicQueueDisposable: BasicQueueDisposable()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$findLast$1: java.lang.Object invokeSuspend(java.lang.Object)
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: void request(long)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$groupBy$2
io.reactivex.internal.operators.observable.ObservablePublishSelector: void subscribeActual(io.reactivex.Observer)
androidx.databinding.ViewDataBinding: void setTo(boolean[],int,boolean)
androidx.annotation.RestrictTo$Scope
com.google.gson.JsonObject: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: void reverse(java.lang.Object[])
androidx.swiperefreshlayout.R$dimen: int notification_action_icon_size
androidx.vectordrawable.R$dimen: int notification_main_column_padding_top
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(io.reactivex.functions.Function,org.reactivestreams.Publisher[])
com.example.revolut.rates.RatesApp_MembersInjector: void injectMembers(java.lang.Object)
androidx.core.view.ViewGroupKt$iterator$1: void remove()
com.jakewharton.rxbinding3.core.R$drawable: int notification_bg_low
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: long serialVersionUID
kotlin.collections.MapsKt__MapsKt: java.util.Map filterValues(java.util.Map,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$style: int Widget_AppCompat_ListView_DropDown
com.jakewharton.rxbinding3.core.R$styleable: int GradientColorItem_android_offset
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: android.view.animation.Interpolator getInterpolator()
dagger.android.support.R$layout: int abc_dialog_title_material
kotlinx.coroutines.channels.ChannelCoroutine
kotlin.ULongArray: boolean add-VKZWuLQ(long)
androidx.slidingpanelayout.R$dimen: int compat_button_inset_horizontal_material
androidx.vectordrawable.R$styleable: int ColorStateListItem_alpha
androidx.appcompat.R$styleable: int TextAppearance_android_shadowRadius
androidx.viewpager.R$id: int icon
androidx.databinding.adapters.ListenerUtil: java.lang.Object getListener(android.view.View,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(float[],float[])
androidx.appcompat.widget.TintTypedArray: int length()
com.example.revolut.rates.R$attr: int layout
kotlin.collections.SetsKt__SetsKt: java.util.Set optimizeReadOnlySet(java.util.Set)
io.reactivex.internal.util.ObservableQueueDrain: int leave(int)
com.example.revolut.rates.databinding.ActivityMainBinding: com.example.revolut.rates.databinding.ActivityMainBinding inflate(android.view.LayoutInflater)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(short[])
androidx.core.app.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiFunction,boolean)
androidx.appcompat.view.menu.ListMenuPresenter: void updateMenuView(boolean)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: int LARGE
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
io.reactivex.annotations.BackpressureKind: io.reactivex.annotations.BackpressureKind FULL
androidx.appcompat.view.menu.ActionMenuItem: boolean isVisible()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte minBy(byte[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence takeLastWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
android.support.v4.media.session.PlaybackStateCompat: int STATE_PAUSED
dagger.android.support.R$attr: int drawableSize
androidx.recyclerview.R$id: int none
io.reactivex.internal.schedulers.IoScheduler: void start()
io.reactivex.subjects.ReplaySubject$TimedNode: long serialVersionUID
kotlin.jvm.internal.ArrayIteratorsKt
androidx.appcompat.view.StandaloneActionMode: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
androidx.core.graphics.ColorKt: int getGreen(int)
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ActionBar_TabText
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(long,long)
androidx.constraintlayout.solver.widgets.Snapshot: Snapshot(androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$1: void onTransitionEnd(android.transition.Transition)
dagger.android.support.R$style: int Base_Widget_AppCompat_Toolbar
androidx.core.text.TextUtilsCompat: int getLayoutDirectionFromLocale(java.util.Locale)
androidx.core.animation.AnimatorKt$doOnResume$$inlined$addPauseListener$1: AnimatorKt$doOnResume$$inlined$addPauseListener$1(kotlin.jvm.functions.Function1)
androidx.core.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)
androidx.appcompat.app.AppCompatDelegate: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.example.revolut.rates.R$style: int Widget_AppCompat_Spinner_Underlined
io.reactivex.functions.LongConsumer
okhttp3.internal.http.HttpCodec: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trimEnd(java.lang.CharSequence)
androidx.core.animation.AnimatorKt$addListener$2
androidx.core.view.ViewPropertyAnimatorCompat: void cancel()
kotlin.random.PlatformRandomKt
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence padEnd$default(java.lang.CharSequence,int,char,int,java.lang.Object)
android.support.v4.media.MediaBrowserCompat$MediaItem: void writeToParcel(android.os.Parcel,int)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLabel(java.lang.CharSequence)
okhttp3.Cookie: boolean equals(java.lang.Object)
com.example.revolut.rates.R$color: int background_floating_material_dark
androidx.core.widget.EdgeEffectCompat: void finish()
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.LayoutInflater mInflater
io.reactivex.observers.BaseTestConsumer: java.util.List errors()
androidx.coordinatorlayout.R$dimen: int compat_notification_large_icon_max_width
com.example.revolut.rates.R$style: int Base_V22_Theme_AppCompat
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context)
androidx.appcompat.R$attr: int fontProviderFetchStrategy
io.reactivex.internal.observers.BlockingObserver: BlockingObserver(java.util.Queue)
io.reactivex.disposables.CompositeDisposable: boolean isDisposed()
androidx.core.animation.AnimatorKt
android.support.v4.media.session.PlaybackStateCompat$Builder: PlaybackStateCompat$Builder(android.support.v4.media.session.PlaybackStateCompat)
androidx.core.app.NotificationCompat: int FLAG_AUTO_CANCEL
kotlin.sequences.SequencesKt___SequencesKt: float sumOfFloat(kotlin.sequences.Sequence)
io.reactivex.Flowable: io.reactivex.Completable concatMapCompletable(io.reactivex.functions.Function)
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object offerSelectInternal(java.lang.Object,kotlinx.coroutines.selects.SelectInstance)
androidx.core.view.ViewCompat: boolean isImportantForAccessibility(android.view.View)
androidx.fragment.R$color: int secondary_text_default_material_light
androidx.appcompat.widget.DecorToolbar: void setVisibility(int)
androidx.core.view.ViewCompat: void setNestedScrollingEnabled(android.view.View,boolean)
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn
dagger.android.support.R$style: int Base_V22_Theme_AppCompat_Light
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
kotlin.Result$Failure: Result$Failure(java.lang.Throwable)
kotlinx.coroutines.internal.AtomicDesc: void complete(kotlinx.coroutines.internal.AtomicOp,java.lang.Object)
com.example.revolut.rates.R$drawable: int abc_btn_check_to_on_mtrl_015
androidx.recyclerview.widget.AsyncListDiffer: AsyncListDiffer(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.DiffUtil$ItemCallback)
io.reactivex.Flowable: io.reactivex.Flowable startWith(java.lang.Iterable)
dagger.android.support.R$layout: int abc_action_bar_up_container
com.google.gson.JsonElement: char getAsCharacter()
io.reactivex.Flowable: io.reactivex.Flowable window(java.util.concurrent.Callable)
androidx.appcompat.app.ActionBar$OnMenuVisibilityListener: void onMenuVisibilityChanged(boolean)
kotlin.coroutines.Continuation
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getHorizontalChainStyle()
kotlinx.coroutines.channels.RendezvousChannel: RendezvousChannel()
kotlin.coroutines.experimental.migration.ContextMigration$Key
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintLeft_creator
kotlin.collections.UArraySortingKt: void sortArray-QwZRm1k(long[])
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode getOriginalNext()
com.google.gson.internal.bind.SqlDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.sql.Date)
io.reactivex.Observable: io.reactivex.Observable window(java.util.concurrent.Callable)
androidx.databinding.BindingMethod: java.lang.String method()
com.example.revolut.rates.R$color: int material_blue_grey_900
androidx.loader.content.Loader$ForceLoadContentObserver
kotlinx.coroutines.channels.ProducerJob$DefaultImpls
android.support.v4.media.MediaMetadataCompat$Builder: android.support.v4.media.MediaMetadataCompat build()
androidx.appcompat.R$dimen: int abc_text_size_title_material_toolbar
androidx.core.view.ViewParentCompat: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$1: void onTransitionCancel(android.transition.Transition)
androidx.media.R$dimen: int subtitle_shadow_radius
androidx.core.app.NotificationCompat$BigTextStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
io.reactivex.internal.observers.CallbackCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.lifecycle.ProcessLifecycleOwnerInitializer: android.net.Uri insert(android.net.Uri,android.content.ContentValues)
io.reactivex.android.schedulers.AndroidSchedulers: io.reactivex.Scheduler mainThread()
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.Class)
androidx.core.app.ComponentActivity$ExtraData
androidx.drawerlayout.widget.DrawerLayout$LayoutParams
androidx.media.R$attr: int fontWeight
io.reactivex.Completable: io.reactivex.Completable andThen(io.reactivex.CompletableSource)
io.reactivex.Completable: io.reactivex.Completable repeat()
io.reactivex.internal.operators.observable.ObservableFromFuture: ObservableFromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)
androidx.coordinatorlayout.R$id: int italic
kotlin.jvm.internal.Intrinsics: void checkReturnedValueIsNotNull(java.lang.Object,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableTakeUntil: void subscribeActual(org.reactivestreams.Subscriber)
androidx.viewpager.R$id: int info
okhttp3.internal.http2.Http2Connection$Listener
androidx.databinding.adapters.ImageViewBindingAdapter: void setImageDrawable(android.widget.ImageView,android.graphics.drawable.Drawable)
kotlin.collections.EmptyList: int hashCode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(int,android.graphics.PorterDuff$Mode)
kotlin.jvm.internal.ClassReference: boolean isCompanion()
androidx.databinding.library.baseAdapters.BuildConfig: BuildConfig()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
kotlin.collections.UCollectionsKt___UCollectionsKt: long[] toULongArray(java.util.Collection)
androidx.core.view.GestureDetectorCompat
androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)
androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object)
io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function)
okio.BufferedSource: long readHexadecimalUnsignedLong()
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object)
androidx.slidingpanelayout.R$styleable: int[] GradientColor
io.reactivex.internal.operators.maybe.MaybeUsing$UsingObserver: long serialVersionUID
dagger.android.support.R$styleable: int AppCompatTheme_textColorSearchUrl
io.reactivex.Maybe: io.reactivex.Maybe flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,long,boolean)
android.support.v4.os.ResultReceiver: ResultReceiver(android.os.Handler)
androidx.appcompat.R$dimen: int compat_button_padding_vertical_material
androidx.asynclayoutinflater.R$styleable: int GradientColorItem_android_offset
retrofit2.http.QueryName: boolean encoded()
androidx.appcompat.widget.ActionBarContainer: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.example.revolut.rates.R$styleable: int ConstraintSet_android_transformPivotX
androidx.core.util.SparseBooleanArrayKt$valueIterator$1: int getIndex()
com.jakewharton.rxbinding3.core.R$drawable: int notification_tile_bg
com.jakewharton.rxbinding3.core.R$attr: int ttcIndex
io.reactivex.plugins.RxJavaPlugins: void setOnConnectableObservableAssembly(io.reactivex.functions.Function)
androidx.appcompat.widget.ScrollingTabContainerView: ScrollingTabContainerView(android.content.Context)
okhttp3.Address: Address(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)
okio.Buffer: long indexOfElement(okio.ByteString,long)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setHotspotBounds(int,int,int,int)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_maxHeight
androidx.viewpager.widget.ViewPager: void setAdapter(androidx.viewpager.widget.PagerAdapter)
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_WINDOW_CONTENT_CHANGED
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateWith(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.constraintlayout.widget.R$attr: int layout_goneMarginTop
androidx.lifecycle.extensions.R$id: int right
com.google.gson.JsonArray: boolean contains(com.google.gson.JsonElement)
kotlin.coroutines.experimental.jvm.internal.CoroutineImpl: kotlin.coroutines.experimental.Continuation create(java.lang.Object,kotlin.coroutines.experimental.Continuation)
io.reactivex.internal.operators.parallel.ParallelPeek: int parallelism()
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintWidth_max
io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable: void subscribeActual(io.reactivex.CompletableObserver)
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)
com.jakewharton.rxbinding3.core.R$styleable: int GradientColor_android_centerX
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableDelay: FlowableDelay(io.reactivex.Flowable,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
androidx.appcompat.app.ActionBarDrawerToggle: boolean onOptionsItemSelected(android.view.MenuItem)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(long,short)
androidx.customview.R$drawable: int notification_bg_low_normal
androidx.legacy.v4.R$layout: int notification_action_tombstone
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedPathSegment(int,java.lang.String)
dagger.android.support.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
kotlin.text.StringsKt___StringsKt: char last(java.lang.CharSequence)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context)
kotlinx.coroutines.ThreadPoolDispatcherKt
androidx.appcompat.R$style: int Base_Widget_AppCompat_PopupMenu
kotlin.io.TextStreamsKt: long copyTo(java.io.Reader,java.io.Writer,int)
com.example.revolut.rates.R$styleable: int FontFamily_fontProviderQuery
io.reactivex.observers.BaseTestConsumer: java.lang.Thread lastThread()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-ctEhBpI(int[],int[])
okhttp3.Interceptor$Chain: okhttp3.Request request()
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,boolean)
androidx.collection.ArraySet: void clear()
dagger.internal.ReferenceReleasingProviderManager: void restoreStrongReferences()
kotlin.sequences.DropSequence: kotlin.sequences.Sequence take(int)
com.jakewharton.rxbinding3.view.ViewAttachDetachedEvent: int hashCode()
androidx.databinding.ViewDataBinding: void setTo(android.util.SparseLongArray,int,long)
kotlin.collections.ArraysKt___ArraysKt: char first(char[])
androidx.collection.SparseArrayCompat: void setValueAt(int,java.lang.Object)
androidx.constraintlayout.solver.ArrayRow: void clear()
android.support.v4.media.session.IMediaSession: int getShuffleMode()
com.example.revolut.rates.view.adapter.CurrenciesAdapter$CurrenciesViewHolder
io.reactivex.Observable: io.reactivex.Single singleOrError()
androidx.fragment.app.FragmentManager$BackStackEntry: java.lang.CharSequence getBreadCrumbShortTitle()
androidx.media.MediaBrowserCompatUtils: boolean areSameOptions(android.os.Bundle,android.os.Bundle)
kotlin.text.CharDirectionality$Companion: CharDirectionality$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.R$layout: int abc_expanded_menu_layout
androidx.appcompat.view.StandaloneActionMode: boolean isUiFocusable()
kotlin.coroutines.experimental.jvm.internal.CoroutineIntrinsics: kotlin.coroutines.experimental.Continuation normalizeContinuation(kotlin.coroutines.experimental.Continuation)
kotlin.text.StringsKt___StringsKt: java.lang.Character max(java.lang.CharSequence)
android.support.v4.media.session.MediaSessionCompat$Token
androidx.viewpager.widget.PagerTabStrip: void setTextSpacing(int)
dagger.android.support.R$style: int ThemeOverlay_AppCompat_ActionBar
com.google.gson.internal.Primitives
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget[] values()
androidx.appcompat.app.AppCompatActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_layout_marginBottom
androidx.appcompat.R$styleable: int AppCompatTheme_colorPrimary
android.support.v4.media.session.IMediaSession: void playFromSearch(java.lang.String,android.os.Bundle)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int)
androidx.recyclerview.widget.ListAdapter: ListAdapter(androidx.recyclerview.widget.AsyncDifferConfig)
io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber: long serialVersionUID
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstVisibleWidget()
dagger.android.support.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
androidx.appcompat.view.menu.MenuBuilder: boolean isShortcutsVisible()
io.reactivex.internal.operators.observable.ObservableToListSingle: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.Scheduler$Worker: Scheduler$Worker()
androidx.appcompat.R$style: int Base_Theme_AppCompat
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setSliderFadeColor(int)
kotlin.text.StringsKt__IndentKt: java.lang.String trimMargin$default(java.lang.String,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapNotNullTo$3: java.lang.Object invokeSuspend(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableDoFinally: ObservableDoFinally(io.reactivex.ObservableSource,io.reactivex.functions.Action)
dagger.android.DaggerApplication_MembersInjector: void injectMembers(java.lang.Object)
kotlin.jvm.internal.IntSpreadBuilder: int[] toArray()
dagger.android.support.R$style: int Platform_Widget_AppCompat_Spinner
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintCircleAngle
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object minWith(java.lang.Iterable,java.util.Comparator)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getAnchor()
com.example.revolut.rates.di.AppModule_ProvideCurrenciesRepositoryFactory: AppModule_ProvideCurrenciesRepositoryFactory(com.example.revolut.rates.di.AppModule)
androidx.appcompat.app.AlertDialog$Builder: AlertDialog$Builder(android.content.Context)
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onChanged()
androidx.viewpager.R
kotlin.text.StringsKt___StringsKt: java.lang.Character minBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
android.support.v4.media.session.IMediaControllerCallback$Stub: IMediaControllerCallback$Stub()
com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type)
androidx.print.PrintHelper: void printBitmap(java.lang.String,android.net.Uri)
dagger.internal.ReferenceReleasingProviderManager
androidx.core.R$drawable: int notification_bg_normal_pressed
kotlinx.coroutines.CoroutineScopeKt: java.lang.Object currentScope(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
dagger.android.support.R$styleable: int AppCompatTheme_tooltipFrameBackground
kotlin.coroutines.experimental.EmptyCoroutineContext: int hashCode()
androidx.slidingpanelayout.R$id: int title
androidx.slidingpanelayout.R$style: int Widget_Compat_NotificationActionContainer
kotlin.reflect.KTypeProjection: KTypeProjection(kotlin.reflect.KVariance,kotlin.reflect.KType)
io.reactivex.internal.util.AppendOnlyLinkedArrayList: void setFirst(java.lang.Object)
androidx.core.view.DisplayCutoutCompat
io.reactivex.processors.AsyncProcessor: boolean hasValue()
com.jakewharton.rxbinding3.core.R$styleable: int ColorStateListItem_alpha
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableReplay$SizeAndTimeBoundReplayBuffer: long serialVersionUID
androidx.appcompat.view.menu.MenuItemImpl: android.content.res.ColorStateList getIconTintList()
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeMoved(int,int,int)
kotlin.ranges.ClosedRange$DefaultImpls: boolean contains(kotlin.ranges.ClosedRange,java.lang.Comparable)
dagger.android.support.R$styleable: int ActionBar_contentInsetRight
io.reactivex.internal.operators.observable.ObservableSkipUntil
androidx.fragment.R$styleable: int GradientColorItem_android_offset
androidx.appcompat.R$drawable: int abc_ic_menu_cut_mtrl_alpha
io.reactivex.internal.operators.single.SingleEquals: SingleEquals(io.reactivex.SingleSource,io.reactivex.SingleSource)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
kotlinx.coroutines.Job: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
androidx.asynclayoutinflater.R$dimen: int notification_top_pad
kotlin.collections.ArraysKt___ArraysKt: boolean none(byte[])
com.example.revolut.rates.viewmodel.CurrenciesViewModel$fetchCurrencies$1: void onError(java.lang.Throwable)
androidx.fragment.app.FragmentTransaction: void commitNow()
io.reactivex.internal.operators.flowable.FlowableThrottleLatest
dagger.android.support.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
kotlin.sequences.FilteringSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.FilteringSequence)
okio.Buffer: okio.Buffer writeUtf8(java.lang.String,int,int)
io.reactivex.observers.BaseTestConsumer: int errorCount()
io.reactivex.internal.operators.completable.CompletableDefer
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setVibrate(long[])
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintGuide_end
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(byte,byte)
dagger.android.support.R$dimen: int abc_dialog_fixed_height_minor
dagger.android.support.R$styleable: int[] SwitchCompat
okhttp3.EventListener: okhttp3.EventListener NONE
io.reactivex.internal.disposables.DisposableHelper: boolean trySet(java.util.concurrent.atomic.AtomicReference,io.reactivex.disposables.Disposable)
androidx.core.graphics.TypefaceCompatUtil: void closeQuietly(java.io.Closeable)
com.example.revolut.rates.R$attr: int progressBarPadding
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.Character)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$indexOfLast$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)
androidx.lifecycle.LifecycleService: void onDestroy()
io.reactivex.internal.util.HalfSerializer: void onComplete(io.reactivex.Observer,java.util.concurrent.atomic.AtomicInteger,io.reactivex.internal.util.AtomicThrowable)
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: long serialVersionUID
androidx.legacy.coreui.R$id: int blocking
kotlin.ranges.IntProgressionIterator: IntProgressionIterator(int,int,int)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mWrapFixedHeight
kotlinx.coroutines.Cancelled
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer singleOrNull(int[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(int[],kotlin.jvm.functions.Function1)
dagger.android.support.R$dimen: int notification_top_pad_large_text
com.example.revolut.rates.R$style: int Widget_AppCompat_Button_Small
kotlin.sequences.DropWhileSequence$iterator$1: void remove()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: WindowDecorActionBar$ActionModeImpl(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback)
androidx.drawerlayout.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.constraintlayout.widget.ConstraintSet: void createHorizontalChain(int,int,int,int,int[],float[],int)
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
androidx.customview.R$id: int actions
androidx.core.R$style: int TextAppearance_Compat_Notification
androidx.appcompat.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource,int)
androidx.core.view.ViewPropertyAnimatorCompat
kotlin.ranges.ULongRange
io.reactivex.Flowable: io.reactivex.Flowable switchMapSingle(io.reactivex.functions.Function)
androidx.appcompat.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
androidx.appcompat.graphics.drawable.DrawableContainer: void setEnterFadeDuration(int)
androidx.appcompat.app.ActionBar: void onConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.view.menu.MenuView: void initialize(androidx.appcompat.view.menu.MenuBuilder)
androidx.databinding.adapters.SeekBarBindingAdapter: void setOnSeekBarChangeListener(android.widget.SeekBar,androidx.databinding.adapters.SeekBarBindingAdapter$OnStartTrackingTouch,androidx.databinding.adapters.SeekBarBindingAdapter$OnStopTrackingTouch,androidx.databinding.adapters.SeekBarBindingAdapter$OnProgressChanged,androidx.databinding.InverseBindingListener)
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean,int,int)
androidx.core.widget.NestedScrollView: boolean isNestedScrollingEnabled()
dagger.android.support.R$attr: int searchHintIcon
androidx.databinding.ViewDataBinding: void setTo(java.lang.Object[],int,java.lang.Object)
kotlinx.coroutines.DispatchedContinuation: kotlinx.coroutines.CoroutineDispatcher dispatcher
io.reactivex.subscribers.SerializedSubscriber: void onComplete()
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
androidx.appcompat.R$styleable: int StateListDrawable_android_visible
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat LTR
dagger.android.support.R$styleable: int ViewBackgroundHelper_backgroundTint
android.support.v4.media.session.MediaControllerCompat: MediaControllerCompat(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setTableDimensions()
androidx.appcompat.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
io.reactivex.internal.queue.SpscArrayQueue: SpscArrayQueue(int)
com.example.revolut.rates.viewmodel.CurrenciesViewModel: void onCleared()
dagger.android.support.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.example.revolut.rates.R$attr: int indeterminateProgressStyle
androidx.appcompat.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
kotlin.collections.ArraysKt___ArraysKt: boolean contains(short[],short)
androidx.databinding.adapters.TextViewBindingAdapter: void setTextWatcher(android.widget.TextView,androidx.databinding.adapters.TextViewBindingAdapter$BeforeTextChanged,androidx.databinding.adapters.TextViewBindingAdapter$OnTextChanged,androidx.databinding.adapters.TextViewBindingAdapter$AfterTextChanged,androidx.databinding.InverseBindingListener)
okhttp3.HttpUrl: java.util.Set queryParameterNames()
androidx.drawerlayout.R$id: int notification_main_column
io.reactivex.internal.operators.single.SingleFromCallable
androidx.appcompat.R$dimen: int notification_action_text_size
kotlin.collections.SetsKt__SetsJVMKt: java.util.Set setOf(java.lang.Object)
okhttp3.Request: okhttp3.HttpUrl url()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setOrigin(int,int)
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setErrorMessage(java.lang.CharSequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt minWith-YmdZ_VM(int[],java.util.Comparator)
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget[] mListNextMatchConstraintsWidget
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.example.revolut.rates.di.Injector$Companion: Injector$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
kotlin.collections.ArraysKt___ArraysJvmKt: short[] plus(short[],java.util.Collection)
com.example.revolut.rates.R$styleable: int ActivityChooserView_initialActivityCount
dagger.android.support.DaggerAppCompatActivity_MembersInjector: dagger.MembersInjector create(javax.inject.Provider,javax.inject.Provider)
kotlinx.coroutines.selects.SelectBuilderImpl$disposeOnSelect$$inlined$addLastIf$1: java.lang.Object prepare(java.lang.Object)
io.reactivex.observables.ConnectableObservable: io.reactivex.Observable autoConnect()
androidx.appcompat.R$style: int Widget_AppCompat_DropDownItem_Spinner
io.reactivex.internal.observers.BlockingObserver: void dispose()
kotlin.text.Typography: char rightSingleQuote
androidx.core.ktx.R$styleable: int GradientColor_android_endX
io.reactivex.Flowable: io.reactivex.Single singleOrError()
kotlin.collections.AbstractMutableMap: java.util.Set entrySet()
androidx.loader.R$id: int line3
com.example.revolut.rates.R$attr: int logoDescription
io.reactivex.Single: io.reactivex.Flowable concat(io.reactivex.SingleSource,io.reactivex.SingleSource)
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,int)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: ConstraintWidgetContainer(int,int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(boolean[],kotlin.jvm.functions.Function1)
okio.Buffer: java.lang.String readUtf8()
dagger.android.support.R$style: int Widget_AppCompat_CompoundButton_Switch
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[])
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintDimensionRatio
dagger.android.support.R$dimen: int abc_text_size_medium_material
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: CollectionsKt__MutableCollectionsJVMKt()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer firstOrNull(int[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int[] AppCompatTheme
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
kotlin.jvm.internal.FloatSpreadBuilder: int getSize(java.lang.Object)
androidx.appcompat.R$styleable: int[] TextAppearance
io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(java.lang.Iterable)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber: long serialVersionUID
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener
androidx.appcompat.view.menu.MenuPresenter: void onRestoreInstanceState(android.os.Parcelable)
androidx.coordinatorlayout.R$style: int TextAppearance_Compat_Notification_Time
androidx.viewpager.widget.ViewPager: boolean onTouchEvent(android.view.MotionEvent)
androidx.core.content.res.TypedArrayKt: boolean getBooleanOrThrow(android.content.res.TypedArray,int)
io.reactivex.Completable: io.reactivex.Completable error(java.lang.Throwable)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedLeft(android.view.View)
io.reactivex.Single: io.reactivex.Single create(io.reactivex.SingleOnSubscribe)
okhttp3.Call: okhttp3.Request request()
io.reactivex.disposables.Disposables: io.reactivex.disposables.Disposable empty()
androidx.appcompat.app.WindowDecorActionBar: boolean isHideOnContentScrollEnabled()
io.reactivex.internal.operators.completable.CompletableDoOnEvent
kotlin.jvm.functions.Function22
io.reactivex.Observable: io.reactivex.Single collect(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat getWindow()
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: int component8()
androidx.appcompat.R$dimen: int abc_panel_menu_list_width
androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()
androidx.media.MediaBrowserProtocol: int SERVICE_MSG_ON_LOAD_CHILDREN
com.example.revolut.rates.R$style: int TextAppearance_Compat_Notification_Line2_Media
androidx.appcompat.view.ActionMode: android.view.Menu getMenu()
androidx.recyclerview.widget.SimpleItemAnimator: boolean getSupportsChangeAnimations()
androidx.core.content.FileProvider
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
androidx.databinding.library.baseAdapters.DataBinderMapperImpl: java.lang.String convertBrIdToString(int)
okio.BufferedSource: boolean exhausted()
io.reactivex.observers.ResourceMaybeObserver: void onStart()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String concatToString(char[],int,int)
io.reactivex.internal.operators.flowable.FlowableSkipLast$SkipLastSubscriber: long serialVersionUID
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintTop_toTopOf
com.example.revolut.rates.R$drawable: int abc_switch_thumb_material
dagger.android.AndroidMemorySensitiveReferenceManager_Factory: dagger.android.AndroidMemorySensitiveReferenceManager newAndroidMemorySensitiveReferenceManager(java.util.Set)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: int MAX_NUM_POINTS
com.example.revolut.rates.R$styleable: int AppCompatTheme_borderlessButtonStyle
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.jakewharton.rxbinding3.view.ViewScrollChangeEvent: int hashCode()
androidx.appcompat.R$styleable: int CoordinatorLayout_Layout_layout_keyline
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri,int)
androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)
androidx.core.app.JobIntentService: void onCreate()
io.reactivex.internal.operators.observable.ObservableSequenceEqual: ObservableSequenceEqual(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiPredicate,int)
androidx.core.util.LogWriter
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_centerColor
com.example.revolut.rates.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener
okhttp3.internal.connection.ConnectionSpecSelector
androidx.lifecycle.extensions.R$dimen: int compat_notification_large_icon_max_height
kotlin.math.MathKt__MathJVMKt: float truncate(float)
io.reactivex.internal.subscriptions.BasicQueueSubscription: BasicQueueSubscription()
com.jakewharton.rxbinding3.core.R$layout: int notification_action_tombstone
androidx.loader.content.CursorLoader: CursorLoader(android.content.Context)
kotlin.text.MatcherMatchResult$groups$1: kotlin.text.MatchGroup get(java.lang.String)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mWrapFixedWidth
androidx.appcompat.view.ActionMode$Callback: void onDestroyActionMode(androidx.appcompat.view.ActionMode)
kotlinx.coroutines.internal.ContextScope: boolean isActive()
retrofit2.adapter.rxjava2.HttpException: HttpException(retrofit2.Response)
androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
kotlinx.coroutines.DefaultTimeSource: long nanoTime()
android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()
kotlin.concurrent.ThreadsKt: java.lang.Thread thread$default(boolean,boolean,java.lang.ClassLoader,java.lang.String,int,kotlin.jvm.functions.Function0,int,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableTimeout: ObservableTimeout(io.reactivex.Observable,io.reactivex.ObservableSource,io.reactivex.functions.Function,io.reactivex.ObservableSource)
androidx.fragment.app.FragmentActivity: void onStateNotSaved()
androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
okio.ForwardingSink: void flush()
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection mapTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setWhen(long)
okio.AsyncTimeout: AsyncTimeout()
org.intellij.lang.annotations.MagicConstant: java.lang.Class valuesFromClass()
io.reactivex.Single: io.reactivex.Single defer(java.util.concurrent.Callable)
androidx.appcompat.R$anim: int abc_grow_fade_in_from_bottom
dagger.android.support.R$drawable: int notification_template_icon_low_bg
com.google.gson.annotations.Since: double value()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder value(java.lang.String)
kotlinx.coroutines.scheduling.WorkQueue: WorkQueue()
androidx.appcompat.view.menu.MenuItemImpl: boolean requiresActionButton()
kotlinx.coroutines.AbstractCoroutine: void onCompletedExceptionally(java.lang.Throwable)
androidx.appcompat.R$id: int decor_content_parent
kotlin.coroutines.experimental.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentPagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)
androidx.appcompat.R$styleable: int ActionBar_hideOnContentScroll
kotlinx.coroutines.test.TestCoroutineContext: void advanceTimeTo$default(kotlinx.coroutines.test.TestCoroutineContext,long,java.util.concurrent.TimeUnit,int,java.lang.Object)
androidx.appcompat.R$style: int Widget_AppCompat_ActionBar_Solid
dagger.android.support.R$styleable: int[] ActionMode
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationX(float)
androidx.appcompat.R$attr: int actionModeCutDrawable
io.reactivex.Flowable: io.reactivex.Single toList(int)
okhttp3.internal.Util: okhttp3.RequestBody EMPTY_REQUEST
androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence[] getTextArray(int)
androidx.drawerlayout.widget.DrawerLayout: DrawerLayout(android.content.Context,android.util.AttributeSet)
android.support.v4.media.session.PlaybackStateCompat: long ACTION_FAST_FORWARD
kotlin.jvm.internal.Ref$ShortRef: Ref$ShortRef()
androidx.core.view.ViewCompat: void setPivotY(android.view.View,float)
androidx.core.graphics.PathKt: android.graphics.Path and(android.graphics.Path,android.graphics.Path)
androidx.constraintlayout.widget.R$attr: int layout_constraintEnd_toStartOf
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA
io.reactivex.subscribers.TestSubscriber: io.reactivex.subscribers.TestSubscriber assertOf(io.reactivex.functions.Consumer)
androidx.lifecycle.extensions.R$dimen: int notification_small_icon_size_as_large
androidx.appcompat.R$id: int right_icon
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: int getRowIndex()
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener: void onTouchExplorationStateChanged(boolean)
androidx.core.widget.ListViewAutoScrollHelper
kotlin.ULongArray: kotlin.collections.ULongIterator iterator()
dagger.android.support.R$attr: int progressBarPadding
androidx.databinding.MapChangeRegistry: void notifyChange(androidx.databinding.ObservableMap,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int indexOf(double[],double)
androidx.core.os.HandlerKt
dagger.android.support.R$styleable: int AppCompatTheme_actionModeBackground
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object reduce(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
android.support.v4.media.session.MediaControllerCompat: void setMediaController(android.app.Activity,android.support.v4.media.session.MediaControllerCompat)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.LinearSmoothScroller: void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
kotlin.text.StringsKt___StringsKt: java.util.Map associateWith(java.lang.CharSequence,kotlin.jvm.functions.Function1)
com.google.gson.stream.JsonWriter
androidx.recyclerview.widget.DefaultItemAnimator: void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(char[])
dagger.android.support.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: long serialVersionUID
androidx.appcompat.app.AlertController$RecycleListView: void setHasDecor(boolean,boolean)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager)
kotlinx.coroutines.CoroutineId: CoroutineId(long)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.observable.ObservableReplay: io.reactivex.observables.ConnectableObservable create(io.reactivex.ObservableSource,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)
kotlin.text.Typography: char dollar
androidx.viewpager.R$layout: int notification_template_part_time
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler initNewThreadScheduler(java.util.concurrent.Callable)
androidx.core.graphics.BitmapKt
okio.ByteString: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(long[],kotlin.jvm.functions.Function1)
okhttp3.internal.tls.BasicTrustRootIndex
kotlinx.coroutines.NonCancellable: java.lang.Object join(kotlin.coroutines.Continuation)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength valueOf(java.lang.String)
okhttp3.internal.http2.Header: okio.ByteString TARGET_AUTHORITY
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_android_minHeight
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status PENDING
dagger.android.support.DaggerApplication_MembersInjector: void injectMembers(dagger.android.support.DaggerApplication)
kotlin.collections.UCollectionsKt
androidx.legacy.coreutils.R$attr: int fontProviderQuery
io.reactivex.Maybe: io.reactivex.Single count()
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ListView_DropDown
io.reactivex.Observable: io.reactivex.Observable timeout(io.reactivex.functions.Function)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_goneMarginLeft
io.reactivex.subjects.AsyncSubject: java.lang.Object[] getValues()
com.example.revolut.rates.R$styleable: int CompoundButton_buttonTintMode
com.example.revolut.rates.R$dimen: int notification_right_icon_size
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPackageName()
androidx.cursoradapter.widget.SimpleCursorAdapter: void setViewBinder(androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder)
kotlin.UByteArray: boolean retainAll(java.util.Collection)
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy[] values()
androidx.fragment.app.FragmentController: void restoreLoaderNonConfig(androidx.collection.SimpleArrayMap)
androidx.constraintlayout.solver.widgets.WidgetContainer: void setOffset(int,int)
androidx.core.app.FrameMetricsAggregator: int TOTAL_INDEX
okio.BufferedSource: long indexOf(byte)
io.reactivex.internal.operators.flowable.FlowableInternalHelper: io.reactivex.functions.BiFunction simpleBiGenerator(io.reactivex.functions.BiConsumer)
com.example.revolut.rates.R$attr: int buttonBarNegativeButtonStyle
androidx.core.widget.NestedScrollView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)
io.reactivex.internal.observers.DeferredScalarObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.jakewharton.rxbinding3.view.ViewScrollChangeEvent
okio.Buffer: byte getByte(long)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapNotNullTo$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.annotation.CheckResult: java.lang.String suggest()
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_endColor
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.String)
androidx.appcompat.widget.DecorContentParent: boolean canShowOverflowMenu()
androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int)
androidx.collection.LruCache: void evictAll()
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
androidx.appcompat.R$dimen: int abc_dialog_min_width_major
androidx.media.R$id: int action_image
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: long serialVersionUID
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable flatMap(io.reactivex.functions.Function)
io.reactivex.Observable: io.reactivex.Observable flatMapSingle(io.reactivex.functions.Function)
androidx.core.app.FrameMetricsAggregator: android.util.SparseIntArray[] reset()
androidx.appcompat.widget.AppCompatSpinner: boolean onTouchEvent(android.view.MotionEvent)
dagger.android.support.R$attr: int popupMenuStyle
kotlin.collections.ArraysKt___ArraysKt: double reduceRightIndexed(double[],kotlin.jvm.functions.Function3)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)
dagger.android.support.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object getOrNull(java.lang.Object[],int)
android.support.v4.media.session.MediaControllerCompat: java.util.List getQueue()
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException getCancellationException()
io.reactivex.internal.subscriptions.ArrayCompositeSubscription: ArrayCompositeSubscription(int)
androidx.appcompat.widget.PopupMenu: void setOnMenuItemClickListener(androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener)
androidx.core.view.DragAndDropPermissionsCompat: androidx.core.view.DragAndDropPermissionsCompat request(android.app.Activity,android.view.DragEvent)
com.google.gson.internal.bind.SqlDateTypeAdapter: SqlDateTypeAdapter()
kotlinx.coroutines.ThreadContextElement$DefaultImpls
androidx.constraintlayout.solver.widgets.WidgetContainer: void reset()
com.google.gson.internal.bind.ObjectTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.internal.subscriptions.SubscriptionArbiter: SubscriptionArbiter(boolean)
androidx.legacy.coreutils.R$style: int Widget_Compat_NotificationActionContainer
io.reactivex.internal.operators.flowable.FlowableSerialized: void subscribeActual(org.reactivestreams.Subscriber)
dagger.android.support.R$attr: int switchStyle
androidx.media.R$styleable: int FontFamilyFont_android_font
androidx.core.graphics.ColorKt: float getBlue(long)
io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow createRowDimensionRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float)
androidx.recyclerview.widget.RecyclerView$State: int getTargetScrollPosition()
com.example.revolut.rates.data.model.CurrencyResponse: CurrencyResponse(java.lang.String,java.lang.String,java.util.Map)
kotlin.text.CharsKt__CharJVMKt: CharsKt__CharJVMKt()
io.reactivex.internal.operators.maybe.MaybeToSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.lifecycle.service.R
kotlinx.coroutines.channels.Channel$Factory: int UNLIMITED
io.reactivex.internal.operators.observable.ObservableUsing: ObservableUsing(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf
androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder
kotlinx.coroutines.AbstractContinuation: java.lang.Object getState$kotlinx_coroutines_core()
androidx.fragment.app.FragmentActivity: void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_128_CBC_SHA
kotlin.UShort
okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)
com.google.gson.JsonObject: com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String)
kotlin.jvm.internal.MutablePropertyReference2Impl: java.lang.String getSignature()
androidx.core.graphics.RectKt: float component1(android.graphics.RectF)
okhttp3.internal.connection.RealConnection: long idleAtNanos
com.example.revolut.rates.R$styleable: int MenuView_android_horizontalDivider
kotlinx.coroutines.channels.SubscriptionReceiveChannel$DefaultImpls
kotlin.sequences.IndexingSequence$iterator$1: boolean hasNext()
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener
android.support.v4.media.MediaBrowserCompat$SearchCallback: void onError(java.lang.String,android.os.Bundle)
io.reactivex.internal.operators.observable.ObservableZip: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
androidx.constraintlayout.solver.widgets.ResolutionAnchor: java.lang.String toString()
androidx.appcompat.app.ActionBar: boolean onKeyShortcut(int,android.view.KeyEvent)
androidx.databinding.InverseBindingMethod: java.lang.Class type()
com.example.revolut.rates.di.Injector: void access$setAppComponent$cp(com.example.revolut.rates.di.AppComponent)
io.reactivex.parallel.ParallelTransformer: io.reactivex.parallel.ParallelFlowable apply(io.reactivex.parallel.ParallelFlowable)
io.reactivex.internal.util.EndConsumerHelper: boolean setOnce(java.util.concurrent.atomic.AtomicReference,io.reactivex.disposables.Disposable,java.lang.Class)
androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$1: void onTransitionStart(android.transition.Transition)
kotlin.UShortArray: java.lang.String toString-impl(short[])
kotlin.sequences.SequencesKt___SequencesKt: boolean all(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long)
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureDrop()
kotlin.ranges.CharProgressionIterator
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY
kotlin.UShortArray
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat xBy(float)
com.google.gson.Gson: boolean htmlSafe()
kotlin.random.Random$Default: long nextLong(long)
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
dagger.android.support.R$dimen: int abc_disabled_alpha_material_dark
io.reactivex.observers.SafeObserver: void dispose()
kotlinx.coroutines.channels.Send: java.lang.Object tryResumeSend(java.lang.Object)
androidx.customview.R$id: int notification_main_column_container
androidx.appcompat.R$drawable: int abc_item_background_holo_dark
kotlin.text.MatchGroup: boolean equals(java.lang.Object)
androidx.legacy.v4.R$dimen: int notification_right_icon_size
androidx.core.animation.AnimatorKt$doOnEnd$$inlined$addListener$1
com.google.gson.JsonStreamParser: void remove()
io.reactivex.Completable: io.reactivex.Completable takeUntil(io.reactivex.CompletableSource)
io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorConditionalSubscription: long serialVersionUID
androidx.lifecycle.ViewModelProviders
io.reactivex.internal.operators.flowable.FlowableTakePublisher
androidx.recyclerview.widget.RecyclerView$Recycler: void clear()
kotlinx.coroutines.selects.SelectBuilderImpl: void invoke(kotlinx.coroutines.selects.SelectClause1,kotlin.jvm.functions.Function2)
androidx.drawerlayout.widget.DrawerLayout$SavedState
androidx.appcompat.R$id: int default_activity_button
androidx.core.util.SparseBooleanArrayKt$keyIterator$1: boolean hasNext()
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenReceiver: long serialVersionUID
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
io.reactivex.internal.operators.completable.CompletableCache: void onError(java.lang.Throwable)
io.reactivex.internal.operators.parallel.ParallelFilterTry: int parallelism()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int)
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier: FlowableBufferBoundarySupplier(io.reactivex.Flowable,java.util.concurrent.Callable,java.util.concurrent.Callable)
dagger.android.support.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection mapNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.MagicApiIntrinsics: java.lang.Object anyMagicApiCall(int,long,java.lang.Object)
kotlinx.coroutines.JobKt: void cancelChildren$default(kotlinx.coroutines.Job,java.lang.Throwable,int,java.lang.Object)
kotlinx.coroutines.channels.AbstractChannel: kotlinx.coroutines.channels.ChannelIterator iterator()
androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
androidx.core.text.PrecomputedTextCompat: int getSpanStart(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableDefer
io.reactivex.internal.operators.mixed.MaterializeSingleObserver: void dispose()
androidx.appcompat.R$drawable
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http1.Http1Codec: void cancel()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()
androidx.databinding.Observable
io.reactivex.internal.util.QueueDrain: boolean enter()
androidx.slidingpanelayout.R$styleable: int GradientColorItem_android_offset
androidx.legacy.coreui.R$dimen: int notification_large_icon_width
io.reactivex.internal.operators.maybe.MaybeConcatIterable
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] sortedArray--ajY-9A(int[])
androidx.recyclerview.R$id: int tag_unhandled_key_event_manager
androidx.appcompat.widget.FitWindowsViewGroup
android.support.v4.app.INotificationSideChannel$Stub$Proxy: java.lang.String getInterfaceDescriptor()
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Body2
androidx.loader.R$attr: int fontProviderQuery
androidx.recyclerview.widget.LinearLayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
androidx.core.widget.NestedScrollView: void onScrollChanged(int,int,int,int)
android.support.v4.media.session.MediaControllerCompat$TransportControls: void playFromUri(android.net.Uri,android.os.Bundle)
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: io.reactivex.observers.BaseTestConsumer$TestWaitStrategy SLEEP_10MS
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_CONCURRENT_STREAM_LIMIT
retrofit2.http.Path: boolean encoded()
androidx.core.R$attr: int fontProviderPackage
kotlin.collections.CollectionsKt___CollectionsKt: short[] toShortArray(java.util.Collection)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable: void subscribeActual(io.reactivex.CompletableObserver)
androidx.appcompat.view.menu.SubMenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
io.reactivex.internal.observers.FutureObserver: void onComplete()
io.reactivex.internal.operators.maybe.MaybeFromCallable: void subscribeActual(io.reactivex.MaybeObserver)
kotlinx.coroutines.AbstractContinuation: java.lang.Throwable getExceptionalResult(java.lang.Object)
com.example.revolut.rates.R$dimen: int abc_progress_bar_height_material
com.example.revolut.rates.R$color: int background_floating_material_light
io.reactivex.internal.operators.flowable.FlowableCache: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: java.lang.Boolean get(int)
io.reactivex.internal.observers.BasicFuseableObserver: boolean done
dagger.android.AndroidMemorySensitiveReferenceManager_Factory: java.lang.Object get()
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector: void subscribeActual(io.reactivex.MaybeObserver)
kotlinx.coroutines.internal.LockFreeLinkedListHead: LockFreeLinkedListHead()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAlpha(int)
androidx.appcompat.R$attr: int isLightTheme
io.reactivex.internal.disposables.ListCompositeDisposable: ListCompositeDisposable()
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.ClosedRange,short)
dagger.android.support.R$styleable: int ActionBar_contentInsetStartWithNavigation
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8
io.reactivex.internal.util.ArrayListSupplier: java.util.concurrent.Callable asCallable()
androidx.asynclayoutinflater.R$dimen
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setEnterFadeDuration(int)
io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function)
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_14
androidx.appcompat.view.StandaloneActionMode
androidx.appcompat.view.menu.SubMenuBuilder: android.view.Menu getParentMenu()
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(int[],int)
kotlinx.coroutines.CoroutineContextKt: java.lang.String getCoroutineName(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.selects.SelectInstance: void disposeOnSelect(kotlinx.coroutines.DisposableHandle)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterIndexed(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
androidx.appcompat.view.menu.MenuPopupHelper: void show(int,int)
io.reactivex.internal.operators.single.SingleZipArray: void subscribeActual(io.reactivex.SingleObserver)
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int UNSET
com.example.revolut.rates.R$style: int Widget_AppCompat_CompoundButton_Switch
androidx.versionedparcelable.VersionedParcel: void writeStrongBinder(android.os.IBinder)
androidx.fragment.R$styleable: int FontFamilyFont_fontVariationSettings
kotlin.text.StringsKt__StringsKt: int lastIndexOfAny$default(java.lang.CharSequence,char[],int,boolean,int,java.lang.Object)
kotlin.jvm.internal.Reflection: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String)
kotlinx.coroutines.selects.SelectBuilder: void onTimeout(long,java.util.concurrent.TimeUnit,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1: int compare(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableSwitchMap: ObservableSwitchMap(io.reactivex.ObservableSource,io.reactivex.functions.Function,int,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int[] findFirstCompletelyVisibleItemPositions(int[])
io.reactivex.internal.operators.flowable.FlowableZipIterable
com.example.revolut.rates.R$attr: int ratingBarStyleSmall
kotlin.io.FilesKt__UtilsKt: java.lang.String getNameWithoutExtension(java.io.File)
com.example.revolut.rates.R$dimen: int highlight_alpha_material_dark
androidx.appcompat.widget.TooltipCompat: void setTooltipText(android.view.View,java.lang.CharSequence)
androidx.appcompat.app.ActionBar: void setDisplayUseLogoEnabled(boolean)
androidx.viewpager.R$attr: int fontProviderFetchStrategy
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-nl983wc(byte[],java.lang.Object[])
io.reactivex.schedulers.Timed: Timed(java.lang.Object,long,java.util.concurrent.TimeUnit)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLEAR_SELECTION
io.reactivex.Flowable: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.util.BlockingHelper
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
com.jakewharton.rxbinding3.core.R$id: int action_container
kotlin.random.Random: long nextLong(long,long)
retrofit2.HttpException: retrofit2.Response response()
com.example.revolut.rates.R$styleable: int MenuGroup_android_checkableBehavior
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicHeight()
dagger.android.AndroidInjectionKey: java.lang.String value()
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
io.reactivex.internal.operators.single.SingleSubscribeOn
androidx.appcompat.widget.ToolbarWidgetWrapper: void setWindowCallback(android.view.Window$Callback)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(float[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__IndentKt: java.lang.String prependIndent$default(java.lang.String,java.lang.String,int,java.lang.Object)
kotlin.collections.ArraysKt
androidx.viewpager.R$layout: int notification_action_tombstone
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void update()
com.jakewharton.rxbinding3.widget.AdapterViewItemLongClickEvent: com.jakewharton.rxbinding3.widget.AdapterViewItemLongClickEvent copy(android.widget.AdapterView,android.view.View,int,long)
io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)
androidx.legacy.coreui.R$color
androidx.vectordrawable.R$id
kotlin.coroutines.SafeContinuation: kotlin.coroutines.CoroutineContext getContext()
androidx.documentfile.provider.DocumentFile: java.lang.String getName()
androidx.drawerlayout.R$dimen: int notification_action_icon_size
com.example.revolut.rates.R$styleable: int AppCompatTheme_radioButtonStyle
kotlin.text.StringsKt___StringsKt: java.lang.String take(java.lang.String,int)
io.reactivex.observers.TestObserver$EmptyObserver: io.reactivex.observers.TestObserver$EmptyObserver[] values()
androidx.core.graphics.RegionKt: android.graphics.Region minus(android.graphics.Region,android.graphics.Rect)
io.reactivex.internal.operators.maybe.MaybeOnErrorComplete: void subscribeActual(io.reactivex.MaybeObserver)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressViewEndTarget(boolean,int)
com.example.revolut.rates.R$styleable: int AppCompatTheme_viewInflaterClass
dagger.android.support.R$dimen: int abc_dropdownitem_text_padding_right
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(char[])
io.reactivex.internal.util.EmptyComponent: io.reactivex.Observer asObserver()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setMaxWidth(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(double[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$attr: int layout_constraintRight_creator
androidx.appcompat.widget.AppCompatTextView: void setTextAppearance(android.content.Context,int)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel asReceiveChannel(kotlin.sequences.Sequence,kotlin.coroutines.CoroutineContext)
kotlin.UShortArray: void set-01HTLdE(short[],int,short)
androidx.fragment.app.FragmentController: void doLoaderStart()
io.reactivex.internal.operators.observable.ObservableFromArray: void subscribeActual(io.reactivex.Observer)
androidx.core.util.SparseBooleanArrayKt$valueIterator$1: boolean nextBoolean()
androidx.core.graphics.BitmapKt: android.graphics.Bitmap applyCanvas(android.graphics.Bitmap,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError$BackpressureErrorSubscriber: long serialVersionUID
okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
kotlinx.coroutines.internal.LockFreeMPMCQueue: LockFreeMPMCQueue()
io.reactivex.parallel.ParallelTransformer
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$find$1: ChannelsKt__Channels_commonKt$find$1(kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-K6DWlUc$default(long[],long,int,int,int,java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable concatMapMaybeDelayError(io.reactivex.functions.Function,boolean)
io.reactivex.Observable: io.reactivex.Observable onErrorReturn(io.reactivex.functions.Function)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isScreenReaderFocusable()
com.google.gson.JsonArray: void add(com.google.gson.JsonElement)
androidx.appcompat.R$style: int Base_Widget_AppCompat_Button
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int)
androidx.core.os.LocaleListCompat: boolean isEmpty()
io.reactivex.subscribers.SerializedSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.databinding.adapters.TabHostBindingAdapter: TabHostBindingAdapter()
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: java.util.List shuffled(java.lang.Iterable)
androidx.lifecycle.extensions.R$styleable: int[] ColorStateListItem
kotlin.collections.ArraysKt___ArraysKt: boolean any(long[],kotlin.jvm.functions.Function1)
io.reactivex.subjects.ReplaySubject: io.reactivex.subjects.ReplaySubject createWithTimeAndSize(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)
retrofit2.Invocation
androidx.core.ktx.R$layout: int notification_template_custom_big
androidx.databinding.adapters.TextViewBindingAdapter$BeforeTextChanged: void beforeTextChanged(java.lang.CharSequence,int,int,int)
io.reactivex.subjects.UnicastSubject: io.reactivex.subjects.UnicastSubject create()
androidx.core.R$color: int notification_action_color_filter
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitleOptionalHint(boolean)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
androidx.core.app.ActivityCompat: ActivityCompat()
io.reactivex.internal.subscribers.QueueDrainSubscriber: java.lang.Throwable error
androidx.appcompat.R$attr: int alpha
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getTtcIndex()
io.reactivex.internal.operators.observable.ObservableReduceMaybe: void subscribeActual(io.reactivex.MaybeObserver)
androidx.core.ktx.R$style: int Widget_Compat_NotificationActionText
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_APP_ERROR
androidx.drawerlayout.R$attr: int fontVariationSettings
kotlin.collections.MovingSubList: int getSize()
androidx.slidingpanelayout.R$id: int text
kotlin.coroutines.jvm.internal.CompletedContinuation: java.lang.String toString()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int goneStartMargin
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map groupByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1)
androidx.viewpager.widget.ViewPager: void setPageMargin(int)
androidx.lifecycle.extensions.R$id: int notification_background
kotlin.text.StringsKt___StringsKt: java.util.List zipWithNext(java.lang.CharSequence,kotlin.jvm.functions.Function2)
com.example.revolut.rates.viewmodel.CurrenciesViewModel: void setCurrencies(androidx.lifecycle.MutableLiveData)
androidx.annotation.NonNull
androidx.core.app.NotificationCompat$MessagingStyle: int MAXIMUM_RETAINED_MESSAGES
kotlin.text.StringsKt__StringsKt: boolean startsWith(java.lang.CharSequence,char,boolean)
io.reactivex.Flowable: io.reactivex.Flowable zipWith(java.lang.Iterable,io.reactivex.functions.BiFunction)
kotlinx.android.extensions.CacheImplementation: kotlinx.android.extensions.CacheImplementation valueOf(java.lang.String)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_transformPivotX
dagger.android.support.R$attr: int panelMenuListTheme
com.example.revolut.rates.R$attr: int closeItemLayout
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeViewAt(int)
kotlin.internal.UProgressionUtilKt
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionModePasteDrawable
androidx.legacy.coreutils.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.appcompat.widget.TintTypedArray: java.lang.String getNonResourceString(int)
io.reactivex.internal.operators.flowable.FlowableJoin: FlowableJoin(io.reactivex.Flowable,org.reactivestreams.Publisher,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)
androidx.appcompat.R$styleable: int AnimatedStateListDrawableCompat_android_dither
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertValue(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: short random(short[],kotlin.random.Random)
androidx.drawerlayout.R$styleable: int GradientColor_android_endX
androidx.constraintlayout.widget.Barrier: void init(android.util.AttributeSet)
com.example.revolut.rates.R$attr: int actionModeSelectAllDrawable
androidx.constraintlayout.widget.ConstraintSet: void setScaleX(int,float)
io.reactivex.Single: io.reactivex.Flowable merge(io.reactivex.SingleSource,io.reactivex.SingleSource)
androidx.core.app.NotificationCompat: int FLAG_SHOW_LIGHTS
io.reactivex.internal.operators.maybe.MaybeFromCompletable: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.Observable: io.reactivex.Observable concatMapSingleDelayError(io.reactivex.functions.Function)
com.example.revolut.rates.R$attr: int dialogTheme
androidx.legacy.v4.R$styleable: int CoordinatorLayout_Layout_layout_behavior
kotlin.collections.MapsKt___MapsKt: java.util.List flatMap(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.reflect.KFunction: boolean isOperator()
androidx.print.PrintHelper: int getOrientation()
com.example.revolut.rates.R$styleable: int PopupWindow_android_popupBackground
kotlinx.coroutines.channels.Channel: kotlinx.coroutines.channels.Channel$Factory Factory
androidx.core.ktx.R$dimen: int notification_content_margin_start
com.example.revolut.rates.R$attr: int layout_constraintHorizontal_chainStyle
kotlinx.coroutines.Incomplete
com.example.revolut.rates.R$color: int abc_secondary_text_material_light
kotlin.sequences.SubSequence: int access$getStartIndex$p(kotlin.sequences.SubSequence)
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean viewNeedsUpdate()
io.reactivex.internal.operators.single.SingleDoOnError
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: int INVALID_SPAN_ID
kotlin.ranges.URangesKt___URangesKt: long coerceAtLeast-eb3DHEI(long,long)
com.jakewharton.rxbinding3.widget.SearchViewQueryTextEvent: java.lang.CharSequence component2()
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable: void subscribeActual(io.reactivex.Observer)
kotlin.reflect.KMutableProperty0: void set(java.lang.Object)
androidx.appcompat.widget.FitWindowsLinearLayout: boolean fitSystemWindows(android.graphics.Rect)
androidx.coordinatorlayout.R$drawable: int notification_bg_low_pressed
androidx.recyclerview.R$id: int action_container
dagger.android.support.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pingIntervalMillis(int)
dagger.android.support.R$attr: int titleTextColor
io.reactivex.internal.subscribers.BasicFuseableSubscriber: boolean isEmpty()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder socketFactory(javax.net.SocketFactory)
io.reactivex.schedulers.Schedulers: io.reactivex.Scheduler newThread()
okhttp3.Challenge
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(double[])
kotlinx.coroutines.scheduling.WorkQueue: int getBufferSize$kotlinx_coroutines_core()
androidx.appcompat.view.menu.MenuItemWrapperICS: int getItemId()
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(byte[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$string: int abc_menu_delete_shortcut_label
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(double[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.reactivex.internal.observers.InnerQueuedObserver: void onComplete()
androidx.core.graphics.RectKt: boolean contains(android.graphics.RectF,android.graphics.PointF)
kotlin.UByte: int SIZE_BYTES
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setOnlyAlertOnce(boolean)
androidx.core.view.ViewCompat: void setClipBounds(android.view.View,android.graphics.Rect)
io.reactivex.internal.disposables.EmptyDisposable: void dispose()
androidx.core.widget.ListPopupWindowCompat
okhttp3.Cookie: java.lang.String path()
androidx.constraintlayout.solver.widgets.ResolutionAnchor: int CENTER_CONNECTION
io.reactivex.internal.operators.flowable.FlowableCount: FlowableCount(io.reactivex.Flowable)
io.reactivex.internal.operators.parallel.ParallelMap: ParallelMap(io.reactivex.parallel.ParallelFlowable,io.reactivex.functions.Function)
io.reactivex.internal.operators.flowable.FlowablePublish: void connect(io.reactivex.functions.Consumer)
io.reactivex.internal.operators.flowable.FlowableInternalHelper: io.reactivex.functions.Function itemDelay(io.reactivex.functions.Function)
android.support.v4.media.session.MediaSessionCompat$Callback: void onSetRepeatMode(int)
kotlin.jvm.internal.MutableLocalVariableReference
kotlin.collections.ArraysKt___ArraysKt: char reduceRight(char[],kotlin.jvm.functions.Function2)
kotlin.TypeAliasesKt: void Error$annotations()
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_barrierAllowsGoneWidgets
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: void invoke(kotlinx.coroutines.selects.SelectClause1,kotlin.jvm.functions.Function2)
kotlin.ULongArray: int hashCode()
androidx.viewpager.R$id
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.util.Date)
io.reactivex.Maybe: io.reactivex.Maybe onErrorReturnItem(java.lang.Object)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setMipMap(boolean)
dagger.android.AndroidInjector$Builder: AndroidInjector$Builder()
androidx.core.R$id: int normal
androidx.core.view.accessibility.AccessibilityEventCompat: androidx.core.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int)
kotlin.jvm.internal.LongSpreadBuilder: int getSize(java.lang.Object)
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_centerColor
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isPassword()
androidx.media.R$id: int notification_main_column
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
dagger.internal.MapFactory: dagger.internal.MapFactory$Builder builder(int)
io.reactivex.Single: io.reactivex.Single timer(long,java.util.concurrent.TimeUnit)
androidx.core.view.PointerIconCompat: int TYPE_HELP
kotlin.ULong: java.lang.String toString()
kotlin.reflect.KProperty0: java.lang.Object get()
androidx.legacy.coreutils.R$drawable: int notification_bg_low_pressed
io.reactivex.internal.util.EmptyComponent: io.reactivex.internal.util.EmptyComponent[] values()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ranges.IntRange getIndices-GBYM_sE(byte[])
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat: AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat()
androidx.constraintlayout.solver.Metrics: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservableSubscribeOn: ObservableSubscribeOn(io.reactivex.ObservableSource,io.reactivex.Scheduler)
retrofit2.Retrofit: retrofit2.Converter nextResponseBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(short[],short,int,int)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntProgression downTo-J1ME1BU(int,int)
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: int DIRECTION_TOP
kotlinx.coroutines.channels.AbstractChannel: java.lang.Object pollSelectInternal(kotlinx.coroutines.selects.SelectInstance)
io.reactivex.subjects.AsyncSubject
dagger.android.support.R$styleable: int AppCompatTheme_alertDialogCenterButtons
androidx.appcompat.R$drawable: int abc_list_selector_holo_light
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.appcompat.R$attr: int backgroundTintMode
kotlin.collections.CharIterator: char nextChar()
io.reactivex.internal.observers.ConsumerSingleObserver: boolean hasCustomOnError()
androidx.annotation.RequiresPermission$Write: androidx.annotation.RequiresPermission value()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder username(java.lang.String)
kotlinx.coroutines.channels.ArrayChannel: int getCapacity()
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_DELETE
androidx.constraintlayout.solver.SolverVariable: int STRENGTH_BARRIER
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
com.google.gson.JsonPrimitive: float getAsFloat()
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SHOW_WHEN
androidx.vectordrawable.R$attr: int fontProviderCerts
androidx.viewpager.R$styleable: int[] ColorStateListItem
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionSpecs(java.util.List)
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isFullScreen()
com.jakewharton.rxbinding3.widget.AdapterViewNothingSelectionEvent: com.jakewharton.rxbinding3.widget.AdapterViewNothingSelectionEvent copy(android.widget.AdapterView)
androidx.slidingpanelayout.R$string: int status_bar_notification_info_overflow
kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.CoroutineExceptionHandler,kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.view.menu.ActionMenuItem: android.view.SubMenu getSubMenu()
kotlin.ULongKt
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mNegativeButtonIcon
kotlin.text.TypeAliasesKt: void StringBuilder$annotations()
androidx.customview.R$styleable: int FontFamily_fontProviderFetchStrategy
android.support.v4.os.IResultReceiver$Stub
io.reactivex.internal.subscribers.SubscriberResourceWrapper: void onNext(java.lang.Object)
androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()
kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)
androidx.databinding.adapters.ViewGroupBindingAdapter
io.reactivex.Observable: io.reactivex.Observable zipWith(java.lang.Iterable,io.reactivex.functions.BiFunction)
androidx.constraintlayout.widget.Placeholder: void setEmptyVisibility(int)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: int indexOf(java.lang.Object)
androidx.customview.R$dimen: int notification_subtext_size
androidx.appcompat.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.example.revolut.rates.R$drawable: int tooltip_frame_light
androidx.media.MediaBrowserServiceCompat: void attachToBaseContext(android.content.Context)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
org.intellij.lang.annotations.PrintFormat
androidx.legacy.v4.R$styleable: int FontFamily_fontProviderQuery
kotlinx.coroutines.channels.SendChannel: void invokeOnClose(kotlin.jvm.functions.Function1)
io.reactivex.Observable: io.reactivex.Observable buffer(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.cursoradapter.widget.SimpleCursorAdapter: void setCursorToStringConverter(androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter)
io.reactivex.processors.ReplayProcessor: io.reactivex.processors.ReplayProcessor createWithTime(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.ranges.UIntRange$Companion: kotlin.ranges.UIntRange getEMPTY()
androidx.appcompat.R$layout: int support_simple_spinner_dropdown_item
io.reactivex.Flowable: io.reactivex.Flowable doOnError(io.reactivex.functions.Consumer)
androidx.constraintlayout.widget.ConstraintSet: void clear(int)
dagger.android.support.R$dimen: int notification_action_text_size
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,java.lang.CharSequence)
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_ARTIST
io.reactivex.internal.operators.maybe.MaybeFromAction: java.lang.Object call()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(long[],long[])
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1
androidx.recyclerview.R$layout: int notification_template_part_time
androidx.vectordrawable.R$dimen: int notification_small_icon_size_as_large
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: int getScrimColor(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
androidx.constraintlayout.solver.widgets.Guideline: java.lang.String getType()
io.reactivex.Observable: io.reactivex.Observable throttleLatest(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.customview.widget.ViewDragHelper: int DIRECTION_HORIZONTAL
kotlin.io.FilePathComponents: boolean equals(java.lang.Object)
kotlinx.coroutines.selects.SelectBuilderImpl: boolean isSelected()
androidx.appcompat.R$styleable: int AppCompatImageView_tintMode
androidx.cursoradapter.widget.SimpleCursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet,int)
com.example.revolut.rates.R$color: int highlighted_text_material_dark
androidx.media.MediaBrowserProtocol: int SERVICE_VERSION_1
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setInputType(int)
okhttp3.internal.ws.WebSocketReader$FrameCallback
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.ViewStubCompat: void onMeasure(int,int)
kotlin.ranges.RangesKt__RangesKt: kotlin.ranges.ClosedRange rangeTo(java.lang.Comparable,java.lang.Comparable)
io.reactivex.internal.subscribers.QueueDrainSubscriber: long produced(long)
androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)
io.reactivex.internal.operators.flowable.FlowableToListSingle: io.reactivex.Flowable fuseToFlowable()
io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sorted(java.util.Comparator,int)
io.reactivex.internal.subscriptions.BooleanSubscription: void request(long)
androidx.databinding.BindingBuildInfo
kotlin.annotation.Target: kotlin.annotation.AnnotationTarget[] allowedTargets()
androidx.appcompat.app.WindowDecorActionBar: void setHideOnContentScrollEnabled(boolean)
androidx.asynclayoutinflater.R$id: int notification_background
okhttp3.internal.cache.CacheRequest: void abort()
com.example.revolut.rates.R$styleable: int AnimatedStateListDrawableCompat_android_dither
dagger.android.support.R$styleable: int Toolbar_titleMarginEnd
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setArrowEnabled(boolean)
androidx.drawerlayout.R$dimen: int notification_small_icon_background_padding
kotlin.ranges.LongProgression: long getLast()
io.reactivex.internal.fuseable.ScalarCallable
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object firstOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.coroutines.ContinuationKt$Continuation$1: kotlin.coroutines.CoroutineContext getContext()
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(double[],kotlin.jvm.functions.Function1)
androidx.core.view.MenuKt: void minusAssign(android.view.Menu,android.view.MenuItem)
kotlin.coroutines.jvm.internal.CoroutineStackFrame
kotlinx.coroutines.JobKt: boolean isActive(kotlin.coroutines.CoroutineContext)
dagger.android.support.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
androidx.legacy.v4.R$attr: int layout_behavior
io.reactivex.internal.operators.flowable.FlowableTakeWhile: FlowableTakeWhile(io.reactivex.Flowable,io.reactivex.functions.Predicate)
com.example.revolut.rates.RatesApp: com.example.revolut.rates.RatesApp access$getInstance$cp()
okio.Buffer: short readShortLe()
io.reactivex.internal.operators.observable.ObservableTakeWhile: void subscribeActual(io.reactivex.Observer)
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith$default(java.lang.String,java.lang.String,int,boolean,int,java.lang.Object)
androidx.core.graphics.CanvasKt
io.reactivex.Flowable: io.reactivex.Flowable switchMapMaybe(io.reactivex.functions.Function)
androidx.constraintlayout.widget.ConstraintSet: void createHorizontalChainRtl(int,int,int,int,int[],float[],int)
androidx.recyclerview.widget.RecyclerView: void onDraw(android.graphics.Canvas)
okhttp3.Headers$Builder: java.lang.String get(java.lang.String)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA
androidx.databinding.adapters.TextViewBindingAdapter: void setAutoText(android.widget.TextView,boolean)
androidx.databinding.ViewDataBinding: java.lang.Object getFromList(java.util.List,int)
com.example.revolut.rates.R$style: int Base_Theme_AppCompat_Light_Dialog
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean isHardwareDetected()
kotlin.jvm.internal.PropertyReference0
dagger.android.support.R$styleable: int AppCompatImageView_android_src
com.example.revolut.rates.R$color: int error_color_material_light
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: java.lang.Object poll()
okio.ForwardingTimeout: okio.ForwardingTimeout setDelegate(okio.Timeout)
io.reactivex.internal.operators.observable.ObservableHide
okio.Buffer: okio.Buffer writeHexadecimalUnsignedLong(long)
kotlinx.coroutines.DeferredKt: kotlinx.coroutines.Deferred async$default(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlinx.coroutines.Job,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.asynclayoutinflater.R$id: int chronometer
androidx.coordinatorlayout.R$dimen: int compat_notification_large_icon_max_height
io.reactivex.plugins.RxJavaPlugins: void setSingleSchedulerHandler(io.reactivex.functions.Function)
com.example.revolut.rates.RatesApp: void onCreate()
androidx.legacy.v4.R$id: int status_bar_latest_event_content
androidx.customview.widget.ExploreByTouchHelper: int getKeyboardFocusedVirtualViewId()
io.reactivex.internal.operators.maybe.MaybeDetach: MaybeDetach(io.reactivex.MaybeSource)
io.reactivex.internal.operators.observable.ObservableTimeout: void subscribeActual(io.reactivex.Observer)
androidx.fragment.R$id: int tag_transition_group
androidx.appcompat.app.ActionBar: void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence flatten$kotlin_stdlib(kotlin.jvm.functions.Function1)
androidx.appcompat.R$styleable: int MenuItem_iconTint
androidx.databinding.library.baseAdapters.R$id: int onDateChanged
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
okio.BufferedSink: okio.BufferedSink writeIntLe(int)
kotlin.reflect.KVariance: kotlin.reflect.KVariance[] values()
androidx.appcompat.view.menu.MenuBuilder: void setShortcutsVisible(boolean)
androidx.core.app.NotificationCompat$Style: NotificationCompat$Style()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
kotlinx.coroutines.EventLoopBase: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
com.example.revolut.rates.common.ConstantsKt: java.lang.String defaultCurrency
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PICTURE
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: int indexOf(int)
kotlinx.coroutines.ResumeModeKt: int MODE_IGNORE
kotlin.UShortArray: boolean isEmpty()
dagger.android.support.R$attr: int customNavigationLayout
androidx.constraintlayout.solver.widgets.Guideline: void setGuidePercent(float)
androidx.viewpager.R$dimen: int compat_button_padding_horizontal_material
androidx.core.view.ActionProvider: android.content.Context getContext()
androidx.core.view.NestedScrollingChildHelper: void stopNestedScroll(int)
com.example.revolut.rates.R$attr: int actionMenuTextAppearance
androidx.recyclerview.widget.RecyclerView$State: boolean isMeasuring()
androidx.legacy.v4.R$string: int status_bar_notification_info_overflow
androidx.drawerlayout.R$dimen: int notification_top_pad
com.example.revolut.rates.RatesApp: com.example.revolut.rates.RatesApp$Companion Companion
kotlin.sequences.SequenceScope
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2(byte[])
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDefaultNavigationContentDescription(int)
androidx.appcompat.widget.LinearLayoutCompat: int SHOW_DIVIDER_NONE
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow createRowEqualMatchDimensions(float,float,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable)
androidx.core.app.NotificationCompatSideChannelService: void cancel(java.lang.String,int,java.lang.String)
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_DEFAULT
io.reactivex.exceptions.MissingBackpressureException: long serialVersionUID
kotlinx.coroutines.CancelHandlerBase: void invoke(java.lang.Throwable)
androidx.core.app.NotificationCompat: long getTimeoutAfter(android.app.Notification)
com.example.revolut.rates.R$styleable: int View_paddingStart
com.example.revolut.rates.R$id: int cancel_action
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener: RecyclerView$SimpleOnItemTouchListener()
kotlin.coroutines.experimental.CoroutineContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.slidingpanelayout.R$string
androidx.appcompat.widget.ListPopupWindow: boolean onKeyPreIme(int,android.view.KeyEvent)
androidx.appcompat.app.AlertDialog: boolean onKeyUp(int,android.view.KeyEvent)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChangeEvent: android.view.ViewGroup getView()
okhttp3.internal.connection.RealConnection: void onSettings(okhttp3.internal.http2.Http2Connection)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
kotlin.collections.ArraysKt___ArraysKt: boolean any(java.lang.Object[],kotlin.jvm.functions.Function1)
io.reactivex.internal.util.OpenHashSet: int size()
androidx.core.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)
androidx.appcompat.R$styleable: int SwitchCompat_android_textOn
androidx.versionedparcelable.VersionedParcel: android.os.Bundle readBundle()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object foldIndexed(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function3)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void resetAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
androidx.annotation.FloatRange
com.example.revolut.rates.R$dimen: int compat_notification_large_icon_max_width
androidx.core.content.ContextCompat: java.io.File getDataDir(android.content.Context)
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function6)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator compareBy(kotlin.jvm.functions.Function1[])
io.reactivex.Flowable: io.reactivex.Flowable distinctUntilChanged(io.reactivex.functions.Function)
androidx.appcompat.R$color: int bright_foreground_disabled_material_light
com.example.revolut.rates.R$style: int Widget_AppCompat_AutoCompleteTextView
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
kotlinx.coroutines.DefaultExecutor: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.util.concurrent.TimeUnit,java.lang.Runnable)
androidx.loader.R$styleable: int FontFamilyFont_android_fontVariationSettings
kotlinx.coroutines.JobSupport: java.lang.Object getCompletedInternal$kotlinx_coroutines_core()
com.example.revolut.rates.R$attr: int layout_constraintGuide_end
androidx.legacy.coreutils.R$attr: int fontProviderFetchStrategy
com.google.gson.internal.bind.TreeTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getGapStrategy()
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ProgressBar
kotlinx.coroutines.ResumeModeKt: void MODE_DIRECT$annotations()
androidx.databinding.adapters.AbsSpinnerBindingAdapter: AbsSpinnerBindingAdapter()
kotlinx.coroutines.EventLoopBase: void closeQueue()
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(double[],int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp makeCondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0)
io.reactivex.internal.operators.parallel.ParallelReduce: void subscribe(org.reactivestreams.Subscriber[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(double[])
com.example.revolut.rates.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory: androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.lang.String)
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher
com.jakewharton.rxbinding3.widget.RxRadioGroup
io.reactivex.internal.operators.completable.CompletableConcat
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTooltipText()
android.support.v4.media.session.IMediaSession: void setRepeatMode(int)
kotlin.jvm.internal.MutablePropertyReference1: java.lang.Object invoke(java.lang.Object)
androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,boolean)
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(int[])
androidx.appcompat.R$drawable: int abc_list_pressed_holo_dark
androidx.recyclerview.widget.StaggeredGridLayoutManager: void offsetChildrenHorizontal(int)
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
androidx.versionedparcelable.VersionedParcel: void writeFloat(float)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setIcon(android.graphics.drawable.Drawable)
kotlinx.coroutines.channels.Send
dagger.android.support.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
kotlinx.coroutines.channels.ChannelsKt: kotlin.jvm.functions.Function1 consumesAll(kotlinx.coroutines.channels.ReceiveChannel[])
com.example.revolut.rates.R$id: int line3
androidx.lifecycle.CompositeGeneratedAdaptersObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.swiperefreshlayout.R$id: int action_container
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(double[])
androidx.constraintlayout.widget.ConstraintSet: int MATCH_CONSTRAINT_SPREAD
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int HORIZONTAL
androidx.appcompat.view.WindowCallbackWrapper: WindowCallbackWrapper(android.view.Window$Callback)
androidx.lifecycle.GeneratedAdapter: void callMethods(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,boolean,androidx.lifecycle.MethodCallsLogger)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()
androidx.appcompat.R$dimen: int abc_text_size_small_material
kotlin.coroutines.jvm.internal.CompletedContinuation: kotlin.coroutines.jvm.internal.CompletedContinuation INSTANCE
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlinx.coroutines.Job,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.core.app.NotificationCompat$Action$WearableExtender: NotificationCompat$Action$WearableExtender(androidx.core.app.NotificationCompat$Action)
androidx.legacy.v4.R$dimen: int subtitle_corner_radius
androidx.databinding.ObservableDouble: void writeToParcel(android.os.Parcel,int)
androidx.core.widget.NestedScrollView: boolean pageScroll(int)
androidx.core.app.Person$Builder
androidx.appcompat.widget.ActionBarContextView: boolean showOverflowMenu()
androidx.constraintlayout.widget.R$id: int right
io.reactivex.internal.operators.maybe.MaybeFromCallable
okhttp3.Request: boolean isHttps()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setFrame(int,int,int,int)
androidx.databinding.adapters.TableLayoutBindingAdapter: TableLayoutBindingAdapter()
com.example.revolut.rates.R$styleable: int[] GradientColor
io.reactivex.Observable: io.reactivex.Observable materialize()
io.reactivex.internal.subscribers.BlockingSubscriber: boolean isCancelled()
io.reactivex.internal.subscriptions.ArrayCompositeSubscription: long serialVersionUID
androidx.core.graphics.ColorUtils: void colorToHSL(int,float[])
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo)
androidx.appcompat.widget.TintTypedArray: int getColor(int,int)
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: float weight
io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)
androidx.appcompat.view.menu.ListMenuPresenter: android.widget.ListAdapter getAdapter()
okhttp3.ResponseBody: java.lang.String string()
kotlin.collections.ArraysKt___ArraysKt: char single(char[],kotlin.jvm.functions.Function1)
kotlin.collections.AbstractMutableSet: int size()
androidx.core.animation.AnimatorKt$addListener$1
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.reflect.Type)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: java.lang.Object updatedNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.reactivex.internal.schedulers.AbstractDirectTask: java.util.concurrent.FutureTask DISPOSED
androidx.core.util.SparseLongArrayKt: int getSize(android.util.SparseLongArray)
kotlinx.coroutines.ResumeModeKt: void MODE_UNDISPATCHED$annotations()
io.reactivex.Observable: io.reactivex.Observable sample(io.reactivex.ObservableSource)
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification_Line2_Media
androidx.core.content.res.TypedArrayKt: int getResourceIdOrThrow(android.content.res.TypedArray,int)
retrofit2.http.HTTP: java.lang.String method()
android.support.v4.media.session.IMediaControllerCallback: void onCaptioningEnabledChanged(boolean)
androidx.lifecycle.extensions.R$attr: int fontProviderFetchTimeout
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.util.SortedSet toSortedSet(java.lang.Iterable)
dagger.android.support.R$style: int Theme_AppCompat_Dialog
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
okhttp3.Handshake: java.security.Principal peerPrincipal()
androidx.core.content.IntentCompat: android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertValueCount(int)
androidx.fragment.app.Fragment: void setSharedElementEnterTransition(java.lang.Object)
androidx.viewpager.widget.ViewPager: boolean beginFakeDrag()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)
androidx.viewpager.widget.ViewPager$LayoutParams: boolean isDecor
kotlinx.coroutines.internal.Symbol: java.lang.String getSymbol()
kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)
androidx.core.app.NotificationCompat$Builder: int getColor()
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: int component7()
io.reactivex.internal.operators.observable.ObservableIntervalRange: ObservableIntervalRange(long,long,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.collections.GroupingKt__GroupingKt: java.util.Map reduceTo(kotlin.collections.Grouping,java.util.Map,kotlin.jvm.functions.Function3)
androidx.core.content.ContextCompat: int checkSelfPermission(android.content.Context,java.lang.String)
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_ActionBar_TabView
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
androidx.legacy.coreui.R$attr: int statusBarBackground
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.media.AudioAttributesCompat: androidx.media.AudioAttributesCompat fromBundle(android.os.Bundle)
com.example.revolut.rates.R$style: int Widget_AppCompat_ActionButton_CloseMode
androidx.lifecycle.LiveData
androidx.arch.core.executor.TaskExecutor: TaskExecutor()
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1
kotlin.io.FileSystemException: java.lang.String getReason()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.ranges.CharProgression
androidx.appcompat.R$attr: int layout_dodgeInsetEdges
androidx.appcompat.view.StandaloneActionMode: void setSubtitle(java.lang.CharSequence)
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_android_font
androidx.legacy.coreui.R$id: int normal
kotlinx.coroutines.AbstractCoroutine: boolean isActive()
androidx.annotation.BinderThread
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfUShort(kotlin.UShort[])
androidx.appcompat.R$attr: int displayOptions
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void addState(int[],android.graphics.drawable.Drawable)
com.jakewharton.rxbinding3.widget.RxToolbar: io.reactivex.Observable itemClicks(android.widget.Toolbar)
androidx.media.R$styleable: int FontFamilyFont_android_fontVariationSettings
okio.ByteString: okio.ByteString of(byte[],int,int)
kotlinx.coroutines.selects.SelectInstance: kotlin.coroutines.Continuation getCompletion()
dagger.android.support.R$attr: int actionBarTabTextStyle
androidx.appcompat.app.AppCompatActivity: boolean supportShouldUpRecreateTask(android.content.Intent)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: double EPSILON
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(double[])
io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function5)
androidx.recyclerview.widget.RecyclerView$Adapter: void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.R$attr: int fastScrollVerticalThumbDrawable
kotlin.reflect.KCallable$DefaultImpls
com.example.revolut.rates.data.model.Rate$Companion: com.example.revolut.rates.data.model.Rate getEMPTY()
androidx.core.app.NotificationCompat: int FLAG_ONLY_ALERT_ONCE
androidx.appcompat.view.SupportActionModeWrapper: void setSubtitle(java.lang.CharSequence)
androidx.constraintlayout.solver.widgets.Snapshot
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: long serialVersionUID
androidx.appcompat.widget.ToolbarWidgetWrapper: void dismissPopupMenus()
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet)
kotlin.Triple: java.lang.Object getFirst()
dagger.android.support.R$attr: int backgroundStacked
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup: GridLayoutManager$DefaultSpanSizeLookup()
android.support.v4.media.session.IMediaSession: void play()
io.reactivex.Completable: java.lang.Throwable blockingGet(long,java.util.concurrent.TimeUnit)
androidx.drawerlayout.R$id: int tag_transition_group
androidx.recyclerview.widget.RecyclerView: boolean isLayoutFrozen()
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_SOCIAL
kotlin.text.MatchGroupCollection
androidx.appcompat.widget.TintTypedArray: float getDimension(int,float)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintCircle
androidx.customview.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)
androidx.appcompat.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)
androidx.core.graphics.BitmapKt: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)
kotlin.random.FallbackThreadLocalRandom$implStorage$1
io.reactivex.Observable: io.reactivex.Observable switchOnNext(io.reactivex.ObservableSource,int)
dagger.android.support.R$attr: int logoDescription
kotlinx.coroutines.scheduling.TimeSource: TimeSource()
androidx.appcompat.R$style: int TextAppearance_Compat_Notification_Title
com.example.revolut.rates.RatesApp_MembersInjector: dagger.MembersInjector create(javax.inject.Provider)
androidx.appcompat.view.menu.ListMenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.media.R$styleable: int[] GradientColor
kotlin.ranges.RangesKt___RangesKt: java.lang.Short toShortExactOrNull(long)
io.reactivex.Observable: java.lang.Iterable blockingIterable(int)
io.reactivex.internal.operators.single.SingleDelayWithPublisher
dagger.android.support.R$drawable: int abc_popup_background_mtrl_mult
com.google.gson.JsonArray: JsonArray()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDebugName(java.lang.String)
androidx.core.view.GravityCompat: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
dagger.android.support.R$styleable: int AppCompatTheme_activityChooserViewStyle
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder addConverterFactory(retrofit2.Converter$Factory)
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle: FlowableDoOnLifecycle(io.reactivex.Flowable,io.reactivex.functions.Consumer,io.reactivex.functions.LongConsumer,io.reactivex.functions.Action)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel takeWhile(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
io.reactivex.Observable: io.reactivex.Observable cacheWithInitialCapacity(int)
androidx.core.view.ViewKt$postDelayed$runnable$1: ViewKt$postDelayed$runnable$1(kotlin.jvm.functions.Function0)
androidx.fragment.R$drawable: int notification_bg
kotlin.ranges.ClosedFloatingPointRange: boolean lessThanOrEquals(java.lang.Comparable,java.lang.Comparable)
androidx.core.graphics.drawable.IconCompat: void onPreParceling(boolean)
androidx.appcompat.R$styleable: int Toolbar_contentInsetLeft
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
kotlin.collections.EmptyIterator: void set(java.lang.Void)
io.reactivex.Observable: io.reactivex.Observable zipArray(io.reactivex.functions.Function,boolean,int,io.reactivex.ObservableSource[])
androidx.core.widget.ContentLoadingProgressBar: void show()
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()
androidx.collection.SparseArrayCompat
androidx.recyclerview.R$layout: int notification_template_icon_group
androidx.core.app.RemoteInput: java.lang.String RESULTS_CLIP_LABEL
androidx.appcompat.R$style: int Animation_AppCompat_DropDownUp
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] plus(byte[],byte[])
androidx.core.util.Pools$SimplePool: boolean release(java.lang.Object)
androidx.core.app.FrameMetricsAggregator: FrameMetricsAggregator(int)
androidx.recyclerview.widget.SortedList: int INVALID_POSITION
kotlin.UShortArray: boolean removeAll(java.util.Collection)
androidx.asynclayoutinflater.R$styleable: int[] GradientColor
io.reactivex.internal.fuseable.QueueDisposable
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(long[],kotlin.jvm.functions.Function1)
androidx.loader.R$id: int actions
kotlinx.coroutines.CoroutineExceptionHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
androidx.appcompat.R$styleable: int Toolbar_titleMarginTop
androidx.appcompat.widget.ScrollingTabContainerView: void animateToVisibility(int)
androidx.appcompat.widget.DecorToolbar: void setSubtitle(java.lang.CharSequence)
io.reactivex.internal.operators.completable.CompletableMergeIterable$MergeCompletableObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableRangeLong: FlowableRangeLong(long,long)
androidx.appcompat.R$styleable: int ActionMode_titleTextStyle
okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)
com.example.revolut.rates.R$styleable: int AppCompatTheme_windowActionModeOverlay
io.reactivex.internal.schedulers.AbstractDirectTask: long serialVersionUID
retrofit2.http.FieldMap: boolean encoded()
dagger.android.support.R$styleable: int ActionBar_progressBarPadding
kotlin.text.StringsKt___StringsKt: java.lang.Character singleOrNull(java.lang.CharSequence)
androidx.core.view.ScaleGestureDetectorCompat: void setQuickScaleEnabled(java.lang.Object,boolean)
androidx.constraintlayout.widget.ConstraintSet: void constrainMaxHeight(int,int)
androidx.legacy.v4.R$drawable: int notification_icon_background
android.support.v4.media.session.IMediaControllerCallback: void onQueueChanged(java.util.List)
androidx.core.util.AtomicFileKt: void writeBytes(android.util.AtomicFile,byte[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(float[],kotlin.jvm.functions.Function2)
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewRemoveEvent: int hashCode()
androidx.appcompat.app.AlertController$AlertParams: boolean[] mCheckedItems
androidx.customview.widget.ExploreByTouchHelper: int getVirtualViewAt(float,float)
io.reactivex.internal.util.ErrorMode: io.reactivex.internal.util.ErrorMode END
androidx.core.database.DatabaseUtilsCompat: java.lang.String concatenateWhere(java.lang.String,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: long serialVersionUID
dagger.android.support.R$style: int Widget_AppCompat_ListView
okio.Buffer: okio.BufferedSink writeUtf8(java.lang.String,int,int)
android.support.v4.media.session.IMediaSession: int getRepeatMode()
kotlin.collections.ArraysKt___ArraysKt: boolean none(char[],kotlin.jvm.functions.Function1)
kotlin.coroutines.experimental.CombinedContext: kotlin.coroutines.experimental.CoroutineContext minusKey(kotlin.coroutines.experimental.CoroutineContext$Key)
io.reactivex.internal.observers.InnerQueuedObserverSupport: void innerError(io.reactivex.internal.observers.InnerQueuedObserver,java.lang.Throwable)
dagger.android.support.R$styleable: int MenuView_android_itemIconDisabledAlpha
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$any$3: java.lang.Object invokeSuspend(java.lang.Object)
io.reactivex.internal.queue.MpscLinkedQueue: MpscLinkedQueue()
androidx.core.util.LruCacheKt$lruCache$2
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMajor
kotlinx.coroutines.Deferred$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.Deferred,kotlinx.coroutines.Job)
kotlinx.coroutines.selects.SelectKt: java.lang.Object getALREADY_SELECTED()
io.reactivex.internal.schedulers.NewThreadWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$buildContinuationByInvokeCall$continuation$1
androidx.swiperefreshlayout.widget.CircularProgressDrawable: int DEFAULT
kotlin.collections.ArraysKt___ArraysKt: char random(char[],kotlin.random.Random)
androidx.slidingpanelayout.R$dimen: int compat_button_inset_vertical_material
dagger.android.support.R$drawable: int notification_bg_normal_pressed
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.channels.Channel getChannel()
androidx.versionedparcelable.VersionedParcel: android.os.Bundle readBundle(android.os.Bundle,int)
androidx.core.widget.NestedScrollView: android.os.Parcelable onSaveInstanceState()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$any$3: ChannelsKt__Channels_commonKt$any$3(kotlin.coroutines.Continuation)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int horizontalChainStyle
com.google.gson.JsonArray: java.util.Iterator iterator()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_TRACKBALL
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[])
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: boolean isEmpty()
io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable: MaybeFlatMapCompletable(io.reactivex.MaybeSource,io.reactivex.functions.Function)
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: io.reactivex.observers.BaseTestConsumer$TestWaitStrategy YIELD
dagger.android.support.R$dimen: int hint_pressed_alpha_material_light
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate: void subscribeActual(io.reactivex.Observer)
android.support.v4.media.session.IMediaSession: void prepareFromSearch(java.lang.String,android.os.Bundle)
androidx.coordinatorlayout.R$dimen: int notification_action_text_size
androidx.constraintlayout.solver.widgets.ConstraintAnchor: int getPriorityLevel()
androidx.customview.R$id: int right_side
kotlinx.coroutines.CompletableDeferred$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.CompletableDeferred,kotlinx.coroutines.Job)
kotlinx.coroutines.channels.AbstractChannel$onReceive$1: void registerSelectClause1(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2)
androidx.swiperefreshlayout.R$id: int action_image
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,java.lang.Object)
androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$1: void onTransitionPause(android.transition.Transition)
androidx.interpolator.view.animation.FastOutSlowInInterpolator: FastOutSlowInInterpolator()
androidx.appcompat.graphics.drawable.DrawableWrapper: DrawableWrapper(android.graphics.drawable.Drawable)
kotlin.collections.IndexingIterator: kotlin.collections.IndexedValue next()
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver$ConcatMapSingleObserver: long serialVersionUID
io.reactivex.MaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$TabListener getCallback()
com.example.revolut.rates.R$styleable: int ConstraintSet_android_rotation
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int DEFAULT
kotlin.collections.CollectionsKt___CollectionsKt: kotlin.collections.Grouping groupingBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.core.ktx.R$id: int action_container
androidx.fragment.app.FragmentContainer: android.view.View onFindViewById(int)
kotlinx.coroutines.internal.LockFreeMPMCQueue: kotlinx.coroutines.internal.LockFreeMPMCQueueNode getHeadValue$kotlinx_coroutines_core()
kotlin.collections.CollectionsKt___CollectionsKt: CollectionsKt___CollectionsKt()
androidx.core.app.NotificationCompat: java.lang.String EXTRA_COMPACT_ACTIONS
androidx.cursoradapter.widget.CursorAdapter: android.widget.FilterQueryProvider mFilterQueryProvider
androidx.databinding.DataBinderMapperImpl
androidx.databinding.ObservableField
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: ConstraintLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.ActionBar: boolean onMenuKeyEvent(android.view.KeyEvent)
androidx.core.R$styleable: int FontFamilyFont_fontWeight
kotlin.sequences.SequencesKt___SequencesJvmKt: java.util.SortedSet toSortedSet(kotlin.sequences.Sequence,java.util.Comparator)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException(java.lang.String)
kotlinx.coroutines.EventLoopKt
kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1: java.util.Iterator iterator()
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constrainedHeight
androidx.swiperefreshlayout.R$attr: int font
com.example.revolut.rates.data.repository.CurrenciesRepository: com.example.revolut.rates.data.RatesApi getRatesApi()
dagger.android.AndroidMemorySensitiveReferenceManager_Factory: dagger.android.AndroidMemorySensitiveReferenceManager get()
androidx.core.transition.TransitionKt$addListener$1: androidx.core.transition.TransitionKt$addListener$1 INSTANCE
android.support.v4.media.MediaBrowserCompat: void unsubscribe(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(int,int)
com.jakewharton.rxbinding3.core.R$drawable: int notification_bg_low_normal
com.google.gson.internal.bind.util.ISO8601Utils: java.lang.String format(java.util.Date,boolean)
dagger.internal.ReferenceReleasingProviderManager$Operation: dagger.internal.ReferenceReleasingProviderManager$Operation valueOf(java.lang.String)
com.example.revolut.rates.R$attr: int lineHeight
androidx.appcompat.view.SupportActionModeWrapper: void setTitle(java.lang.CharSequence)
androidx.core.widget.NestedScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
androidx.databinding.ObservableFloat: ObservableFloat(androidx.databinding.Observable[])
retrofit2.http.PartMap: java.lang.String encoding()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void onAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
io.reactivex.internal.operators.maybe.MaybeMaterialize: MaybeMaterialize(io.reactivex.Maybe)
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL
dagger.android.support.R$string: int abc_capital_on
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback: MediaBrowserCompat$SubscriptionCallback()
androidx.appcompat.graphics.drawable.StateListDrawable: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
io.reactivex.Observable: io.reactivex.Observable skipLast(int)
com.example.revolut.rates.R$color: int primary_material_light
androidx.constraintlayout.widget.Placeholder: int getEmptyVisibility()
io.reactivex.internal.operators.completable.CompletableFromPublisher: CompletableFromPublisher(org.reactivestreams.Publisher)
io.reactivex.observers.TestObserver: io.reactivex.observers.BaseTestConsumer assertNotSubscribed()
androidx.versionedparcelable.VersionedParcel: void writeParcelable(android.os.Parcelable)
com.example.revolut.rates.R$styleable: int GradientColor_android_startColor
androidx.databinding.adapters.AutoCompleteTextViewBindingAdapter$FixText: java.lang.CharSequence fixText(java.lang.CharSequence)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode getOriginalNext()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$count$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(byte,long)
androidx.core.content.MimeTypeFilter: java.lang.String matches(java.lang.String[],java.lang.String)
kotlin.jvm.internal.DoubleSpreadBuilder: double[] toArray()
dagger.android.support.R$color: int abc_input_method_navigation_guard
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment TOP
androidx.core.util.SparseIntArrayKt
androidx.appcompat.R$string: int abc_capital_on
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLEAR_FOCUS
androidx.core.view.ViewCompat: boolean isKeyboardNavigationCluster(android.view.View)
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,androidx.core.util.Pair[])
androidx.loader.R$styleable: int GradientColor_android_centerY
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(double[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$dimen: int notification_large_icon_height
com.example.revolut.rates.data.repository.CurrenciesRepository: com.example.revolut.rates.data.RatesApi ratesApi
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int END
androidx.viewpager.widget.ViewPager$OnAdapterChangeListener: void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter)
androidx.core.ktx.R$styleable: int FontFamilyFont_ttcIndex
androidx.appcompat.widget.ActivityChooserModel$ActivityChooserModelClient: void setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: RecyclerView$ItemAnimator()
kotlin.collections.CollectionsKt___CollectionsKt: int sumBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.appcompat.R$attr: int multiChoiceItemLayout
io.reactivex.internal.operators.flowable.FlowableSubscribeOn: FlowableSubscribeOn(io.reactivex.Flowable,io.reactivex.Scheduler,boolean)
io.reactivex.Observable: io.reactivex.Observable switchMapMaybeDelayError(io.reactivex.functions.Function)
com.example.revolut.rates.R$style: int Base_ThemeOverlay_AppCompat_Dialog
kotlinx.coroutines.Cancelling
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder scale(android.text.SpannableStringBuilder,float,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxWith(java.lang.Object[],java.util.Comparator)
androidx.recyclerview.widget.SnapHelper: SnapHelper()
org.intellij.lang.annotations.Pattern: java.lang.String value()
okio.BufferedSource: long readLong()
io.reactivex.MaybeSource: void subscribe(io.reactivex.MaybeObserver)
androidx.annotation.FontRes
okhttp3.EventListener: void dnsEnd(okhttp3.Call,java.lang.String,java.util.List)
com.example.revolut.rates.R$styleable: int ConstraintSet_android_translationY
androidx.core.view.ViewGroupKt$children$1: java.util.Iterator iterator()
androidx.core.view.ActionProvider$VisibilityListener
okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)
androidx.appcompat.widget.Toolbar: boolean hasExpandedActionView()
androidx.appcompat.R$string: int abc_font_family_headline_material
kotlinx.coroutines.CancellableContinuation: void invokeOnCancellation(kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat: int PRIORITY_DEFAULT
androidx.appcompat.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
dagger.android.support.R$drawable: int abc_ic_star_half_black_16dp
io.reactivex.disposables.Disposables
io.reactivex.Maybe: io.reactivex.Maybe fromFuture(java.util.concurrent.Future)
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe: void subscribeActual(io.reactivex.Observer)
androidx.constraintlayout.widget.R$attr: int layout_editor_absoluteX
com.example.revolut.rates.R$styleable: int Toolbar_logoDescription
okhttp3.Interceptor
androidx.appcompat.widget.AppCompatSpinner: void onDetachedFromWindow()
io.reactivex.observers.DisposableSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.view.menu.BaseMenuPresenter
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object first(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setBaselineDistance(int)
com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent: int component4()
okio.ByteString: okio.ByteString substring(int)
dagger.android.support.R$styleable: int[] CompoundButton
androidx.core.R$id: int text2
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(char[])
androidx.constraintlayout.widget.ConstraintSet: void constrainDefaultHeight(int,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence getTitle()
io.reactivex.Flowable: io.reactivex.Flowable timestamp(java.util.concurrent.TimeUnit)
androidx.constraintlayout.solver.GoalRow: void addError(androidx.constraintlayout.solver.SolverVariable)
kotlin.jvm.internal.MagicApiIntrinsics: java.lang.Object anyMagicApiCall(int,long,long,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableAll: ObservableAll(io.reactivex.ObservableSource,io.reactivex.functions.Predicate)
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(int[],kotlin.jvm.functions.Function1)
kotlin.collections.AbstractMutableMap: int size()
androidx.viewpager.widget.PagerTitleStrip: int getTextSpacing()
androidx.appcompat.view.menu.MenuItemWrapperICS: int getOrder()
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_gradientRadius
io.reactivex.internal.util.VolatileSizeArrayList: int hashCode()
androidx.appcompat.R$color: int material_grey_100
androidx.databinding.adapters.ViewBindingAdapter: void setPaddingEnd(android.view.View,float)
kotlin.sequences.SequencesKt___SequencesKt: double sumByDouble(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.customview.R
androidx.appcompat.widget.AbsActionBarView: int measureChildView(android.view.View,int,int,int)
androidx.appcompat.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
io.reactivex.internal.observers.InnerQueuedObserver: boolean isDone()
io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,org.reactivestreams.Publisher)
io.reactivex.internal.util.ObservableQueueDrain: void accept(io.reactivex.Observer,java.lang.Object)
android.support.v4.media.session.MediaSessionCompat$Callback: void onRemoveQueueItemAt(int)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(byte[])
androidx.appcompat.app.WindowDecorActionBar$TabImpl: android.graphics.drawable.Drawable getIcon()
io.reactivex.internal.operators.observable.ObservableBufferTimed: ObservableBufferTimed(io.reactivex.ObservableSource,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,java.util.concurrent.Callable,int,boolean)
com.example.revolut.rates.R$style: int TextAppearance_Compat_Notification_Info
kotlin.reflect.KFunction: boolean isInfix()
com.example.revolut.rates.R$styleable: int Toolbar_subtitle
androidx.core.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View,int)
com.example.revolut.rates.base.BaseViewModel: void setNotifier(java.lang.ref.WeakReference)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List filterNot(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.core.ktx.R$attr: int fontProviderFetchTimeout
androidx.core.widget.NestedScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
kotlin.text.Typography: char prime
androidx.appcompat.R$styleable: int Toolbar_title
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
kotlin.jvm.internal.PropertyReference0: kotlin.reflect.KProperty0$Getter getGetter()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2
androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
io.reactivex.internal.operators.flowable.FlowableDoFinally: void subscribeActual(org.reactivestreams.Subscriber)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: ConstraintWidgetContainer()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(byte[],kotlin.jvm.functions.Function1)
androidx.appcompat.app.ActionBar: void setElevation(float)
androidx.appcompat.widget.Toolbar: void setSubtitleTextAppearance(android.content.Context,int)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintTop_toTopOf
kotlin.collections.UArraysKt: kotlin.UInt[] toTypedArray--ajY-9A(int[])
androidx.lifecycle.MethodCallsLogger: MethodCallsLogger()
kotlin.jvm.internal.Ref$LongRef: long element
kotlin.sequences.TakeWhileSequence$iterator$1: void setNextState(int)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Integer toIntOrNull(java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(long[],int,int,int,java.lang.Object)
androidx.loader.R$id: int text
okio.Buffer$UnsafeCursor: int seek(long)
io.reactivex.internal.observers.BasicIntQueueDisposable: boolean offer(java.lang.Object,java.lang.Object)
dagger.android.support.R$color: int primary_dark_material_dark
androidx.lifecycle.process.R
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setAlpha(int)
io.reactivex.subjects.ReplaySubject$UnboundedReplayBuffer: long serialVersionUID
io.reactivex.internal.operators.observable.ObserverResourceWrapper: long serialVersionUID
kotlin.KotlinNullPointerException: KotlinNullPointerException(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable window(io.reactivex.ObservableSource,int)
androidx.recyclerview.widget.SortedListAdapterCallback: void onRemoved(int,int)
com.example.revolut.rates.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
com.example.revolut.rates.R$styleable: int MenuItem_android_enabled
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isScrollable()
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableReduce$ReduceSubscriber: long serialVersionUID
com.google.gson.JsonObject: boolean equals(java.lang.Object)
kotlin.collections.EmptySet: boolean equals(java.lang.Object)
kotlin.ranges.ULongRange: kotlin.ULong getStart()
com.google.gson.Gson: com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type)
io.reactivex.internal.operators.observable.ObservableAll
androidx.appcompat.R$style: int Widget_AppCompat_Light_ListView_DropDown
androidx.recyclerview.widget.GridLayoutManager
io.reactivex.subscribers.TestSubscriber: io.reactivex.subscribers.TestSubscriber assertSubscribed()
androidx.appcompat.widget.PopupMenu$OnDismissListener: void onDismiss(androidx.appcompat.widget.PopupMenu)
androidx.appcompat.widget.ActionMenuView: void onDetachedFromWindow()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(byte[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List mapNotNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type TOP
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.versionedparcelable.VersionedParcel: byte[] readByteArray()
kotlin.UIntArray: boolean equals(java.lang.Object)
androidx.core.ktx.R$dimen: int notification_large_icon_height
androidx.appcompat.app.WindowDecorActionBar: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
io.reactivex.internal.functions.Functions: io.reactivex.functions.Function toFunction(io.reactivex.functions.BiFunction)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean canScrollVertically()
io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit,boolean)
androidx.coordinatorlayout.R$drawable
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber$OtherSubscriber: long serialVersionUID
androidx.constraintlayout.solver.widgets.ChainHead: java.util.ArrayList mWeightedMatchConstraintsWidgets
dagger.android.support.R$drawable: int abc_dialog_material_background
androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener
android.support.v4.media.MediaMetadataCompat: int describeContents()
dagger.android.support.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
kotlin.io.ConsoleKt: java.lang.String readLine()
com.example.revolut.rates.R$id: R$id()
kotlinx.coroutines.ResumeModeKt: void resumeWithExceptionMode(kotlin.coroutines.Continuation,java.lang.Throwable,int)
androidx.appcompat.R$attr: int tickMarkTint
com.example.revolut.rates.R$string: int abc_searchview_description_query
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)
io.reactivex.internal.util.LinkedArrayList: java.lang.String toString()
com.example.revolut.rates.R$styleable: int SearchView_android_maxWidth
kotlinx.coroutines.AbstractContinuation: boolean cancel(java.lang.Throwable)
dagger.android.support.R$style: int Widget_AppCompat_DropDownItem_Spinner
android.support.v4.media.MediaMetadataCompat: android.graphics.Bitmap getBitmap(java.lang.String)
kotlin.jvm.internal.MutablePropertyReference1Impl: java.lang.String getSignature()
kotlin.collections.ArraysKt___ArraysKt: double single(double[],kotlin.jvm.functions.Function1)
kotlin.text.Regex$Serialized
androidx.core.provider.FontsContractCompat$FontFamilyResult: int STATUS_OK
kotlin.collections.EmptyIterator: java.lang.Object previous()
kotlin.collections.ArraysKt___ArraysKt: boolean all(double[],kotlin.jvm.functions.Function1)
okhttp3.Headers: java.util.Map toMultimap()
okhttp3.Headers$Builder: okhttp3.Headers build()
io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,boolean,int)
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
io.reactivex.internal.operators.single.SingleDoOnTerminate: SingleDoOnTerminate(io.reactivex.SingleSource,io.reactivex.functions.Action)
com.jakewharton.rxbinding3.view.MenuItemActionViewEvent: android.view.MenuItem getMenuItem()
kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed CLOSED
kotlin.collections.SetsKt___SetsKt: java.util.Set minus(java.util.Set,java.lang.Iterable)
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorPauseListener addPauseListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams()
kotlin.jvm.internal.markers.KMutableIterable
androidx.appcompat.R$styleable: int PopupWindow_overlapAnchor
kotlin.WasExperimental: java.lang.Class[] markerClass()
dagger.android.support.R$styleable: int AppCompatTheme_windowNoTitle
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$BooleanRunnable: long serialVersionUID
kotlin.io.FileTreeWalk$FileTreeWalkIterator$WhenMappings: int[] $EnumSwitchMapping$0
androidx.core.view.ViewCompat: int getWindowSystemUiVisibility(android.view.View)
kotlinx.coroutines.DispatchersKt
io.reactivex.Maybe: io.reactivex.Flowable concatArrayDelayError(io.reactivex.MaybeSource[])
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShortcut(char,char)
io.reactivex.internal.operators.flowable.FlowableReduceWithSingle
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder DEFAULT
androidx.constraintlayout.widget.Barrier: int BOTTOM
androidx.asynclayoutinflater.R$drawable
androidx.viewpager.widget.PagerAdapter: java.lang.CharSequence getPageTitle(int)
com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent: java.lang.String toString()
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setPadding(int)
androidx.core.view.MenuItemCompat: android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider)
io.reactivex.Completable: io.reactivex.Completable onErrorResumeNext(io.reactivex.functions.Function)
io.reactivex.Flowable: io.reactivex.Single reduceWith(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)
androidx.core.widget.NestedScrollView$OnScrollChangeListener: void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)
kotlinx.coroutines.internal.LockFreeMPSCQueueCore: LockFreeMPSCQueueCore(int)
kotlin.text.StringsKt___StringsKt: java.lang.Character min(java.lang.CharSequence)
io.reactivex.Maybe: io.reactivex.Maybe hide()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] copyInto(boolean[],boolean[],int,int,int)
androidx.fragment.R$color: int notification_icon_bg_color
androidx.media.MediaBrowserServiceCompat: void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompat$Result)
androidx.lifecycle.ProcessLifecycleOwnerInitializer: java.lang.String getType(android.net.Uri)
okhttp3.MultipartBody$Builder: MultipartBody$Builder()
org.intellij.lang.annotations.JdkConstants$TitledBorderJustification
kotlinx.coroutines.JobSupport: void cancelChildren(java.lang.Throwable)
com.example.revolut.rates.R$dimen: int abc_dialog_fixed_height_major
kotlin.ranges.RangesKt__RangesKt: kotlin.ranges.ClosedFloatingPointRange rangeTo(double,double)
android.support.v4.media.session.ParcelableVolumeInfo: ParcelableVolumeInfo(int,int,int,int,int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength)
kotlin.Triple: Triple(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.Deprecated: kotlin.ReplaceWith replaceWith()
com.example.revolut.rates.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
io.reactivex.schedulers.TestScheduler: TestScheduler()
retrofit2.http.DELETE: java.lang.String value()
androidx.core.content.res.FontResourcesParserCompat: int FETCH_STRATEGY_ASYNC
kotlinx.coroutines.channels.AbstractChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor mFontFamilyCtor
kotlin.text.MatchGroup: java.lang.String toString()
io.reactivex.internal.disposables.CancellableDisposable: CancellableDisposable(io.reactivex.functions.Cancellable)
androidx.appcompat.widget.ActionMenuView$LayoutParams: int cellsUsed
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker
com.google.gson.JsonArray: int hashCode()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintDimensionRatio
com.google.gson.internal.LinkedTreeMap: java.util.Set entrySet()
io.reactivex.internal.operators.observable.ObservableDefer: ObservableDefer(java.util.concurrent.Callable)
androidx.appcompat.widget.MenuPopupWindow: void setEnterTransition(java.lang.Object)
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPES_ALL_MASK
androidx.fragment.app.FragmentTransitionImpl: void setEpicenter(java.lang.Object,android.graphics.Rect)
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver: long serialVersionUID
io.reactivex.internal.util.QueueDrainHelper: void request(org.reactivestreams.Subscription,int)
com.example.revolut.rates.R$dimen: int currency_rv_margin_top
androidx.appcompat.app.ActionBar: void setSubtitle(java.lang.CharSequence)
kotlin.io.FilesKt__UtilsKt: java.io.File resolveSibling(java.io.File,java.io.File)
androidx.customview.widget.ViewDragHelper: float getMinVelocity()
kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1
androidx.versionedparcelable.VersionedParcel: void closeField()
androidx.customview.widget.ExploreByTouchHelper: int getAccessibilityFocusedVirtualViewId()
dagger.android.support.R$id: int action0
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong min-QwZRm1k(long[])
com.example.revolut.rates.R$color: int abc_search_url_text_pressed
io.reactivex.observers.ResourceCompletableObserver: ResourceCompletableObserver()
androidx.media.R$styleable: int FontFamilyFont_fontVariationSettings
dagger.android.support.R$styleable: int SearchView_closeIcon
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBefore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.jakewharton.rxbinding3.widget.SeekBarStartChangeEvent: java.lang.String toString()
androidx.legacy.v4.R$layout: int notification_media_cancel_action
io.reactivex.internal.operators.completable.CompletableCache: CompletableCache(io.reactivex.CompletableSource)
androidx.legacy.v4.R$color: int notification_action_color_filter
okhttp3.Headers: okhttp3.Headers$Builder newBuilder()
kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String,java.lang.String)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean isAutoMeasureEnabled()
androidx.swiperefreshlayout.R$styleable: int[] GradientColor
kotlin.text.StringsKt___StringsKt: char first(java.lang.CharSequence)
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_STATUS
kotlin.jvm.internal.ByteSpreadBuilder: void add(byte)
androidx.core.util.LruCacheKt$lruCache$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: long serialVersionUID
kotlin.text.Typography: char times
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: RecyclerView$SmoothScroller$Action(int,int,int)
io.reactivex.Completable: io.reactivex.Completable concatWith(io.reactivex.CompletableSource)
kotlin.collections.AbstractList: int getSize()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()
dagger.android.support.R$layout: int abc_screen_content_include
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values()
androidx.appcompat.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
okhttp3.CacheControl: okhttp3.CacheControl FORCE_NETWORK
io.reactivex.functions.Function9: java.lang.Object apply(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabelFor(android.view.View)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertFailure(java.lang.Class,java.lang.Object[])
io.reactivex.processors.BehaviorProcessor: boolean hasValue()
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mPeople
kotlinx.coroutines.scheduling.TimeSource: long nanoTime()
io.reactivex.internal.subscribers.QueueDrainSubscriber: io.reactivex.internal.fuseable.SimplePlainQueue queue
com.jakewharton.rxbinding3.core.R$styleable: int GradientColor_android_endColor
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
androidx.appcompat.R$color: int material_grey_850
androidx.coordinatorlayout.R$integer
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int)
androidx.core.os.HandlerKt$postAtTime$runnable$1: HandlerKt$postAtTime$runnable$1(kotlin.jvm.functions.Function0)
androidx.databinding.ListChangeRegistry: void notifyInserted(androidx.databinding.ObservableList,int,int)
io.reactivex.internal.operators.observable.ObservableAnySingle: void subscribeActual(io.reactivex.SingleObserver)
dagger.android.support.R$styleable: int MenuGroup_android_orderInCategory
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence padEnd(java.lang.CharSequence,int,char)
kotlin.io.FilesKt__UtilsKt: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_XSMALL
kotlin.ranges.RangesKt___RangesKt: java.lang.Long toLongExactOrNull(float)
androidx.appcompat.view.menu.BaseMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.example.revolut.rates.R$styleable: int AppCompatTextHelper_android_drawableTop
androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
androidx.slidingpanelayout.R$styleable: int GradientColor_android_startColor
io.reactivex.internal.operators.completable.CompletableDelay$Delay: long serialVersionUID
androidx.appcompat.widget.AppCompatButton
androidx.appcompat.R$dimen: int abc_edit_text_inset_horizontal_material
androidx.lifecycle.extensions.R$id: int top
androidx.core.animation.AnimatorKt$doOnRepeat$$inlined$addListener$1: AnimatorKt$doOnRepeat$$inlined$addListener$1(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(long[])
kotlinx.coroutines.internal.AnnotationsKt: void JvmName$annotations()
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException(java.lang.String)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$last$3: java.lang.Object invokeSuspend(java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable throttleLatest(long,java.util.concurrent.TimeUnit,boolean)
kotlin.jvm.internal.MutablePropertyReference0Impl: java.lang.Object get()
io.reactivex.Flowable: io.reactivex.Flowable retry()
android.support.v4.media.session.MediaSessionCompat$Callback: void onPrepareFromUri(android.net.Uri,android.os.Bundle)
androidx.drawerlayout.R$dimen: int notification_big_circle_margin
com.example.revolut.rates.data.repository.CurrenciesRepository_MembersInjector: CurrenciesRepository_MembersInjector(javax.inject.Provider)
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther
androidx.core.util.AtomicFileKt: void writeText(android.util.AtomicFile,java.lang.String,java.nio.charset.Charset)
okhttp3.Cache: void flush()
androidx.appcompat.R$attr: int homeLayout
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler)
kotlinx.coroutines.sync.MutexKt: java.lang.Object withMutex(kotlinx.coroutines.sync.Mutex,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel zip$default(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.appcompat.R$drawable: int abc_ab_share_pack_mtrl_alpha
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: AbsActionBarView$VisibilityAnimListener(androidx.appcompat.widget.AbsActionBarView)
androidx.databinding.ObservableShort: long serialVersionUID
androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int)
kotlinx.coroutines.sync.Mutex: kotlinx.coroutines.selects.SelectClause2 getOnLock()
androidx.fragment.app.FragmentActivity: void onBackPressed()
androidx.core.util.LongSparseArrayKt$valueIterator$1: java.lang.Object next()
androidx.loader.R$styleable: int FontFamily_fontProviderCerts
com.example.revolut.rates.R$style: int Theme_AppCompat_Dialog_MinWidth
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLICK
kotlin.collections.ArraysKt___ArraysKt: boolean any(boolean[])
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TEMPLATE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_ON_SCREEN
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter INTEGER
io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function,boolean)
androidx.appcompat.widget.ScrollingTabContainerView: void onConfigurationChanged(android.content.res.Configuration)
com.example.revolut.rates.R$attr: int srcCompat
androidx.databinding.adapters.AbsSeekBarBindingAdapter
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass createKotlinClass(java.lang.Class)
com.google.gson.internal.bind.JsonTreeReader: java.lang.String toString()
kotlin.Lazy
kotlin.io.CloseableKt
dagger.android.support.R$string: int abc_font_family_body_1_material
com.jakewharton.rxbinding3.widget.AdapterViewItemLongClickEvent: int component3()
io.reactivex.internal.operators.maybe.MaybeUnsafeCreate: MaybeUnsafeCreate(io.reactivex.MaybeSource)
dagger.android.support.R$layout: int support_simple_spinner_dropdown_item
androidx.appcompat.graphics.drawable.DrawableWrapper: void draw(android.graphics.Canvas)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean constrainedWidth
androidx.asynclayoutinflater.R$style: int TextAppearance_Compat_Notification
io.reactivex.internal.operators.flowable.BlockingFlowableIterable: java.util.Iterator iterator()
androidx.asynclayoutinflater.R$id: int actions
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable: void subscribeActual(io.reactivex.CompletableObserver)
okhttp3.internal.cache.DiskLruCache: void close()
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater()
okhttp3.Cookie: boolean persistent()
io.reactivex.internal.operators.single.SingleResumeNext: void subscribeActual(io.reactivex.SingleObserver)
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback: void onError(java.lang.String)
androidx.core.util.Pools$SynchronizedPool: java.lang.Object acquire()
com.example.revolut.rates.view.adapter.CurrenciesAdapter: void onBindViewHolder(com.example.revolut.rates.view.adapter.CurrenciesAdapter$CurrenciesViewHolder,int)
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality valueOf(java.lang.String)
okhttp3.EventListener: void responseHeadersStart(okhttp3.Call)
kotlin.text.StringsKt___StringsKt: java.util.List zipWithNext(java.lang.CharSequence)
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setNumericShortcut(char,int)
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$2: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$2(kotlin.coroutines.experimental.Continuation,kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.experimental.Continuation)
kotlinx.coroutines.CoroutineScopeKt
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()
kotlin.ULong$Companion
androidx.core.animation.AnimatorKt$addPauseListener$2: java.lang.Object invoke(java.lang.Object)
android.support.v4.media.session.IMediaSession: void prepare()
com.jakewharton.rxbinding3.widget.SeekBarProgressChangeEvent: int hashCode()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: int lastIndexOf(java.lang.Object)
dagger.android.support.R$attr: int editTextBackground
io.reactivex.internal.operators.flowable.BlockingFlowableLatest
dagger.android.support.R$style: int Base_Theme_AppCompat_Dialog_Alert
io.reactivex.internal.observers.InnerQueuedObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setChangingConfigurations(int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
kotlin.reflect.KProperty$DefaultImpls: void isConst$annotations()
androidx.core.internal.view.SupportMenuItem: boolean isActionViewExpanded()
androidx.appcompat.R$dimen: int compat_button_padding_horizontal_material
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachAndScrapViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type CONSTANT
androidx.vectordrawable.R$attr: int layout_behavior
io.reactivex.subjects.BehaviorSubject: void onError(java.lang.Throwable)
androidx.vectordrawable.R$dimen: int notification_subtext_size
androidx.appcompat.R$id: int expanded_menu
com.google.gson.internal.$Gson$Types: java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type)
androidx.core.view.inputmethod.EditorInfoCompat
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerVisible(android.view.View)
okio.Okio: okio.Sink blackhole()
com.jakewharton.rxbinding3.view.MenuItemActionViewExpandEvent: com.jakewharton.rxbinding3.view.MenuItemActionViewExpandEvent copy$default(com.jakewharton.rxbinding3.view.MenuItemActionViewExpandEvent,android.view.MenuItem,int,java.lang.Object)
androidx.core.view.ViewParentCompat: void onStopNestedScroll(android.view.ViewParent,android.view.View)
androidx.core.R$styleable: int GradientColor_android_centerY
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertError(java.lang.Class)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(char[],kotlin.jvm.functions.Function1)
androidx.core.provider.SelfDestructiveThread
androidx.appcompat.R$styleable: int GradientColor_android_centerColor
io.reactivex.internal.operators.flowable.FlowableAutoConnect: void subscribeActual(org.reactivestreams.Subscriber)
android.support.v4.media.MediaDescriptionCompat$Builder
androidx.appcompat.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
androidx.appcompat.view.ActionBarPolicy: boolean enableHomeButtonByDefault()
androidx.viewpager.widget.PagerTitleStrip: void setSingleLineAllCaps(android.widget.TextView)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: android.graphics.Paint$Cap getStrokeCap()
androidx.recyclerview.widget.GridLayoutManager: boolean supportsPredictiveItemAnimations()
io.reactivex.internal.operators.observable.ObservableTakeLastTimed: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.R$dimen: int tooltip_margin
androidx.core.R$id: int async
androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$1: TransitionKt$doOnPause$$inlined$addListener$1(kotlin.jvm.functions.Function1)
okhttp3.internal.Util: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)
com.example.revolut.rates.R$styleable: int[] ActivityChooserView
kotlinx.coroutines.AbstractContinuationKt: kotlinx.coroutines.Active access$getACTIVE$p()
io.reactivex.Observable: io.reactivex.Observable takeLast(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.example.revolut.rates.R$attr: int font
kotlin.ranges.UIntRange
dagger.android.support.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
androidx.recyclerview.widget.LinearLayoutManager: int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
io.reactivex.Flowable: io.reactivex.parallel.ParallelFlowable parallel()
androidx.appcompat.R$dimen
dagger.android.DaggerFragment: DaggerFragment()
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: long serialVersionUID
androidx.loader.content.Loader: boolean isStarted()
androidx.viewpager.R$style: int TextAppearance_Compat_Notification_Line2
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_ACCESSIBILITY_OVERLAY
androidx.core.view.AccessibilityDelegateCompat: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort[] toTypedArray-rL5Bavg(short[])
androidx.appcompat.R$color: int abc_search_url_text_selected
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_PREPARE_FROM_URI
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function getScheduleHandler()
androidx.core.util.Pair: boolean equals(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableObserveOn
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(char[],int)
com.example.revolut.rates.R$styleable: int[] ViewStubCompat
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber: long serialVersionUID
dagger.android.support.R$attr: int windowActionBarOverlay
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toList(java.lang.Iterable)
androidx.lifecycle.extensions.R$attr: int layout_insetEdge
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double min(java.lang.Double[])
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewAddEvent: boolean equals(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableMaterialize$MaterializeSubscriber: long serialVersionUID
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int)
io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource)
io.reactivex.internal.subscribers.InnerQueuedSubscriber: void requestOne()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIntent(android.content.Intent)
io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver: long serialVersionUID
kotlinx.coroutines.EventLoopBase
com.example.revolut.rates.R$attr: int layout_constraintBaseline_creator
androidx.databinding.adapters.TabHostBindingAdapter
io.reactivex.Maybe: io.reactivex.Maybe defaultIfEmpty(java.lang.Object)
androidx.appcompat.R$id: int tag_transition_group
io.reactivex.Observable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
androidx.core.view.MotionEventCompat: int AXIS_WHEEL
androidx.recyclerview.R$dimen: int notification_right_side_padding_top
androidx.loader.R$drawable: int notification_tile_bg
androidx.customview.view.AbsSavedState: androidx.customview.view.AbsSavedState EMPTY_STATE
kotlin.concurrent.TimersKt: java.util.Timer timer(java.lang.String,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(boolean[],java.lang.Iterable)
io.reactivex.Flowable: io.reactivex.Flowable mergeWith(io.reactivex.SingleSource)
androidx.appcompat.widget.ScrollingTabContainerView: void onDetachedFromWindow()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
io.reactivex.internal.observers.CallbackCompletableObserver: void dispose()
io.reactivex.subscribers.TestSubscriber: void cancel()
kotlin.jvm.internal.MagicApiIntrinsics: MagicApiIntrinsics()
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
io.reactivex.SingleSource: void subscribe(io.reactivex.SingleObserver)
android.support.v4.media.session.IMediaSession: android.app.PendingIntent getLaunchPendingIntent()
androidx.appcompat.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo
androidx.fragment.app.FragmentHostCallback: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)
com.example.revolut.rates.R$styleable: int RecyclerView_android_orientation
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.databinding.ViewDataBinding: int getColorFromResource(android.view.View,int)
com.google.gson.JsonParseException: JsonParseException(java.lang.String,java.lang.Throwable)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setContentDescription(int)
kotlinx.coroutines.ResumeModeKt: void MODE_CANCELLABLE$annotations()
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher
dagger.android.support.FragmentKey: java.lang.Class value()
androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry
android.support.v4.media.session.PlaybackStateCompat$CustomAction: int getIcon()
kotlin.io.FilePathComponents: kotlin.io.FilePathComponents copy(java.io.File,java.util.List)
android.support.v4.media.MediaBrowserCompat$MediaItem: MediaBrowserCompat$MediaItem(android.support.v4.media.MediaDescriptionCompat,int)
kotlinx.coroutines.channels.TickerMode: kotlinx.coroutines.channels.TickerMode[] values()
kotlin.internal.RequireKotlinVersionKind: kotlin.internal.RequireKotlinVersionKind valueOf(java.lang.String)
androidx.core.database.DatabaseUtilsCompat
androidx.appcompat.view.menu.ShowableListMenu: void show()
android.support.v4.media.session.IMediaSession: java.lang.String getTag()
kotlin.comparisons.ComparisonsKt___ComparisonsKt: java.lang.Object maxOf(java.lang.Object,java.lang.Object,java.util.Comparator)
androidx.appcompat.R$drawable: int abc_spinner_mtrl_am_alpha
androidx.constraintlayout.solver.widgets.ConstraintWidget: int mX
androidx.customview.R$drawable: int notification_bg
okhttp3.internal.http.StatusLine
androidx.appcompat.app.ActionBar: void setHomeActionContentDescription(int)
androidx.annotation.AnimatorRes
kotlin.collections.ArraysKt___ArraysKt: boolean reduceIndexed(boolean[],kotlin.jvm.functions.Function3)
okhttp3.internal.http1.Http1Codec: okio.Source newChunkedSource(okhttp3.HttpUrl)
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewRemoveEvent: android.view.ViewGroup getView()
androidx.appcompat.R$styleable: int MenuGroup_android_enabled
androidx.fragment.app.Fragment: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservableFromIterable
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLast-qFRl0hI(int[],int)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
androidx.recyclerview.R$id: int item_touch_helper_previous_elevation
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
dagger.android.support.R$attr: int textAppearanceListItemSmall
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PROTECTED
kotlin.coroutines.experimental.SafeContinuation: SafeContinuation(kotlin.coroutines.experimental.Continuation)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getSpanCount()
io.reactivex.internal.operators.single.SingleDelay: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.app.WindowDecorActionBar: void removeAllTabs()
androidx.core.app.NotificationCompatSideChannelService: NotificationCompatSideChannelService()
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Headline
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$firstOrNull$3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollExtent()
android.support.v4.media.session.PlaybackStateCompat$CustomAction: java.lang.String toString()
kotlin.text.UStringsKt: java.lang.String toString-LxnNnR4(byte,int)
kotlinx.coroutines.internal.LockFreeLinkedListHead: void validate$kotlinx_coroutines_core()
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter endObject()
androidx.slidingpanelayout.widget.SlidingPaneLayout: SlidingPaneLayout(android.content.Context)
androidx.core.content.res.FontResourcesParserCompat: int FETCH_STRATEGY_BLOCKING
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeCopyDrawable
androidx.core.app.NotificationCompat$Action$WearableExtender: boolean isAvailableOffline()
io.reactivex.internal.schedulers.IoScheduler: long KEEP_ALIVE_TIME_DEFAULT
android.support.v4.media.MediaBrowserCompat$MediaItem: int describeContents()
kotlin.collections.ArraysKt__ArraysJVMKt: ArraysKt__ArraysJVMKt()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapIndexedTo$3
kotlin.io.FileAlreadyExistsException: FileAlreadyExistsException(java.io.File,java.io.File,java.lang.String)
androidx.slidingpanelayout.R$id: int notification_background
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,boolean,int,int)
androidx.appcompat.R$color: int abc_primary_text_disable_only_material_light
androidx.appcompat.R$style: int Base_V7_Widget_AppCompat_EditText
androidx.viewpager.widget.ViewPager: ViewPager(android.content.Context)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
dagger.android.support.R$layout: int notification_template_big_media_narrow_custom
androidx.legacy.v4.R$id: int text
androidx.legacy.v4.R$styleable: int FontFamily_fontProviderFetchTimeout
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5
androidx.viewpager.widget.PagerTitleStrip: void setNonPrimaryAlpha(float)
io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException()
dagger.android.support.R$styleable: int ActionBar_homeAsUpIndicator
androidx.core.app.NotificationCompat$WearableExtender: int getContentAction()
android.support.v4.media.session.IMediaSession: android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
dagger.android.support.R$string: int abc_font_family_display_2_material
androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ResolutionAnchor getResolutionNode()
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1: java.lang.Object keyOf(java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexed(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
io.reactivex.internal.operators.flowable.FlowableReduce
kotlin.ULongArray: java.lang.Object[] toArray(java.lang.Object[])
io.reactivex.Notification: int hashCode()
androidx.lifecycle.ComputableLiveData: ComputableLiveData(java.util.concurrent.Executor)
androidx.legacy.v4.R$dimen: int notification_action_icon_size
androidx.appcompat.widget.AppCompatCheckedTextView: AppCompatCheckedTextView(android.content.Context,android.util.AttributeSet,int)
androidx.asynclayoutinflater.R$styleable: int FontFamily_fontProviderAuthority
androidx.legacy.v4.R$drawable
com.example.revolut.rates.R$attr: int statusBarBackground
dagger.android.support.R$color: int accent_material_light
com.example.revolut.rates.R$attr: int actionProviderClass
kotlin.UShortArray: java.lang.Object[] toArray()
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
androidx.fragment.app.FragmentStatePagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
androidx.loader.R$dimen: int compat_button_padding_horizontal_material
com.example.revolut.rates.R$attr: int actionBarWidgetTheme
androidx.appcompat.R$style: int Base_Widget_AppCompat_ButtonBar
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(int[],int[],kotlin.jvm.functions.Function2)
kotlin.jvm.internal.TypeReference: java.util.List getArguments()
io.reactivex.internal.operators.flowable.FlowableDematerialize: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.collections.ArraysKt___ArraysKt: boolean none(int[])
kotlin.contracts.SimpleEffect
kotlin.collections.IndexedValue: java.lang.Object getValue()
kotlin.sequences.TransformingSequence$iterator$1: boolean hasNext()
com.example.revolut.rates.R$styleable: int MenuView_preserveIconSpacing
androidx.drawerlayout.widget.DrawerLayout: float getDrawerElevation()
io.reactivex.internal.functions.Functions: io.reactivex.functions.Predicate alwaysFalse()
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper: ThemedSpinnerAdapter$Helper(android.content.Context)
kotlinx.coroutines.NonDisposableHandle
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: CoordinatorLayout$SavedState(android.os.Parcel,java.lang.ClassLoader)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintCircleRadius
dagger.android.support.R$attr: int subtitle
com.example.revolut.rates.R$styleable: int[] MenuItem
androidx.loader.R$dimen: int compat_button_inset_horizontal_material
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9
kotlin.KotlinVersion: boolean equals(java.lang.Object)
androidx.databinding.ObservableChar: void set(char)
io.reactivex.Observable: io.reactivex.Observable scan(java.lang.Object,io.reactivex.functions.BiFunction)
kotlin.sequences.SequencesKt___SequencesKt$sorted$1
androidx.core.util.PatternsCompat: java.util.regex.Pattern AUTOLINK_EMAIL_ADDRESS
kotlin.collections.UArraysKt: boolean contentEquals-us8wMrg(long[],long[])
dagger.android.support.R$styleable: int AppCompatTheme_windowMinWidthMinor
kotlin.reflect.KClass: java.lang.Object getObjectInstance()
androidx.appcompat.widget.AppCompatImageView: void drawableStateChanged()
dagger.internal.SetFactory: java.util.Set get()
io.reactivex.observers.ResourceCompletableObserver: void onStart()
androidx.swiperefreshlayout.R$dimen: int notification_large_icon_height
com.jakewharton.rxbinding3.widget.AdapterViewItemLongClickEvent: android.view.View component2()
androidx.databinding.ObservableField: void set(java.lang.Object)
io.reactivex.internal.util.ArrayListSupplier: io.reactivex.internal.util.ArrayListSupplier valueOf(java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: void computeScroll()
okhttp3.internal.tls.BasicCertificateChainCleaner
androidx.vectordrawable.R$id: int notification_main_column_container
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: boolean contains(java.lang.Object)
kotlin.ranges.LongRange: boolean isEmpty()
androidx.core.text.PrecomputedTextCompat: void removeSpan(java.lang.Object)
dagger.internal.ReferenceReleasingProviderManager: void releaseStrongReferences()
kotlin.collections.AbstractList$Companion: void checkElementIndex$kotlin_stdlib(int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalBefore(android.view.View,int)
androidx.appcompat.R$dimen: int abc_action_bar_content_inset_material
okio.ByteString: okio.ByteString md5()
io.reactivex.internal.operators.observable.ObservableReplay$Node: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableCache: void onSubscribe(org.reactivestreams.Subscription)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
androidx.databinding.ObservableArrayList: void add(int,java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder$Callback: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
dagger.android.support.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
io.reactivex.internal.functions.Functions: io.reactivex.functions.Function justFunction(java.lang.Object)
io.reactivex.parallel.ParallelFailureHandling: io.reactivex.parallel.ParallelFailureHandling STOP
androidx.appcompat.R$color: int switch_thumb_normal_material_dark
com.example.revolut.rates.view.MainActivity
androidx.drawerlayout.R$drawable: int notification_action_background
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: ConstraintLayout$LayoutParams(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams)
kotlinx.coroutines.Unconfined: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
androidx.appcompat.R$layout: int abc_action_bar_title_item
androidx.annotation.VisibleForTesting: int PACKAGE_PRIVATE
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean hasPanelItems()
com.example.revolut.rates.R$attr: int colorError
androidx.appcompat.R$string: int abc_menu_shift_shortcut_label
androidx.appcompat.R$id: int action_container
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1: java.util.Iterator sourceIterator()
io.reactivex.Flowable: io.reactivex.Flowable buffer(int)
androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback: int onGetChildDrawingOrder(int,int)
com.example.revolut.rates.R$styleable: int ActionBar_contentInsetStartWithNavigation
androidx.recyclerview.R$id: int icon_group
kotlin.text.StringsKt__StringsKt: boolean endsWith(java.lang.CharSequence,char,boolean)
android.support.v4.media.session.IMediaSession: void setShuffleModeEnabledRemoved(boolean)
androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_DIRECT
androidx.lifecycle.extensions.R$styleable: int GradientColor_android_startX
android.support.v4.media.session.MediaControllerCompat$TransportControls: void setCaptioningEnabled(boolean)
io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(int)
androidx.appcompat.app.AlertDialog: void setMessage(java.lang.CharSequence)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setPassword(boolean)
okio.BufferedSink: okio.BufferedSink emitCompleteSegments()
kotlinx.coroutines.DisposeOnCompletion: java.lang.String toString()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: boolean performAction(int,int,android.os.Bundle)
kotlin.coroutines.experimental.CoroutineContext$Element: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.constraintlayout.widget.Constraints$LayoutParams: float rotationY
com.example.revolut.rates.databinding.RatesItemBinding: com.example.revolut.rates.databinding.RatesItemBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
androidx.media.R$styleable: int ColorStateListItem_android_alpha
androidx.appcompat.view.menu.ListMenuItemView: void onFinishInflate()
androidx.databinding.library.baseAdapters.DataBinderMapperImpl: DataBinderMapperImpl()
okio.Timeout: okio.Timeout clearTimeout()
com.example.revolut.rates.di.AppModule_ProvideRetrofitFactory: com.example.revolut.rates.di.AppModule_ProvideRetrofitFactory create(com.example.revolut.rates.di.AppModule)
androidx.appcompat.R$id: int text2
dagger.multibindings.IntoSet
androidx.core.view.ViewParentCompat: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int)
androidx.recyclerview.widget.RecyclerView: void onMeasure(int,int)
kotlin.sequences.TransformingIndexedSequence: java.util.Iterator iterator()
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
kotlin.collections.ArraysKt___ArraysKt: long last(long[],kotlin.jvm.functions.Function1)
androidx.legacy.v4.R$styleable: int GradientColor_android_endY
dagger.android.support.R$styleable: int SwitchCompat_switchMinWidth
kotlinx.android.parcel.WriteWith
dagger.android.support.R$styleable: int[] AppCompatSeekBar
com.example.revolut.rates.R$attr: int colorSwitchThumbNormal
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Display1
io.reactivex.Observable: io.reactivex.Observable window(io.reactivex.ObservableSource,io.reactivex.functions.Function,int)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.graphics.ImageDecoderKt$decodeDrawable$1: void onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
org.reactivestreams.Subscriber: void onComplete()
androidx.legacy.v4.R$dimen: int notification_top_pad_large_text
com.google.gson.JsonParseException: JsonParseException(java.lang.Throwable)
kotlin.jvm.internal.DoubleSpreadBuilder: int getSize(double[])
kotlin.jvm.internal.PackageReference: java.lang.String toString()
androidx.appcompat.R$attr: int height
androidx.media.R$layout: int notification_media_cancel_action
dagger.android.support.R$style: int Widget_AppCompat_CompoundButton_CheckBox
kotlin.ranges.LongProgressionIterator: boolean hasNext()
io.reactivex.internal.subscriptions.SubscriptionHelper: boolean set(java.util.concurrent.atomic.AtomicReference,org.reactivestreams.Subscription)
dagger.android.support.R$style: int Platform_V25_AppCompat
androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])
androidx.recyclerview.widget.LinearLayoutManager: int VERTICAL
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
androidx.customview.R$drawable: int notification_template_icon_low_bg
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(long[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$layout: int notification_template_media_custom
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)
androidx.databinding.adapters.VideoViewBindingAdapter: VideoViewBindingAdapter()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer minWith(int[],java.util.Comparator)
androidx.loader.R$drawable: int notification_icon_background
io.reactivex.internal.disposables.ListCompositeDisposable: ListCompositeDisposable(io.reactivex.disposables.Disposable[])
androidx.annotation.StringRes
androidx.recyclerview.widget.SortedList: java.lang.Object get(int)
androidx.customview.R$attr: int fontProviderFetchStrategy
io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher: void subscribeActual(org.reactivestreams.Subscriber)
androidx.databinding.ViewDataBinding: void setTo(char[],int,char)
io.reactivex.internal.operators.parallel.ParallelFromArray: int parallelism()
androidx.legacy.v4.R$attr: int fontProviderFetchTimeout
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean isRtl()
android.support.v4.media.session.MediaControllerCompat$Callback: void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
androidx.appcompat.R$style: int Widget_AppCompat_Spinner_Underlined
io.reactivex.internal.subscribers.BasicFuseableSubscriber
kotlinx.coroutines.channels.AbstractChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceive()
io.reactivex.Flowable: io.reactivex.Flowable startWithArray(java.lang.Object[])
androidx.fragment.app.Fragment: void onAttach(android.content.Context)
android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat fromMediaSession(android.content.Context,java.lang.Object)
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,java.lang.String)
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter getInstance(java.util.Locale)
com.example.revolut.rates.data.model.CurrencyResponse: java.lang.String getBase()
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup: int getSpanSize(int)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
androidx.recyclerview.widget.DividerItemDecoration: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc describeSendBuffered(java.lang.Object)
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: android.content.ComponentName activity
androidx.core.view.inputmethod.InputContentInfoCompat
kotlin.jvm.functions.Function9
kotlin.text.Regex$Companion: int access$ensureUnicodeCase(kotlin.text.Regex$Companion,int)
io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)
androidx.core.graphics.RegionKt: android.graphics.Region plus(android.graphics.Region,android.graphics.Rect)
androidx.recyclerview.R$styleable: int[] RecyclerView
androidx.fragment.app.Fragment: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
com.example.revolut.rates.data.model.Rate: java.lang.Double component2()
kotlin.ranges.RangesKt___RangesKt: long coerceAtLeast(long,long)
io.reactivex.internal.operators.flowable.FlowableCache: void onComplete()
dagger.android.support.R$styleable: int AppCompatTheme_windowMinWidthMajor
androidx.cursoradapter.widget.CursorAdapter: android.widget.Filter getFilter()
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed: FlowableThrottleFirstTimed(io.reactivex.Flowable,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean expandActionView()
androidx.appcompat.widget.ForwardingListener
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)
androidx.constraintlayout.solver.Metrics: long optimize
androidx.constraintlayout.widget.R$attr: int layout_constraintGuide_end
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.constraintlayout.widget.Placeholder: Placeholder(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper: android.content.res.Resources$Theme getDropDownViewTheme()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getTopDecorationHeight(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
dagger.android.support.R$style: int Base_ThemeOverlay_AppCompat_Dark
androidx.appcompat.widget.ToolbarWidgetWrapper: void setHomeButtonEnabled(boolean)
androidx.asynclayoutinflater.R$layout: int notification_template_part_time
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_PROMO
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View)
androidx.appcompat.R$drawable: int notification_bg_low_pressed
com.example.revolut.rates.R$dimen: int subtitle_shadow_radius
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel requireNoNulls(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.sequences.TakeWhileSequence$iterator$1: java.lang.Object next()
io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long)
kotlin.sequences.SequencesKt___SequencesKt: int sumOfByte(kotlin.sequences.Sequence)
androidx.loader.R$styleable: int FontFamily_fontProviderQuery
org.intellij.lang.annotations.Identifier
kotlin.text.StringsKt___StringsKt: char reduceRightIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function3)
androidx.databinding.ObservableShort: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView
io.reactivex.observers.DisposableCompletableObserver: DisposableCompletableObserver()
dagger.android.support.R$dimen: int abc_switch_padding
androidx.recyclerview.widget.ItemTouchUIUtil: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean)
io.reactivex.internal.operators.observable.ObservableJust
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollVerticalThumbDrawable
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int)
kotlin.UIntArray: int[] constructor-impl(int[])
androidx.legacy.coreutils.R$drawable: int notification_template_icon_low_bg
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.widget.ScrollerCompat: androidx.core.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator)
androidx.media.MediaBrowserServiceCompat: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.example.revolut.rates.R$styleable: int Toolbar_titleMarginStart
kotlin.UShortArray: short get-impl(short[],int)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.widget.TextViewCompat: int getAutoSizeMinTextSize(android.widget.TextView)
kotlin.coroutines.CombinedContext$Serialized: java.lang.Object readResolve()
androidx.core.util.LruCacheKt$lruCache$4
androidx.swiperefreshlayout.widget.SwipeRefreshLayout
kotlin.ranges.RangesKt___RangesKt: byte coerceAtMost(byte,byte)
androidx.lifecycle.ViewModel: ViewModel()
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.android.R
androidx.databinding.ObservableArrayMap: java.lang.Object setValueAt(int,java.lang.Object)
androidx.recyclerview.R$color: int notification_action_color_filter
kotlin.sequences.MergingSequence: java.util.Iterator iterator()
androidx.core.view.ViewGroupKt: boolean isEmpty(android.view.ViewGroup)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
kotlin.io.ByteStreamsKt$iterator$1: byte nextByte()
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed: FlowableTimeoutTimed(io.reactivex.Flowable,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,org.reactivestreams.Publisher)
io.reactivex.internal.util.HashMapSupplier: java.util.Map call()
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: long serialVersionUID
com.example.revolut.rates.R$attr: int actionModeCutDrawable
kotlin.collections.IntIterator: IntIterator()
androidx.media.AudioAttributesImplApi21Parcelizer
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(int[],java.lang.Iterable)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintHorizontal_weight
androidx.recyclerview.R$color
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews getHeadsUpContentView()
io.reactivex.internal.operators.observable.ObservableBufferBoundary: ObservableBufferBoundary(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function,java.util.concurrent.Callable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer
dagger.android.support.R$style: int Base_Widget_AppCompat_ImageButton
androidx.core.view.PointerIconCompat
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality BOUNDARY_NEUTRAL
androidx.appcompat.widget.AppCompatCheckedTextView: void drawableStateChanged()
com.example.revolut.rates.R$dimen: int abc_text_size_button_material
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character singleOrNull(char[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.DecorContentParent: boolean showOverflowMenu()
kotlin.sequences.DropSequence: DropSequence(kotlin.sequences.Sequence,int)
androidx.core.graphics.PathParser$PathDataNode: void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path)
kotlin.collections.ArraysKt___ArraysKt: boolean any(int[])
okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)
io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit,boolean)
io.reactivex.internal.util.SorterFunction: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableHide
kotlinx.coroutines.TimeSource: void unpark(java.lang.Thread)
com.example.revolut.rates.di.AppModule_ProvideCurrenciesRepositoryFactory
okio.InflaterSource: okio.Timeout timeout()
io.reactivex.internal.subscribers.BlockingFirstSubscriber
com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextString()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,kotlin.jvm.functions.Function1)
androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
okhttp3.internal.http2.Http2Stream: okio.Source getSource()
androidx.recyclerview.widget.DefaultItemAnimator: void endAnimations()
androidx.appcompat.app.WindowDecorActionBar: void setElevation(float)
kotlin.jvm.internal.CharSpreadBuilder: CharSpreadBuilder(int)
io.reactivex.internal.operators.flowable.FlowableCollect
io.reactivex.internal.operators.flowable.FlowableDistinct
androidx.core.util.PatternsCompat: java.util.regex.Pattern AUTOLINK_WEB_URL
android.support.v4.media.session.MediaSessionCompat$Callback: void onPlayFromUri(android.net.Uri,android.os.Bundle)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_barrierDirection
io.reactivex.subjects.UnicastSubject: boolean hasObservers()
io.reactivex.disposables.Disposable: boolean isDisposed()
androidx.lifecycle.ServiceLifecycleDispatcher: void onServicePreSuperOnDestroy()
okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent: BlockingFlowableMostRecent(io.reactivex.Flowable,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable min(kotlin.sequences.Sequence)
androidx.drawerlayout.R$dimen: int compat_control_corner_material
okio.Buffer: okio.Buffer copyTo(java.io.OutputStream)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Display1
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView)
androidx.slidingpanelayout.R$styleable: int GradientColor_android_tileMode
androidx.databinding.adapters.DatePickerBindingAdapter: DatePickerBindingAdapter()
kotlinx.coroutines.internal.LockFreeMPSCQueueCore: kotlinx.coroutines.internal.LockFreeMPSCQueueCore$Companion Companion
androidx.appcompat.R$styleable: int Toolbar_contentInsetEndWithActions
com.example.revolut.rates.R$attr: int listPreferredItemPaddingRight
kotlin.ranges.ULongProgression: long getLast()
io.reactivex.internal.observers.ForEachWhileObserver: void onComplete()
androidx.viewpager.R$id: int text2
androidx.fragment.R$drawable: int notification_bg_normal
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$lastOrNull$3: ChannelsKt__Channels_commonKt$lastOrNull$3(kotlin.coroutines.Continuation)
com.example.revolut.rates.R$style: int Widget_AppCompat_Toolbar
com.google.gson.internal.bind.util.ISO8601Utils: ISO8601Utils()
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(int[])
androidx.core.ktx.R$styleable: int GradientColor_android_tileMode
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.reactivex.subjects.MaybeSubject: java.lang.Object getValue()
androidx.core.util.HalfKt: android.util.Half toHalf(float)
androidx.drawerlayout.R$attr: int font
kotlinx.coroutines.DispatchedContinuation: java.lang.Throwable getExceptionalResult(java.lang.Object)
kotlin.ranges.CharProgressionIterator: char nextChar()
io.reactivex.Single: io.reactivex.Flowable repeat(long)
androidx.appcompat.R$color: int primary_material_dark
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)
kotlin.reflect.KProperty1: kotlin.reflect.KProperty1$Getter getGetter()
androidx.constraintlayout.widget.Barrier: void setType(int)
androidx.lifecycle.extensions.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
androidx.appcompat.R$styleable: int ActivityChooserView_initialActivityCount
androidx.recyclerview.widget.RecyclerView: int getBaseline()
androidx.core.animation.AnimatorKt$doOnStart$$inlined$addListener$1: void onAnimationStart(android.animation.Animator)
androidx.databinding.CallbackRegistry$NotifierCallback: void onNotifyCallback(java.lang.Object,java.lang.Object,int,java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable concatWith(io.reactivex.SingleSource)
com.example.revolut.rates.R$id: int scrollView
androidx.appcompat.R$string: int abc_font_family_display_2_material
io.reactivex.internal.operators.flowable.FlowableSkip: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.sequences.SequencesKt___SequencesKt$minus$1
androidx.legacy.v4.R$layout: int notification_template_big_media_narrow
androidx.fragment.app.DialogFragment: void onDestroyView()
kotlin.reflect.KProperty$DefaultImpls
androidx.lifecycle.Observer: void onChanged(java.lang.Object)
androidx.appcompat.R$styleable: int AppCompatTheme_colorControlActivated
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context,android.util.AttributeSet,int)
kotlin.jvm.internal.DoubleSpreadBuilder: DoubleSpreadBuilder(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedFling(float,float,boolean)
androidx.core.widget.CompoundButtonCompat: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
com.example.revolut.rates.common.ConstantsKt: long REPEAT_RATE
androidx.lifecycle.extensions.R$styleable: int GradientColor_android_type
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_RIGHT
com.example.revolut.rates.R$dimen: int abc_search_view_preferred_width
com.example.revolut.rates.R$styleable: int SwitchCompat_splitTrack
androidx.appcompat.R$style: int Base_V7_Widget_AppCompat_Toolbar
dagger.android.support.R$style: int Widget_AppCompat_Light_ActionBar
androidx.core.ktx.R$styleable: int[] GradientColor
io.reactivex.internal.operators.flowable.FlowableJoin
androidx.appcompat.app.ActionBar$Tab: java.lang.CharSequence getText()
com.jakewharton.rxbinding3.widget.SeekBarProgressChangeEvent: java.lang.String toString()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject
androidx.appcompat.R$id: int action_bar_title
kotlinx.coroutines.internal.AtomicOp: AtomicOp()
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
kotlinx.coroutines.CoroutineExceptionHandler$Key
androidx.lifecycle.extensions.R$attr: int keylines
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter JSON_ELEMENT
dagger.android.support.R$styleable: int ActionBar_elevation
kotlin.sequences.TakeWhileSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TakeWhileSequence)
kotlin.collections.UArraysKt: boolean contentEquals-ctEhBpI(int[],int[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int FOCUS_ACCESSIBILITY
kotlin.ULongArray: boolean equals-impl(long[],java.lang.Object)
com.example.revolut.rates.R$attr: int seekBarStyle
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
androidx.appcompat.widget.AppCompatImageButton: boolean hasOverlappingRendering()
kotlin.collections.DoubleIterator: java.lang.Double next()
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key()
com.example.revolut.rates.R$styleable: int View_android_theme
dagger.android.support.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
dagger.android.support.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: long serialVersionUID
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)
dagger.android.support.R$integer: int status_bar_notification_info_maxnum
android.support.v4.media.session.MediaSessionCompat: void setQueue(java.util.List)
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isInsideConstraintLayout()
androidx.appcompat.R$attr: int tintMode
okhttp3.Route: Route(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)
kotlin.collections.MapsKt__MapsKt: java.lang.Object getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0)
kotlinx.coroutines.internal.LockFreeLinkedListKt: void UNDECIDED$annotations()
androidx.appcompat.view.menu.BaseMenuPresenter: android.content.Context mSystemContext
kotlin.ranges.CharProgression: java.util.Iterator iterator()
kotlin.math.MathKt__MathJVMKt: double truncate(double)
kotlin.math.MathKt__MathJVMKt: float log(float,float)
androidx.legacy.v4.R$styleable: int FontFamily_fontProviderPackage
io.reactivex.processors.AsyncProcessor: java.lang.Object[] getValues(java.lang.Object[])
androidx.core.view.PointerIconCompat: int TYPE_WAIT
androidx.appcompat.R$style: int Base_DialogWindowTitle_AppCompat
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean singleOrNull(boolean[],kotlin.jvm.functions.Function1)
kotlin.coroutines.SafeContinuation: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
com.google.gson.internal.LinkedHashTreeMap: java.util.Set entrySet()
androidx.appcompat.app.ActionBar: void hide()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float min(java.lang.Float[])
dagger.android.support.R$attr: int contentInsetStart
com.example.revolut.rates.R$attr: int switchStyle
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty: void subscribeActual(io.reactivex.MaybeObserver)
androidx.asynclayoutinflater.R$layout: int notification_action
androidx.databinding.library.BuildConfig: boolean DEBUG
kotlin.jvm.internal.Ref$BooleanRef: boolean element
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: boolean isDisposed()
androidx.appcompat.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
io.reactivex.Flowable: io.reactivex.Flowable range(int,int)
kotlin.collections.ArraysKt___ArraysKt: double average(float[])
androidx.recyclerview.widget.RecyclerView$LayoutManager: void endAnimation(android.view.View)
androidx.core.R$id: int blocking
androidx.recyclerview.widget.RecyclerView: void dispatchRestoreInstanceState(android.util.SparseArray)
dagger.android.support.R$id: int src_in
kotlin.ranges.LongProgression: LongProgression(long,long,long)
androidx.documentfile.provider.DocumentFile: androidx.documentfile.provider.DocumentFile[] listFiles()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(short[],kotlin.jvm.functions.Function1)
kotlin.coroutines.experimental.CoroutineContext: kotlin.coroutines.experimental.CoroutineContext plus(kotlin.coroutines.experimental.CoroutineContext)
okhttp3.internal.http2.Http2Codec: void flushRequest()
kotlin.ranges.IntProgression: int getLast()
androidx.core.graphics.ColorUtils: void colorToXYZ(int,double[])
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: int lastIndexOf(java.lang.Object)
io.reactivex.internal.operators.observable.ObservablePublish: void connect(io.reactivex.functions.Consumer)
androidx.appcompat.R$styleable: int PopupWindow_android_popupBackground
androidx.appcompat.R$id: int blocking
androidx.core.app.NotificationManagerCompat: boolean areNotificationsEnabled()
androidx.vectordrawable.R$style: int TextAppearance_Compat_Notification_Info
androidx.versionedparcelable.VersionedParcel: void writeSize(android.util.Size,int)
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function9)
kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList getHorizontalGuidelines()
kotlin.jvm.internal.TypeIntrinsics: java.util.Map$Entry asMutableMapEntry(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableDoOnEach: ObservableDoOnEach(io.reactivex.ObservableSource,io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Action)
androidx.core.widget.TextViewCompat: int getMaxLines(android.widget.TextView)
kotlinx.coroutines.internal.ThreadSafeHeap: void size$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(byte[],kotlin.jvm.functions.Function1)
androidx.appcompat.R$styleable: int AnimatedStateListDrawableItem_android_id
androidx.appcompat.R$style: int Base_V22_Theme_AppCompat
androidx.appcompat.app.WindowDecorActionBar: boolean hasIcon()
kotlin.ranges.RangesKt___RangesKt: java.lang.Byte toByteExactOrNull(long)
dagger.android.support.R$style: int Base_Widget_AppCompat_ActionMode
com.google.gson.JsonSyntaxException
dagger.android.support.R$styleable: int SearchView_commitIcon
androidx.appcompat.widget.ListPopupWindow: int getVerticalOffset()
io.reactivex.Flowable: java.lang.Object blockingFirst()
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Long toLongOrNull(java.lang.String,int)
androidx.drawerlayout.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.appcompat.R$styleable: int MenuItem_android_alphabeticShortcut
com.google.gson.internal.$Gson$Preconditions: void checkArgument(boolean)
com.example.revolut.rates.view.MainActivity: android.view.View _$_findCachedViewById(int)
io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean)
kotlin.math.MathKt__MathJVMKt: void sign$annotations(long)
dagger.android.support.R$style: int Widget_AppCompat_PopupMenu_Overflow
androidx.appcompat.widget.DecorToolbar: void restoreHierarchyState(android.util.SparseArray)
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper: void setDropDownViewTheme(android.content.res.Resources$Theme)
okhttp3.CipherSuite: java.lang.String toString()
androidx.core.view.ActionProvider: void subUiVisibilityChanged(boolean)
okhttp3.MultipartBody: okhttp3.MediaType DIGEST
io.reactivex.subjects.UnicastSubject: void onError(java.lang.Throwable)
androidx.asynclayoutinflater.R$dimen: int notification_small_icon_size_as_large
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: long serialVersionUID
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableEnd
com.example.revolut.rates.R$id: int useLogo
com.example.revolut.rates.BuildConfig: BuildConfig()
dagger.android.support.R$dimen: int abc_text_size_large_material
androidx.appcompat.R$attr: int titleMarginStart
io.reactivex.internal.operators.flowable.FlowableElementAtSingle: void subscribeActual(io.reactivex.SingleObserver)
com.example.revolut.rates.R$id: int search_bar
kotlinx.coroutines.AbstractContinuation: boolean tryUpdateStateToFinal(kotlinx.coroutines.NotCompleted,java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: boolean endsWith(java.lang.String,java.lang.String,boolean)
androidx.slidingpanelayout.R$drawable: int notification_icon_background
androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollY()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$count$3
okhttp3.internal.tls.BasicTrustRootIndex: int hashCode()
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
androidx.constraintlayout.solver.widgets.Guideline: int RELATIVE_PERCENT
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object consumeEach(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
io.reactivex.Observable: io.reactivex.Observable buffer(int,java.util.concurrent.Callable)
androidx.core.os.ParcelCompat: void writeBoolean(android.os.Parcel,boolean)
com.google.gson.JsonStreamParser: com.google.gson.JsonElement next()
android.support.v4.media.session.MediaControllerCompat$TransportControls: void sendCustomAction(java.lang.String,android.os.Bundle)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)
dagger.multibindings.Multibinds
com.example.revolut.rates.R$id: int media_actions
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Long[] toTypedArray(long[])
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle: ObservableSwitchMapSingle(io.reactivex.Observable,io.reactivex.functions.Function,boolean)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Float max(kotlin.sequences.Sequence)
kotlin.jvm.internal.TypeReference: int hashCode()
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)
androidx.core.content.pm.ShortcutInfoCompat: java.lang.String getId()
androidx.appcompat.app.WindowDecorActionBar: void setHomeActionContentDescription(java.lang.CharSequence)
kotlin.collections.MapsKt__MapsKt: java.util.Map filterNotTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1)
kotlin.UShortArray: int hashCode-impl(short[])
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: int random(kotlin.ranges.IntRange,kotlin.random.Random)
androidx.constraintlayout.widget.ConstraintSet: void clone(androidx.constraintlayout.widget.ConstraintLayout)
kotlin.jvm.internal.IntCompanionObject: kotlin.jvm.internal.IntCompanionObject INSTANCE
io.reactivex.Maybe: io.reactivex.Maybe doOnSubscribe(io.reactivex.functions.Consumer)
androidx.versionedparcelable.VersionedParcel: void writeIntArray(int[])
okio.ForwardingSource: java.lang.String toString()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
android.support.v4.media.session.IMediaSession: boolean isCaptioningEnabled()
androidx.core.ktx.R$attr: int fontProviderPackage
androidx.databinding.library.baseAdapters.BuildConfig
dagger.android.support.R$attr: int spinnerDropDownItemStyle
kotlin.collections.MapsKt__MapsKt: java.util.Map plus(java.util.Map,kotlin.Pair[])
io.reactivex.Observable: io.reactivex.Observable buffer(java.util.concurrent.Callable)
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_5
io.reactivex.processors.ReplayProcessor
io.reactivex.BackpressureStrategy
com.jakewharton.rxbinding3.core.R$attr: int fontProviderQuery
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int)
kotlin.sequences.FlatteningSequence
androidx.constraintlayout.solver.widgets.ChainHead: int mWidgetsMatchCount
kotlin.LazyKt__LazyJVMKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)
io.reactivex.internal.operators.observable.ObservableConcatWithSingle$ConcatWithObserver: long serialVersionUID
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6: java.util.Iterator iterator()
kotlin.Triple: java.lang.Object component3()
androidx.appcompat.R$drawable: int notification_icon_background
androidx.core.widget.ImageViewCompat
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean preventEdgeOffset
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int mMinHeight
com.example.revolut.rates.R$dimen: int compat_button_inset_horizontal_material
io.reactivex.internal.fuseable.FuseToFlowable
androidx.appcompat.R$attr: int actionBarSplitStyle
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(double[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin
kotlin.ranges.RangesKt___RangesKt: java.lang.Integer toIntExactOrNull(double)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: void finishOnSuccess(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.fragment.app.FragmentPagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)
androidx.fragment.app.FragmentTransaction: int TRANSIT_FRAGMENT_OPEN
okhttp3.internal.platform.Platform: void configureSslSocketFactory(javax.net.ssl.SSLSocketFactory)
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int getPlaybackType(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$SavedState: void writeToParcel(android.os.Parcel,int)
kotlinx.coroutines.DelayKt: java.lang.Object delay(int,kotlin.coroutines.Continuation)
androidx.cursoradapter.widget.CursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)
androidx.media.VolumeProviderCompat: int VOLUME_CONTROL_RELATIVE
io.reactivex.processors.UnicastProcessor: boolean hasSubscribers()
com.example.revolut.rates.R$attr: int iconTintMode
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onLayout(boolean,int,int,int,int)
androidx.drawerlayout.R$dimen: int compat_notification_large_icon_max_height
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(long[],java.lang.Iterable)
androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList findWidgets(int,int,int,int)
androidx.databinding.ObservableFloat: ObservableFloat()
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOfNotNull(java.lang.Object[])
dagger.android.support.R$attr: int dividerVertical
androidx.fragment.R$style: int TextAppearance_Compat_Notification_Info
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCategory(java.lang.String)
androidx.legacy.coreui.R$styleable: int GradientColor_android_tileMode
androidx.core.util.LongSparseArrayKt: java.lang.Object getOrDefault(android.util.LongSparseArray,long,java.lang.Object)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setEdgeType(int)
com.jakewharton.rxbinding3.widget.AdapterViewNothingSelectionEvent
io.reactivex.internal.operators.observable.ObservableInternalHelper: io.reactivex.functions.Consumer observerOnError(io.reactivex.Observer)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setBarThickness(float)
androidx.core.R$styleable: int FontFamilyFont_font
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: int indexOf-WZ4Q5Ns(int)
androidx.annotation.FloatRange: boolean fromInclusive()
androidx.loader.R$drawable: int notification_template_icon_bg
androidx.core.view.ViewKt$postOnAnimationDelayed$runnable$1: ViewKt$postOnAnimationDelayed$runnable$1(kotlin.jvm.functions.Function0)
io.reactivex.SingleEmitter: void setCancellable(io.reactivex.functions.Cancellable)
androidx.constraintlayout.widget.ConstraintSet: ConstraintSet()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replaceFirst$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object)
kotlin.random.Random: long nextLong(long)
androidx.core.app.CoreComponentFactory$CompatWrapped
androidx.recyclerview.widget.DiffUtil$DiffResult: int convertNewPositionToOld(int)
androidx.media.R$styleable: int[] GradientColorItem
androidx.core.content.res.TypedArrayKt: java.lang.CharSequence[] getTextArrayOrThrow(android.content.res.TypedArray,int)
com.jakewharton.rxbinding3.view.RxMenuItem: io.reactivex.Observable clicks(android.view.MenuItem)
kotlinx.coroutines.JobKt: kotlinx.coroutines.DisposableHandle cancelFutureOnCompletion(kotlinx.coroutines.Job,java.util.concurrent.Future)
com.example.revolut.rates.R$bool: R$bool()
com.example.revolut.rates.databinding.ActivityMainBinding: com.example.revolut.rates.databinding.ActivityMainBinding bind(android.view.View,java.lang.Object)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer awaitCount(int)
androidx.annotation.RawRes
androidx.constraintlayout.widget.ConstraintSet: void setElevation(int,float)
kotlin.internal.ContractsDsl
androidx.appcompat.view.menu.ActionMenuItem: boolean isCheckable()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: FragmentManager$FragmentLifecycleCallbacks()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void reset()
okhttp3.internal.tls.BasicTrustRootIndex: BasicTrustRootIndex(java.security.cert.X509Certificate[])
kotlin.io.ExceptionsKt
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: ConstraintWidgetContainer(int,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer firstOrNull(int[])
androidx.print.PrintHelper: int getColorMode()
androidx.fragment.app.FragmentContainer: FragmentContainer()
dagger.internal.DelegateFactory: java.lang.Object get()
kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection access$getSTAR$cp()
androidx.core.widget.EdgeEffectCompat: EdgeEffectCompat(android.content.Context)
com.example.revolut.rates.R$styleable: int LinearLayoutCompat_divider
kotlin.random.AbstractPlatformRandom: boolean nextBoolean()
androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence)
androidx.core.app.NotificationCompat$WearableExtender: NotificationCompat$WearableExtender()
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
androidx.appcompat.R$color: int abc_tint_edittext
kotlinx.coroutines.internal.ThreadLocalElement: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext)
androidx.annotation.AnyThread
androidx.core.graphics.RectKt: android.graphics.RectF transform(android.graphics.RectF,android.graphics.Matrix)
io.reactivex.MaybeObserver: void onComplete()
androidx.appcompat.view.StandaloneActionMode: java.lang.CharSequence getSubtitle()
dagger.android.support.R$color: int bright_foreground_disabled_material_light
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ActivityChooserView
kotlin.jvm.internal.LongCompanionObject: long MAX_VALUE
io.reactivex.Observable: io.reactivex.Observable concatEager(java.lang.Iterable,int,int)
io.reactivex.Observable: io.reactivex.Observable retry(io.reactivex.functions.BiPredicate)
kotlin.collections.AbstractMutableMap: AbstractMutableMap()
androidx.fragment.app.FragmentTabHost: FragmentTabHost(android.content.Context)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: void cancel(java.lang.Object)
androidx.customview.widget.ViewDragHelper$Callback: int getViewHorizontalDragRange(android.view.View)
androidx.vectordrawable.R$styleable: int CoordinatorLayout_keylines
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: java.lang.Object get(int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_3DES_EDE_CBC_SHA
androidx.core.ktx.R$styleable: int ColorStateListItem_android_color
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(int,int,int)
androidx.core.graphics.ColorKt
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.appcompat.app.AppCompatDialog: void setTitle(java.lang.CharSequence)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerTitle(int,java.lang.CharSequence)
kotlin.collections.AbstractMap: boolean isEmpty()
com.example.revolut.rates.data.model.CurrencyResponse: void setRates(java.util.Map)
com.example.revolut.rates.di.AppModule
kotlin.jvm.internal.LongSpreadBuilder
com.example.revolut.rates.R$styleable: int ConstraintSet_android_visibility
com.example.revolut.rates.R$id: int image
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(char[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.Toolbar: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)
androidx.appcompat.widget.AbsActionBarView: int positionChild(android.view.View,int,int,int,boolean)
com.example.revolut.rates.databinding.ActivityMainBinding: androidx.recyclerview.widget.RecyclerView currenciesRv
okhttp3.internal.http1.Http1Codec: Http1Codec(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink)
kotlin.ranges.UIntRange: kotlin.UInt getEndInclusive()
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle
kotlin.ranges.UIntProgression: int hashCode()
androidx.recyclerview.R$id: int tag_unhandled_key_listeners
com.jakewharton.rxbinding3.core.R$styleable: int FontFamilyFont_fontVariationSettings
com.example.revolut.rates.R$integer: int cancel_button_image_alpha
androidx.recyclerview.widget.RecyclerView
androidx.legacy.coreutils.R$attr: int font
kotlin.collections.unsigned.UArraysKt___UArraysKt: int random-2D5oskM(int[],kotlin.random.Random)
androidx.databinding.ObservableLong: long get()
kotlinx.android.parcel.Parceler
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder addExtras(android.os.Bundle)
com.example.revolut.rates.R$id: int multiply
androidx.appcompat.R$attr: int backgroundSplit
kotlin.collections.AbstractMutableCollection
androidx.legacy.app.ActionBarDrawerToggle: boolean onOptionsItemSelected(android.view.MenuItem)
androidx.viewpager.R$dimen: int notification_subtext_size
com.example.revolut.rates.R$bool
dagger.android.support.R$style: int Base_Widget_AppCompat_ActivityChooserView
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,io.reactivex.functions.Function)
okhttp3.CacheControl$Builder
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean)
kotlin.jvm.internal.Ref$BooleanRef: java.lang.String toString()
kotlin.ExceptionsKt__ExceptionsKt: java.lang.StackTraceElement[] getStackTrace(java.lang.Throwable)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState
androidx.appcompat.view.ActionBarPolicy: boolean showsOverflowMenuButton()
androidx.appcompat.R$id: int custom
kotlin.text.Typography: char plusMinus
io.reactivex.internal.subscriptions.SubscriptionHelper: void reportMoreProduced(long)
androidx.viewpager.widget.PagerTitleStrip: void onDetachedFromWindow()
androidx.fragment.app.FragmentController: java.util.List getActiveFragments(java.util.List)
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder addRemoteInput(androidx.core.app.RemoteInput)
com.jakewharton.rxbinding3.core.R$id: int tag_unhandled_key_event_manager
dagger.android.support.R$style: int Widget_AppCompat_Light_ListPopupWindow
androidx.recyclerview.widget.SortedList$BatchedCallback: boolean areItemsTheSame(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: void drawableStateChanged()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: long serialVersionUID
io.reactivex.internal.disposables.ListCompositeDisposable: boolean remove(io.reactivex.disposables.Disposable)
dagger.android.support.R$color: int abc_primary_text_disable_only_material_light
io.reactivex.internal.util.VolatileSizeArrayList: long serialVersionUID
kotlin.jvm.internal.ClassReference: int hashCode()
androidx.databinding.ViewDataBinding: ViewDataBinding(androidx.databinding.DataBindingComponent,android.view.View,int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_SEED_CBC_SHA
io.reactivex.internal.operators.flowable.FlowableLastSingle: void subscribeActual(io.reactivex.SingleObserver)
kotlin.io.FileTreeWalk: kotlin.io.FileTreeWalk maxDepth(int)
dagger.android.support.DaggerAppCompatActivity_MembersInjector: void injectMembers(java.lang.Object)
androidx.databinding.ObservableByte: ObservableByte(androidx.databinding.Observable[])
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.reactivex.internal.operators.flowable.FlowableElementAtSingle
okhttp3.HttpUrl: java.lang.String host()
dagger.android.support.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
io.reactivex.internal.util.OpenHashSet: OpenHashSet()
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
androidx.databinding.adapters.NumberPickerBindingAdapter: NumberPickerBindingAdapter()
androidx.media.AudioAttributesCompat$Builder: AudioAttributesCompat$Builder()
com.example.revolut.rates.data.model.CurrencyResponse: void setDate(java.lang.String)
dagger.internal.Preconditions
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
androidx.appcompat.R$styleable: int ActionBar_customNavigationLayout
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List reversed-rL5Bavg(short[])
androidx.customview.widget.ViewDragHelper$Callback
kotlin.collections.ArraysKt___ArraysKt: boolean none(boolean[])
com.jakewharton.rxbinding3.core.R$styleable: int[] FontFamilyFont
io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator: long serialVersionUID
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object lastOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt: java.util.Iterator buildIterator(kotlin.jvm.functions.Function2)
okhttp3.internal.http1.Http1Codec: okio.Sink newChunkedSink()
androidx.core.app.RemoteInput$Builder: android.os.Bundle getExtras()
com.example.revolut.rates.DataBinderMapperImpl: androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View,int)
io.reactivex.processors.BehaviorProcessor: void onComplete()
kotlinx.coroutines.CoroutineContextKt: java.lang.String DEBUG_PROPERTY_VALUE_ON
androidx.legacy.v4.R$dimen: int compat_button_inset_horizontal_material
androidx.databinding.ViewDataBinding$IncludedLayouts: java.lang.String[][] layouts
androidx.appcompat.R$dimen: int abc_dialog_title_divider_material
io.reactivex.Flowable: io.reactivex.Flowable timeInterval(java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.R$attr: int closeItemLayout
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(short[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context)
androidx.appcompat.R$dimen: int tooltip_precise_anchor_extra_offset
kotlin.UIntArray: java.lang.String toString-impl(int[])
kotlin.coroutines.experimental.migration.CoroutinesMigrationKt: kotlin.coroutines.ContinuationInterceptor toContinuationInterceptor(kotlin.coroutines.experimental.ContinuationInterceptor)
okhttp3.ConnectionPool: ConnectionPool(int,long,java.util.concurrent.TimeUnit)
androidx.appcompat.R$string: int abc_menu_ctrl_shortcut_label
kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext newCoroutineContext(kotlin.coroutines.CoroutineContext)
io.reactivex.Observable: io.reactivex.Single sequenceEqual(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiPredicate)
androidx.media.session.MediaButtonReceiver: android.view.KeyEvent handleIntent(android.support.v4.media.session.MediaSessionCompat,android.content.Intent)
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver$SwitchMapMaybeObserver: long serialVersionUID
io.reactivex.internal.util.NotificationLite: io.reactivex.internal.util.NotificationLite COMPLETE
okhttp3.internal.connection.ConnectInterceptor: ConnectInterceptor(okhttp3.OkHttpClient)
androidx.appcompat.app.ActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_SYMBOL
io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable
androidx.core.view.MotionEventCompat: int AXIS_Z
com.google.gson.JsonObject: com.google.gson.JsonElement deepCopy()
androidx.viewpager.widget.ViewPager: int getClientWidth()
androidx.viewpager.widget.PagerTitleStrip: void setTextColor(int)
androidx.appcompat.R$attr: int viewInflaterClass
androidx.asynclayoutinflater.R$attr: int alpha
com.example.revolut.rates.R$style: int ThemeOverlay_AppCompat_Light
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long getRemoveDuration()
androidx.fragment.app.Fragment: void setSharedElementReturnTransition(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: long serialVersionUID
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber$ConcatMapSingleObserver: long serialVersionUID
io.reactivex.internal.disposables.SequentialDisposable: SequentialDisposable(io.reactivex.disposables.Disposable)
com.example.revolut.rates.R$id: int homeAsUp
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher blocking(int)
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification_Title_Media
com.example.revolut.rates.R$id: int withText
androidx.viewpager.R$styleable: int GradientColor_android_tileMode
androidx.loader.R$integer
kotlin.collections.ArraysKt___ArraysKt: int sumOfShort(java.lang.Short[])
androidx.recyclerview.widget.RecyclerView$Recycler
androidx.constraintlayout.solver.widgets.ConstraintWidget: void forceUpdateDrawPosition()
kotlin.TypeCastException
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.DrawableUtils: android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable)
okio.HashingSink: okio.HashingSink md5(okio.Sink)
kotlin.collections.Grouping
androidx.core.app.NavUtils: java.lang.String PARENT_ACTIVITY
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence subSequence(java.lang.CharSequence,kotlin.ranges.IntRange)
androidx.viewpager.widget.PagerTitleStrip: int getMinHeight()
androidx.constraintlayout.widget.ConstraintSet: void clone(androidx.constraintlayout.widget.ConstraintSet)
kotlin.concurrent.TimersKt
kotlin.math.UMathKt
okhttp3.ResponseBody: byte[] bytes()
io.reactivex.internal.operators.observable.ObservableToListSingle
androidx.databinding.adapters.AutoCompleteTextViewBindingAdapter$IsValid: boolean isValid(java.lang.CharSequence)
kotlin.SinceKotlin: java.lang.String version()
okhttp3.MediaType: java.lang.String subtype()
androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
com.jakewharton.rxbinding3.widget.SeekBarStartChangeEvent: android.widget.SeekBar component1()
androidx.core.view.MenuItemCompat: int getAlphabeticModifiers(android.view.MenuItem)
androidx.appcompat.R$color: int abc_secondary_text_material_light
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.sync.Mutex Mutex$default(boolean,int,java.lang.Object)
androidx.core.widget.TextViewCompat: int getAutoSizeTextType(android.widget.TextView)
androidx.constraintlayout.solver.widgets.ResolutionDimension: ResolutionDimension()
kotlin.collections.IndexedValue: kotlin.collections.IndexedValue copy$default(kotlin.collections.IndexedValue,int,java.lang.Object,int,java.lang.Object)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: long minOf-eb3DHEI(long,long)
com.google.gson.Gson: java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type)
io.reactivex.internal.operators.flowable.FlowableZipIterable: void subscribeActual(org.reactivestreams.Subscriber)
android.support.v4.media.RatingCompat: boolean isRated()
io.reactivex.internal.operators.single.SingleUnsubscribeOn: void subscribeActual(io.reactivex.SingleObserver)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int getNumRows()
android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_GET_EXTRA_BINDER
io.reactivex.functions.LongConsumer: void accept(long)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Caption
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associate(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.cursoradapter.widget.CursorAdapter: boolean hasStableIds()
androidx.appcompat.R$styleable: int[] MenuItem
io.reactivex.internal.observers.ConsumerSingleObserver
androidx.recyclerview.widget.BatchingListUpdateCallback
androidx.versionedparcelable.CustomVersionedParcelable: void onPreParceling(boolean)
kotlinx.coroutines.NodeList: boolean isActive()
com.jakewharton.rxbinding3.view.ViewScrollChangeEvent: int component5()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onForwardedEvent(android.view.MotionEvent,int)
com.example.revolut.rates.R$attr: int drawerArrowStyle
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean)
kotlinx.coroutines.EventLoopBase: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.util.concurrent.TimeUnit,java.lang.Runnable)
kotlin.collections.IndexedValue: java.lang.Object component2()
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther
io.reactivex.internal.subscriptions.ScalarSubscription: java.lang.Object poll()
kotlin.text.Regex: java.util.regex.Pattern toPattern()
io.reactivex.observers.ResourceSingleObserver: void add(io.reactivex.disposables.Disposable)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1)
androidx.constraintlayout.widget.Group
androidx.recyclerview.widget.SimpleItemAnimator: SimpleItemAnimator()
com.example.revolut.rates.R$layout: R$layout()
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
com.example.revolut.rates.R$drawable: int abc_vector_test
io.reactivex.Notification: java.lang.String toString()
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintLeft_toRightOf
io.reactivex.internal.util.VolatileSizeArrayList: void add(int,java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable ambArray(org.reactivestreams.Publisher[])
androidx.recyclerview.widget.ItemTouchHelper$Callback: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)
io.reactivex.internal.operators.flowable.FlowableIntervalRange
androidx.databinding.adapters.Converters: android.content.res.ColorStateList convertColorToColorStateList(int)
androidx.core.view.ActionProvider: boolean hasSubMenu()
androidx.appcompat.widget.ActionMenuView: boolean hasSupportDividerBeforeChildAt(int)
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: int HINT_SCROLL_DESC
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.R$string: int abc_menu_delete_shortcut_label
io.reactivex.Flowable: io.reactivex.Flowable fromIterable(java.lang.Iterable)
kotlin.sequences.FilteringSequence: boolean access$getSendWhen$p(kotlin.sequences.FilteringSequence)
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemRangeRemoved(int,int)
androidx.appcompat.widget.AppCompatCheckedTextView
kotlin.KotlinVersion: boolean isAtLeast(int,int)
kotlinx.coroutines.CancellableContinuation: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long singleOrNull(long[],kotlin.jvm.functions.Function1)
io.reactivex.internal.subscriptions.DeferredScalarSubscription: void complete(java.lang.Object)
kotlin.jvm.internal.TypeIntrinsics: java.util.Iterator castToIterator(java.lang.Object)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintVertical_bias
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(int)
io.reactivex.internal.observers.ConsumerSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean isHeightMeasuredTooSmall()
androidx.appcompat.app.WindowDecorActionBar: int getHeight()
androidx.legacy.coreutils.R$id: int icon_group
okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable: MaybeFlatMapIterableObservable(io.reactivex.MaybeSource,io.reactivex.functions.Function)
kotlin.jvm.internal.MagicApiIntrinsics: int intMagicApiCall(int)
kotlin.jvm.internal.PropertyReference: int hashCode()
kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred$default(kotlinx.coroutines.Job,int,java.lang.Object)
dagger.android.support.R$styleable: int AppCompatTheme_actionModeStyle
dagger.android.AndroidInjection: void inject(android.app.Fragment)
androidx.fragment.R$styleable: int ColorStateListItem_android_color
kotlinx.coroutines.channels.SubscriptionReceiveChannel: void close()
com.example.revolut.rates.R$drawable: int abc_cab_background_top_material
androidx.core.ktx.R$dimen: int notification_top_pad
com.google.gson.JsonElement: byte getAsByte()
com.example.revolut.rates.R$attr: int actionModePopupWindowStyle
kotlin.ExceptionsKt__ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
io.reactivex.internal.functions.Functions: io.reactivex.functions.Function toFunction(io.reactivex.functions.Function4)
com.jakewharton.rxbinding3.core.R$id: int actions
androidx.legacy.coreui.R$styleable: int GradientColor_android_centerColor
androidx.fragment.R$dimen: int compat_control_corner_material
androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)
androidx.core.widget.TextViewCompat
androidx.lifecycle.extensions.R$id: int tag_unhandled_key_event_manager
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewEndOffset()
androidx.appcompat.app.ActionBarDrawerToggle$Delegate
kotlinx.coroutines.DispatchedContinuation: void resumeCancellable(java.lang.Object)
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: int hashCode()
androidx.databinding.ObservableByte: ObservableByte()
androidx.vectordrawable.R$attr: int fontStyle
androidx.constraintlayout.solver.LinearSystem: void addGreaterBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,boolean)
kotlinx.coroutines.NodeList: java.lang.String getString(java.lang.String)
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget getHorizontalChainControlWidget()
retrofit2.CallAdapter$Factory
androidx.appcompat.R$style: int Widget_AppCompat_ActionButton_Overflow
kotlin.ranges.CharRange: kotlin.ranges.CharRange$Companion Companion
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] plus-CFIt9YE(int[],java.util.Collection)
io.reactivex.subjects.BehaviorSubject
dagger.internal.SetFactory$Builder
kotlinx.coroutines.channels.ConflatedChannel
io.reactivex.observers.DefaultObserver: void cancel()
kotlin.jvm.internal.FloatSpreadBuilder
androidx.appcompat.R$styleable: int[] Spinner
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc describeTryOffer(java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable concatMapDelayError(io.reactivex.functions.Function)
androidx.databinding.OnRebindCallback: OnRebindCallback()
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.ClosedRange,short)
androidx.appcompat.R$integer: int cancel_button_image_alpha
androidx.constraintlayout.widget.ConstraintSet: void load(android.content.Context,int)
org.jetbrains.annotations.PropertyKey
androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte max(byte[])
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
io.reactivex.Maybe: io.reactivex.MaybeObserver subscribeWith(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle
io.reactivex.FlowableConverter
androidx.asynclayoutinflater.R$id: int forever
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.Boolean)
kotlin.text.DelimitedRangesSequence$iterator$1: void remove()
io.reactivex.SingleOnSubscribe: void subscribe(io.reactivex.SingleEmitter)
androidx.core.view.MenuItemCompat: java.lang.CharSequence getContentDescription(android.view.MenuItem)
com.google.gson.JsonParseException: long serialVersionUID
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object)
androidx.core.util.AtomicFileKt: void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
kotlin.collections.ArraysKt___ArraysKt: int random(int[],kotlin.random.Random)
androidx.drawerlayout.R$layout: int notification_action_tombstone
dagger.android.support.R$style: int Base_Theme_AppCompat
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: boolean isEmpty()
androidx.constraintlayout.widget.ConstraintSet: void setTransformPivot(int,float,float)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toCollection(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractChannel: boolean getHasReceiveOrClosed()
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: void complete(java.lang.Object)
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ProducerJob buildChannel$default(kotlin.coroutines.CoroutineContext,int,kotlin.jvm.functions.Function2,int,java.lang.Object)
com.example.revolut.rates.R$id: int invisible
io.reactivex.internal.operators.observable.ObservableToListSingle: ObservableToListSingle(io.reactivex.ObservableSource,int)
okhttp3.Headers: java.lang.String name(int)
androidx.core.R
kotlin.ranges.LongProgression: long getStep()
androidx.appcompat.widget.AppCompatCheckedTextView: void setTextAppearance(android.content.Context,int)
com.jakewharton.rxbinding3.widget.RxPopupMenu: io.reactivex.Observable dismisses(android.widget.PopupMenu)
androidx.viewpager.widget.ViewPager: void onDraw(android.graphics.Canvas)
com.example.revolut.rates.R$styleable: int ConstraintSet_android_scaleX
androidx.databinding.library.baseAdapters.BuildConfig: int VERSION_CODE
androidx.appcompat.R$attr: int textColorSearchUrl
androidx.slidingpanelayout.widget.SlidingPaneLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: AsyncListUtil$ViewCallback()
androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat$Builder setLegacyStreamType(int)
dagger.android.support.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
androidx.appcompat.R$color: int abc_tint_spinner
androidx.coordinatorlayout.R$id: int notification_main_column_container
dagger.android.support.R$dimen: int abc_control_padding_material
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(boolean[],kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.BatchingListUpdateCallback: void onChanged(int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(byte[],kotlin.jvm.functions.Function2)
io.reactivex.Observable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate)
androidx.appcompat.graphics.drawable.DrawableContainer: void setHotspot(float,float)
kotlin.text.CharCategory: kotlin.text.CharCategory END_PUNCTUATION
com.example.revolut.rates.R$id: int time
androidx.core.net.ConnectivityManagerCompat$RestrictBackgroundStatus
androidx.core.util.SparseIntArrayKt$valueIterator$1: int getIndex()
io.reactivex.internal.operators.completable.CompletableOnErrorComplete: void subscribeActual(io.reactivex.CompletableObserver)
kotlin.text.StringsKt__StringsJVMKt: byte[] encodeToByteArray(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateDefaultLayoutParams()
okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainAll(java.util.Collection,kotlin.sequences.Sequence)
io.reactivex.internal.util.ArrayListSupplier
io.reactivex.subjects.UnicastSubject: io.reactivex.subjects.UnicastSubject create(boolean)
kotlin.jvm.functions.Function15: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
dagger.android.ReleaseReferencesAtCreator
io.reactivex.internal.subscriptions.EmptySubscription: boolean offer(java.lang.Object,java.lang.Object)
okhttp3.internal.connection.StreamAllocation: okhttp3.EventListener eventListener
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object)
retrofit2.internal.EverythingIsNonNull
androidx.core.ktx.R$dimen: int notification_big_circle_margin
androidx.core.app.NotificationCompat: boolean getLocalOnly(android.app.Notification)
io.reactivex.Scheduler$Worker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable)
io.reactivex.internal.operators.observable.ObservableAnySingle
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int getColumnCount()
io.reactivex.internal.disposables.ListCompositeDisposable: boolean delete(io.reactivex.disposables.Disposable)
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewAddEvent: com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewAddEvent copy(android.view.ViewGroup,android.view.View)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int ANCHOR_TOP
androidx.appcompat.R$dimen: int notification_right_icon_size
androidx.recyclerview.R$attr: int ttcIndex
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void sort(java.util.List)
com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory$ResponseCallAdapter$adapt$2: void onFailure(retrofit2.Call,java.lang.Throwable)
kotlin.io.FilesKt__UtilsKt: boolean startsWith(java.io.File,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(long[],kotlin.jvm.functions.Function2)
dagger.android.support.R$styleable: int Toolbar_titleMarginStart
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object any(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
dagger.android.support.R$color: int abc_search_url_text_normal
androidx.appcompat.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
androidx.appcompat.R$attr: int searchIcon
com.google.gson.annotations.SerializedName: java.lang.String[] alternate()
io.reactivex.internal.schedulers.AbstractDirectTask: void dispose()
androidx.appcompat.R$dimen: int abc_action_bar_elevation_material
io.reactivex.Observable: io.reactivex.Observable unsubscribeOn(io.reactivex.Scheduler)
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable: SingleFlatMapIterableFlowable(io.reactivex.SingleSource,io.reactivex.functions.Function)
androidx.constraintlayout.solver.Metrics: long minimizeGoal
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber: long serialVersionUID
androidx.appcompat.app.WindowDecorActionBar$TabImpl: void select()
androidx.appcompat.R$id: int action_bar_root
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trimStart(java.lang.CharSequence,char[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(byte[])
androidx.core.location.LocationKt: double component2(android.location.Location)
androidx.appcompat.R$styleable: int MenuItem_android_checkable
dagger.android.support.R$string: int abc_font_family_display_3_material
androidx.constraintlayout.widget.R$attr: int layout_constraintWidth_percent
androidx.core.util.SparseIntArrayKt: boolean isEmpty(android.util.SparseIntArray)
androidx.fragment.R$styleable: int[] FontFamilyFont
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA
androidx.core.app.ShareCompat$IntentReader: java.lang.String[] getEmailCc()
com.example.revolut.rates.R$dimen: int currency_symbol_margin_top
androidx.lifecycle.extensions.R$styleable: int FontFamilyFont_android_fontWeight
kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()
androidx.core.view.NestedScrollingChild: boolean hasNestedScrollingParent()
io.reactivex.internal.operators.maybe.MaybeToFlowable: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.observers.ForEachWhileObserver
okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)
androidx.core.provider.FontRequest: int getCertificatesArrayResId()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)
dagger.android.support.R$style: int TextAppearance_AppCompat_Large_Inverse
androidx.core.app.NotificationCompat$Style: void setBuilder(androidx.core.app.NotificationCompat$Builder)
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope[] values()
androidx.core.util.RangeKt
com.example.revolut.rates.R$styleable: int AppCompatTextHelper_android_drawableEnd
io.reactivex.Single: io.reactivex.Single map(io.reactivex.functions.Function)
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)
androidx.core.app.NotificationCompat: java.lang.String getChannelId(android.app.Notification)
androidx.core.provider.FontsContractCompat$FontRequestCallback: void onTypefaceRequestFailed(int)
com.jakewharton.rxbinding3.widget.RxSearchView
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(byte[],byte)
dagger.android.support.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: int getSize()
androidx.collection.CircularIntArray: int getFirst()
com.example.revolut.rates.R$styleable: int AppCompatTheme_windowMinWidthMajor
androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
io.reactivex.internal.functions.ObjectHelper: int hashCode(java.lang.Object)
androidx.constraintlayout.widget.R$styleable
androidx.customview.widget.ExploreByTouchHelper: void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
io.reactivex.internal.disposables.ArrayCompositeDisposable: ArrayCompositeDisposable(int)
androidx.asynclayoutinflater.R$id: int tag_transition_group
kotlin.Metadata: java.lang.String[] d2()
com.example.revolut.rates.R$styleable: int SwitchCompat_switchMinWidth
androidx.appcompat.R$attr: int showTitle
kotlin.UShortArray: kotlin.collections.UShortIterator iterator()
androidx.core.graphics.ColorKt: int component2(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(float[],java.util.Comparator)
androidx.fragment.app.Fragment: android.content.Context getContext()
io.reactivex.ObservableConverter
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_weightSum
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)
androidx.appcompat.view.WindowCallbackWrapper: boolean onMenuItemSelected(int,android.view.MenuItem)
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed
kotlin.jvm.internal.EnumCompanionObject: kotlin.jvm.internal.EnumCompanionObject INSTANCE
com.example.revolut.rates.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
io.reactivex.Observable: io.reactivex.Observable switchOnNextDelayError(io.reactivex.ObservableSource)
androidx.legacy.v4.R$style: int Widget_Support_CoordinatorLayout
androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$1: void onTransitionEnd(android.transition.Transition)
com.google.gson.reflect.TypeToken: int hashCode()
io.reactivex.Flowable: io.reactivex.Flowable onExceptionResumeNext(org.reactivestreams.Publisher)
androidx.appcompat.app.AppCompatActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
kotlin.jvm.internal.ClassReference: ClassReference(java.lang.Class)
androidx.core.view.MenuItemCompat: boolean expandActionView(android.view.MenuItem)
androidx.appcompat.widget.PopupMenu: void dismiss()
io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,int)
com.example.revolut.rates.R$id: int tabMode
androidx.core.view.ViewCompat: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setGoneMargin(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int)
androidx.core.app.NotificationCompat$MessagingStyle: void restoreFromCompatExtras(android.os.Bundle)
dagger.android.support.R$dimen: int abc_dialog_padding_top_material
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: int getSize()
kotlinx.coroutines.CoroutineDispatcher: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.collection.ArrayMap
androidx.appcompat.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
kotlin.sequences.FilteringSequence$iterator$1: java.util.Iterator getIterator()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(long[])
kotlin.jvm.internal.MagicApiIntrinsics: int intMagicApiCall(java.lang.Object)
com.example.revolut.rates.R$attr: int autoCompleteTextViewStyle
kotlin.ranges.UIntRange: UIntRange(int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ThemedSpinnerAdapter
androidx.viewpager.widget.PagerTitleStrip: void setTextSize(int,float)
androidx.drawerlayout.R$dimen: int compat_button_padding_horizontal_material
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void scheduleSelf(java.lang.Runnable,long)
androidx.print.PrintHelper: int ORIENTATION_LANDSCAPE
kotlin.collections.ArraysKt___ArraysKt: short last(short[],kotlin.jvm.functions.Function1)
kotlin.coroutines.experimental.CombinedContext: kotlin.coroutines.experimental.CoroutineContext$Element getElement()
dagger.android.support.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
androidx.appcompat.R$attr: int fontStyle
kotlinx.coroutines.CompletionHandler_commonKt
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object fold(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ActionBarOverlayLayout
androidx.recyclerview.widget.SnapHelper: androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.content.res.ComplexColorCompat: boolean willDraw()
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuBuilder mMenu
dagger.android.support.R$id: int text
kotlin.Result: int hashCode-impl(java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout
io.reactivex.internal.operators.flowable.FlowableRepeatWhen: void subscribeActual(org.reactivestreams.Subscriber)
com.example.revolut.rates.R$dimen: int abc_action_button_min_width_overflow_material
androidx.versionedparcelable.VersionedParcel: java.io.Serializable readSerializable()
dagger.android.support.R$integer: int cancel_button_image_alpha
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: java.lang.Float get(int)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setActionView(android.view.View)
io.reactivex.internal.operators.observable.ObservableNever: void subscribeActual(io.reactivex.Observer)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float singleOrNull(float[],kotlin.jvm.functions.Function1)
androidx.constraintlayout.solver.widgets.ResolutionNode: void invalidate()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingRight()
retrofit2.KotlinExtensions$awaitResponse$2$2: void onResponse(retrofit2.Call,retrofit2.Response)
androidx.viewpager.R$styleable: int FontFamily_fontProviderQuery
dagger.android.support.R$id: int up
androidx.appcompat.R$styleable: int AppCompatTheme_selectableItemBackground
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(boolean[],int)
okhttp3.Authenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: boolean contains(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(double[],double)
androidx.core.content.ContextCompat: int getColor(android.content.Context,int)
kotlinx.android.extensions.CacheImplementation: kotlinx.android.extensions.CacheImplementation[] values()
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat
io.reactivex.internal.subscribers.BoundedSubscriber: boolean isDisposed()
androidx.media.AudioAttributesCompat: int CONTENT_TYPE_SPEECH
io.reactivex.internal.schedulers.ScheduledDirectPeriodicTask: java.lang.Runnable getWrappedRunnable()
io.reactivex.internal.operators.completable.CompletableDisposeOn: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.processors.MulticastProcessor: boolean hasThrowable()
androidx.appcompat.R$dimen: int abc_action_bar_default_padding_end_material
io.reactivex.internal.subscribers.InnerQueuedSubscriber: void setDone()
com.example.revolut.rates.R$drawable: int abc_ab_share_pack_mtrl_alpha
androidx.databinding.ViewDataBinding: void registerTo(int,java.lang.Object,androidx.databinding.ViewDataBinding$CreateWeakListener)
io.reactivex.internal.operators.flowable.FlowableFromIterable: void subscribe(org.reactivestreams.Subscriber,java.util.Iterator)
kotlin.jvm.internal.ByteSpreadBuilder: int getSize(byte[])
okhttp3.Cache: void delete()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-HwE9HBo(int[],java.lang.Iterable)
io.reactivex.internal.operators.observable.ObservableBufferTimed
com.example.revolut.rates.R$drawable: int icon_nzd
androidx.appcompat.widget.ToolbarWidgetWrapper: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object access$getREMOVE_PREPARED$p()
io.reactivex.observers.ResourceSingleObserver: void onStart()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet
androidx.core.ktx.R$drawable: int notification_bg_low_pressed
io.reactivex.internal.subscribers.SubscriberResourceWrapper: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.R$styleable: int FontFamilyFont_android_fontVariationSettings
io.reactivex.internal.operators.observable.ObservableWindow: ObservableWindow(io.reactivex.ObservableSource,long,long,int)
io.reactivex.Observable: io.reactivex.Observable timeInterval(java.util.concurrent.TimeUnit)
com.example.revolut.rates.data.model.Rate: java.lang.Double getRate()
kotlin.text.CharDirectionality$Companion: kotlin.text.CharDirectionality valueOf(int)
androidx.core.net.TrafficStatsCompat: void clearThreadStatsTag()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterNotTo$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter INET_ADDRESS
androidx.appcompat.R$id: int progress_circular
io.reactivex.internal.operators.maybe.MaybeFilter
okhttp3.internal.Version
okhttp3.Request$Builder: okhttp3.Request$Builder head()
kotlinx.coroutines.internal.LockFreeMPMCQueue: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
dagger.android.support.R$id: int alertTitle
kotlin.jvm.internal.MutablePropertyReference1Impl
dagger.android.support.R$attr: int actionModeFindDrawable
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter)
androidx.recyclerview.widget.LinearLayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver: long serialVersionUID
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(long[],long,int,int,int,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableReplay$UnboundedReplayBuffer: long serialVersionUID
androidx.appcompat.R$attr: int actionBarItemBackground
androidx.core.widget.ScrollerCompat: int getFinalY()
androidx.legacy.coreutils.R$styleable: int[] FontFamilyFont
io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence zip(kotlin.sequences.Sequence,kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
androidx.core.content.res.TypedArrayUtils: int getAttr(android.content.Context,int,int)
androidx.customview.widget.ViewDragHelper: int getActivePointerId()
io.reactivex.Observable: void safeSubscribe(io.reactivex.Observer)
com.example.revolut.rates.R$layout: int notification_template_icon_group
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(byte[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.DecorContentParent: void setMenuPrepared()
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
kotlinx.coroutines.CoroutineExceptionHandlerKt: void handleCoroutineException$default(kotlin.coroutines.CoroutineContext,java.lang.Throwable,kotlinx.coroutines.Job,int,java.lang.Object)
kotlinx.coroutines.internal.SystemPropsKt: long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.util.List chunked(java.lang.CharSequence,int)
io.reactivex.Observable: io.reactivex.Observable window(io.reactivex.ObservableSource)
okio.Buffer: okio.Buffer writeTo(java.io.OutputStream)
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(java.lang.Object[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: float getMin()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.internal.Symbol access$getUNLOCKED$p()
androidx.core.util.SparseArrayKt$valueIterator$1: int getIndex()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void invalidate()
androidx.core.text.BidiFormatter$Builder
android.support.v4.media.MediaBrowserCompat$ItemCallback: void onError(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.example.revolut.rates.R$id: int buttonPanel
androidx.fragment.R$styleable: int FontFamily_fontProviderCerts
com.example.revolut.rates.R$color: int abc_tint_default
androidx.core.app.Person: java.lang.CharSequence getName()
io.reactivex.Maybe: io.reactivex.Maybe flatMap(io.reactivex.functions.Function)
androidx.core.view.NestedScrollingChild: void setNestedScrollingEnabled(boolean)
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.constraintlayout.solver.Metrics: long measures
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
kotlin.Result$Companion
androidx.appcompat.graphics.drawable.DrawableWrapper: void setAlpha(int)
kotlinx.coroutines.ExecutorCoroutineDispatcherBase: void close()
okio.BufferedSource: java.io.InputStream inputStream()
androidx.vectordrawable.R$id: int time
android.support.v4.media.MediaBrowserCompat$ItemReceiver
androidx.databinding.ViewStubProxy: void setContainingBinding(androidx.databinding.ViewDataBinding)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.ULongProgression reversed(kotlin.ranges.ULongProgression)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: void reset()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setPrettyPrinting()
kotlin.UShort: boolean equals-impl(short,java.lang.Object)
kotlin.io.FilesKt__UtilsKt: boolean startsWith(java.io.File,java.io.File)
androidx.core.hardware.display.DisplayManagerCompat: android.view.Display getDisplay(int)
androidx.loader.content.CursorLoader: void cancelLoadInBackground()
androidx.core.util.SparseArrayKt$valueIterator$1: java.lang.Object next()
io.reactivex.observers.ResourceObserver: void onStart()
io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int,java.util.concurrent.Callable,boolean)
kotlinx.coroutines.GlobalScope: kotlinx.coroutines.GlobalScope INSTANCE
io.reactivex.Observable: io.reactivex.Observable concatArrayEager(io.reactivex.ObservableSource[])
io.reactivex.Observable: io.reactivex.Observable repeatUntil(io.reactivex.functions.BooleanSupplier)
kotlinx.coroutines.internal.LockFreeLinkedListNode$describeRemove$1: kotlinx.coroutines.internal.Removed updatedNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.core.util.SparseIntArrayKt: android.util.SparseIntArray plus(android.util.SparseIntArray,android.util.SparseIntArray)
kotlin.collections.ArraysKt___ArraysKt: boolean none(boolean[],kotlin.jvm.functions.Function1)
io.reactivex.Observable: io.reactivex.Observable take(long)
androidx.legacy.v4.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: void saveHierarchyState(android.util.SparseArray)
okhttp3.internal.http2.Header: Header(okio.ByteString,java.lang.String)
androidx.appcompat.widget.ListPopupWindow: android.widget.ListView getListView()
androidx.appcompat.app.ActionBar: java.lang.CharSequence getSubtitle()
retrofit2.Converter$Factory: retrofit2.Converter stringConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
io.reactivex.functions.BiFunction
okhttp3.internal.Util: void closeQuietly(java.net.ServerSocket)
androidx.core.transition.TransitionKt$addListener$5: TransitionKt$addListener$5()
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.ClosedRange,double)
androidx.core.graphics.ColorUtils: void XYZToLAB(double,double,double,double[])
androidx.media.AudioAttributesCompat: int USAGE_ASSISTANCE_ACCESSIBILITY
io.reactivex.observables.GroupedObservable: GroupedObservable(java.lang.Object)
androidx.appcompat.widget.PopupMenu: void inflate(int)
androidx.recyclerview.widget.RecyclerView$OnScrollListener: void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence generateSequence(kotlin.jvm.functions.Function0)
dagger.internal.Beta
androidx.databinding.ObservableShort: short get()
com.example.revolut.rates.R$styleable: int Toolbar_collapseContentDescription
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
kotlinx.coroutines.AbstractContinuation: java.lang.String nameString()
io.reactivex.FlowableEmitter: io.reactivex.FlowableEmitter serialize()
androidx.appcompat.widget.ListPopupWindow: android.graphics.drawable.Drawable getBackground()
kotlin.coroutines.experimental.CoroutineContext$DefaultImpls
androidx.coordinatorlayout.R$style: int TextAppearance_Compat_Notification_Info
androidx.vectordrawable.R$dimen: int notification_media_narrow_margin
androidx.core.animation.AnimatorKt$addListener$2: androidx.core.animation.AnimatorKt$addListener$2 INSTANCE
androidx.core.graphics.RegionKt: void forEach(android.graphics.Region,kotlin.jvm.functions.Function1)
io.reactivex.internal.observers.SubscriberCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
okio.Buffer: okio.Buffer writeString(java.lang.String,java.nio.charset.Charset)
androidx.media.R$id: int status_bar_latest_event_content
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object)
kotlin.reflect.KCallable: boolean isAbstract()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int goneLeftMargin
kotlinx.coroutines.channels.AbstractSendChannel$onSend$1: void registerSelectClause2(kotlinx.coroutines.selects.SelectInstance,java.lang.Object,kotlin.jvm.functions.Function2)
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: long serialVersionUID
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(int[],java.lang.Iterable)
okio.Buffer: okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_DES_CBC_SHA
io.reactivex.internal.operators.mixed.MaterializeSingleObserver: void onComplete()
androidx.legacy.coreui.R$styleable: int CoordinatorLayout_Layout_layout_behavior
com.example.revolut.rates.R$styleable: int AppCompatTheme_homeAsUpIndicator
androidx.core.R$id: int notification_main_column_container
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationStart(android.view.View)
io.reactivex.Observable: io.reactivex.Single toList(int)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object elementAtOrNull(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.Continuation)
androidx.core.app.NavUtils: void navigateUpTo(android.app.Activity,android.content.Intent)
com.example.revolut.rates.R$styleable
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minWith(double[],java.util.Comparator)
kotlin.Experimental$Level: kotlin.Experimental$Level ERROR
androidx.core.view.NestedScrollingChild2: boolean hasNestedScrollingParent(int)
androidx.collection.SparseArrayCompat: boolean containsKey(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(short[],java.util.Collection)
kotlin.sequences.IndexingSequence: java.util.Iterator iterator()
androidx.lifecycle.extensions.R$dimen: int compat_button_padding_vertical_material
androidx.core.text.PrecomputedTextCompat: int length()
kotlinx.coroutines.CancellableContinuation$DefaultImpls: java.lang.Object tryResume$default(kotlinx.coroutines.CancellableContinuation,java.lang.Object,java.lang.Object,int,java.lang.Object)
androidx.core.R$dimen: int notification_main_column_padding_top
dagger.android.support.R$dimen: int abc_seekbar_track_background_height_material
io.reactivex.Flowable: io.reactivex.Flowable take(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.internal.operators.completable.CompletableToSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void resolve(androidx.constraintlayout.solver.widgets.ResolutionAnchor,float)
kotlinx.coroutines.channels.ClosedSendChannelException
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet)
com.example.revolut.rates.di.Injector$Companion: void setAppComponent(com.example.revolut.rates.di.AppComponent)
com.example.revolut.rates.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)
androidx.core.transition.TransitionKt$addListener$3: void invoke(android.transition.Transition)
com.google.gson.JsonElement: com.google.gson.JsonPrimitive getAsJsonPrimitive()
com.example.revolut.rates.R$color: int primary_material_dark
kotlin.reflect.KTypeProjection: kotlin.reflect.KVariance getVariance()
androidx.core.app.NotificationCompat$Style: android.app.Notification build()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedQueryParameter(java.lang.String,java.lang.String)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: void complete(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object)
com.jakewharton.rxbinding3.core.R$id: int forever
com.example.revolut.rates.R$attr: int textAppearanceSmallPopupMenu
androidx.media.R$layout: int notification_template_media
androidx.appcompat.app.ActionBar$Tab: java.lang.Object getTag()
kotlin.collections.ArraysKt___ArraysKt: float reduceRightIndexed(float[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$reduceIndexed$1
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitle(int)
dagger.android.support.R$styleable: int TextAppearance_textAllCaps
androidx.appcompat.R$styleable: int AlertDialog_showTitle
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object performAtomicTrySelect(kotlinx.coroutines.internal.AtomicDesc)
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec codec()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)
dagger.android.support.AndroidSupportInjectionModule
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[])
io.reactivex.internal.operators.observable.ObservableReplay: io.reactivex.observables.ConnectableObservable create(io.reactivex.ObservableSource,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.comparisons.UComparisonsKt
androidx.recyclerview.widget.ItemTouchHelper: int ACTION_STATE_DRAG
io.reactivex.flowables.ConnectableFlowable: void connect(io.reactivex.functions.Consumer)
io.reactivex.Flowable: io.reactivex.Flowable window(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)
kotlin.text.Charsets: java.nio.charset.Charset UTF_8
androidx.appcompat.app.WindowDecorActionBar: void setSubtitle(int)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setAntiAlias(boolean)
io.reactivex.Single: io.reactivex.Flowable merge(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle extractMessagingStyleFromNotification(android.app.Notification)
dagger.android.support.DaggerAppCompatActivity_MembersInjector: DaggerAppCompatActivity_MembersInjector(javax.inject.Provider,javax.inject.Provider)
io.reactivex.internal.operators.flowable.FlowableDetach: void subscribeActual(org.reactivestreams.Subscriber)
dagger.android.support.R$styleable: int ActionBar_contentInsetEndWithActions
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: java.lang.Object getResult()
kotlin.Result: kotlin.Result box-impl(java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
io.reactivex.internal.util.VolatileSizeArrayList: int size()
io.reactivex.internal.operators.single.SingleDoOnSubscribe
androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintEnd_toEndOf
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams: SlidingPaneLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
kotlinx.coroutines.CoroutineName: java.lang.String getName()
kotlin.jvm.internal.TypeIntrinsics: java.util.Map$Entry castToMapEntry(java.lang.Object)
androidx.loader.R$id: int notification_background
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(short[],kotlin.jvm.functions.Function1)
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureLatest()
kotlin.KotlinVersion$Companion
dagger.android.support.R$dimen: int highlight_alpha_material_colored
androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(byte[])
dagger.android.support.R$styleable: int SearchView_defaultQueryHint
kotlin.collections.ArraysKt___ArraysKt: int indexOf(char[],char)
androidx.appcompat.widget.AppCompatRatingBar: AppCompatRatingBar(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.observable.BlockingObservableNext
androidx.core.graphics.drawable.WrappedDrawable
androidx.constraintlayout.solver.widgets.Helper: androidx.constraintlayout.solver.widgets.ConstraintWidget[] mWidgets
kotlin.UByteArray: boolean add-7apg3OU(byte)
kotlin.jvm.internal.PropertyReference1Impl: java.lang.String getSignature()
io.reactivex.internal.schedulers.RxThreadFactory: long serialVersionUID
com.google.gson.internal.Excluder: boolean excludeClass(java.lang.Class,boolean)
kotlinx.coroutines.internal.LockFreeMPSCQueueCore: java.lang.Object removeFirstOrNull()
androidx.viewpager.R$attr: int fontProviderAuthority
io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeConditionalSubscription: long serialVersionUID
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean enoughToFilter()
androidx.core.widget.TextViewCompat: void setCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable: io.reactivex.Observable fuseToObservable()
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function getInitComputationSchedulerHandler()
androidx.recyclerview.widget.PagerSnapHelper: int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.app.AlertDialog$Builder: AlertDialog$Builder(android.content.Context,int)
io.reactivex.internal.operators.observable.ObservableScanSeed: ObservableScanSeed(io.reactivex.ObservableSource,java.util.concurrent.Callable,io.reactivex.functions.BiFunction)
kotlin.jvm.internal.ShortCompanionObject: short MIN_VALUE
androidx.appcompat.app.ActionBar: int DISPLAY_SHOW_CUSTOM
io.reactivex.Single: io.reactivex.Completable ignoreElement()
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator,int,int)
androidx.core.view.ViewCompat$FocusDirection
androidx.core.ktx.R$color: int notification_icon_bg_color
retrofit2.http.Query: java.lang.String value()
io.reactivex.internal.observers.FutureObserver: void onNext(java.lang.Object)
dagger.android.HasContentProviderInjector
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode PUBLICATION
io.reactivex.internal.operators.observable.BlockingObservableNext: BlockingObservableNext(io.reactivex.ObservableSource)
com.jakewharton.rxbinding3.widget.RxRatingBar
androidx.appcompat.app.AlertDialog: void setIconAttribute(int)
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable)
androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)
androidx.legacy.coreutils.R$dimen: int compat_button_inset_vertical_material
kotlin.jvm.internal.CharSpreadBuilder: char[] toArray()
kotlinx.coroutines.CoroutineId$Key
androidx.media.AudioAttributesCompat$Builder: AudioAttributesCompat$Builder(androidx.media.AudioAttributesCompat)
kotlin.collections.ArraysKt___ArraysKt: int single(int[])
androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener: void onSharedElementsReady()
dagger.android.support.R$attr: int popupTheme
io.reactivex.internal.operators.flowable.FlowableThrottleLatest: FlowableThrottleLatest(io.reactivex.Flowable,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
io.reactivex.internal.operators.single.SingleDelayWithSingle: SingleDelayWithSingle(io.reactivex.SingleSource,io.reactivex.SingleSource)
kotlin.UByteArray: boolean add(java.lang.Object)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertFailure(io.reactivex.functions.Predicate,java.lang.Object[])
io.reactivex.Maybe: io.reactivex.disposables.Disposable subscribe()
kotlin.jvm.internal.Intrinsics: boolean areEqual(float,java.lang.Float)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: java.lang.Object get(int)
androidx.appcompat.widget.ActionMenuView$ActionMenuChildView
com.google.gson.ExclusionStrategy: boolean shouldSkipField(com.google.gson.FieldAttributes)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.RequestBody)
io.reactivex.internal.operators.flowable.FlowableAll$AllSubscriber: long serialVersionUID
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void setDy(int)
kotlinx.coroutines.CoroutineName
androidx.fragment.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)
com.example.revolut.rates.R$styleable: int AppCompatTheme_windowActionBarOverlay
io.reactivex.SingleEmitter: void setDisposable(io.reactivex.disposables.Disposable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int[] getState()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: boolean contains(java.lang.Object)
androidx.appcompat.R$style: int Base_Animation_AppCompat_Tooltip
com.example.revolut.rates.base.BaseViewModel: void setNotifier(java.lang.Object)
dagger.android.support.R$id: int search_mag_icon
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(long[],java.util.Collection,kotlin.jvm.functions.Function1)
io.reactivex.Single: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function)
io.reactivex.internal.operators.single.SingleFromCallable: SingleFromCallable(java.util.concurrent.Callable)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)
dagger.android.support.R$dimen: int abc_action_bar_overflow_padding_end_material
androidx.swiperefreshlayout.R$id: int icon
kotlin.jvm.internal.IntSpreadBuilder: void add(int)
androidx.appcompat.R$id: int textSpacerNoTitle
okio.BufferedSource: java.lang.String readUtf8LineStrict()
kotlin.sequences.SequencesKt___SequencesKt: double averageOfFloat(kotlin.sequences.Sequence)
kotlinx.coroutines.channels.ActorKt
kotlin.text.Regex: java.lang.String getPattern()
androidx.core.util.SparseArrayKt: boolean remove(android.util.SparseArray,int,java.lang.Object)
androidx.loader.R$id: int icon_group
androidx.viewpager.widget.PagerTabStrip: void setPadding(int,int,int,int)
androidx.core.view.TintableBackgroundView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(byte[],kotlin.ranges.IntRange)
io.reactivex.Flowable: io.reactivex.Single toSortedList(int)
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.sync.Empty access$getEmptyUnlocked$p()
io.reactivex.internal.operators.single.SingleTakeUntil
androidx.appcompat.R$style: int Theme_AppCompat_Dialog_MinWidth
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Short toShortOrNull(java.lang.String,int)
kotlin.collections.ArraysKt___ArraysKt: int[] sortedArrayDescending(int[])
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_UNFOLLOW
io.reactivex.parallel.ParallelFlowable
okio.BufferedSource: void readFully(okio.Buffer,long)
androidx.fragment.R$drawable: int notify_panel_notification_icon_bg
androidx.constraintlayout.solver.widgets.Rectangle: int width
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_TOUCH_EXPLORATION_GESTURE_END
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()
com.example.revolut.rates.R$attr: int logo
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(float[],java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: int indexOf(java.lang.Object)
com.example.revolut.rates.R$attr: int actionBarTabBarStyle
androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
io.reactivex.Observable: io.reactivex.Observable fromArray(java.lang.Object[])
androidx.appcompat.R$color: int material_deep_teal_500
androidx.recyclerview.R$style: int TextAppearance_Compat_Notification_Line2
dagger.android.support.R$styleable: int[] AppCompatTheme
androidx.core.graphics.PorterDuffKt: android.graphics.PorterDuffColorFilter toColorFilter(android.graphics.PorterDuff$Mode,int)
androidx.appcompat.R$styleable: int ActionBar_contentInsetStartWithNavigation
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(long,io.reactivex.functions.Action,io.reactivex.BackpressureOverflowStrategy)
kotlin.coroutines.experimental.CoroutinesKt: void startCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.experimental.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] sliceArray-ojwP5H8(short[],java.util.Collection)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.fragment.R$drawable: int notification_template_icon_bg
io.reactivex.internal.functions.Functions: io.reactivex.functions.Function identity()
androidx.vectordrawable.R$styleable: int ColorStateListItem_android_alpha
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isConnected()
androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)
io.reactivex.Observable: io.reactivex.Observable sample(long,java.util.concurrent.TimeUnit)
kotlin.io.TextStreamsKt: java.util.List readLines(java.io.Reader)
androidx.databinding.ObservableList: void removeOnListChangedCallback(androidx.databinding.ObservableList$OnListChangedCallback)
io.reactivex.observers.BaseTestConsumer: java.util.concurrent.CountDownLatch done
androidx.core.widget.ContentLoadingProgressBar: void onDetachedFromWindow()
androidx.arch.core.internal.SafeIterableMap: int hashCode()
androidx.slidingpanelayout.R$attr: int fontProviderCerts
okio.ByteString: okio.ByteString decodeBase64(java.lang.String)
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn: MaybeUnsubscribeOn(io.reactivex.MaybeSource,io.reactivex.Scheduler)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object first(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.appcompat.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
androidx.coordinatorlayout.R$id: int right
com.jakewharton.rxbinding3.view.RxMenuItem: io.reactivex.Observable actionViewEvents(android.view.MenuItem,kotlin.jvm.functions.Function1)
androidx.constraintlayout.solver.LinearSystem: boolean FULL_DEBUG
io.reactivex.internal.operators.parallel.ParallelFromPublisher: int parallelism()
androidx.appcompat.app.AppCompatDelegate: void onStart()
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean isTitleTruncated()
io.reactivex.Single: io.reactivex.Flowable concat(org.reactivestreams.Publisher)
io.reactivex.schedulers.Schedulers: io.reactivex.Scheduler io()
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.sequences.SequencesKt__SequenceBuilderKt: java.util.Iterator iterator(kotlin.jvm.functions.Function2)
androidx.databinding.ObservableParcelable: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.selects.SelectClause2: void registerSelectClause2(kotlinx.coroutines.selects.SelectInstance,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(android.content.Context,android.util.AttributeSet)
okhttp3.internal.proxy.NullProxySelector: NullProxySelector()
okio.ByteString: boolean startsWith(okio.ByteString)
dagger.android.support.R$styleable: int MenuGroup_android_enabled
io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(java.lang.Iterable,io.reactivex.functions.Function,int)
retrofit2.CallAdapter$Factory: java.lang.reflect.Type getParameterUpperBound(int,java.lang.reflect.ParameterizedType)
okhttp3.internal.Internal: okhttp3.internal.Internal instance
androidx.core.util.SparseArrayKt$valueIterator$1
com.example.revolut.rates.R$attr: int selectableItemBackground
androidx.appcompat.R$styleable: int MenuView_android_itemBackground
androidx.legacy.coreui.R$dimen: int compat_notification_large_icon_max_height
com.example.revolut.rates.R$styleable: int RecyclerView_fastScrollHorizontalTrackDrawable
androidx.legacy.coreui.R$id: int text
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList)
io.reactivex.Observable: io.reactivex.Observable window(long)
okio.BufferedSink: okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset)
io.reactivex.internal.operators.parallel.ParallelRunOn: ParallelRunOn(io.reactivex.parallel.ParallelFlowable,io.reactivex.Scheduler,int)
androidx.core.view.MotionEventCompat: float getY(android.view.MotionEvent,int)
androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
io.reactivex.internal.disposables.EmptyDisposable: void error(java.lang.Throwable,io.reactivex.CompletableObserver)
com.example.revolut.rates.R$attr: int buttonIconDimen
kotlin.text.StringsKt___StringsKt: java.lang.String slice(java.lang.String,kotlin.ranges.IntRange)
io.reactivex.subscribers.ResourceSubscriber
androidx.fragment.app.FragmentManager: void enableDebugLogging(boolean)
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams: SlidingPaneLayout$LayoutParams(int,int)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter)
androidx.fragment.R$id: int tag_unhandled_key_event_manager
kotlin.properties.Delegates$observable$1: Delegates$observable$1(kotlin.jvm.functions.Function3,java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
android.support.v4.media.session.MediaControllerCompat$TransportControls: void prepareFromUri(android.net.Uri,android.os.Bundle)
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-us8wMrg(long[],long[])
io.reactivex.internal.queue.SpscArrayQueue: java.lang.Object poll()
android.support.v4.media.session.PlaybackStateCompat: int SHUFFLE_MODE_NONE
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isHideOnContentScrollEnabled()
android.support.v4.media.MediaBrowserCompat$MediaItem: android.support.v4.media.MediaDescriptionCompat getDescription()
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe: FlowableFlatMapMaybe(io.reactivex.Flowable,io.reactivex.functions.Function,boolean,int)
androidx.recyclerview.widget.SortedList: SortedList(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback)
androidx.legacy.coreutils.R$dimen: int compat_button_padding_vertical_material
androidx.loader.content.AsyncTaskLoader: void setUpdateThrottle(long)
com.example.revolut.rates.viewmodel.CurrenciesViewModel_MembersInjector: CurrenciesViewModel_MembersInjector(javax.inject.Provider)
kotlin.internal.jdk7.JDK7PlatformImplementations
io.reactivex.internal.observers.DisposableLambdaObserver
androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$1
androidx.versionedparcelable.ParcelField: int value()
kotlin.text.StringsKt__IndentKt: java.lang.String trimMargin(java.lang.String,java.lang.String)
io.reactivex.observers.DisposableSingleObserver
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_MD5
androidx.core.ktx.R$styleable: int FontFamily_fontProviderQuery
androidx.databinding.ViewDataBinding: byte safeUnbox(java.lang.Byte)
androidx.customview.R$styleable: int GradientColor_android_endY
okhttp3.ConnectionSpec: java.lang.String toString()
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
androidx.fragment.app.FragmentTransitionImpl: FragmentTransitionImpl()
androidx.loader.R$color: int secondary_text_default_material_light
com.example.revolut.rates.R$styleable: int AppCompatTheme_listMenuViewStyle
kotlin.jvm.internal.CallableReference$NoReceiver
dagger.android.support.R$id: int always
com.example.revolut.rates.R$id: int onAttachStateChangeListener
kotlin.random.FallbackThreadLocalRandom: java.util.Random getImpl()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: int lastIndexOf(java.lang.Object)
android.support.v4.media.session.IMediaSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
io.reactivex.internal.operators.maybe.MaybeError
androidx.swiperefreshlayout.R$dimen: int notification_subtext_size
io.reactivex.flowables.GroupedFlowable: java.lang.Object getKey()
androidx.fragment.app.FragmentTransitionImpl: void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.View getActionView()
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: void complete(java.lang.Object,java.lang.Object)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintLeft_toLeftOf
kotlinx.coroutines.DisposeOnCompletion: DisposeOnCompletion(kotlinx.coroutines.Job,kotlinx.coroutines.DisposableHandle)
androidx.core.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)
androidx.core.content.res.TypedArrayKt: int getDimensionPixelSizeOrThrow(android.content.res.TypedArray,int)
io.reactivex.internal.operators.observable.ObservableDebounce
com.example.revolut.rates.R$styleable: int GradientColor_android_endColor
androidx.core.view.MenuItemCompat: boolean collapseActionView(android.view.MenuItem)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.example.revolut.rates.R$attr: int popupMenuStyle
kotlin.Metadata: int[] bv()
androidx.core.graphics.drawable.RoundedBitmapDrawable: float getCornerRadius()
kotlin.collections.ArraysKt___ArraysJvmKt: long[] plus(long[],long)
androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.WorkQueue getLocalQueue()
androidx.appcompat.widget.AppCompatEditText: void drawableStateChanged()
androidx.fragment.R$drawable: int notification_action_background
androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory$EdgeDirection
androidx.core.ktx.R$style
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback)
kotlinx.coroutines.channels.AbstractChannel$enqueueReceive$$inlined$addLastIfPrevAndIf$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder)
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableSet(java.lang.Object)
androidx.collection.SimpleArrayMap: SimpleArrayMap(int)
kotlin.collections.AbstractCollection: boolean isEmpty()
io.reactivex.internal.util.NotificationLite: java.lang.Object subscription(org.reactivestreams.Subscription)
io.reactivex.Observable: Observable()
androidx.core.ktx.R$styleable: int GradientColor_android_endColor
androidx.legacy.app.ActionBarDrawerToggle: void onDrawerSlide(android.view.View,float)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void ignoreView(android.view.View)
com.example.revolut.rates.R$style: int Widget_Compat_NotificationActionContainer
kotlinx.coroutines.CompletedExceptionally: java.lang.String toString()
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: long serialVersionUID
androidx.core.ktx.R$styleable: int FontFamilyFont_android_fontStyle
androidx.core.os.HandlerKt: java.lang.Runnable postDelayed(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0)
com.jakewharton.rxbinding3.view.RxView: io.reactivex.functions.Consumer visibility(android.view.View,int)
io.reactivex.internal.operators.observable.ObservableCountSingle
kotlin.text.StringsKt__StringsKt: java.lang.String substringBeforeLast(java.lang.String,char,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.fragment.R$drawable: int notification_bg_low
okio.InflaterSource: InflaterSource(okio.Source,java.util.zip.Inflater)
okhttp3.EventListener: void connectionReleased(okhttp3.Call,okhttp3.Connection)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.constraintlayout.solver.ArrayRow: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(char[],kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour()
com.example.revolut.rates.DataBindingInfo: DataBindingInfo()
androidx.appcompat.R$styleable: int[] ActionMode
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(long[],kotlin.jvm.functions.Function1)
dagger.android.support.R$styleable: int MenuItem_actionViewClass
kotlin.jvm.internal.SpreadBuilder: void add(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: long serialVersionUID
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicReferenceArray access$getBuffer$p(kotlinx.coroutines.scheduling.WorkQueue)
androidx.drawerlayout.R$id: int async
kotlin.coroutines.experimental.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.experimental.CoroutineContext$Element get(kotlin.coroutines.experimental.CoroutineContext$Element,kotlin.coroutines.experimental.CoroutineContext$Key)
androidx.coordinatorlayout.R$style: int TextAppearance_Compat_Notification_Line2
io.reactivex.internal.operators.flowable.FlowableDetach
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnSubscriber: long serialVersionUID
io.reactivex.internal.schedulers.ComputationScheduler: void shutdown()
io.reactivex.internal.operators.flowable.FlowableEmpty
okhttp3.Call: boolean isExecuted()
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type NONE
io.reactivex.internal.operators.maybe.AbstractMaybeWithUpstream: io.reactivex.MaybeSource source()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: int indexOf-xj2QHRw(short)
kotlin.sequences.TransformingSequence$iterator$1
androidx.cursoradapter.widget.CursorAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)
androidx.databinding.adapters.TextViewBindingAdapter: void setNumeric(android.widget.TextView,int)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function getIoSchedulerHandler()
kotlin.text.DelimitedRangesSequence$iterator$1: void setNextSearchIndex(int)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBeforeLast$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: long serialVersionUID
androidx.core.ktx.R$id: int line3
okhttp3.internal.http2.Header: okio.ByteString TARGET_METHOD
androidx.appcompat.R$attr: int dividerVertical
io.reactivex.internal.operators.maybe.MaybeToSingle: io.reactivex.MaybeSource source()
com.jakewharton.rxbinding3.InitialValueObservable: void subscribeListener(io.reactivex.Observer)
io.reactivex.internal.functions.Functions: io.reactivex.functions.Predicate predicateReverseFor(io.reactivex.functions.BooleanSupplier)
kotlin.UIntArray: void clear()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void lastIndex$annotations(byte[])
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit)
io.reactivex.internal.util.VolatileSizeArrayList: boolean addAll(java.util.Collection)
androidx.customview.R$id: int italic
androidx.core.util.LruCacheKt$lruCache$3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
dagger.android.support.R$drawable: int abc_scrubber_track_mtrl_alpha
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_DISPLAY_SUBTITLE
io.reactivex.internal.subscriptions.DeferredScalarSubscription: void request(long)
androidx.databinding.BindingMethods
androidx.core.app.NotificationCompat$MessagingStyle
kotlin.sequences.TransformingIndexedSequence$iterator$1: int getIndex()
androidx.customview.R$attr: int fontProviderCerts
dagger.android.support.R$attr: int listPreferredItemHeightLarge
com.example.revolut.rates.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
io.reactivex.processors.MulticastProcessor: io.reactivex.processors.MulticastProcessor create()
kotlin.text.RegexOption: kotlin.text.RegexOption DOT_MATCHES_ALL
io.reactivex.Maybe: io.reactivex.Maybe zip(java.lang.Iterable,io.reactivex.functions.Function)
io.reactivex.Flowable: io.reactivex.Flowable take(long)
androidx.appcompat.R$styleable: int AppCompatTheme_actionModePasteDrawable
com.example.revolut.rates.R$dimen: int hint_pressed_alpha_material_dark
androidx.fragment.R$styleable: int[] CoordinatorLayout
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: boolean contains(java.lang.Object)
androidx.constraintlayout.widget.ConstraintSet: void constrainPercentWidth(int,float)
kotlinx.coroutines.AbstractCoroutine: void coroutineContext$annotations()
io.reactivex.MaybeEmitter: void setDisposable(io.reactivex.disposables.Disposable)
kotlinx.coroutines.test.TestCoroutineContextKt: void withTestContext$default(kotlinx.coroutines.test.TestCoroutineContext,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.legacy.coreui.R$style: int TextAppearance_Compat_Notification
androidx.lifecycle.extensions.R$styleable: int FontFamily_fontProviderPackage
io.reactivex.plugins.RxJavaPlugins: void setOnFlowableSubscribe(io.reactivex.functions.BiFunction)
androidx.recyclerview.widget.PagerSnapHelper: android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.core.ktx.R$layout: int notification_action
androidx.asynclayoutinflater.R$id: int async
kotlin.io.ByteStreamsKt
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$sumBy$1
kotlin.coroutines.experimental.AbstractCoroutineContextElement: kotlin.coroutines.experimental.CoroutineContext$Key getKey()
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence chunkedSequence(java.lang.CharSequence,int,kotlin.jvm.functions.Function1)
androidx.appcompat.R$color: int abc_tint_switch_track
androidx.core.view.ViewKt$doOnPreDraw$1
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
android.support.v4.media.session.IMediaControllerCallback: void onShuffleModeChanged(int)
io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber: long serialVersionUID
androidx.legacy.v4.R$styleable: int[] CoordinatorLayout_Layout
io.reactivex.internal.operators.observable.ObservableFromFuture: void subscribeActual(io.reactivex.Observer)
androidx.databinding.adapters.TextViewBindingAdapter: void setBufferType(android.widget.TextView,android.widget.TextView$BufferType)
io.reactivex.internal.disposables.SequentialDisposable: SequentialDisposable()
androidx.core.ktx.R$styleable: int GradientColorItem_android_offset
androidx.appcompat.R$styleable: int MenuItem_android_onClick
androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)
androidx.core.app.JobIntentService: int onStartCommand(android.content.Intent,int,int)
dagger.android.DaggerBroadcastReceiver
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
kotlin.text.Typography: char half
androidx.recyclerview.widget.RecyclerView: int VERTICAL
androidx.recyclerview.R$id: int italic
kotlinx.coroutines.AbstractContinuation: java.lang.Void loopOnState(kotlin.jvm.functions.Function1)
io.reactivex.Flowable: io.reactivex.Flowable concatWith(org.reactivestreams.Publisher)
androidx.core.view.GravityCompat: int RELATIVE_HORIZONTAL_GRAVITY_MASK
androidx.recyclerview.widget.ItemTouchHelper$Callback: void onSelectedChanged(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
com.example.revolut.rates.R$styleable: int[] TextAppearance
dagger.android.support.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getSuccessfulResult(java.lang.Object)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setTextAppearance(android.content.Context,int)
io.reactivex.internal.observers.DeferredScalarDisposable: boolean tryDispose()
androidx.core.util.SparseLongArrayKt: boolean isEmpty(android.util.SparseLongArray)
io.reactivex.internal.operators.flowable.FlowableTakeUntil: FlowableTakeUntil(io.reactivex.Flowable,org.reactivestreams.Publisher)
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] copyInto$default(byte[],byte[],int,int,int,int,java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable throttleWithTimeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.os.ParcelCompat
androidx.legacy.coreutils.R$styleable: int GradientColor_android_tileMode
androidx.media.R$dimen: int subtitle_corner_radius
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintCircleRadius
androidx.core.app.FrameMetricsAggregator: int TOTAL_DURATION
io.reactivex.subjects.UnicastSubject: java.lang.Throwable getThrowable()
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Title
io.reactivex.internal.operators.observable.ObservableCollect: ObservableCollect(io.reactivex.ObservableSource,java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter nullValue()
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2
androidx.core.util.Preconditions: java.util.Collection checkCollectionNotEmpty(java.util.Collection,java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateWithTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.SendElement
io.reactivex.internal.operators.observable.ObservableGenerate
kotlin.coroutines.experimental.SafeContinuation
androidx.legacy.v4.R$dimen
kotlinx.coroutines.AbstractContinuation: AbstractContinuation(kotlin.coroutines.Continuation,int)
kotlinx.coroutines.internal.OpDescriptor: java.lang.Object perform(java.lang.Object)
kotlinx.coroutines.channels.LinkedListChannel: boolean isBufferAlwaysFull()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(double[],java.lang.Object,kotlin.jvm.functions.Function3)
com.example.revolut.rates.R$id: int topPanel
io.reactivex.internal.operators.flowable.FlowableSubscribeOn
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1: SequencesKt___SequencesKt$groupingBy$1(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ArrayChannel
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)
androidx.appcompat.R$styleable
kotlinx.coroutines.CoroutineExceptionHandlerKt: void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
io.reactivex.internal.observers.BlockingBaseObserver: void dispose()
androidx.lifecycle.extensions.R$id: int action_text
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
kotlinx.coroutines.channels.AbstractSendChannel: void access$registerSelectSend(kotlinx.coroutines.channels.AbstractSendChannel,kotlinx.coroutines.selects.SelectInstance,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.asynclayoutinflater.R$layout: int notification_template_custom_big
androidx.appcompat.R$attr: int dividerPadding
kotlin.collections.AbstractMutableSet: AbstractMutableSet()
io.reactivex.Single: io.reactivex.Single delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(boolean[],kotlin.jvm.functions.Function1)
androidx.core.graphics.RectKt: int component2(android.graphics.Rect)
android.support.v4.media.MediaBrowserCompat: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
androidx.legacy.v4.R$dimen: int notification_large_icon_height
androidx.lifecycle.extensions.R$layout
androidx.core.animation.AnimatorKt$doOnStart$$inlined$addListener$1: void onAnimationCancel(android.animation.Animator)
kotlinx.coroutines.PoolThread
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: int indexOf(java.lang.Object)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_SearchResult
com.example.revolut.rates.R$id: int text2
androidx.appcompat.widget.AppCompatSeekBar: void drawableStateChanged()
io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit,boolean)
dagger.Component: java.lang.Class[] modules()
com.google.gson.internal.LinkedHashTreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableCombineLatest
androidx.core.view.WindowCompat: int FEATURE_ACTION_BAR
androidx.appcompat.R$styleable: int MenuView_preserveIconSpacing
com.example.revolut.rates.R$styleable: int Toolbar_android_minHeight
kotlin.collections.MapsKt__MapsKt: java.util.Map mapOf(kotlin.Pair[])
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isHeightWrapContent()
dagger.android.support.R$styleable: int Spinner_android_prompt
io.reactivex.internal.operators.observable.ObservableSampleTimed: ObservableSampleTimed(io.reactivex.ObservableSource,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
io.reactivex.internal.operators.parallel.ParallelRunOn$RunOnSubscriber: long serialVersionUID
androidx.legacy.coreutils.R$attr: int ttcIndex
androidx.recyclerview.widget.DefaultItemAnimator: boolean isRunning()
androidx.core.view.ViewCompat: float getY(android.view.View)
com.jakewharton.rxbinding3.InitialValueObservable: InitialValueObservable()
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: RestrictedSuspendLambda(int)
androidx.vectordrawable.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.legacy.v4.R$id: int action_divider
androidx.appcompat.R$attr: int firstBaselineToTopHeight
androidx.versionedparcelable.VersionedParcel: void writeBoolean(boolean)
com.example.revolut.rates.R$styleable: int SwitchCompat_thumbTextPadding
com.example.revolut.rates.view.adapter.CurrenciesAdapter: androidx.lifecycle.MutableLiveData access$getCurrentBase$p(com.example.revolut.rates.view.adapter.CurrenciesAdapter)
io.reactivex.Flowable: io.reactivex.Flowable dematerialize()
androidx.loader.R$drawable: int notification_action_background
kotlin.jvm.internal.MutablePropertyReference1: MutablePropertyReference1(java.lang.Object)
androidx.appcompat.R$styleable: int AppCompatTheme_controlBackground
io.reactivex.Flowable: int bufferSize()
io.reactivex.Observable: io.reactivex.Single firstOrError()
androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)
androidx.lifecycle.extensions.R$attr: int coordinatorLayoutStyle
androidx.core.ktx.R$color: int secondary_text_default_material_light
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void dispatchAnimationsFinished()
androidx.core.animation.AnimatorKt$doOnEnd$$inlined$addListener$1: void onAnimationStart(android.animation.Animator)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
okhttp3.Connection: java.net.Socket socket()
io.reactivex.internal.fuseable.QueueSubscription
androidx.databinding.Observable$OnPropertyChangedCallback: Observable$OnPropertyChangedCallback()
androidx.versionedparcelable.VersionedParcel: boolean[] readBooleanArray(boolean[],int)
androidx.core.app.ActivityCompat$PermissionCompatDelegate
kotlinx.coroutines.channels.ChannelCoroutine: boolean offer(java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getDrawHeight()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromAssetManager
androidx.recyclerview.R$id: int line3
androidx.legacy.coreui.R$id: int tag_transition_group
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object getNextParkedWorker()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$groupBy$1
io.reactivex.internal.operators.parallel.ParallelCollect
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: int lastIndexOf(byte)
com.example.revolut.rates.R$styleable: int Toolbar_contentInsetEnd
kotlin.collections.CharIterator: java.lang.Character next()
androidx.swiperefreshlayout.R$id: int info
com.example.revolut.rates.R$styleable: int ActionBar_hideOnContentScroll
kotlin.io.FilesKt__UtilsKt: boolean copyRecursively$default(java.io.File,java.io.File,boolean,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.core.app.ServiceCompat: int START_STICKY
androidx.lifecycle.LiveData: void observeForever(androidx.lifecycle.Observer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.Region getTransparentRegion()
com.example.revolut.rates.R$styleable: int FontFamilyFont_ttcIndex
kotlin.collections.UIntIterator: kotlin.UInt next()
io.reactivex.internal.operators.parallel.ParallelPeek
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence)
androidx.fragment.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.appcompat.R$color: int abc_search_url_text
com.example.revolut.rates.R$color: int colorPrimary
kotlin.reflect.KTypeProjection: java.lang.String toString()
androidx.lifecycle.extensions.R$styleable: int GradientColor_android_gradientRadius
androidx.core.view.MenuItemCompat: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,androidx.core.view.MenuItemCompat$OnActionExpandListener)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int ANCHOR_BASELINE
androidx.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy: void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper)
com.example.revolut.rates.R$attr: int layout_editor_absoluteX
androidx.recyclerview.widget.SnapHelper: int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View)
androidx.legacy.coreui.R$id: int time
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(char[],kotlin.jvm.functions.Function1)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
io.reactivex.CompletableSource
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_font
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
io.reactivex.Observable: io.reactivex.Observable throttleLast(long,java.util.concurrent.TimeUnit)
com.google.gson.internal.bind.JsonTreeReader: void beginArray()
dagger.android.support.R$id: int submenuarrow
kotlin.collections.AbstractMap: java.util.Set entrySet()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer singleOrNull(int[],kotlin.jvm.functions.Function1)
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()
android.support.v4.media.MediaBrowserCompat: java.lang.String getRoot()
okhttp3.internal.http2.Header: int hashCode()
androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.reactivex.internal.util.VolatileSizeArrayList: java.lang.Object[] toArray()
okhttp3.internal.NamedRunnable: java.lang.String name
io.reactivex.subscribers.DefaultSubscriber: void onStart()
io.reactivex.internal.observers.FutureObserver: void onSubscribe(io.reactivex.disposables.Disposable)
kotlin.ULongArray: boolean isEmpty-impl(long[])
dagger.android.support.R$style: int Widget_AppCompat_Button_Borderless_Colored
dagger.android.support.R$style: int Widget_AppCompat_ActionBar_TabView
com.example.revolut.rates.R$id: int contentPanel
kotlinx.coroutines.sync.MutexKt$withLock$1: MutexKt$withLock$1(kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat: int LAYOUT_DIRECTION_LTR
kotlin.reflect.KVariance: kotlin.reflect.KVariance INVARIANT
io.reactivex.Observable: io.reactivex.Observable concatArrayEagerDelayError(int,int,io.reactivex.ObservableSource[])
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setNumCols(int)
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] copyOfRange(byte[],int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void clearColorFilter()
androidx.media.R$attr: int fontProviderAuthority
androidx.core.view.MenuItemCompat: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
io.reactivex.internal.subscriptions.SubscriptionArbiter: void cancel()
kotlinx.coroutines.JobKt: kotlinx.coroutines.DisposableHandle cancelFutureOnCompletion(kotlinx.coroutines.CancellableContinuation,java.util.concurrent.Future)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Subhead
io.reactivex.Observable: io.reactivex.Observable timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
androidx.drawerlayout.widget.DrawerLayout: void onRestoreInstanceState(android.os.Parcelable)
com.example.revolut.rates.R$layout: int abc_popup_menu_header_item_layout
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_chainUseRtl
androidx.core.provider.FontsContractCompat$FontInfo
kotlin.SuccessOrFailureKt
androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType: androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType RELAXED
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
kotlin.SynchronizedLazyImpl: java.lang.Object writeReplace()
kotlin.jvm.internal.TypeIntrinsics: java.util.Map asMutableMap(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_256_CBC_SHA
androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
androidx.legacy.coreutils.R$id: int action_container
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(long[],long[],kotlin.jvm.functions.Function2)
kotlin.sequences.SequencesKt___SequencesKt: int indexOfLast(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
io.reactivex.Observable: java.lang.Object blockingSingle()
io.reactivex.internal.operators.single.SingleDoAfterSuccess: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.Flowable: io.reactivex.Flowable timeInterval(java.util.concurrent.TimeUnit)
androidx.constraintlayout.solver.SolverVariable: void updateReferencesWithNewDefinition(androidx.constraintlayout.solver.ArrayRow)
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_ASSIST_READING_CONTEXT
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$groupBy$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.app.AppCompatDialog: android.view.View findViewById(int)
io.reactivex.CompletableSource: void subscribe(io.reactivex.CompletableObserver)
kotlin.sequences.MergingSequence$iterator$1: boolean hasNext()
kotlin.text.RegexOption: kotlin.text.RegexOption IGNORE_CASE
dagger.internal.MapFactory$Builder: dagger.internal.MapFactory$Builder put(java.lang.Object,javax.inject.Provider)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean minBy(boolean[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.common.ConstantsKt: java.lang.String BASE_URL
kotlin.jvm.internal.FunctionImpl: int getArity()
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeFindDrawable
androidx.core.net.UriKt: java.io.File toFile(android.net.Uri)
androidx.appcompat.R$drawable: int abc_list_focused_holo
kotlinx.coroutines.internal.ThreadLocalElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.example.revolut.rates.R$id: int clip_vertical
kotlin.reflect.KProperty
androidx.vectordrawable.R$integer
androidx.core.app.NotificationCompat$WearableExtender: int UNSET_ACTION_INDEX
kotlin.collections.State: kotlin.collections.State[] values()
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertValueAt(int,io.reactivex.functions.Predicate)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Cipher getCipher()
io.reactivex.subscribers.TestSubscriber: boolean hasSubscription()
androidx.media.app.NotificationCompat
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object single(java.lang.Iterable)
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceEmitter: long serialVersionUID
androidx.databinding.adapters.ActionMenuViewBindingAdapter
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1: java.util.Iterator iterator()
kotlin.coroutines.EmptyCoroutineContext: java.lang.String toString()
com.example.revolut.rates.R$color: int dim_foreground_material_light
dagger.android.support.R$dimen: int abc_action_bar_default_padding_end_material
io.reactivex.internal.operators.observable.ObservableSwitchMap: void subscribeActual(io.reactivex.Observer)
okhttp3.Response$Builder: Response$Builder()
androidx.appcompat.R$attr: int theme
androidx.appcompat.R$styleable: int AppCompatTheme_actionMenuTextAppearance
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_13
io.reactivex.processors.AsyncProcessor
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
androidx.appcompat.R$style: int Theme_AppCompat_CompactMenu
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onFinishInflate()
okio.ForwardingTimeout: long deadlineNanoTime()
io.reactivex.internal.operators.single.SingleMaterialize: SingleMaterialize(io.reactivex.Single)
okio.Buffer: okio.BufferedSink writeDecimalLong(long)
kotlin.ranges.LongRange: boolean equals(java.lang.Object)
kotlinx.coroutines.AbstractCoroutine: void initParentJob$kotlinx_coroutines_core()
androidx.viewpager.R$dimen: int notification_action_text_size
kotlin.ranges.ULongProgression: ULongProgression(long,long,long,kotlin.jvm.internal.DefaultConstructorMarker)
com.jakewharton.rxbinding3.widget.RxAdapterView
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$groupByTo$1: ChannelsKt__Channels_commonKt$groupByTo$1(kotlin.coroutines.Continuation)
androidx.appcompat.R$dimen: int abc_dialog_fixed_width_major
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(double[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean)
io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int,io.reactivex.Scheduler)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getWidth()
com.example.revolut.rates.R$string: int abc_font_family_body_2_material
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.view.menu.ShowableListMenu
com.google.gson.internal.LinkedHashTreeMap: java.lang.Object get(java.lang.Object)
dagger.android.support.R$attr: int actionDropDownStyle
kotlinx.coroutines.channels.ActorScope$DefaultImpls
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_orientation
androidx.databinding.ViewDataBinding: void requestRebind()
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void clear()
com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent: int getCount()
kotlin.ranges.CharRange: boolean contains(char)
android.support.v4.media.MediaDescriptionCompat: long STATUS_DOWNLOADING
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDrawWidth(int)
androidx.core.widget.NestedScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)
com.example.revolut.rates.R$string: int abc_menu_alt_shortcut_label
kotlin.KotlinVersion: int getMinor()
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.EventLoop
dagger.android.support.R$color: int abc_tint_default
kotlinx.coroutines.ChildJob
io.reactivex.internal.operators.single.SingleDoOnDispose: SingleDoOnDispose(io.reactivex.SingleSource,io.reactivex.functions.Action)
androidx.databinding.adapters.SeekBarBindingAdapter: void setProgress(android.widget.SeekBar,int)
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String loadDescription(android.accessibilityservice.AccessibilityServiceInfo,android.content.pm.PackageManager)
io.reactivex.Flowable: io.reactivex.Flowable zipWith(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)
androidx.appcompat.view.SupportMenuInflater: void inflate(int,android.view.Menu)
androidx.lifecycle.MutableLiveData: void postValue(java.lang.Object)
com.example.revolut.rates.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
androidx.appcompat.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.media.R$id: int action0
kotlin.concurrent.TimersKt$timerTask$1
kotlin.jvm.internal.PropertyReference1Impl: java.lang.Object get(java.lang.Object)
okio.Buffer: okio.Buffer write(byte[])
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
io.reactivex.internal.subscribers.SubscriberResourceWrapper
androidx.vectordrawable.graphics.drawable.Animatable2Compat: void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
dagger.multibindings.LongKey: long value()
com.google.gson.internal.bind.MapTypeAdapterFactory: MapTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor,boolean)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator nullsFirst(java.util.Comparator)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: java.lang.Comparable minOf(java.lang.Comparable,java.lang.Comparable)
io.reactivex.internal.operators.flowable.FlowableEmpty: void subscribeActual(org.reactivestreams.Subscriber)
androidx.vectordrawable.R$styleable: int FontFamilyFont_fontVariationSettings
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(java.lang.Object[],int)
androidx.core.content.res.TypedArrayKt: int getDimensionPixelOffsetOrThrow(android.content.res.TypedArray,int)
androidx.collection.LongSparseArray: java.lang.Object get(long,java.lang.Object)
kotlin.io.FilesKt__FileTreeWalkKt: kotlin.io.FileTreeWalk walk$default(java.io.File,kotlin.io.FileWalkDirection,int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat
kotlin.random.Random$Default: int nextInt(int,int)
androidx.asynclayoutinflater.R$id: int text2
dagger.android.support.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
io.reactivex.Observable: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function)
okio.Sink: void close()
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean qwertyMode
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2(byte[])
androidx.core.animation.AnimatorKt$doOnEnd$$inlined$addListener$1: void onAnimationCancel(android.animation.Animator)
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1: java.lang.Object keyOf(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableReplay$SizeBoundReplayBuffer: long serialVersionUID
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getContentDescription()
androidx.constraintlayout.solver.widgets.Barrier: int RIGHT
io.reactivex.internal.util.ErrorMode: io.reactivex.internal.util.ErrorMode BOUNDARY
io.reactivex.Flowable: io.reactivex.Flowable throttleWithTimeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.HttpUrl: java.lang.String encodedPassword()
kotlin.io.FilesKt__FileReadWriteKt: java.util.List readLines(java.io.File,java.nio.charset.Charset)
androidx.fragment.app.Fragment: void setExitTransition(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1: boolean invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: int indexOf(java.lang.Object)
dagger.internal.InstanceFactory: dagger.internal.Factory create(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
com.example.revolut.rates.R$styleable: int AppCompatTheme_dividerHorizontal
com.example.revolut.rates.R$styleable: int Toolbar_popupTheme
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewAddEvent: ViewGroupHierarchyChildViewAddEvent(android.view.ViewGroup,android.view.View)
androidx.appcompat.R$color: int error_color_material_light
androidx.versionedparcelable.VersionedParcel: void writeList(java.util.List,int)
androidx.appcompat.R$dimen: int abc_edit_text_inset_bottom_material
androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean isRunning()
kotlinx.coroutines.CloseableCoroutineDispatcher: CloseableCoroutineDispatcher()
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
io.reactivex.internal.observers.DeferredScalarObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.ListPopupWindow: void setForceIgnoreOutsideTouch(boolean)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher blocking$default(kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher,int,int,java.lang.Object)
okhttp3.internal.Util: java.lang.AssertionError assertionError(java.lang.String,java.lang.Exception)
androidx.appcompat.widget.TintTypedArray: int getIndexCount()
kotlinx.coroutines.EventLoopBase: void schedule$kotlinx_coroutines_core(kotlinx.coroutines.EventLoopBase$DelayedTask)
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_REMOTE_INPUTS
javax.inject.Singleton
androidx.core.view.ViewKt: java.lang.Runnable postDelayed(android.view.View,long,kotlin.jvm.functions.Function0)
com.example.revolut.rates.R$styleable: int AppCompatImageView_android_src
androidx.viewpager.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.appcompat.widget.ShareActionProvider: void onPrepareSubMenu(android.view.SubMenu)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object)
io.reactivex.disposables.SerialDisposable: boolean isDisposed()
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getDrawX()
io.reactivex.Flowable: io.reactivex.Flowable distinct(io.reactivex.functions.Function)
kotlin.collections.ArraysKt__ArraysKt: boolean contentDeepEquals(java.lang.Object[],java.lang.Object[])
kotlin.text.StringsKt__StringsKt: java.lang.String commonSuffixWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean firstOrNull(boolean[],kotlin.jvm.functions.Function1)
androidx.customview.widget.ViewDragHelper$Callback: ViewDragHelper$Callback()
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()
androidx.core.view.NestedScrollingChildHelper: NestedScrollingChildHelper(android.view.View)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isSideAnchor()
kotlin.ranges.URangesKt___URangesKt: boolean contains-68kG9v0(kotlin.ranges.UIntRange,byte)
io.reactivex.observers.SafeObserver: SafeObserver(io.reactivex.Observer)
com.jakewharton.rxbinding3.core.R$dimen: int notification_action_text_size
androidx.appcompat.widget.ListPopupWindow: void setPromptPosition(int)
kotlin.collections.AbstractMutableMap: int getSize()
kotlin.collections.ArraysKt___ArraysKt: void forEach(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory: androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap)
dagger.android.support.R$styleable: int[] DrawerArrowToggle
androidx.collection.SimpleArrayMap: void clear()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation build()
kotlin.text.Typography: char lowSingleQuote
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] sliceArray-ZRhS8yI(long[],kotlin.ranges.IntRange)
dagger.android.support.R$styleable: int AppCompatTextHelper_android_drawableTop
androidx.databinding.adapters.ActionMenuViewBindingAdapter: ActionMenuViewBindingAdapter()
io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver: long serialVersionUID
kotlin.sequences.FlatteningSequence$iterator$1: boolean hasNext()
androidx.appcompat.R$attr: int layout
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getOpacity()
io.reactivex.internal.operators.flowable.FlowableConcatMapEager
androidx.appcompat.R$drawable: int abc_cab_background_top_mtrl_alpha
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationCancel(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(byte[],kotlin.jvm.functions.Function2)
com.google.gson.JsonArray: boolean equals(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: double averageOfDouble(kotlin.sequences.Sequence)
kotlin.UByte
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder eventListener(okhttp3.EventListener)
androidx.appcompat.R$string: int abc_activitychooserview_choose_application
androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback)
io.reactivex.internal.operators.mixed.CompletableAndThenObservable$AndThenObservableObserver: long serialVersionUID
androidx.fragment.app.Fragment: void onDetach()
kotlin.io.ConstantsKt: int DEFAULT_BUFFER_SIZE
dagger.android.support.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
androidx.fragment.R$attr: int ttcIndex
androidx.customview.R$style: int TextAppearance_Compat_Notification_Line2
androidx.appcompat.R$styleable: int LinearLayoutCompat_showDividers
androidx.core.text.PrecomputedTextCompat$Params: PrecomputedTextCompat$Params(android.text.PrecomputedText$Params)
okio.Buffer: long readLongLe()
retrofit2.http.Header
io.reactivex.internal.operators.completable.CompletableNever: io.reactivex.Completable INSTANCE
kotlin.ranges.IntProgression: boolean equals(java.lang.Object)
androidx.appcompat.R$attr: int iconifiedByDefault
kotlin.text.MatchGroup: int hashCode()
androidx.core.R$dimen: int notification_right_icon_size
io.reactivex.internal.observers.FutureSingleObserver: java.lang.Object get(long,java.util.concurrent.TimeUnit)
androidx.fragment.app.Fragment$SavedState: int describeContents()
kotlin.collections.UByteIterator: void remove()
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemChanged(int)
androidx.versionedparcelable.VersionedParcelable
com.example.revolut.rates.R$attr: int textAppearanceListItem
dagger.android.support.R$styleable: int AppCompatTheme_actionBarItemBackground
com.jakewharton.rxbinding3.widget.TextViewEditorActionEvent: TextViewEditorActionEvent(android.widget.TextView,int,android.view.KeyEvent)
dagger.android.support.R$style: int Theme_AppCompat_DialogWhenLarge
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
androidx.recyclerview.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int)
dagger.android.support.R$dimen: int notification_main_column_padding_top
io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,io.reactivex.Scheduler)
androidx.constraintlayout.solver.SolverVariable: int usageInRowCount
androidx.appcompat.view.menu.ActionMenuItemView: boolean showsIcon()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean hasWindowFocus()
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: int HINT_SCROLL_NONE
android.support.v4.media.session.MediaSessionCompat$Callback: void onSetRating(android.support.v4.media.RatingCompat)
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(short[])
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)
com.example.revolut.rates.R$attr: int displayOptions
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
io.reactivex.internal.operators.parallel.ParallelRunOn
kotlinx.coroutines.sync.Mutex$DefaultImpls: java.lang.Object lock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.coroutines.Continuation,int,java.lang.Object)
io.reactivex.internal.functions.Functions$BoundedConsumer: void accept(java.lang.Object)
kotlin.TypeAliasesKt: void UnsupportedOperationException$annotations()
androidx.constraintlayout.widget.Barrier: int LEFT
androidx.appcompat.widget.SwitchCompat: SwitchCompat(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int startToEnd
androidx.legacy.coreui.R$styleable: int FontFamily_fontProviderCerts
okio.ForwardingTimeout
dagger.android.support.R$attr: int actionProviderClass
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintBottom_creator
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection flatMapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.text.UStringsKt: kotlin.ULong toULongOrNull(java.lang.String,int)
androidx.core.view.KeyEventDispatcher$Component
androidx.constraintlayout.solver.widgets.ConstraintWidget: void resetSolverVariables(androidx.constraintlayout.solver.Cache)
androidx.core.text.HtmlCompat: java.lang.String toHtml(android.text.Spanned,int)
io.reactivex.subscribers.DisposableSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.legacy.v4.R$layout: int notification_template_media
android.support.v4.app.INotificationSideChannel: void cancel(java.lang.String,int,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(boolean[])
kotlin.collections.ArraysKt___ArraysKt: int single(int[],kotlin.jvm.functions.Function1)
kotlin.collections.SetsKt__SetsKt: java.util.HashSet hashSetOf(java.lang.Object[])
androidx.appcompat.R$integer
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_fontWeight
dagger.android.support.R$style: int Platform_AppCompat
io.reactivex.internal.subscriptions.EmptySubscription: void cancel()
androidx.appcompat.app.WindowDecorActionBar: void setDisplayUseLogoEnabled(boolean)
okhttp3.internal.cache.CacheInterceptor: CacheInterceptor(okhttp3.internal.cache.InternalCache)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintRight_creator
io.reactivex.processors.PublishProcessor
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
androidx.core.view.accessibility.AccessibilityEventCompat: void appendRecord(android.view.accessibility.AccessibilityEvent,androidx.core.view.accessibility.AccessibilityRecordCompat)
androidx.appcompat.R$styleable: int Toolbar_collapseIcon
dagger.android.support.R$dimen: int abc_text_size_small_material
com.google.gson.internal.bind.ArrayTypeAdapter: ArrayTypeAdapter(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError
kotlinx.coroutines.DefaultTimeSource: void unTrackTask()
kotlinx.coroutines.DispatchedContinuation: void resumeUndispatchedWith(java.lang.Object)
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.channels.Channel get_channel()
androidx.core.graphics.ImageDecoderKt$decodeDrawable$1: ImageDecoderKt$decodeDrawable$1(kotlin.jvm.functions.Function3)
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: int DIRECTION_BOTTOM
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit)
androidx.databinding.adapters.AbsSpinnerBindingAdapter: void setEntries(android.widget.AbsSpinner,java.util.List)
androidx.appcompat.widget.TintContextWrapper
dagger.android.support.R$styleable: int AppCompatTheme_windowActionBarOverlay
kotlinx.coroutines.ExecutorCoroutineDispatcher
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.lifecycle.extensions.R$dimen: int compat_button_inset_vertical_material
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])
io.reactivex.exceptions.CompositeException: java.lang.String getMessage()
io.reactivex.internal.operators.flowable.FlowableInternalHelper: java.util.concurrent.Callable replayCallable(io.reactivex.Flowable,int)
io.reactivex.internal.subscriptions.ScalarSubscription: void request(long)
kotlin.ranges.URangesKt___URangesKt: long coerceIn-sambcqE(long,long,long)
android.support.v4.media.RatingCompat: android.support.v4.media.RatingCompat newHeartRating(boolean)
io.reactivex.internal.operators.observable.ObservableTake
io.reactivex.internal.operators.observable.ObservableFlatMap: ObservableFlatMap(io.reactivex.ObservableSource,io.reactivex.functions.Function,boolean,int,int)
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setText(int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: boolean equals(java.lang.Object)
androidx.lifecycle.extensions.R$dimen: int notification_action_text_size
androidx.core.view.ViewKt$postOnAnimationDelayed$runnable$1
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory ENUM_FACTORY
androidx.databinding.BindingMethod: java.lang.String attribute()
androidx.appcompat.widget.ViewUtils: boolean isLayoutRtl(android.view.View)
androidx.recyclerview.widget.GridLayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
io.reactivex.Observable: io.reactivex.Observable window(long,long,int)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int compareValuesBy(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1[])
kotlin.jvm.internal.ShortSpreadBuilder
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_editor_absoluteY
android.support.v4.media.session.MediaControllerCompat$Callback: void onShuffleModeChanged(int)
androidx.fragment.app.FragmentTabHost$SavedState
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
androidx.databinding.BindingAdapter: boolean requireAll()
io.reactivex.internal.subscribers.ForEachWhileSubscriber: void dispose()
androidx.constraintlayout.solver.widgets.Guideline: void setGuideEnd(int)
androidx.appcompat.R$color: int material_grey_900
androidx.viewpager.R$attr: int fontProviderFetchTimeout
androidx.appcompat.widget.ActionBarOverlayLayout: boolean shouldDelayChildPressedState()
com.example.revolut.rates.R$drawable: int abc_textfield_search_activated_mtrl_alpha
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(byte[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$id: int barrier
kotlin.text.CharCategory: kotlin.text.CharCategory UPPERCASE_LETTER
com.example.revolut.rates.R$dimen: int currency_value_margin_end
androidx.recyclerview.R$styleable: int GradientColor_android_startY
com.example.revolut.rates.R$styleable: int SearchView_voiceIcon
com.example.revolut.rates.R$attr: int titleMargin
androidx.core.graphics.PointKt: android.graphics.PointF unaryMinus(android.graphics.PointF)
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind EXACTLY_ONCE
okhttp3.internal.tls.BasicCertificateChainCleaner: int hashCode()
com.example.revolut.rates.view.MainActivity: void _$_clearFindViewByIdCache()
androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[])
com.jakewharton.rxbinding3.core.R$styleable: int GradientColor_android_endY
androidx.databinding.adapters.AbsListViewBindingAdapter
kotlinx.coroutines.internal.LockFreeLinkedListHead: kotlinx.coroutines.internal.AtomicDesc describeRemove()
androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()
com.example.revolut.rates.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
io.reactivex.observers.SerializedObserver: boolean isDisposed()
androidx.viewpager.widget.ViewPager
androidx.core.text.PrecomputedTextCompat: int getParagraphEnd(int)
androidx.appcompat.R$styleable: int Toolbar_android_minHeight
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.core.animation.AnimatorKt$addListener$listener$1: void onAnimationCancel(android.animation.Animator)
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()
kotlin.jvm.internal.PropertyReference1: PropertyReference1(java.lang.Object)
androidx.appcompat.R$style: int Base_Theme_AppCompat_Dialog
androidx.core.view.accessibility.AccessibilityManagerCompat: java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc describeAddLast(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
com.example.revolut.rates.R$attr: int contentInsetEnd
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(boolean[],kotlin.jvm.functions.Function1)
androidx.appcompat.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
io.reactivex.internal.fuseable.ConditionalSubscriber
androidx.databinding.ViewDataBinding: java.lang.Object getFromList(androidx.collection.LongSparseArray,int)
io.reactivex.Maybe: io.reactivex.Maybe cache()
okio.Buffer: okio.ByteString snapshot(int)
com.example.revolut.rates.viewmodel.CurrenciesViewModel$fetchCurrencies$1: void onComplete()
dagger.android.support.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
kotlinx.coroutines.DeferredKt: kotlinx.coroutines.Deferred defer(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
io.reactivex.Maybe: io.reactivex.Maybe onExceptionResumeNext(io.reactivex.MaybeSource)
com.example.revolut.rates.R$styleable: int MenuItem_android_icon
androidx.constraintlayout.solver.widgets.Helper
androidx.coordinatorlayout.R$id: int chronometer
androidx.recyclerview.widget.StaggeredGridLayoutManager: int VERTICAL
androidx.databinding.adapters.AbsListViewBindingAdapter: void setOnScroll(android.widget.AbsListView,androidx.databinding.adapters.AbsListViewBindingAdapter$OnScroll,androidx.databinding.adapters.AbsListViewBindingAdapter$OnScrollStateChanged)
androidx.legacy.v4.R$color: int notification_icon_bg_color
com.example.revolut.rates.R$attr: int barrierDirection
dagger.android.DaggerDialogFragment: dagger.android.AndroidInjector fragmentInjector()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(long,int)
com.example.revolut.rates.R$styleable: int AppCompatImageView_tint
androidx.fragment.app.ListFragment: void setEmptyText(java.lang.CharSequence)
kotlin.collections.MapsKt__MapsJVMKt: MapsKt__MapsJVMKt()
androidx.recyclerview.widget.LinearLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)
com.jakewharton.rxbinding3.widget.AdapterViewItemClickEvent: int getPosition()
androidx.core.graphics.drawable.IconKt: android.graphics.drawable.Icon toIcon(android.graphics.Bitmap)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(boolean[],kotlin.ranges.IntRange)
com.example.revolut.rates.view.adapter.CurrenciesAdapter: void updateCurrencies(java.lang.String,java.util.Map)
androidx.fragment.R$drawable: int notification_bg_low_normal
androidx.slidingpanelayout.widget.SlidingPaneLayout: int getCoveredFadeColor()
org.intellij.lang.annotations.Subst: java.lang.String value()
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(byte[])
kotlin.jvm.internal.PrimitiveSpreadBuilder: PrimitiveSpreadBuilder(int)
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: boolean offer(java.lang.Object)
androidx.appcompat.view.menu.MenuPopupHelper: boolean tryShow()
androidx.appcompat.app.AlertController$AlertParams: void apply(androidx.appcompat.app.AlertController)
androidx.core.util.SparseBooleanArrayKt
androidx.appcompat.widget.LinearLayoutCompat: boolean isMeasureWithLargestChildEnabled()
dagger.android.support.R$style: int Widget_AppCompat_Light_ActionButton
androidx.legacy.coreui.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY
androidx.appcompat.R$id: int text
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEachIndexed$1: ChannelsKt__Channels_commonKt$consumeEachIndexed$1(kotlin.coroutines.Continuation)
io.reactivex.internal.util.MergerBiFunction
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder generateNonExecutableJson()
io.reactivex.Observable: io.reactivex.Maybe lastElement()
androidx.databinding.adapters.TextViewBindingAdapter: void setLineSpacingExtra(android.widget.TextView,float)
io.reactivex.internal.operators.completable.CompletableCreate
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener: void onPageSelected(int)
io.reactivex.internal.operators.observable.ObservableGroupBy
okio.Buffer: okio.BufferedSink writeUtf8(java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)
retrofit2.Retrofit: okhttp3.HttpUrl baseUrl()
io.reactivex.internal.operators.flowable.FlowableError: void subscribeActual(org.reactivestreams.Subscriber)
android.support.v4.media.session.PlaybackStateCompat: int STATE_NONE
kotlin.collections.ArraysKt___ArraysKt: int count(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_android_fontWeight
androidx.core.graphics.ImageDecoderKt$decodeBitmap$1
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch$default(java.util.List,java.lang.Comparable,int,int,int,java.lang.Object)
androidx.appcompat.widget.Toolbar: void inflateMenu(int)
kotlinx.coroutines.internal.CloseableKt
androidx.annotation.ArrayRes
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setPositiveButtonIcon(android.graphics.drawable.Drawable)
com.google.gson.internal.Streams
androidx.appcompat.app.WindowDecorActionBar: java.lang.CharSequence getSubtitle()
androidx.constraintlayout.solver.widgets.ConstraintWidget: java.lang.Object getCompanionWidget()
dagger.android.support.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3
kotlinx.coroutines.channels.ArrayBroadcastChannel: boolean isBufferAlwaysFull()
com.example.revolut.rates.R$id: int title_template
kotlin.io.ByteStreamsKt: long copyTo$default(java.io.InputStream,java.io.OutputStream,int,int,java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getPrevNode()
okhttp3.Response$Builder: okhttp3.Response build()
androidx.recyclerview.widget.RecyclerView: int getChildLayoutPosition(android.view.View)
androidx.appcompat.graphics.drawable.DrawableContainer: void setExitFadeDuration(int)
dagger.android.support.R$style: int TextAppearance_AppCompat_Small
kotlin.collections.ArraysKt___ArraysJvmKt: int[] copyInto$default(int[],int[],int,int,int,int,java.lang.Object)
com.jakewharton.rxbinding3.view.ViewAttachAttachedEvent: ViewAttachAttachedEvent(android.view.View)
androidx.core.view.ViewCompat: ViewCompat()
kotlin.jvm.internal.ByteCompanionObject: kotlin.jvm.internal.ByteCompanionObject INSTANCE
androidx.constraintlayout.widget.ConstraintSet: void setVerticalChainStyle(int,int)
okio.BufferedSource: short readShort()
okhttp3.internal.http.RealInterceptorChain: RealInterceptorChain(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection,int,okhttp3.Request,okhttp3.Call,okhttp3.EventListener,int,int,int)
androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
androidx.recyclerview.widget.RecyclerView$LayoutParams
androidx.viewpager.widget.ViewPager$DecorView
com.google.gson.internal.bind.util.ISO8601Utils
androidx.legacy.coreutils.R$styleable: int ColorStateListItem_alpha
kotlin.coroutines.experimental.EmptyCoroutineContext
androidx.cursoradapter.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)
android.support.v4.media.session.MediaControllerCompatApi24$TransportControls: void prepareFromUri(java.lang.Object,android.net.Uri,android.os.Bundle)
kotlinx.coroutines.CoroutineName: int hashCode()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int topToBottom
androidx.legacy.v4.R$id: int chronometer
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(float[])
io.reactivex.internal.operators.observable.ObservableOnErrorReturn
androidx.databinding.adapters.CompoundButtonBindingAdapter: void setListeners(android.widget.CompoundButton,android.widget.CompoundButton$OnCheckedChangeListener,androidx.databinding.InverseBindingListener)
io.reactivex.internal.operators.flowable.FlowableMap: FlowableMap(io.reactivex.Flowable,io.reactivex.functions.Function)
io.reactivex.internal.operators.flowable.FlowableFromArray: FlowableFromArray(java.lang.Object[])
io.reactivex.internal.subscriptions.ScalarSubscription: boolean offer(java.lang.Object)
kotlin.text.Charsets: java.nio.charset.Charset UTF_16
androidx.coordinatorlayout.R$style: int TextAppearance_Compat_Notification
androidx.collection.LongSparseArray: androidx.collection.LongSparseArray clone()
dagger.android.support.R$styleable: int ActionMode_height
kotlinx.coroutines.channels.ProducerJob$DefaultImpls: java.lang.Throwable getCompletionException(kotlinx.coroutines.channels.ProducerJob)
androidx.appcompat.widget.ActionBarContainer: void onLayout(boolean,int,int,int,int)
kotlin.coroutines.ContinuationKt
kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.CoroutineExceptionHandler,kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.internal.OpDescriptor: OpDescriptor()
androidx.customview.widget.ExploreByTouchHelper: int INVALID_ID
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(float[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
okhttp3.internal.Internal: boolean isInvalidHttpUrlHost(java.lang.IllegalArgumentException)
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTitleCondensed()
dagger.android.support.R$attr: int spinnerStyle
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(int[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.drawerlayout.R$id: int action_container
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setOrientation(int)
androidx.appcompat.R$style: int Theme_AppCompat_Light
kotlinx.coroutines.JobSupportKt
dagger.android.support.R$drawable: int abc_ic_menu_cut_mtrl_alpha
androidx.slidingpanelayout.R$attr: int fontProviderFetchTimeout
androidx.constraintlayout.solver.SolverVariable: java.lang.String getName()
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int ALIGN_RIGHT
io.reactivex.observers.SafeObserver: boolean isDisposed()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: boolean hasOutgoingEdges(java.lang.Object)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertNoTimeout()
dagger.android.support.R$styleable: int AppCompatTheme_actionBarSize
kotlin.text.UStringsKt: byte toUByte(java.lang.String,int)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)
kotlin.text.Typography: char bullet
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_orientation
androidx.core.provider.FontsContractCompat$FontInfo: boolean isItalic()
kotlin._Assertions: boolean ENABLED
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mVerticalWrapOptimized
kotlin.coroutines.experimental.SafeContinuation: SafeContinuation(kotlin.coroutines.experimental.Continuation,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression step(kotlin.ranges.LongProgression,long)
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable flatMap(io.reactivex.functions.Function,boolean)
kotlin.sequences.SequencesKt___SequencesKt: double averageOfByte(kotlin.sequences.Sequence)
okhttp3.Headers: java.util.Date getDate(java.lang.String)
dagger.android.support.R$styleable: int AppCompatImageView_tint
io.reactivex.internal.schedulers.ImmediateThinScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
android.support.v4.media.session.MediaControllerCompat: boolean dispatchMediaButtonEvent(android.view.KeyEvent)
io.reactivex.Flowable: io.reactivex.Flowable repeatUntil(io.reactivex.functions.BooleanSupplier)
io.reactivex.Observable: io.reactivex.Observable debounce(long,java.util.concurrent.TimeUnit)
androidx.core.R$styleable: int[] FontFamily
androidx.core.view.ViewCompat
androidx.core.provider.FontsContractCompat$FontFamilyResult: int STATUS_WRONG_CERTIFICATES
io.reactivex.Completable: boolean blockingAwait(long,java.util.concurrent.TimeUnit)
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object getLIST_EMPTY()
androidx.media.MediaBrowserServiceCompat$BrowserRoot
com.example.revolut.rates.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
io.reactivex.internal.observers.SubscriberCompletableObserver
androidx.swiperefreshlayout.R$dimen: int compat_control_corner_material
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle: FlowableSequenceEqualSingle(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiPredicate,int)
androidx.legacy.v4.R$color: int notification_material_background_media_default_color
io.reactivex.subscribers.SerializedSubscriber: void onError(java.lang.Throwable)
kotlinx.coroutines.channels.Channel: int UNLIMITED
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
androidx.slidingpanelayout.R$drawable: int notify_panel_notification_icon_bg
okhttp3.Protocol
androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)
kotlin.internal.PlatformImplementationsKt
okio.ByteString: int hashCode()
com.example.revolut.rates.R$styleable: int View_paddingEnd
kotlin.io.FilesKt__UtilsKt: java.io.File resolveSibling(java.io.File,java.lang.String)
retrofit2.Call: void enqueue(retrofit2.Callback)
io.reactivex.subjects.ReplaySubject
io.reactivex.internal.operators.observable.ObservableError
androidx.appcompat.widget.ScrollingTabContainerView: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
kotlin.io.OnErrorAction: kotlin.io.OnErrorAction TERMINATE
android.support.v4.media.MediaBrowserCompat: java.lang.String EXTRA_DOWNLOAD_PROGRESS
io.reactivex.CompletableEmitter: boolean isDisposed()
androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedScroll(android.view.View,int,int,int,int)
okhttp3.Authenticator: okhttp3.Authenticator NONE
androidx.appcompat.R$attr: int contentInsetLeft
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection filterNotNullTo(java.lang.Iterable,java.util.Collection)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setHotspotBounds(int,int,int,int)
io.reactivex.internal.operators.maybe.MaybeIsEmpty: void subscribeActual(io.reactivex.MaybeObserver)
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1: java.lang.Object next()
com.example.revolut.rates.R$layout: int notification_media_cancel_action
kotlin.comparisons.UComparisonsKt___UComparisonsKt: long maxOf-eb3DHEI(long,long)
io.reactivex.internal.observers.BasicQueueDisposable
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List chunked(java.lang.Iterable,int,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$drawable: int abc_list_selector_holo_dark
androidx.collection.CircularIntArray: int getLast()
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ActionBar_Solid
androidx.lifecycle.MediatorLiveData: void removeSource(androidx.lifecycle.LiveData)
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(boolean[],int)
androidx.core.animation.AnimatorKt$doOnStart$$inlined$addListener$1: void onAnimationEnd(android.animation.Animator)
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(float[],kotlin.jvm.functions.Function2)
androidx.core.os.EnvironmentCompat: java.lang.String getStorageState(java.io.File)
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.swiperefreshlayout.R$dimen: int notification_top_pad_large_text
android.support.v4.media.MediaBrowserCompat: void disconnect()
kotlin.jvm.internal.MutablePropertyReference1
okio.ByteString: int lastIndexOf(okio.ByteString,int)
com.google.gson.JsonArray: com.google.gson.JsonElement set(int,com.google.gson.JsonElement)
androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object lastOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.DividerItemDecoration
com.example.revolut.rates.R$drawable: int abc_btn_colored_material
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDropdownSelectedPosition(int)
androidx.legacy.coreutils.R$id: int title
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addView(android.view.View,int)
androidx.core.util.SparseIntArrayKt: boolean containsKey(android.util.SparseIntArray,int)
io.reactivex.processors.PublishProcessor: java.lang.Throwable getThrowable()
androidx.viewpager.R$styleable: int GradientColor_android_startColor
io.reactivex.internal.operators.completable.CompletablePeek: CompletablePeek(io.reactivex.CompletableSource,io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Action,io.reactivex.functions.Action,io.reactivex.functions.Action)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int getLastIndex-GBYM_sE(byte[])
androidx.collection.CircularArray: void addFirst(java.lang.Object)
kotlinx.coroutines.channels.ClosedSendChannelException: ClosedSendChannelException(java.lang.String)
kotlin.collections.CollectionsKt__CollectionsKt: CollectionsKt__CollectionsKt()
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver: long serialVersionUID
dagger.android.support.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
io.reactivex.Completable: io.reactivex.Completable compose(io.reactivex.CompletableTransformer)
io.reactivex.functions.Cancellable
io.reactivex.Flowable: io.reactivex.Flowable create(io.reactivex.FlowableOnSubscribe,io.reactivex.BackpressureStrategy)
androidx.appcompat.R$attr: int subtitleTextAppearance
androidx.constraintlayout.widget.ConstraintSet: int VERTICAL
io.reactivex.internal.util.NotificationLite: java.lang.Object next(java.lang.Object)
androidx.appcompat.widget.ListPopupWindow: java.lang.Object getSelectedItem()
androidx.core.app.NotificationCompat$WearableExtender: java.util.List getActions()
com.jakewharton.rxbinding3.core.R$id: int chronometer
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_android_fontStyle
kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 access$getOnEnter$p(kotlin.io.FileTreeWalk)
androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
kotlin.jvm.internal.DoubleCompanionObject: double getNEGATIVE_INFINITY()
androidx.appcompat.R$styleable: int ActionBar_background
com.example.revolut.rates.R$styleable: int AppCompatSeekBar_android_thumb
androidx.appcompat.view.menu.MenuItemImpl: int getOrdering()
com.example.revolut.rates.R$id: int showHome
kotlin.collections.AbstractMap: java.util.Set getEntries()
kotlinx.coroutines.channels.ArrayBroadcastChannel: kotlinx.coroutines.channels.SubscriptionReceiveChannel openSubscription()
io.reactivex.internal.operators.completable.CompletableConcat: CompletableConcat(org.reactivestreams.Publisher,int)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)
kotlinx.coroutines.sync.MutexKt: java.lang.Object withLock(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
org.intellij.lang.annotations.Language: java.lang.String prefix()
androidx.appcompat.widget.ActionBarContextView: boolean isTitleOptional()
androidx.databinding.library.baseAdapters.DataBinderMapperImpl: java.util.List collectDependencies()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$5: ChannelsKt__Channels_commonKt$consumeEach$5(kotlin.coroutines.Continuation)
dagger.android.support.R$style: int Widget_AppCompat_SearchView_ActionBar
kotlin.random.AbstractPlatformRandom: long nextLong()
androidx.core.app.NotificationCompat$WearableExtender: java.util.List getPages()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: float getPixelSize()
kotlin.jvm.internal.MutablePropertyReference0Impl: java.lang.String getSignature()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(short[],java.util.Collection,kotlin.jvm.functions.Function1)
io.reactivex.internal.util.QueueDrainHelper: void postComplete(org.reactivestreams.Subscriber,java.util.Queue,java.util.concurrent.atomic.AtomicLong,io.reactivex.functions.BooleanSupplier)
androidx.media.R$id: int action_container
androidx.fragment.R$drawable: int notification_tile_bg
androidx.constraintlayout.widget.ConstraintSet: int END
io.reactivex.processors.ReplayProcessor: boolean hasComplete()
com.example.revolut.rates.view.adapter.CurrenciesAdapter: void updateCurrentBase(java.lang.String)
androidx.vectordrawable.R$styleable: int FontFamily_fontProviderFetchTimeout
io.reactivex.subjects.MaybeSubject: boolean hasValue()
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: ComparisonsKt__ComparisonsKt$compareByDescending$1(kotlin.jvm.functions.Function1)
androidx.core.graphics.TypefaceCompatApi26Impl: TypefaceCompatApi26Impl()
io.reactivex.Observable: void blockingForEach(io.reactivex.functions.Consumer)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(java.lang.Object[],int,int)
kotlin.collections.UArraysKt: kotlin.UByte[] toTypedArray-GBYM_sE(byte[])
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadClose(int,java.lang.String)
kotlin.collections.CollectionsKt__IteratorsJVMKt: java.util.Iterator iterator(java.util.Enumeration)
kotlin.text.MatcherMatchResult$groupValues$1: boolean contains(java.lang.String)
androidx.appcompat.widget.ContentFrameLayout
com.google.gson.reflect.TypeToken: java.lang.String toString()
androidx.core.app.NotificationCompat$WearableExtender: int getGravity()
android.support.v4.media.session.IMediaSession$Stub: IMediaSession$Stub()
com.example.revolut.rates.R$bool: int abc_allow_stacked_button_bar
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Integer toIntOrNull(java.lang.String,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isVisibleToUser()
dagger.android.support.R$attr: int titleTextAppearance
com.example.revolut.rates.base.BaseViewModel: io.reactivex.disposables.CompositeDisposable getCompositeDisposable()
kotlinx.coroutines.Deferred$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Deferred,kotlin.coroutines.CoroutineContext$Key)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
kotlin.collections.AbstractSet
androidx.appcompat.widget.TintTypedArray: int getChangingConfigurations()
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsKt: IntrinsicsKt__IntrinsicsKt()
androidx.legacy.coreutils.R$layout: int notification_template_part_chronometer
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
androidx.appcompat.R$attr: int actionModeFindDrawable
io.reactivex.internal.subscribers.BlockingBaseSubscriber: BlockingBaseSubscriber()
io.reactivex.Observable: io.reactivex.Single toList(java.util.concurrent.Callable)
okhttp3.EventListener: void responseBodyEnd(okhttp3.Call,long)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4
io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher
androidx.recyclerview.widget.RecyclerView$State: int getRemainingScrollHorizontal()
kotlin.text.Charsets: java.nio.charset.Charset UTF_16BE
io.reactivex.Maybe: io.reactivex.Flowable mergeWith(io.reactivex.MaybeSource)
androidx.asynclayoutinflater.R$drawable: int notification_template_icon_low_bg
kotlin.sequences.DropWhileSequence$iterator$1: java.util.Iterator getIterator()
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemRemoved(int)
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder withModifiers(int[])
okio.BufferedSource: okio.ByteString readByteString()
androidx.core.util.Pools$Pool: java.lang.Object acquire()
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver$InnerRepeatObserver: long serialVersionUID
io.reactivex.internal.operators.single.SingleDoOnSuccess: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.subscribers.SubscriberResourceWrapper: SubscriberResourceWrapper(org.reactivestreams.Subscriber)
androidx.fragment.R$style: int TextAppearance_Compat_Notification
io.reactivex.exceptions.CompositeException: CompositeException(java.lang.Iterable)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void dependsOn(int,androidx.constraintlayout.solver.widgets.ResolutionAnchor,int)
io.reactivex.internal.subscriptions.ScalarSubscription: boolean isCancelled()
kotlin.random.PlatformRandomKt: int fastLog2(int)
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int getPlaybackType()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setChangingConfigurations(int)
androidx.databinding.ObservableList$OnListChangedCallback: void onItemRangeRemoved(androidx.databinding.ObservableList,int,int)
io.reactivex.Observable: io.reactivex.Observable dematerialize()
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int VISIBLE
androidx.vectordrawable.R$styleable: int FontFamily_fontProviderCerts
androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)
kotlin.collections.ArraysKt___ArraysJvmKt: float[] plus(float[],java.util.Collection)
androidx.swiperefreshlayout.R$id: int forever
androidx.appcompat.R$drawable: int abc_btn_radio_to_on_mtrl_000
android.support.v4.media.session.PlaybackStateCompat: android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object)
androidx.recyclerview.widget.SortedList$BatchedCallback: void onInserted(int,int)
androidx.loader.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.core.content.pm.ShortcutInfoCompat: java.lang.CharSequence getLongLabel()
androidx.core.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[])
io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver: long serialVersionUID
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_goneMarginBottom
kotlin.jvm.internal.TypeIntrinsics: java.util.Collection castToCollection(java.lang.Object)
androidx.appcompat.widget.ActivityChooserView: ActivityChooserView(android.content.Context,android.util.AttributeSet,int)
io.reactivex.internal.operators.parallel.ParallelCollect: int parallelism()
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver: long serialVersionUID
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object find(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
io.reactivex.internal.operators.flowable.FlowableTakeLast: FlowableTakeLast(io.reactivex.Flowable,int)
dagger.android.DaggerApplication: void onCreate()
com.example.revolut.rates.R$attr: int isLightTheme
androidx.constraintlayout.solver.widgets.ConstraintWidget: float getVerticalBiasPercent()
com.example.revolut.rates.R$style: int Platform_ThemeOverlay_AppCompat_Dark
androidx.lifecycle.SingleGeneratedAdapterObserver
androidx.core.text.TextDirectionHeuristicsCompat
androidx.lifecycle.Lifecycle: Lifecycle()
io.reactivex.internal.subscribers.QueueDrainSubscriber: boolean done
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromBuffer
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment valueOf(java.lang.String)
io.reactivex.disposables.CompositeDisposable: boolean add(io.reactivex.disposables.Disposable)
androidx.appcompat.text.AllCapsTransformationMethod: AllCapsTransformationMethod(android.content.Context)
android.support.v4.media.MediaDescriptionCompat: java.lang.String DESCRIPTION_KEY_MEDIA_URI
kotlinx.coroutines.DefaultExecutorKt
androidx.appcompat.widget.ListPopupWindow: void setWidth(int)
androidx.appcompat.view.menu.MenuItemImpl: boolean isChecked()
androidx.fragment.R$styleable: int ColorStateListItem_android_alpha
okio.ByteString: java.lang.String hex()
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,long)
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Caption
dagger.android.support.R$style: int Theme_AppCompat_Light_DialogWhenLarge
com.jakewharton.rxbinding3.widget.RxRatingBar: com.jakewharton.rxbinding3.InitialValueObservable ratingChangeEvents(android.widget.RatingBar)
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean hasBaseline()
androidx.annotation.DrawableRes
androidx.collection.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)
okhttp3.internal.ws.RealWebSocket$Streams: boolean client
androidx.constraintlayout.widget.Barrier: int START
androidx.appcompat.R$color: int error_color_material_dark
androidx.appcompat.R$string: int abc_capital_off
io.reactivex.internal.subscriptions.ArrayCompositeSubscription
com.example.revolut.rates.view.adapter.CurrenciesAdapter$CurrenciesViewHolder: void bind(int)
dagger.android.support.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPaneTitle(java.lang.CharSequence)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintHorizontal_bias
androidx.core.R$styleable: int FontFamilyFont_android_ttcIndex
com.example.revolut.rates.databinding.RatesItemBindingImpl: RatesItemBindingImpl(androidx.databinding.DataBindingComponent,android.view.View)
io.reactivex.ObservableEmitter: boolean tryOnError(java.lang.Throwable)
kotlin.KotlinVersion: int getPatch()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: int getColumnSpan()
dagger.android.support.R$dimen: int abc_text_size_display_2_material
io.reactivex.Observer
androidx.legacy.v4.R$id: int bottom
androidx.fragment.R$styleable: int GradientColor_android_type
androidx.appcompat.widget.TintTypedArray: boolean getValue(int,android.util.TypedValue)
androidx.core.view.PointerIconCompat: int TYPE_TEXT
io.reactivex.internal.subscribers.BlockingFirstSubscriber: void onError(java.lang.Throwable)
kotlin.collections.AbstractList: java.util.List subList(int,int)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback
com.google.gson.internal.bind.SqlDateTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
dagger.MapKey: boolean unwrapValue()
androidx.appcompat.R$style: int Base_V21_Theme_AppCompat_Light
androidx.lifecycle.ViewModelProvider$Factory
com.example.revolut.rates.R$id: int home
androidx.lifecycle.ServiceLifecycleDispatcher: void onServicePreSuperOnBind()
com.google.gson.internal.bind.util.ISO8601Utils: java.util.Date parse(java.lang.String,java.text.ParsePosition)
androidx.appcompat.widget.DecorContentParent: void initFeature(int)
android.support.v4.media.session.MediaControllerCompat$TransportControls: java.lang.String EXTRA_LEGACY_STREAM_TYPE
kotlin.properties.ReadWriteProperty: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
io.reactivex.internal.schedulers.SingleScheduler: void start()
androidx.asynclayoutinflater.R$style
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeChild(android.view.View)
io.reactivex.internal.operators.maybe.MaybeDoFinally$DoFinallyObserver: long serialVersionUID
kotlin.text.CharCategory$Companion: CharCategory$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.reflect.KClass$DefaultImpls: void sealedSubclasses$annotations()
okhttp3.internal.http.StatusLine: int HTTP_TEMP_REDIRECT
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap)
com.jakewharton.rxbinding3.core.R$id: int notification_main_column_container
androidx.constraintlayout.solver.LinearSystem: int getNumVariables()
androidx.recyclerview.widget.ItemTouchHelper$Callback: boolean onMove(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalBefore(android.view.View)
com.google.gson.internal.bind.JsonTreeReader: void endArray()
androidx.appcompat.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
com.example.revolut.rates.R$styleable: int ActionMode_titleTextStyle
android.support.v4.media.session.IMediaSession: void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle)
kotlin.collections.AbstractMutableList: int getSize()
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence padStart$default(java.lang.CharSequence,int,char,int,java.lang.Object)
dagger.android.support.R$styleable: int AppCompatTextView_lineHeight
androidx.appcompat.R$style: int Widget_AppCompat_Spinner_DropDown
io.reactivex.Observable: io.reactivex.Observable mergeWith(io.reactivex.ObservableSource)
com.example.revolut.rates.R$anim: int abc_shrink_fade_out_from_bottom
dagger.android.support.DaggerFragment
androidx.core.content.res.FontResourcesParserCompat: int INFINITE_TIMEOUT_VALUE
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.DefaultExecutor: void ensureStarted$kotlinx_coroutines_core()
kotlinx.coroutines.channels.AbstractChannelKt
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable
androidx.coordinatorlayout.R$id: int async
dagger.android.support.R$style: int Widget_AppCompat_CompoundButton_RadioButton
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: boolean cancel$default(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable,int,java.lang.Object)
androidx.recyclerview.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.appcompat.R$attr: int alertDialogButtonGroupStyle
androidx.appcompat.app.AlertDialog: android.widget.Button getButton(int)
io.reactivex.Single: io.reactivex.Flowable merge(java.lang.Iterable)
androidx.customview.R$dimen: int compat_button_inset_horizontal_material
kotlin.collections.ArraysKt___ArraysKt: boolean any(short[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int[] MenuGroup
androidx.core.view.ViewCompat: int MEASURED_HEIGHT_STATE_SHIFT
okhttp3.ResponseBody: java.io.Reader charStream()
androidx.media.MediaBrowserProtocol: int SERVICE_MSG_ON_CONNECT
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
okio.Pipe: okio.Sink sink()
io.reactivex.internal.schedulers.ImmediateThinScheduler: io.reactivex.Scheduler INSTANCE
kotlin.collections.MapsKt__MapsKt: java.util.Map mapValues(java.util.Map,kotlin.jvm.functions.Function1)
io.reactivex.internal.disposables.DisposableContainer
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character getOrNull(char[],int)
androidx.loader.R$attr: int font
androidx.appcompat.view.menu.ListMenuPresenter: boolean flagActionItems()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA
io.reactivex.Observable: io.reactivex.Observable onExceptionResumeNext(io.reactivex.ObservableSource)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.core.math.MathUtils: int clamp(int,int,int)
androidx.appcompat.view.menu.ActionMenuItemView: boolean hasText()
androidx.core.R$dimen: int compat_button_padding_horizontal_material
androidx.vectordrawable.R$dimen: int compat_button_padding_vertical_material
kotlinx.coroutines.JobNode: kotlinx.coroutines.NodeList getList()
dagger.android.support.R$styleable: int ActionBar_hideOnContentScroll
androidx.core.widget.AutoScrollHelper
androidx.fragment.app.FragmentController: java.util.List retainNonConfig()
dagger.android.support.R$attr: int textAppearancePopupMenuHeader
androidx.loader.app.LoaderManager: boolean hasRunningLoaders()
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.ActionBar$Tab newTab()
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_goneMarginStart
androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(int,int)
kotlin.coroutines.CoroutineContext$Element: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.ListPopupWindow: void setOverlapAnchor(boolean)
kotlin.jvm.internal.ClassReference: java.lang.Class getJClass()
kotlin.sequences.DropWhileSequence$iterator$1
io.reactivex.Observable: io.reactivex.Observable buffer(int)
androidx.appcompat.view.menu.ActionMenuItemView: boolean prefersCondensedTitle()
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.fragment.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.coordinatorlayout.R$drawable: int notification_bg_normal_pressed
com.example.revolut.rates.R$styleable: int MenuItem_android_orderInCategory
kotlin.collections.ArraysKt___ArraysKt: double[] sliceArray(double[],java.util.Collection)
androidx.databinding.adapters.CardViewBindingAdapter: void setContentPaddingRight(androidx.cardview.widget.CardView,int)
kotlin.collections.ArraysKt___ArraysJvmKt: char[] copyOfRange(char[],int,int)
io.reactivex.processors.MulticastProcessor: void onNext(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object mapNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.fragment.app.ListFragment: void onViewCreated(android.view.View,android.os.Bundle)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
kotlin.jvm.internal.PropertyReference: boolean isLateinit()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-JQknh5Q(byte[],java.lang.Iterable)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$fold$1: java.lang.Object invokeSuspend(java.lang.Object)
com.example.revolut.rates.di.Injector$Companion: void initAppComponent(com.example.revolut.rates.di.AppModule)
com.example.revolut.rates.R$styleable: int ConstraintSet_android_scaleY
io.reactivex.Single: io.reactivex.Single timeout(long,java.util.concurrent.TimeUnit,io.reactivex.SingleSource)
kotlin.collections.AbstractMutableMap: java.util.Set getEntries()
kotlin.jvm.internal.PropertyReference2: java.lang.Object getDelegate(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: long last(long[])
android.support.v4.media.session.MediaControllerCompat: void setVolumeTo(int,int)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(long[],long,int,int)
androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualObserver: long serialVersionUID
androidx.constraintlayout.widget.R$attr: int layout_constraintTop_toBottomOf
io.reactivex.internal.operators.observable.ObservableSingleMaybe: ObservableSingleMaybe(io.reactivex.ObservableSource)
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(double[],kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.flowable.FlowableReplay: void connect(io.reactivex.functions.Consumer)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableBufferTimed: void subscribeActual(io.reactivex.Observer)
okio.Sink
retrofit2.Converter$Factory: retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[],retrofit2.Retrofit)
io.reactivex.internal.functions.Functions: io.reactivex.functions.Function toFunction(io.reactivex.functions.Function9)
kotlinx.coroutines.DeferredKt: kotlinx.coroutines.Deferred async$default(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.legacy.coreui.R$id
androidx.appcompat.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
kotlin.UnsignedKt: java.lang.String ulongToString(long)
androidx.databinding.adapters.SwitchCompatBindingAdapter: void setSwitchTextAppearance(androidx.appcompat.widget.SwitchCompat,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: ToolbarWidgetWrapper(androidx.appcompat.widget.Toolbar,boolean)
androidx.core.hardware.fingerprint.FingerprintManagerCompat: void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,androidx.core.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler)
dagger.internal.TypedReleasableReferenceManagerDecorator: java.lang.Class scope()
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.single.SingleUsing
com.google.gson.annotations.Expose
dagger.android.support.R$attr: int backgroundSplit
androidx.collection.ArrayMap: boolean retainAll(java.util.Collection)
kotlin.jvm.functions.FunctionN: int getArity()
com.example.revolut.rates.R$mipmap: R$mipmap()
androidx.legacy.coreutils.R$id: int icon
androidx.constraintlayout.widget.ConstraintSet: void setRotationX(int,float)
androidx.coordinatorlayout.R$drawable: int notification_action_background
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle
androidx.core.R$drawable: int notification_tile_bg
androidx.appcompat.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
androidx.core.R$id: int action_divider
com.jakewharton.rxbinding3.widget.AdapterViewItemClickEvent: long component4()
kotlin.random.URandomKt: long nextULong-jmpaW-c(kotlin.random.Random,long,long)
com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent: android.widget.TextView component1()
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder backgroundColor(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1)
androidx.recyclerview.R$id: int async
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int endToEnd
androidx.core.view.DragAndDropPermissionsCompat
kotlin.Result: java.lang.Object unbox-impl()
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertFailureAndMessage(java.lang.Class,java.lang.String,java.lang.Object[])
io.reactivex.SingleSource
androidx.slidingpanelayout.widget.SlidingPaneLayout: void onLayout(boolean,int,int,int,int)
io.reactivex.subscribers.SafeSubscriber: void request(long)
kotlin.coroutines.experimental.jvm.internal.CoroutineImpl: kotlin.coroutines.experimental.Continuation completion
androidx.vectordrawable.R$styleable: int FontFamilyFont_font
io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setColor(int)
kotlinx.coroutines.JobKt: kotlinx.coroutines.Job Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
kotlinx.coroutines.CompletedExceptionally: CompletedExceptionally(java.lang.Throwable)
androidx.fragment.app.Fragment: androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTint(int)
com.google.gson.internal.bind.ArrayTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe
io.reactivex.observers.DisposableMaybeObserver: boolean isDisposed()
androidx.drawerlayout.R$attr: int fontProviderQuery
io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable toSortedList(java.util.Comparator,int)
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_Button_Colored
androidx.databinding.InverseBindingListener: void onChange()
okio.BufferedSource: java.lang.String readString(java.nio.charset.Charset)
androidx.viewpager.R$attr: int fontProviderCerts
com.example.revolut.rates.R$id: int action_divider
dagger.android.DaggerApplication: dagger.android.DispatchingAndroidInjector serviceInjector()
kotlinx.coroutines.ResumeModeKt: boolean isCancellableMode(int)
androidx.constraintlayout.solver.SolverVariable: int STRENGTH_HIGHEST
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertTerminated()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode takeAffectedNode(kotlinx.coroutines.internal.OpDescriptor)
kotlin.text.StringsKt__StringsKt: int getLastIndex(java.lang.CharSequence)
androidx.lifecycle.extensions.R$styleable: int CoordinatorLayout_Layout_layout_keyline
kotlinx.coroutines.JobKt: void cancelFutureOnCancellation(kotlinx.coroutines.CancellableContinuation,java.util.concurrent.Future)
androidx.core.app.Person$Builder: Person$Builder()
kotlinx.coroutines.internal.LockFreeLinkedListNode$describeRemove$1: kotlinx.coroutines.internal.LockFreeLinkedListNode getAffectedNode()
androidx.appcompat.view.menu.MenuItemImpl: android.view.ActionProvider getActionProvider()
retrofit2.Response: boolean isSuccessful()
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(long[])
io.reactivex.Flowable: io.reactivex.Flowable delaySubscription(long,java.util.concurrent.TimeUnit)
io.reactivex.Flowable: io.reactivex.Flowable doOnCancel(io.reactivex.functions.Action)
androidx.documentfile.provider.DocumentFile: boolean isDocumentUri(android.content.Context,android.net.Uri)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type)
dagger.android.support.R$style: int Widget_AppCompat_SeekBar
kotlin.text.StringsKt__StringsKt: int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type CENTER_X
kotlin.reflect.KTypeProjection$Companion: kotlin.reflect.KTypeProjection getSTAR()
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_MEDIA_URI
kotlinx.coroutines.test.TestCoroutineContextKt
dagger.android.support.R$layout: int notification_template_media
androidx.core.R$styleable: int FontFamilyFont_android_font
androidx.core.app.ShareCompat: java.lang.String EXTRA_CALLING_PACKAGE
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTitleCondensed()
androidx.appcompat.widget.SearchView: boolean isIconified()
kotlin.jvm.internal.PropertyReference1: java.lang.Object getDelegate(java.lang.Object)
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_font
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(char[],java.lang.Iterable)
androidx.annotation.RequiresApi: int api()
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintGuide_begin
kotlinx.coroutines.scheduling.WorkQueue$pollExternal$1: WorkQueue$pollExternal$1()
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)
kotlinx.coroutines.JobSupport: void onStartInternal$kotlinx_coroutines_core()
retrofit2.Call: okhttp3.Request request()
io.reactivex.Single: Single()
retrofit2.http.PUT
androidx.lifecycle.extensions.R$attr: int alpha
com.example.revolut.rates.R$styleable: int ActionBar_homeLayout
kotlin.jvm.internal.MutablePropertyReference1: java.lang.Object getDelegate(java.lang.Object)
dagger.android.support.DaggerApplication: dagger.android.DispatchingAndroidInjector supportFragmentInjector()
io.reactivex.Maybe: io.reactivex.Maybe fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.ScrollingTabContainerView
com.example.revolut.rates.R$attr: int textColorAlertDialogListItem
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(byte[],kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlin.text.Typography: char nbsp
kotlin.ranges.UIntProgression: kotlin.collections.UIntIterator iterator()
androidx.appcompat.widget.ListPopupWindow: int getInputMethodMode()
androidx.viewpager.R$attr: int fontWeight
kotlin.TuplesKt: java.util.List toList(kotlin.Triple)
okhttp3.Request$Builder: okhttp3.Request$Builder patch(okhttp3.RequestBody)
kotlinx.coroutines.CoroutineExceptionHandler: kotlinx.coroutines.CoroutineExceptionHandler$Key Key
androidx.appcompat.R$attr: int actionBarStyle
androidx.core.graphics.BitmapKt: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace)
okhttp3.internal.NamedRunnable: void run()
androidx.appcompat.widget.ActionBarOverlayLayout: void onStopNestedScroll(android.view.View)
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality$Companion Companion
kotlin.text.DelimitedRangesSequence$iterator$1: void setCounter(int)
okhttp3.HttpUrl: boolean isHttps()
com.google.gson.JsonElement
androidx.appcompat.widget.AppCompatSeekBar: AppCompatSeekBar(android.content.Context)
io.reactivex.Flowable: io.reactivex.Completable switchMapCompletable(io.reactivex.functions.Function)
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder withVersion(double)
kotlin.collections.AbstractMap: java.util.Set getKeys()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.legacy.coreutils.R$id: int notification_background
com.example.revolut.rates.R$color: int abc_btn_colored_text_material
androidx.appcompat.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
kotlin.ULong: kotlin.ULong$Companion Companion
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(java.lang.Object[],int)
io.reactivex.internal.operators.completable.CompletableCache: void onSubscribe(io.reactivex.disposables.Disposable)
dagger.android.support.R$dimen: int abc_edit_text_inset_top_material
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean canSlide()
io.reactivex.internal.subscriptions.BasicIntQueueSubscription: BasicIntQueueSubscription()
io.reactivex.Single: io.reactivex.Single never()
android.support.v4.media.MediaBrowserCompat$SearchCallback
dagger.android.support.R$bool: int abc_action_bar_embed_tabs
io.reactivex.Observable: io.reactivex.Observable share()
kotlin.jvm.functions.Function20: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.legacy.coreutils.R$id
androidx.databinding.ViewDataBinding: long parse(java.lang.String,long)
kotlin.random.URandomKt: void checkUIntRangeBounds-J1ME1BU(int,int)
androidx.appcompat.R$string
androidx.media.R$drawable: int notification_bg_low
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: java.lang.String getParticipant()
com.example.revolut.rates.R$attr: int autoSizePresetSizes
androidx.lifecycle.LifecycleRegistry: LifecycleRegistry(androidx.lifecycle.LifecycleOwner)
androidx.core.app.AppComponentFactory: AppComponentFactory()
kotlin.text.StringsKt__StringsKt: kotlin.Pair findAnyOf$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setMinHeight(int)
com.example.revolut.rates.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
androidx.core.view.GravityCompat: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)
androidx.core.view.MotionEventCompat: int AXIS_SCROLL
io.reactivex.Observable: io.reactivex.Observable timeout(long,java.util.concurrent.TimeUnit)
androidx.appcompat.R$layout: int abc_action_mode_close_item_material
io.reactivex.Single: java.util.concurrent.Future toFuture()
androidx.appcompat.R$color: int abc_btn_colored_borderless_text_material
kotlin.reflect.KClass: boolean isOpen()
kotlin.jvm.internal.MutablePropertyReference1Impl: java.lang.String getName()
com.example.revolut.rates.R$drawable: int notification_template_icon_low_bg
androidx.viewpager.R$style: int TextAppearance_Compat_Notification
androidx.legacy.v4.R$drawable: int notification_bg_low
androidx.appcompat.R$attr: int iconTintMode
androidx.appcompat.graphics.drawable.StateListDrawable: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.example.revolut.rates.R$styleable: int ConstraintSet_android_maxHeight
io.reactivex.internal.operators.single.SingleZipArray: SingleZipArray(io.reactivex.SingleSource[],io.reactivex.functions.Function)
androidx.appcompat.R$styleable: int AppCompatTheme_alertDialogTheme
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,char[],boolean,int)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterNotTo$3: java.lang.Object invokeSuspend(java.lang.Object)
com.example.revolut.rates.R$style: int Widget_AppCompat_ActionBar_TabBar
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler initSingleScheduler(java.util.concurrent.Callable)
dagger.android.support.R$attr: int height
androidx.constraintlayout.solver.widgets.Guideline: void addToSolver(androidx.constraintlayout.solver.LinearSystem)
com.example.revolut.rates.data.repository.CurrenciesRepository_MembersInjector: void injectMembers(com.example.revolut.rates.data.repository.CurrenciesRepository)
com.google.gson.reflect.TypeToken: TypeToken()
androidx.lifecycle.ViewModelProviders: androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.Fragment)
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(java.lang.Object[])
androidx.legacy.coreui.R$drawable: int notification_bg_normal
androidx.core.R$dimen: int compat_button_padding_vertical_material
com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)
androidx.core.view.DragStartHelper: boolean onTouch(android.view.View,android.view.MotionEvent)
androidx.core.text.HtmlCompat
com.example.revolut.rates.di.Injector: com.example.revolut.rates.di.AppComponent appComponent
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable systemUiVisibilityChanges(android.view.View)
kotlin.text.StringsKt___StringsKt: java.util.Map groupBy(java.lang.CharSequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setView(android.view.View)
androidx.loader.content.Loader: void unregisterOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
androidx.fragment.app.Fragment: void setReenterTransition(java.lang.Object)
androidx.annotation.RequiresPermission: java.lang.String value()
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2: java.util.Iterator iterator()
dagger.android.support.R$color: int dim_foreground_disabled_material_dark
androidx.core.ktx.R$styleable: int FontFamilyFont_android_font
androidx.databinding.ObservableArrayList: boolean addAll(java.util.Collection)
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mActions
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode peek()
androidx.appcompat.widget.ListPopupWindow: int MATCH_PARENT
io.reactivex.internal.util.ConnectConsumer: ConnectConsumer()
androidx.swiperefreshlayout.R$drawable: int notification_bg_low_normal
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object lastIndexOf(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setChecked(boolean)
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function)
androidx.customview.widget.ViewDragHelper: int STATE_SETTLING
com.jakewharton.rxbinding3.widget.AdapterViewItemSelectionEvent
androidx.core.view.inputmethod.InputContentInfoCompat: void releasePermission()
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
kotlin.random.PlatformRandomKt: double doubleFromParts(int,int)
io.reactivex.Flowable: java.lang.Object blockingSingle()
com.google.gson.internal.bind.DateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.util.Date)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalWeight(float)
com.example.revolut.rates.R$dimen: int abc_control_inset_material
io.reactivex.internal.operators.completable.CompletableTimer: CompletableTimer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlinx.coroutines.channels.AbstractSendChannel: void afterClose(java.lang.Throwable)
kotlinx.coroutines.AbstractContinuation
dagger.android.support.R$styleable: int Toolbar_buttonGravity
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(java.lang.Object[],java.lang.Iterable)
androidx.appcompat.R$styleable: int AppCompatTheme_listPreferredItemHeight
kotlin.sequences.FilteringSequence: kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.FilteringSequence)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(long[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.appcompat.R$string: int abc_menu_enter_shortcut_label
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintList(android.content.res.ColorStateList)
androidx.loader.content.CursorLoader: java.lang.String getSortOrder()
retrofit2.Call: retrofit2.Call clone()
kotlin.ranges.LongRange
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)
com.example.revolut.rates.R$attr: int colorControlActivated
kotlin.jvm.internal.ClassReference: boolean isSealed()
dagger.android.AndroidMemorySensitiveReferenceManager_Factory: dagger.android.AndroidMemorySensitiveReferenceManager_Factory create(javax.inject.Provider)
com.example.revolut.rates.R$style: int Theme_AppCompat_CompactMenu
androidx.appcompat.widget.AppCompatTextView: void setTextSize(int,float)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence requireNoNulls(kotlin.sequences.Sequence)
androidx.collection.LongSparseArray: java.lang.Object clone()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.util.Collection,kotlin.sequences.Sequence)
dagger.android.support.R$styleable: int MenuView_android_windowAnimationStyle
androidx.constraintlayout.solver.widgets.ConstraintWidget: int SOLVER
com.google.gson.internal.Excluder
androidx.legacy.v4.R$attr: int fontProviderPackage
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isEnabled()
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableFromCallable
androidx.core.view.ViewCompat: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
androidx.constraintlayout.widget.R$attr: int layout_constraintVertical_chainStyle
io.reactivex.internal.operators.single.SingleFromUnsafeSource: void subscribeActual(io.reactivex.SingleObserver)
androidx.legacy.coreui.R
kotlin.NoWhenBranchMatchedException
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateTo$1
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Default
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List mapIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2)
com.example.revolut.rates.R$attr: int fontFamily
androidx.appcompat.R$styleable: int GradientColor_android_endY
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
androidx.legacy.coreui.R$attr: int fontProviderQuery
androidx.collection.CircularArray: java.lang.Object popLast()
io.reactivex.Observable: java.util.concurrent.Future toFuture()
androidx.core.view.ViewCompat: void setRotationX(android.view.View,float)
androidx.core.R$style: int TextAppearance_Compat_Notification_Info
dagger.android.support.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
androidx.lifecycle.MediatorLiveData: void onActive()
kotlinx.coroutines.EventLoopKt: kotlinx.coroutines.EventLoop EventLoop(java.lang.Thread,kotlinx.coroutines.Job)
androidx.constraintlayout.widget.R$attr: int barrierAllowsGoneWidgets
androidx.core.app.NotificationCompatSideChannelService: void cancelAll(java.lang.String)
androidx.legacy.coreui.R$dimen: int notification_main_column_padding_top
androidx.media.R$dimen: int subtitle_shadow_offset
androidx.swiperefreshlayout.widget.CircularProgressDrawable: CircularProgressDrawable(android.content.Context)
kotlinx.coroutines.channels.ProducerScope$DefaultImpls
androidx.vectordrawable.R$dimen: int notification_right_side_padding_top
com.google.gson.Gson: com.google.gson.TypeAdapter getAdapter(java.lang.Class)
io.reactivex.Observable: io.reactivex.Single toSortedList(java.util.Comparator,int)
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
androidx.recyclerview.widget.BatchingListUpdateCallback: void dispatchLastEvent()
androidx.core.R$dimen: int notification_big_circle_margin
io.reactivex.Flowable: io.reactivex.Flowable delaySubscription(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.internal.queue.SpscLinkedArrayQueue: int size()
com.example.revolut.rates.R$attr: int actionLayout
io.reactivex.Observable: io.reactivex.Single toMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)
dagger.android.support.R$style: int Theme_AppCompat_Light_Dialog
kotlinx.coroutines.ThreadEventLoop: boolean isCorrectThread()
com.jakewharton.rxbinding3.core.R$dimen: int compat_button_inset_vertical_material
okhttp3.Cache: void close()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
okhttp3.internal.connection.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)
dagger.android.support.R$string: int abc_searchview_description_search
androidx.recyclerview.widget.GridLayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_THUMBS_UP
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setDismissalId(java.lang.String)
io.reactivex.internal.disposables.EmptyDisposable: boolean offer(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$State: boolean willRunSimpleAnimations()
androidx.appcompat.R$attr: int colorAccent
kotlinx.coroutines.internal.LockFreeMPMCQueueNode: void nextValue$annotations()
dagger.android.support.R$dimen: int abc_button_padding_vertical_material
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setHotspot(float,float)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-QwZRm1k(long[])
io.reactivex.internal.operators.flowable.FlowableTimer: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.view.NestedScrollingChild: boolean startNestedScroll(int)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler createIoScheduler(java.util.concurrent.ThreadFactory)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.collection.ArraySet: java.lang.Object[] toArray(java.lang.Object[])
kotlin.jvm.internal.MutablePropertyReference2: kotlin.reflect.KMutableProperty$Setter getSetter()
kotlin.text.StringsKt___StringsKt: java.util.Map associateTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1)
androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)
com.example.revolut.rates.data.repository.CurrenciesRepository_MembersInjector: dagger.MembersInjector create(javax.inject.Provider)
com.example.revolut.rates.R$id: int title
kotlin.collections.CollectionsKt__IterablesKt: java.util.List flatten(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short singleOrNull(short[],kotlin.jvm.functions.Function1)
kotlin.text.CharCategory: kotlin.text.CharCategory MODIFIER_SYMBOL
kotlinx.coroutines.internal.LockFreeMPSCQueueCore: boolean isEmpty()
androidx.core.app.FrameMetricsAggregator
androidx.legacy.coreutils.R$id: int info
androidx.core.animation.AnimatorKt$doOnPause$$inlined$addPauseListener$1: void onAnimationPause(android.animation.Animator)
androidx.appcompat.widget.ScrollingTabContainerView: androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener
androidx.viewpager.R$styleable: int FontFamily_fontProviderFetchStrategy
com.example.revolut.rates.R$style: int Theme_AppCompat_DayNight_Dialog
androidx.appcompat.R$styleable: int SwitchCompat_showText
io.reactivex.internal.operators.flowable.FlowableRefCount: FlowableRefCount(io.reactivex.flowables.ConnectableFlowable)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(short[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.databinding.ObservableArrayMap: void addOnMapChangedCallback(androidx.databinding.ObservableMap$OnMapChangedCallback)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(int[],int,int,int)
androidx.media.R$styleable: int GradientColor_android_startY
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toMutableList(java.lang.Iterable)
com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent: android.widget.AbsListView getView()
kotlin.jvm.internal.markers.KMutableListIterator
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$singleOrNull$3
okhttp3.MultipartBody: int size()
androidx.constraintlayout.widget.ConstraintSet: void setRotationY(int,float)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
io.reactivex.internal.util.VolatileSizeArrayList: VolatileSizeArrayList()
dagger.android.support.R$integer: int abc_config_activityDefaultDur
kotlin.MathKt
dagger.android.support.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
androidx.constraintlayout.widget.ConstraintSet: void constrainMinHeight(int,int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedUsername(java.lang.String)
io.reactivex.internal.operators.observable.ObservableFlattenIterable: void subscribeActual(io.reactivex.Observer)
kotlin.ReplaceWith: java.lang.String expression()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSlingshotDistance(int)
com.google.gson.JsonStreamParser: java.lang.Object next()
io.reactivex.internal.subscriptions.SubscriptionHelper: void request(long)
kotlin.collections.IndexingIterator: IndexingIterator(java.util.Iterator)
androidx.recyclerview.widget.RecyclerView$State
androidx.vectordrawable.R$id: int action_image
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$sumBy$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.AccessibilityDelegateCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
io.reactivex.internal.operators.completable.CompletableDelay: void subscribeActual(io.reactivex.CompletableObserver)
kotlinx.coroutines.CancellableContinuationImpl
kotlinx.coroutines.scheduling.CoroutineScheduler: int access$getMIN_PARK_TIME_NS$cp()
androidx.appcompat.widget.TintTypedArray
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTooltipText(java.lang.CharSequence)
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.collection.ArrayMap: java.util.Set entrySet()
androidx.databinding.adapters.TimePickerBindingAdapter: int getMinute(android.widget.TimePicker)
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_android_fontVariationSettings
io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,long,java.util.concurrent.TimeUnit)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,kotlin.sequences.Sequence)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintStart_toStartOf
androidx.media.MediaSessionManager: androidx.media.MediaSessionManager getSessionManager(android.content.Context)
okhttp3.internal.http.StatusLine: int HTTP_PERM_REDIRECT
androidx.appcompat.view.menu.MenuPresenter: int getId()
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(float[])
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])
kotlin.UnsignedKt: java.lang.String ulongToString(long,int)
kotlin.jvm.internal.MutablePropertyReference1: MutablePropertyReference1()
androidx.appcompat.R$attr: int layout_keyline
androidx.loader.content.Loader$OnLoadCanceledListener: void onLoadCanceled(androidx.loader.content.Loader)
androidx.core.app.NotificationCompat$WearableExtender: int getHintScreenTimeout()
androidx.vectordrawable.R$styleable: int[] CoordinatorLayout
androidx.core.widget.AutoScrollHelper: int EDGE_TYPE_OUTSIDE
androidx.drawerlayout.R$styleable: int FontFamilyFont_android_fontStyle
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
kotlin.collections.ArraysKt___ArraysKt: boolean contains(char[],char)
androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe: MaybeTakeUntilMaybe(io.reactivex.MaybeSource,io.reactivex.MaybeSource)
kotlinx.coroutines.internal.LockFreeLinkedListHead: java.lang.Void remove()
kotlin.collections.ArraysKt___ArraysKt: boolean any(float[],kotlin.jvm.functions.Function1)
io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,int)
io.reactivex.Completable: io.reactivex.Completable unsafeCreate(io.reactivex.CompletableSource)
com.google.gson.JsonObject: JsonObject()
androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor getOpposite()
androidx.core.view.ActionProvider: android.view.View onCreateActionView(android.view.MenuItem)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-GBYM_sE(byte[])
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2
androidx.databinding.DataBinderMapper: int getLayoutId(java.lang.String)
androidx.customview.view.AbsSavedState: android.os.Parcelable getSuperState()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterIndexed$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
com.example.revolut.rates.R$style: int Platform_V25_AppCompat_Light
kotlin.Metadata: java.lang.String[] d1()
androidx.appcompat.widget.VectorEnabledTintResources: void setCompatVectorFromResourcesEnabled(boolean)
android.support.v4.media.MediaBrowserCompat: void unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)
androidx.appcompat.R$id: int action_divider
com.example.revolut.rates.R$style: int Base_ThemeOverlay_AppCompat
androidx.swiperefreshlayout.R$style: int Widget_Compat_NotificationActionText
androidx.viewpager.R$drawable: int notification_bg
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection flatMapTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1)
io.reactivex.Maybe: io.reactivex.Maybe delay(long,java.util.concurrent.TimeUnit)
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache$Editor edit()
okhttp3.MultipartBody: java.util.List parts()
kotlin.reflect.KMutableProperty0: kotlin.reflect.KMutableProperty0$Setter getSetter()
androidx.slidingpanelayout.widget.SlidingPaneLayout: void onMeasure(int,int)
io.reactivex.internal.operators.flowable.FlowablePublish: int publishBufferSize()
dagger.android.support.R$id: int search_voice_btn
androidx.appcompat.widget.DrawableUtils
androidx.core.widget.NestedScrollView: boolean isFillViewport()
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintHeight_max
androidx.appcompat.R$layout: int abc_search_dropdown_item_icons_2line
kotlin.collections.UByteIterator: UByteIterator()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)
androidx.constraintlayout.widget.ConstraintLayout: int DESIGN_INFO_ID
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(short[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence generateSequence(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat: int getGroupAlertBehavior(android.app.Notification)
androidx.core.app.NotificationCompat: int FLAG_ONGOING_EVENT
okhttp3.internal.http2.ConnectionShutdownException
androidx.media.R$layout: int notification_media_action
androidx.media.R$drawable: int notification_bg_normal
io.reactivex.exceptions.OnErrorNotImplementedException: OnErrorNotImplementedException(java.lang.Throwable)
android.support.v4.media.session.PlaybackStateCompat: java.util.List getCustomActions()
io.reactivex.Maybe: io.reactivex.Maybe using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer)
kotlinx.coroutines.internal.LockFreeMPSCQueueCore$Companion: int access$addFailReason(kotlinx.coroutines.internal.LockFreeMPSCQueueCore$Companion,long)
androidx.databinding.ViewDataBinding: void setTo(float[],int,float)
io.reactivex.internal.operators.flowable.FlowableCountSingle
io.reactivex.Maybe: io.reactivex.Maybe fromRunnable(java.lang.Runnable)
io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource,io.reactivex.ObservableSource)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setScrollX(int)
kotlin.text.UStringsKt: kotlin.ULong toULongOrNull(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable buffer(java.util.concurrent.Callable,java.util.concurrent.Callable)
androidx.core.app.RemoteInput
kotlin.collections.ArraysKt___ArraysKt: void forEach(float[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(java.lang.Object[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.fragment.R$string: int status_bar_notification_info_overflow
androidx.appcompat.app.WindowDecorActionBar: boolean isShowing()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
kotlin.sequences.FlatteningSequence: FlatteningSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
io.reactivex.Completable: io.reactivex.observers.TestObserver test(boolean)
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.drawerlayout.R$id: int title
dagger.android.support.R$attr: int alertDialogStyle
io.reactivex.disposables.Disposables: io.reactivex.disposables.Disposable fromFuture(java.util.concurrent.Future,boolean)
kotlinx.coroutines.test.TestCoroutineContext: TestCoroutineContext()
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence)
kotlin.math.MathKt__MathHKt: MathKt__MathHKt()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1: StringsKt___StringsKt$asSequence$$inlined$Sequence$1(java.lang.CharSequence)
androidx.core.content.SharedPreferencesCompat
io.reactivex.functions.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.ClassReference: boolean isAbstract()
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(float[],int,int)
com.google.gson.internal.$Gson$Types
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateWithTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1)
androidx.swiperefreshlayout.R$id: int tag_unhandled_key_listeners
androidx.appcompat.R$styleable: int ActionBar_logo
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeTextType
kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object getValue()
io.reactivex.functions.IntFunction: java.lang.Object apply(int)
io.reactivex.Maybe: io.reactivex.Flowable concatArray(io.reactivex.MaybeSource[])
com.example.revolut.rates.R$anim: int abc_slide_out_top
io.reactivex.Single: io.reactivex.Flowable concat(java.lang.Iterable)
kotlin.jvm.functions.Function12
io.reactivex.internal.observers.LambdaObserver: void dispose()
android.support.v4.media.session.MediaSessionCompatApi24$Callback: void onPrepareFromMediaId(java.lang.String,android.os.Bundle)
kotlin.UShortArray: boolean remove(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: double averageOfLong(java.lang.Iterable)
androidx.appcompat.widget.Toolbar: boolean canShowOverflowMenu()
androidx.vectordrawable.R$styleable: int CoordinatorLayout_Layout_layout_behavior
androidx.asynclayoutinflater.R$id: int action_image
dagger.android.support.R$styleable: int MenuView_android_horizontalDivider
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(long[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short minWith(short[],java.util.Comparator)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onKeyDown(int,android.view.KeyEvent)
androidx.constraintlayout.solver.Metrics: long maxTableSize
dagger.android.support.R$attr: int selectableItemBackgroundBorderless
okio.InflaterSource
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop: FlowableOnBackpressureDrop(io.reactivex.Flowable,io.reactivex.functions.Consumer)
com.google.gson.internal.bind.JsonTreeReader
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setProgress(float)
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
io.reactivex.internal.operators.maybe.MaybeMergeArray$MpscFillOnceSimpleQueue: long serialVersionUID
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object elementAtOrElse(kotlin.sequences.Sequence,int,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getId()
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()
kotlin.collections.ArraysKt___ArraysKt: char[] sortedArray(char[])
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe: FlowableConcatWithMaybe(io.reactivex.Flowable,io.reactivex.MaybeSource)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object last(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.view.MarginLayoutParamsCompat: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
kotlin.jvm.internal.DoubleSpreadBuilder: int getSize(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeCount: MaybeCount(io.reactivex.MaybeSource)
io.reactivex.internal.operators.flowable.FlowableInternalHelper: java.util.concurrent.Callable replayCallable(io.reactivex.Flowable,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle: void subscribeActual(io.reactivex.SingleObserver)
kotlin.UShortArray: short[] constructor-impl(int)
io.reactivex.internal.operators.flowable.FlowableConcatWithSingle
com.example.revolut.rates.R$attr: int fontWeight
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax
io.reactivex.schedulers.Schedulers: void shutdown()
kotlin.Experimental: kotlin.Experimental$Level level()
io.reactivex.internal.operators.flowable.FlowableCreate$ErrorAsyncEmitter: long serialVersionUID
kotlin.jvm.internal.FunctionImpl
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget TYPE_PARAMETER
dagger.android.support.R$styleable: int MenuGroup_android_menuCategory
androidx.appcompat.widget.ActionMenuView: void initialize(androidx.appcompat.view.menu.MenuBuilder)
kotlin.math.MathKt
androidx.core.util.SparseBooleanArrayKt: boolean getOrElse(android.util.SparseBooleanArray,int,kotlin.jvm.functions.Function0)
com.example.revolut.rates.R$styleable: int ConstraintSet_android_layout_marginRight
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.ItemTouchUIUtil: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean)
kotlin.contracts.Returns
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.LinearSmoothScroller: LinearSmoothScroller(android.content.Context)
com.example.revolut.rates.R$attr: int iconTint
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(int[],java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(char[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: kotlin.sequences.Sequence getChildren()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.JsonElement get()
io.reactivex.internal.operators.single.SingleHide
dagger.android.support.R$styleable: int AppCompatTheme_windowFixedWidthMajor
androidx.viewpager.R$dimen: int notification_action_icon_size
dagger.android.support.R$id: int chronometer
com.example.revolut.rates.R$style: int AlertDialog_AppCompat
io.reactivex.internal.operators.completable.CompletableObserveOn: CompletableObserveOn(io.reactivex.CompletableSource,io.reactivex.Scheduler)
kotlin.jvm.internal.ClassBasedDeclarationContainer: java.lang.Class getJClass()
androidx.appcompat.widget.ActionBarContextView: boolean onHoverEvent(android.view.MotionEvent)
androidx.fragment.R$dimen: int compat_button_padding_horizontal_material
kotlin.collections.UArraysKt: boolean contentEquals-mazbYpA(short[],short[])
androidx.slidingpanelayout.R$dimen: int notification_small_icon_background_padding
androidx.drawerlayout.R$id: int line1
androidx.core.util.RangeKt: kotlin.ranges.ClosedRange toClosedRange(android.util.Range)
kotlin.collections.EmptyIterator: java.lang.Void next()
kotlin.contracts.ContractBuilder: kotlin.contracts.CallsInPlace callsInPlace(kotlin.Function,kotlin.contracts.InvocationKind)
okhttp3.Protocol: okhttp3.Protocol HTTP_1_1
com.example.revolut.rates.R$attr: int layout_constraintBaseline_toBaselineOf
io.reactivex.internal.subscribers.StrictSubscriber: void cancel()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setIcon(int)
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany: ObservableWithLatestFromMany(io.reactivex.ObservableSource,io.reactivex.ObservableSource[],io.reactivex.functions.Function)
kotlin.collections.ArraysKt___ArraysKt: void forEach(double[],kotlin.jvm.functions.Function1)
io.reactivex.Flowable: io.reactivex.Flowable retryUntil(io.reactivex.functions.BooleanSupplier)
io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit,boolean)
io.reactivex.observers.BaseTestConsumer: boolean await(long,java.util.concurrent.TimeUnit)
kotlin.UnsafeLazyImpl: boolean isInitialized()
androidx.appcompat.view.menu.MenuItemImpl: boolean isActionViewExpanded()
androidx.appcompat.R$styleable: int[] View
androidx.appcompat.R$anim: int abc_tooltip_exit
kotlinx.coroutines.CoroutineId: boolean equals(java.lang.Object)
androidx.fragment.R$dimen: int notification_action_icon_size
kotlin.coroutines.EmptyCoroutineContext
androidx.recyclerview.widget.GridLayoutManager: void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task poll()
androidx.loader.R$styleable: int FontFamilyFont_android_font
com.example.revolut.rates.R$attr: int borderlessButtonStyle
okhttp3.internal.http2.Http2Connection: void flush()
androidx.asynclayoutinflater.R$string: int status_bar_notification_info_overflow
kotlin.jvm.internal.PropertyReference1Impl
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,int)
androidx.cursoradapter.widget.ResourceCursorAdapter: void setViewResource(int)
com.example.revolut.rates.R$style: int Base_V7_Theme_AppCompat_Dialog
androidx.appcompat.app.AppCompatDelegate: boolean applyDayNight()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setAutoMeasureEnabled(boolean)
androidx.core.animation.AnimatorKt$addPauseListener$listener$1: void onAnimationResume(android.animation.Animator)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
android.support.v4.media.session.PlaybackStateCompat: void writeToParcel(android.os.Parcel,int)
androidx.viewpager.R$styleable: int GradientColor_android_endColor
io.reactivex.Observable: io.reactivex.Observable switchMapMaybe(io.reactivex.functions.Function)
io.reactivex.Observable: io.reactivex.Observable fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.app.ActionBar: void setShowHideAnimationEnabled(boolean)
androidx.vectordrawable.R$color: int notification_action_color_filter
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: int requestFusion(int)
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context,android.util.AttributeSet,int,int)
androidx.cursoradapter.widget.ResourceCursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
kotlin.collections.AbstractMap: int getSize()
com.example.revolut.rates.databinding.RatesItemBinding: com.example.revolut.rates.databinding.RatesItemBinding inflate(android.view.LayoutInflater)
kotlin.sequences.DropSequence$iterator$1: int getLeft()
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: java.lang.Object onPrepare(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
com.jakewharton.rxbinding3.core.R$layout: int notification_template_custom_big
androidx.appcompat.view.menu.MenuItemImpl: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character minWith(char[],java.util.Comparator)
androidx.collection.LruCache: int missCount()
com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent: TextViewBeforeTextChangeEvent(android.widget.TextView,java.lang.CharSequence,int,int,int)
androidx.databinding.adapters.SpinnerBindingAdapter
io.reactivex.Single: io.reactivex.Single doAfterTerminate(io.reactivex.functions.Action)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: java.lang.Object failure(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object)
androidx.fragment.app.FragmentActivity: java.lang.Object onRetainNonConfigurationInstance()
com.example.revolut.rates.di.AppModule_ProvideRatesApiFactory: com.example.revolut.rates.data.RatesApi provideInstance(com.example.revolut.rates.di.AppModule)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertValueSequence(java.lang.Iterable)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
androidx.media.MediaBrowserServiceCompat: androidx.media.MediaBrowserServiceCompat$BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle)
androidx.core.app.FrameMetricsAggregator$MetricType
androidx.core.view.ViewCompat: void offsetLeftAndRight(android.view.View,int)
io.reactivex.internal.util.OpenHashSet: OpenHashSet(int)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapIndexedNotNullTo$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfter$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object)
androidx.versionedparcelable.VersionedParcel: android.util.SparseBooleanArray readSparseBooleanArray(android.util.SparseBooleanArray,int)
kotlin.collections.EmptyList: int indexOf(java.lang.Void)
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(long[])
androidx.recyclerview.widget.RecyclerView$ViewHolder
dagger.android.support.R$style: int Platform_AppCompat_Light
androidx.appcompat.widget.ListPopupWindow: void setAnchorView(android.view.View)
androidx.legacy.coreutils.R$styleable: int GradientColor_android_endX
kotlinx.coroutines.DispatchersKt: kotlinx.coroutines.CoroutineDispatcher getIO(kotlinx.coroutines.Dispatchers)
kotlin.text.StringsKt___StringsKt: java.util.List windowed$default(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAllViews()
androidx.legacy.coreui.R$id: int notification_background
io.reactivex.internal.operators.completable.CompletableFromObservable: CompletableFromObservable(io.reactivex.ObservableSource)
kotlinx.coroutines.sync.MutexImpl: MutexImpl(boolean)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$indexOfFirst$1
org.jetbrains.annotations.Nullable: java.lang.String value()
kotlinx.coroutines.channels.ChannelsKt: void sendBlocking(kotlinx.coroutines.channels.SendChannel,java.lang.Object)
com.example.revolut.rates.R$attr: int fontProviderPackage
kotlin.UShort: boolean equals-impl0(short,short)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean removeCallbacks(java.lang.Runnable)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertErrorMessage(java.lang.String)
com.example.revolut.rates.data.model.CurrencyResponse: java.util.Map component3()
androidx.constraintlayout.widget.ConstraintSet: int BASELINE
io.reactivex.Flowable: io.reactivex.Flowable switchOnNextDelayError(org.reactivestreams.Publisher)
io.reactivex.internal.observers.BlockingFirstObserver: void onError(java.lang.Throwable)
androidx.appcompat.R$string: int abc_menu_alt_shortcut_label
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getTooltipText()
kotlin.text.StringsKt___StringsKt: java.util.Collection flatMapTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CONTEXT_CLICK
com.example.revolut.rates.R$attr: int switchMinWidth
dagger.android.support.R$attr: int actionBarStyle
com.example.revolut.rates.di.DaggerAppComponent: void inject(com.example.revolut.rates.data.repository.CurrenciesRepository)
kotlin.sequences.FilteringSequence$iterator$1: boolean hasNext()
com.example.revolut.rates.R$id: int chains
androidx.appcompat.app.AppCompatActivity: void setTheme(int)
androidx.viewpager.R$id: int action_image
androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message setData(java.lang.String,android.net.Uri)
okhttp3.internal.tls.OkHostnameVerifier: okhttp3.internal.tls.OkHostnameVerifier INSTANCE
android.support.v4.media.session.PlaybackStateCompat: int SHUFFLE_MODE_INVALID
com.google.gson.JsonObject
kotlin.collections.ArraysKt___ArraysKt: float[] sortedArrayDescending(float[])
com.example.revolut.rates.R$drawable: int abc_text_select_handle_left_mtrl_light
okio.ByteString: boolean endsWith(byte[])
kotlin.jvm.internal.PropertyReference
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onScrollStateChanged(int)
androidx.appcompat.widget.TintTypedArray: android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback)
io.reactivex.observers.SerializedObserver: void onError(java.lang.Throwable)
androidx.fragment.R$layout
kotlin.text.StringsKt___StringsKt: char last(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String decodeToString$default(byte[],int,int,boolean,int,java.lang.Object)
com.jakewharton.rxbinding3.view.ViewScrollChangeEvent: java.lang.String toString()
io.reactivex.android.MainThreadDisposable: MainThreadDisposable()
android.support.v4.media.session.MediaSessionCompat: int FLAG_HANDLES_MEDIA_BUTTONS
io.reactivex.Observable: io.reactivex.Observable concatMapSingleDelayError(io.reactivex.functions.Function,boolean,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo()
androidx.core.view.ScrollingView: int computeVerticalScrollExtent()
dagger.android.support.R$style: int Widget_AppCompat_Spinner
androidx.recyclerview.R$dimen: int notification_action_text_size
androidx.core.ktx.R$color
androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter STRING_BUFFER
kotlin.sequences.DropWhileSequence$iterator$1: boolean hasNext()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Double max(java.lang.Iterable)
androidx.cursoradapter.widget.CursorAdapter: boolean mAutoRequery
androidx.appcompat.widget.ActionMenuView: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
kotlin.collections.GroupingKt__GroupingKt: java.util.Map fold(kotlin.collections.Grouping,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.appcompat.R$attr: int colorPrimaryDark
com.example.revolut.rates.R$styleable: int AppCompatSeekBar_tickMarkTint
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: long serialVersionUID
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(double[])
kotlin.MathKt__NumbersKt: MathKt__NumbersKt()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleX(float)
okhttp3.internal.Util: java.lang.String canonicalizeHost(java.lang.String)
kotlin.ULong: int hashCode-impl(long)
io.reactivex.functions.Function5
okhttp3.internal.http.BridgeInterceptor: BridgeInterceptor(okhttp3.CookieJar)
androidx.appcompat.app.AppCompatDialog: AppCompatDialog(android.content.Context)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: java.lang.CharSequence getSubtitle()
androidx.core.widget.ListViewCompat: void scrollListBy(android.widget.ListView,int)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(short[])
androidx.databinding.adapters.TextViewBindingAdapter: void setTextSize(android.widget.TextView,float)
kotlin.sequences.SequencesKt__SequencesKt$Sequence$1: SequencesKt__SequencesKt$Sequence$1(kotlin.jvm.functions.Function0)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter endObject()
com.example.revolut.rates.R$dimen
kotlin.jvm.internal.ClassReference: java.lang.Object getObjectInstance()
com.example.revolut.rates.databinding.ActivityMainBinding: com.example.revolut.rates.viewmodel.CurrenciesViewModel getViewModel()
androidx.recyclerview.widget.OrientationHelper: void offsetChild(android.view.View,int)
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_gravity
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedPreFling(float,float)
androidx.media.AudioAttributesCompat: int FLAG_AUDIBILITY_ENFORCED
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
kotlin.jvm.internal.Reflection: kotlin.reflect.KType nullableTypeOf(java.lang.Class,kotlin.reflect.KTypeProjection,kotlin.reflect.KTypeProjection)
kotlin.text.StringsKt__StringsKt: java.lang.String substring(java.lang.String,kotlin.ranges.IntRange)
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int,io.reactivex.Scheduler)
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mPositiveButtonIcon
kotlinx.coroutines.AbstractCoroutine: AbstractCoroutine(kotlin.coroutines.CoroutineContext,boolean)
androidx.databinding.adapters.CheckedTextViewBindingAdapter
dagger.android.support.R$styleable: int ActionMenuItemView_android_minWidth
io.reactivex.internal.operators.flowable.FlowableSampleTimed
kotlinx.coroutines.channels.ArrayChannel: void cleanupSendQueueOnCancel()
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
androidx.core.animation.AnimatorKt$addListener$listener$1
androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.core.R$id: int notification_background
androidx.appcompat.widget.SearchView: void onRestoreInstanceState(android.os.Parcelable)
io.reactivex.internal.operators.parallel.ParallelFlatMap
com.jakewharton.rxbinding3.core.R$id: int line1
io.reactivex.internal.disposables.ArrayCompositeDisposable: void dispose()
com.google.gson.stream.JsonReader: int nextInt()
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
io.reactivex.exceptions.MissingBackpressureException
androidx.recyclerview.widget.RecyclerView: boolean hasNestedScrollingParent(int)
com.example.revolut.rates.R$styleable: int StateListDrawableItem_android_drawable
kotlinx.coroutines.channels.BroadcastChannel
androidx.core.text.PrecomputedTextCompat: int getSpanFlags(java.lang.Object)
kotlin.Metadata: java.lang.String xs()
kotlin.text.Typography: char less
androidx.constraintlayout.solver.widgets.Guideline: int RELATIVE_BEGIN
kotlin.jvm.internal.MagicApiIntrinsics
okhttp3.Protocol: okhttp3.Protocol[] values()
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback: androidx.appcompat.view.menu.ShowableListMenu getPopup()
io.reactivex.internal.disposables.EmptyDisposable: boolean isEmpty()
androidx.recyclerview.widget.ItemTouchHelper: ItemTouchHelper(androidx.recyclerview.widget.ItemTouchHelper$Callback)
androidx.constraintlayout.solver.widgets.WidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer getRootConstraintContainer()
com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent: int component2()
kotlin.collections.ULongIterator: void remove()
dagger.android.support.R$id: int action_mode_close_button
com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent: com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent copy(android.widget.TextView,java.lang.CharSequence,int,int,int)
androidx.appcompat.R$anim: int abc_fade_out
androidx.appcompat.R$attr: int subtitle
dagger.android.support.R$style: int Base_DialogWindowTitleBackground_AppCompat
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable from(org.reactivestreams.Publisher,int)
kotlinx.coroutines.Incomplete: kotlinx.coroutines.NodeList getList()
okhttp3.Cookie
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.core.transition.TransitionKt$addListener$4
kotlin.collections.ArraysKt___ArraysKt: float[] toFloatArray(java.lang.Float[])
androidx.collection.SparseArrayCompat: void remove(int)
io.reactivex.internal.operators.flowable.FlowableReplay$SizeAndTimeBoundReplayBuffer: long serialVersionUID
kotlinx.coroutines.EventLoopBase$DelayedRunnableTask: java.lang.String toString()
io.reactivex.internal.operators.flowable.FlowableConcatMapEager: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.flowable.FlowableBlockingSubscribe: void subscribe(org.reactivestreams.Publisher,io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,int)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()
androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat$Builder setFlags(int)
io.reactivex.internal.operators.observable.ObservableTimer: ObservableTimer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: ObservableGroupBy$GroupByObserver(io.reactivex.Observer,io.reactivex.functions.Function,io.reactivex.functions.Function,int,boolean)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
kotlin.ranges.LongProgressionIterator
com.example.revolut.rates.R$styleable: int RecyclerView_fastScrollHorizontalThumbDrawable
androidx.asynclayoutinflater.R$color: int secondary_text_default_material_light
androidx.appcompat.R$drawable: int notification_template_icon_low_bg
com.jakewharton.rxbinding3.widget.AdapterViewItemLongClickEvent: com.jakewharton.rxbinding3.widget.AdapterViewItemLongClickEvent copy$default(com.jakewharton.rxbinding3.widget.AdapterViewItemLongClickEvent,android.widget.AdapterView,android.view.View,int,long,int,java.lang.Object)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart UNDISPATCHED
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.collection.CircularArray: java.lang.Object get(int)
androidx.vectordrawable.R$attr: int statusBarBackground
kotlin.collections.UIntIterator: UIntIterator()
kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext newCoroutineContext(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.Job)
androidx.core.graphics.CanvasKt: void withScale(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.flowable.FlowablePublish: org.reactivestreams.Publisher source()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
io.reactivex.internal.operators.flowable.FlowableCache: FlowableCache(io.reactivex.Flowable,int)
androidx.appcompat.R$style: int Widget_AppCompat_Light_SearchView
okhttp3.internal.connection.RouteDatabase: RouteDatabase()
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.observable.ObservableTakeWhile: ObservableTakeWhile(io.reactivex.ObservableSource,io.reactivex.functions.Predicate)
androidx.versionedparcelable.VersionedParcel: void writeBooleanArray(boolean[],int)
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: long serialVersionUID
androidx.recyclerview.R$attr: int fastScrollHorizontalThumbDrawable
kotlinx.coroutines.scheduling.TaskMode: kotlinx.coroutines.scheduling.TaskMode PROBABLY_BLOCKING
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object first(kotlin.sequences.Sequence)
kotlinx.coroutines.channels.ReceiveOrClosed: void completeResumeReceive(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: float getCurrent()
kotlin.collections.LongIterator: long nextLong()
androidx.databinding.adapters.ViewBindingAdapter: void setOnLongClickListener(android.view.View,android.view.View$OnLongClickListener,boolean)
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarSize
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character lastOrNull(char[])
io.reactivex.internal.util.VolatileSizeArrayList: boolean equals(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: long serialVersionUID
androidx.core.R$drawable
android.support.v4.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.view.menu.MenuView$ItemView: void setShortcut(boolean,char)
androidx.core.view.InputDeviceCompat: int SOURCE_KEYBOARD
android.support.v4.media.session.PlaybackStateCompat: int STATE_REWINDING
androidx.customview.widget.ViewDragHelper: boolean checkTouchSlop(int)
androidx.fragment.app.Fragment: void startPostponedEnterTransition()
androidx.core.os.TraceCompat
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int getCurrentVolume()
androidx.drawerlayout.R$attr: int fontStyle
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle$EqualCoordinator: long serialVersionUID
androidx.appcompat.R$attr: int listPopupWindowStyle
kotlin.collections.UCollectionsKt___UCollectionsKt: int[] toUIntArray(java.util.Collection)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.graphics.PointF computeScrollVectorForPosition(int)
kotlin.reflect.KParameter: kotlin.reflect.KParameter$Kind getKind()
io.reactivex.Completable: io.reactivex.Completable delaySubscription(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.internal.proxy.NullProxySelector: java.util.List select(java.net.URI)
kotlin.collections.EmptyList: boolean add(java.lang.Object)
androidx.core.widget.AutoSizeableTextView: int getAutoSizeTextType()
androidx.core.animation.AnimatorKt$doOnCancel$$inlined$addListener$1: void onAnimationStart(android.animation.Animator)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(short[],java.lang.Object[],kotlin.jvm.functions.Function2)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop: void accept(java.lang.Object)
androidx.core.app.NotificationCompat: NotificationCompat()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
androidx.appcompat.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(byte[],int)
androidx.appcompat.R$color: int abc_hint_foreground_material_light
kotlin.reflect.KProperty2: kotlin.reflect.KProperty2$Getter getGetter()
kotlin.sequences.TakeSequence: TakeSequence(kotlin.sequences.Sequence,int)
androidx.fragment.app.Fragment: void onLowMemory()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
androidx.appcompat.R$styleable: int CompoundButton_buttonTintMode
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: long serialVersionUID
kotlin.collections.MapsKt__MapsKt: java.util.Map mapValuesTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1)
androidx.databinding.adapters.TimePickerBindingAdapter
okio.AsyncTimeout: okio.Sink sink(okio.Sink)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler)
kotlin.sequences.SequencesKt___SequencesKt$minus$4
androidx.appcompat.R$styleable: int AppCompatTheme_tooltipForegroundColor
androidx.core.R$dimen: int compat_notification_large_icon_max_height
okhttp3.CertificatePinner$Builder: CertificatePinner$Builder()
okio.Buffer: long indexOfElement(okio.ByteString)
io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)
androidx.media.VolumeProviderCompat
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingLeft()
io.reactivex.internal.observers.ResumeSingleObserver: ResumeSingleObserver(java.util.concurrent.atomic.AtomicReference,io.reactivex.SingleObserver)
dagger.android.support.R$id: int bottom
kotlin.jvm.KotlinReflectionNotSupportedError: KotlinReflectionNotSupportedError(java.lang.String,java.lang.Throwable)
androidx.appcompat.view.ActionMode: ActionMode()
io.reactivex.Scheduler: io.reactivex.Scheduler$Worker createWorker()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(short[],kotlin.jvm.functions.Function1)
androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$1: TransitionKt$doOnResume$$inlined$addListener$1(kotlin.jvm.functions.Function1)
android.support.v4.media.MediaBrowserCompat: java.lang.String EXTRA_PAGE
androidx.constraintlayout.solver.widgets.ConstraintWidget: int MATCH_CONSTRAINT_SPREAD
androidx.core.app.ShareCompat
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)
kotlinx.coroutines.Job: java.lang.Object join(kotlin.coroutines.Continuation)
kotlinx.coroutines.DeferredKt: kotlinx.coroutines.Deferred async(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlinx.coroutines.Job,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(double[],java.lang.Object,kotlin.jvm.functions.Function3)
dagger.android.DaggerActivity: dagger.android.AndroidInjector fragmentInjector()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object last(java.util.List)
androidx.databinding.adapters.TimePickerBindingAdapter: void setHour(android.widget.TimePicker,int)
kotlin.UByte: byte unbox-impl()
dagger.android.support.R$styleable: int AppCompatTheme_colorPrimary
io.reactivex.Flowable: io.reactivex.Flowable startWith(org.reactivestreams.Publisher)
androidx.core.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)
io.reactivex.internal.functions.Functions: java.util.Comparator naturalComparator()
androidx.core.graphics.PointKt: android.graphics.PointF plus(android.graphics.PointF,float)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.Delay$DefaultImpls: java.lang.Object delay(kotlinx.coroutines.Delay,long,java.util.concurrent.TimeUnit,kotlin.coroutines.Continuation)
io.reactivex.FlowableEmitter: boolean isCancelled()
androidx.recyclerview.widget.GridLayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintCircle
androidx.appcompat.R$dimen: int compat_button_inset_vertical_material
androidx.appcompat.R$attr: int colorPrimary
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setExitFadeDuration(int)
androidx.legacy.v4.R$layout: int notification_template_big_media_custom
androidx.appcompat.widget.ViewUtils: void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect)
androidx.core.view.accessibility.AccessibilityEventCompat: void setMovementGranularity(android.view.accessibility.AccessibilityEvent,int)
android.support.v4.media.session.ParcelableVolumeInfo: int volumeType
kotlin.coroutines.jvm.internal.Boxing
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarWidgetTheme
androidx.fragment.app.FragmentActivity: void onResumeFragments()
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat ANYRTL_LTR
com.google.gson.internal.bind.SqlDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableCollectSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.recyclerview.widget.DiffUtil$Callback
com.example.revolut.rates.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.recyclerview.widget.ItemTouchHelper: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
okio.Buffer: Buffer()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.databinding.DataBindingComponent
androidx.core.widget.NestedScrollView: int computeHorizontalScrollOffset()
androidx.appcompat.R$id: int action_bar_spinner
io.reactivex.internal.operators.flowable.FlowableConcatWithSingle$ConcatWithSubscriber: long serialVersionUID
androidx.appcompat.view.menu.ListMenuPresenter: ListMenuPresenter(int,int)
kotlin.collections.UArraysKt: kotlin.UShort[] toTypedArray-rL5Bavg(short[])
io.reactivex.Flowable: io.reactivex.Flowable concatEager(java.lang.Iterable,int,int)
okhttp3.internal.http.RealInterceptorChain: okhttp3.EventListener eventListener()
androidx.lifecycle.extensions.R$layout: int notification_action
io.reactivex.internal.operators.single.SingleDoAfterTerminate: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sequentialDelayError()
androidx.appcompat.app.WindowDecorActionBar: WindowDecorActionBar(android.app.Dialog)
kotlin.reflect.KDeclarationContainer
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable: ObservableFlatMapCompletableCompletable(io.reactivex.ObservableSource,io.reactivex.functions.Function,boolean)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder protocols(java.util.List)
kotlinx.coroutines.internal.AtomicOp
io.reactivex.internal.operators.observable.ObservableScalarXMap
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setAlphabeticShortcut(char)
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.media.R$styleable
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
androidx.legacy.coreutils.R$drawable: int notification_bg_normal
kotlin.ranges.RangesKt___RangesKt: long coerceIn(long,long,long)
androidx.legacy.coreui.R$styleable: int ColorStateListItem_android_color
kotlin.internal.RequireKotlinVersionKind: kotlin.internal.RequireKotlinVersionKind[] values()
androidx.core.util.Pools$Pool: boolean release(java.lang.Object)
androidx.core.content.res.ResourcesCompat
io.reactivex.internal.subscribers.StrictSubscriber
androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setHotspot(float,float)
androidx.media.R$styleable: int GradientColor_android_startColor
io.reactivex.internal.observers.CallbackCompletableObserver: void onError(java.lang.Throwable)
io.reactivex.internal.subscriptions.DeferredScalarSubscription
kotlin.collections.ArraysKt__ArraysJVMKt: java.lang.Object[] arrayOfNulls(java.lang.Object[],int)
io.reactivex.Observable: io.reactivex.Observable switchOnNextDelayError(io.reactivex.ObservableSource,int)
kotlinx.coroutines.ChildJob: ChildJob(kotlinx.coroutines.JobSupport,kotlinx.coroutines.Job)
com.example.revolut.rates.R$id: int split_action_bar
com.google.gson.JsonParseException
dagger.android.support.DaggerAppCompatDialogFragment: void onAttach(android.content.Context)
kotlinx.coroutines.internal.LockFreeMPMCQueue: boolean isEmpty()
kotlinx.coroutines.channels.AbstractChannel: boolean isClosedForReceive()
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass[] getOrCreateKotlinClasses(java.lang.Class[])
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: java.lang.Object get(int)
androidx.core.os.ParcelCompat: boolean readBoolean(android.os.Parcel)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] plus(java.lang.Object[],java.lang.Object)
androidx.core.ktx.R$id: int forever
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.loader.content.AsyncTaskLoader: java.lang.Object loadInBackground()
androidx.core.view.ViewCompat: float getRotationY(android.view.View)
androidx.collection.ArraySet: int indexOf(java.lang.Object)
com.example.revolut.rates.R$id: int select_dialog_listview
androidx.appcompat.widget.Toolbar: void collapseActionView()
androidx.core.widget.CompoundButtonCompat: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
kotlin.reflect.KType$DefaultImpls: void arguments$annotations()
dagger.android.support.R$drawable: int abc_cab_background_internal_bg
kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableRangeLong: void subscribeActual(org.reactivestreams.Subscriber)
kotlinx.coroutines.JobSupport: void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode)
kotlinx.coroutines.internal.ThreadSafeHeapNode: void setIndex(int)
androidx.core.widget.AutoScrollHelper: boolean isExclusive()
io.reactivex.internal.observers.DeferredScalarDisposable: DeferredScalarDisposable(io.reactivex.Observer)
com.example.revolut.rates.R$id: int currencies_rv
io.reactivex.Completable: io.reactivex.Single andThen(io.reactivex.SingleSource)
kotlin.text.MatchResult: kotlin.ranges.IntRange getRange()
androidx.core.app.FrameMetricsAggregator: int SYNC_INDEX
kotlin.collections.ULongIterator: long nextULong()
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
androidx.appcompat.R$drawable: int abc_ratingbar_small_material
kotlinx.coroutines.CommonPool: void close()
com.example.revolut.rates.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: int transitiveBoundaryFusion(int)
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable: ObservableConcatMapCompletable(io.reactivex.Observable,io.reactivex.functions.Function,io.reactivex.internal.util.ErrorMode,int)
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: long serialVersionUID
dagger.android.support.R$attr: int colorAccent
kotlinx.coroutines.Job$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job,kotlinx.coroutines.Job)
androidx.appcompat.view.ActionBarPolicy: androidx.appcompat.view.ActionBarPolicy get(android.content.Context)
androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback)
androidx.appcompat.view.menu.ActionMenuItem: boolean expandActionView()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List windowed$default(java.lang.Iterable,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
io.reactivex.internal.observers.EmptyCompletableObserver: void onComplete()
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_goneMarginEnd
kotlinx.coroutines.ChildContinuation: kotlinx.coroutines.AbstractContinuation child
com.example.revolut.rates.view.adapter.CurrenciesAdapter: void access$setCurrenciesList$p(com.example.revolut.rates.view.adapter.CurrenciesAdapter,java.util.ArrayList)
io.reactivex.internal.observers.DeferredScalarDisposable: long serialVersionUID
androidx.appcompat.app.WindowDecorActionBar: void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)
androidx.constraintlayout.widget.ConstraintHelper: int mCount
androidx.core.graphics.drawable.IconCompat: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservableToListSingle: io.reactivex.Observable fuseToObservable()
androidx.appcompat.R$styleable: int[] GradientColor
io.reactivex.internal.subscribers.FutureSubscriber: FutureSubscriber()
kotlin.sequences.MergingSequence: MergingSequence(kotlin.sequences.Sequence,kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
androidx.swiperefreshlayout.R$id: int tag_transition_group
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.legacy.coreutils.R$dimen: int compat_button_padding_horizontal_material
androidx.constraintlayout.solver.widgets.Guideline: int getRelativeEnd()
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntProgression reversed(kotlin.ranges.UIntProgression)
androidx.media.MediaBrowserServiceCompat: void notifyChildrenChanged(androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle)
io.reactivex.Flowable: io.reactivex.Flowable switchMapDelayError(io.reactivex.functions.Function)
androidx.appcompat.R$styleable: int[] AppCompatTextHelper
androidx.asynclayoutinflater.R$color: int notification_action_color_filter
io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,int)
io.reactivex.internal.operators.maybe.MaybeDelay: MaybeDelay(io.reactivex.MaybeSource,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
dagger.android.support.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
androidx.loader.R$layout: int notification_template_icon_group
okhttp3.internal.ws.RealWebSocket: boolean close(int,java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: int getSize()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons COROUTINE_SUSPENDED
androidx.recyclerview.widget.GridLayoutManager$LayoutParams
org.intellij.lang.annotations.JdkConstants$CursorType
androidx.asynclayoutinflater.R$layout: int notification_template_icon_group
androidx.recyclerview.widget.DefaultItemAnimator: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List)
androidx.databinding.ObservableBoolean: int describeContents()
androidx.core.util.SparseBooleanArrayKt: kotlin.collections.IntIterator keyIterator(android.util.SparseBooleanArray)
kotlinx.coroutines.AbstractContinuation: boolean getUseCancellingState()
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
dagger.android.support.R$styleable: int ActionBar_divider
com.example.revolut.rates.R$drawable: int abc_list_divider_mtrl_alpha
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isFocused()
io.reactivex.observers.DisposableCompletableObserver
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
com.example.revolut.rates.R$styleable: int[] CoordinatorLayout
dagger.android.support.R$styleable: int DrawerArrowToggle_drawableSize
androidx.core.R$drawable: int notification_bg_low
androidx.media.R$dimen: int compat_button_inset_horizontal_material
com.example.revolut.rates.R$dimen: int abc_action_bar_icon_vertical_padding_material
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.legacy.coreui.R$dimen: int compat_button_inset_vertical_material
androidx.versionedparcelable.VersionedParcelize: boolean ignoreParcelables()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexed$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean supportsPredictiveItemAnimations()
dagger.android.support.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
androidx.recyclerview.widget.TileList$Tile
com.example.revolut.rates.R$style: int Widget_AppCompat_ActivityChooserView
kotlinx.coroutines.scheduling.CoroutineScheduler: void access$parkedWorkersStackTopUpdate(kotlinx.coroutines.scheduling.CoroutineScheduler,kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,int,int)
androidx.lifecycle.extensions.R$attr: int fontWeight
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int ALIGN_CENTER
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float getInterpolation(float)
io.reactivex.Observable: io.reactivex.Observable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.loader.R$styleable: int GradientColorItem_android_offset
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(float[],java.lang.Iterable)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastSubscription: long serialVersionUID
androidx.loader.app.LoaderManager: androidx.loader.content.Loader getLoader(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(double[],kotlin.jvm.functions.Function1)
io.reactivex.observers.BaseTestConsumer: java.util.List values()
androidx.media.session.MediaButtonReceiver
kotlin.ranges.UIntProgression
io.reactivex.internal.operators.flowable.FlowableReduceWithSingle: void subscribeActual(io.reactivex.SingleObserver)
dagger.android.support.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
kotlin.ranges.IntRange: int hashCode()
androidx.constraintlayout.solver.widgets.ResolutionAnchor: ResolutionAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
androidx.loader.R$drawable: int notification_template_icon_low_bg
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending-QwZRm1k(long[])
kotlin.reflect.KVariance: kotlin.reflect.KVariance OUT
androidx.core.content.res.TypedArrayKt: int getIntOrThrow(android.content.res.TypedArray,int)
dagger.android.support.R$style: int AlertDialog_AppCompat
com.example.revolut.rates.di.AppModule_ProvideRetrofitFactory: AppModule_ProvideRetrofitFactory(com.example.revolut.rates.di.AppModule)
androidx.core.widget.ImageViewCompat: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
io.reactivex.CompletableOperator
kotlin.collections.EmptySet: boolean contains(java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTooltipText()
com.example.revolut.rates.R$attr: int dialogPreferredPadding
com.example.revolut.rates.R$id: int add
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(java.lang.Object[])
com.example.revolut.rates.R$styleable: int ConstraintSet_android_maxWidth
io.reactivex.Flowable: io.reactivex.Completable ignoreElements()
io.reactivex.internal.operators.single.SingleFlatMapMaybe
com.example.revolut.rates.R$attr: int chainUseRtl
kotlin.coroutines.experimental.AbstractCoroutineContextElement: kotlin.coroutines.experimental.CoroutineContext$Element get(kotlin.coroutines.experimental.CoroutineContext$Key)
okio.ByteString: boolean equals(java.lang.Object)
kotlin.jvm.internal.MutablePropertyReference2Impl
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewAddEvent: android.view.View component2()
androidx.legacy.coreui.R$dimen: int notification_large_icon_height
kotlin.text.StringsKt___StringsKt: boolean all(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.reflect.KClass: java.util.List getSupertypes()
dagger.android.support.R$id: int search_badge
io.reactivex.internal.operators.parallel.ParallelFilter
androidx.appcompat.app.ActionBar: void setHomeActionContentDescription(java.lang.CharSequence)
io.reactivex.internal.operators.flowable.FlowableDoAfterNext
kotlin.text.StringsKt___StringsKt: java.util.Map groupBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$layout: int abc_action_menu_layout
kotlin.jvm.internal.PropertyReference2
com.jakewharton.rxbinding3.widget.TextViewAfterTextChangeEvent: android.text.Editable getEditable()
kotlin.ranges.LongProgression$Companion: kotlin.ranges.LongProgression fromClosedRange(long,long,long)
okio.BufferedSink: okio.Buffer buffer()
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setCoveredFadeColor(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void replaceText(java.lang.CharSequence)
com.google.gson.JsonObject: com.google.gson.JsonObject deepCopy()
kotlin.Unit
androidx.media.MediaBrowserProtocol: int CLIENT_MSG_ADD_SUBSCRIPTION
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
io.reactivex.Flowable: io.reactivex.Flowable concatMapEagerDelayError(io.reactivex.functions.Function,boolean)
okio.Pipe: Pipe(long)
io.reactivex.Scheduler$Worker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(double[],double[],kotlin.jvm.functions.Function2)
okio.Buffer: java.lang.String readUtf8LineStrict()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$minBy$1: ChannelsKt__Channels_commonKt$minBy$1(kotlin.coroutines.Continuation)
androidx.recyclerview.widget.AsyncListDiffer: AsyncListDiffer(androidx.recyclerview.widget.ListUpdateCallback,androidx.recyclerview.widget.AsyncDifferConfig)
io.reactivex.Observable: io.reactivex.Observable timeout(io.reactivex.ObservableSource,io.reactivex.functions.Function)
io.reactivex.SingleEmitter: void onError(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(float[])
kotlin.collections.ArraysKt___ArraysKt: boolean first(boolean[],kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.observable.ObservableGroupJoin: ObservableGroupJoin(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent getIntent()
retrofit2.http.POST: java.lang.String value()
com.jakewharton.rxbinding3.core.R$dimen: int notification_content_margin_start
kotlin.ranges.URangesKt___URangesKt: int coerceAtMost-J1ME1BU(int,int)
androidx.core.app.RemoteInput$Builder
com.example.revolut.rates.R$attr: int navigationContentDescription
androidx.drawerlayout.R$dimen: int compat_button_padding_vertical_material
kotlinx.coroutines.channels.AbstractChannel$TryPollDesc: boolean validatePrepared(kotlinx.coroutines.channels.Send)
androidx.recyclerview.widget.ListUpdateCallback: void onRemoved(int,int)
kotlinx.coroutines.CommonPool: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List)
androidx.core.ktx.R$dimen: int compat_button_padding_vertical_material
okio.Okio: okio.Source source(java.net.Socket)
androidx.appcompat.app.AppCompatDelegate: int FEATURE_ACTION_MODE_OVERLAY
javax.inject.Scope
androidx.core.view.ViewGroupKt: void updateMarginsRelative$default(android.view.ViewGroup$MarginLayoutParams,int,int,int,int,int,java.lang.Object)
androidx.core.text.CharSequenceKt: int trimmedLength(java.lang.CharSequence)
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver: long serialVersionUID
io.reactivex.observers.TestObserver: io.reactivex.observers.TestObserver create()
kotlinx.coroutines.EventLoopBase$DelayedRunnableTask: void run()
androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)
androidx.core.widget.TintableImageSourceView
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_2
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorViewAlpha(int)
dagger.android.support.R$color: int material_deep_teal_500
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.internal.Symbol access$getLOCK_FAIL$p()
kotlinx.coroutines.DispatchException: DispatchException(java.lang.String,java.lang.Throwable)
com.example.revolut.rates.R$id: int uniform
androidx.constraintlayout.solver.widgets.Guideline: void setDrawOrigin(int,int)
androidx.appcompat.widget.AlertDialogLayout: void onMeasure(int,int)
kotlin.coroutines.jvm.internal.DebugMetadata
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.channels.BroadcastChannel: kotlinx.coroutines.channels.BroadcastChannel$Factory Factory
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp
com.example.revolut.rates.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
okhttp3.internal.http2.PushObserver: okhttp3.internal.http2.PushObserver CANCEL
kotlin.jvm.internal.LocalVariableReference: java.lang.Object get()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence onEach(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt__ArraysJVMKt: void copyOfRangeToIndexCheck(int,int)
kotlinx.coroutines.sync.MutexKt$withLock$1
androidx.collection.LongSparseArray: int indexOfValue(java.lang.Object)
io.reactivex.internal.operators.observable.ObservablePublishAlt$InnerDisposable: long serialVersionUID
androidx.recyclerview.widget.LinearLayoutManager$SavedState
io.reactivex.internal.operators.observable.ObservableFromPublisher: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.example.revolut.rates.data.model.Rate
android.support.v4.media.session.ParcelableVolumeInfo: void writeToParcel(android.os.Parcel,int)
io.reactivex.Flowable: io.reactivex.Single last(java.lang.Object)
okio.DeflaterSink: void write(okio.Buffer,long)
dagger.android.support.R$id: int actions
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection)
androidx.vectordrawable.R$styleable: int GradientColorItem_android_color
com.jakewharton.rxbinding3.view.ViewScrollChangeEvent: boolean equals(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableFromSingle: CompletableFromSingle(io.reactivex.SingleSource)
kotlinx.coroutines.channels.ReceiveOrClosed: java.lang.Object getOfferResult()
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback: void onChildrenLoaded(java.lang.String,java.util.List)
com.example.revolut.rates.R$style: int Widget_AppCompat_RatingBar_Indicator
androidx.legacy.v4.R$styleable: int FontFamilyFont_ttcIndex
androidx.appcompat.R$styleable: int SwitchCompat_android_textOff
androidx.fragment.R$styleable: int FontFamilyFont_android_fontStyle
androidx.viewpager.R$styleable: int FontFamilyFont_font
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$buildContinuationByInvokeCall$continuation$1: kotlin.coroutines.experimental.CoroutineContext getContext()
com.example.revolut.rates.R$styleable: int AppCompatTheme_panelBackground
kotlin.ranges.URangesKt___URangesKt: short coerceIn-VKSA0NQ(short,short,short)
kotlin.ReplaceWith: java.lang.String[] imports()
dagger.android.support.R$style: int TextAppearance_AppCompat_Large
android.support.v4.media.MediaMetadataCompat: android.os.Bundle getBundle()
io.reactivex.internal.operators.mixed.MaterializeSingleObserver: void onError(java.lang.Throwable)
io.reactivex.internal.functions.Functions$BoundedConsumer
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context,android.util.AttributeSet,int)
dagger.releasablereferences.ReleasableReferenceManager: void releaseStrongReferences()
com.example.revolut.rates.R$attr: int textAppearanceListItemSmall
kotlin.collections.ArraysKt___ArraysKt: float sum(float[])
io.reactivex.internal.operators.single.SingleDoOnEvent
io.reactivex.internal.operators.observable.ObservableEmpty
kotlin.jvm.functions.Function22: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeBackground
io.reactivex.internal.observers.DisposableLambdaObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.collection.ArraySet: boolean remove(java.lang.Object)
kotlin.collections.AbstractIterator: void remove()
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(double[])
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_keylines
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory INTEGER_FACTORY
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void computeGuidelinesPercentPositions()
androidx.print.PrintHelper$OnPrintFinishCallback
dagger.android.DaggerApplication_MembersInjector: void injectSetInjected(dagger.android.DaggerApplication)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: java.lang.Byte get(int)
androidx.appcompat.R$string: int abc_shareactionprovider_share_with_application
dagger.internal.Factory
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainFreezeMethod(java.lang.Class)
io.reactivex.internal.operators.observable.ObservableRepeatUntil: void subscribeActual(io.reactivex.Observer)
androidx.recyclerview.R$id: int title
okio.Okio: okio.Source source(java.io.InputStream)
com.example.revolut.rates.R$styleable: int AppCompatTheme_checkboxStyle
androidx.core.graphics.BitmapCompat: int getAllocationByteCount(android.graphics.Bitmap)
androidx.core.util.SparseBooleanArrayKt$keyIterator$1: int getIndex()
kotlinx.coroutines.channels.ChannelIterator: java.lang.Object next(kotlin.coroutines.Continuation)
com.jakewharton.rxbinding3.widget.SeekBarProgressChangeEvent: boolean component3()
com.example.revolut.rates.viewmodel.CurrenciesViewModel_MembersInjector: void injectMembers(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
io.reactivex.Single: io.reactivex.Observable flattenAsObservable(io.reactivex.functions.Function)
androidx.appcompat.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe
androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path,float)
androidx.appcompat.widget.ToolbarWidgetWrapper: int getVisibility()
androidx.viewpager.R$styleable: int GradientColor_android_endY
kotlin.UninitializedPropertyAccessException
io.reactivex.internal.observers.BlockingBaseObserver: void onComplete()
okhttp3.internal.connection.RealConnection: java.util.List allocations
kotlinx.coroutines.channels.BroadcastChannel: kotlinx.coroutines.channels.ReceiveChannel openSubscription()
kotlin.jvm.internal.DoubleCompanionObject: double getMAX_VALUE()
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow addError(androidx.constraintlayout.solver.LinearSystem,int)
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
kotlin.ranges.LongRange: kotlin.ranges.LongRange access$getEMPTY$cp()
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(boolean[])
androidx.legacy.v4.R$attr: int fontProviderCerts
androidx.recyclerview.R$dimen: int compat_notification_large_icon_max_height
io.reactivex.internal.subscribers.BasicFuseableSubscriber: void cancel()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(int)
org.intellij.lang.annotations.MagicConstant: java.lang.String[] stringValues()
androidx.core.graphics.RegionKt: android.graphics.Region or(android.graphics.Region,android.graphics.Rect)
androidx.constraintlayout.solver.widgets.Rectangle: Rectangle()
androidx.core.content.ContextCompat: java.io.File getCodeCacheDir(android.content.Context)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy IDENTITY
androidx.databinding.ViewDataBinding: void setLifecycleOwner(androidx.lifecycle.LifecycleOwner)
kotlin.collections.EmptySet: int getSize()
androidx.legacy.coreui.R$dimen: int notification_action_icon_size
androidx.media.R$attr: int fontProviderFetchStrategy
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.String[])
io.reactivex.processors.MulticastProcessor
androidx.core.provider.FontsContractCompat
com.example.revolut.rates.R$style: int AppTheme
androidx.appcompat.view.menu.BaseMenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.recyclerview.widget.RecyclerView$Adapter: int getItemViewType(int)
androidx.recyclerview.widget.SortedListAdapterCallback: void onChanged(int,int)
kotlinx.coroutines.JobSupport: java.lang.String nameString$kotlinx_coroutines_core()
androidx.customview.view.AbsSavedState$1
io.reactivex.Flowable: io.reactivex.Single isEmpty()
androidx.lifecycle.extensions.R$dimen: int compat_control_corner_material
androidx.coordinatorlayout.R$styleable: int GradientColor_android_endX
androidx.lifecycle.extensions.R$drawable: int notification_tile_bg
io.reactivex.Observable: io.reactivex.Observable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void lastIndex$annotations(int[])
io.reactivex.processors.UnicastProcessor: io.reactivex.processors.UnicastProcessor create(int,java.lang.Runnable,boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int insetEdge
io.reactivex.Observable: io.reactivex.Single collectInto(java.lang.Object,io.reactivex.functions.BiConsumer)
androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable interval(long,long,java.util.concurrent.TimeUnit)
kotlin.sequences.DistinctSequence
com.jakewharton.rxbinding3.view.ViewAttachAttachedEvent: java.lang.String toString()
androidx.core.graphics.ColorKt: float component3(android.graphics.Color)
androidx.media.R$id: int action_text
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_SELECTION_END_INT
io.reactivex.MaybeEmitter: boolean tryOnError(java.lang.Throwable)
io.reactivex.annotations.CheckReturnValue
androidx.appcompat.R$drawable: int abc_ic_search_api_material
io.reactivex.Maybe: io.reactivex.Flowable concatArrayEager(io.reactivex.MaybeSource[])
kotlin.text.StringsKt___StringsKt: kotlin.collections.Grouping groupingBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.content.FileProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
io.reactivex.internal.schedulers.SingleScheduler
androidx.core.util.SparseBooleanArrayKt: boolean remove(android.util.SparseBooleanArray,int,boolean)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: java.lang.CharSequence getTitle()
androidx.collection.LruCache
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
io.reactivex.internal.operators.maybe.MaybeConcatIterable: MaybeConcatIterable(java.lang.Iterable)
androidx.constraintlayout.solver.Metrics: long pivots
androidx.core.graphics.RegionKt: android.graphics.Region and(android.graphics.Region,android.graphics.Region)
kotlin.ULongArray: int size()
androidx.loader.R$id: int notification_main_column_container
androidx.appcompat.R$styleable: int SearchView_defaultQueryHint
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$drawable: int icon_usd
kotlin.annotation.Retention
io.reactivex.internal.operators.single.SingleDelayWithPublisher$OtherSubscriber: long serialVersionUID
kotlin.collections.ArraysKt___ArraysKt: int[] sliceArray(int[],java.util.Collection)
kotlin.jvm.internal.FunctionReferenceImpl: kotlin.reflect.KDeclarationContainer getOwner()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-GBYM_sE(byte[])
com.google.gson.internal.JsonReaderInternalAccess: com.google.gson.internal.JsonReaderInternalAccess INSTANCE
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
kotlin.collections.ArraysKt___ArraysKt: long reduceIndexed(long[],kotlin.jvm.functions.Function3)
kotlin.properties.ObservableProperty: boolean beforeChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object)
androidx.core.util.SparseBooleanArrayKt$valueIterator$1: boolean hasNext()
com.example.revolut.rates.databinding.ActivityMainBinding: com.example.revolut.rates.databinding.ActivityMainBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean,java.lang.Object)
androidx.core.app.ActivityCompat: android.view.View requireViewById(android.app.Activity,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
kotlin.sequences.TransformingSequence$iterator$1: java.util.Iterator getIterator()
io.reactivex.Observable: io.reactivex.Observable debounce(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem findItem(int)
com.example.revolut.rates.R$style: int Base_V23_Theme_AppCompat_Light
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
kotlinx.coroutines.CoroutineContextKt: boolean getDEBUG()
io.reactivex.Completable: io.reactivex.Completable mergeDelayError(java.lang.Iterable)
com.example.revolut.rates.R$style: int Theme_AppCompat_Light_NoActionBar
io.reactivex.Flowable: io.reactivex.Flowable scan(java.lang.Object,io.reactivex.functions.BiFunction)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_RC4_128_SHA
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values()
kotlin.ranges.RangesKt___RangesKt: short coerceIn(short,short,short)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
dagger.android.support.R$style: int TextAppearance_AppCompat_Widget_Button
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: void fill-K6DWlUc$default(long[],long,int,int,int,java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength WEAK
dagger.android.DaggerApplication_MembersInjector: void injectContentProviderInjector(dagger.android.DaggerApplication,dagger.android.DispatchingAndroidInjector)
com.example.revolut.rates.R$styleable: int AppCompatTheme_windowFixedHeightMajor
androidx.swiperefreshlayout.R$styleable: int[] ColorStateListItem
dagger.internal.TypedReleasableReferenceManagerDecorator: java.lang.annotation.Annotation metadata()
androidx.appcompat.R$style: int Base_Widget_AppCompat_Spinner
com.example.revolut.rates.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
io.reactivex.internal.subscribers.FutureSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.slidingpanelayout.R$style: int TextAppearance_Compat_Notification_Time
kotlin.sequences.TakeWhileSequence: kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.TakeWhileSequence)
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe
androidx.media.MediaBrowserServiceCompat$BrowserRoot: java.lang.String EXTRA_OFFLINE
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void layout()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_fontStyle
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
androidx.core.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable$FlatMapObserver: long serialVersionUID
androidx.fragment.app.FragmentPagerAdapter: long getItemId(int)
kotlin.ExperimentalUnsignedTypes
androidx.core.text.PrecomputedTextCompat: int getParagraphStart(int)
androidx.appcompat.widget.DropDownListView: boolean onForwardedEvent(android.view.MotionEvent,int)
android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder: android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder setExtras(android.os.Bundle)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: int indexOf(java.lang.Object)
dagger.android.support.R$dimen: int abc_text_size_subhead_material
androidx.appcompat.R$color: int highlighted_text_material_dark
okhttp3.MultipartBody: okhttp3.MediaType type()
androidx.core.content.res.ComplexColorCompat: boolean isStateful()
com.example.revolut.rates.R$dimen: int hint_pressed_alpha_material_light
dagger.android.support.R$style: int Base_AlertDialog_AppCompat
androidx.media.R$id: int notification_background
io.reactivex.internal.operators.maybe.MaybeZipArray: void subscribeActual(io.reactivex.MaybeObserver)
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_COMPOSER
okhttp3.internal.Util: java.lang.String[] concat(java.lang.String[],java.lang.String)
com.example.revolut.rates.R$bool: int abc_config_actionMenuItemAllCaps
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate: FlowableRetryBiPredicate(io.reactivex.Flowable,io.reactivex.functions.BiPredicate)
kotlin.collections.ArraysKt___ArraysKt: double first(double[],kotlin.jvm.functions.Function1)
androidx.fragment.R$attr: int coordinatorLayoutStyle
okio.Buffer: boolean request(long)
androidx.appcompat.view.menu.ActionMenuItemView: boolean onTouchEvent(android.view.MotionEvent)
io.reactivex.internal.subscribers.StrictSubscriber: void onNext(java.lang.Object)
io.reactivex.processors.PublishProcessor: void onComplete()
androidx.documentfile.provider.DocumentFile: boolean isVirtual()
io.reactivex.internal.operators.completable.CompletableAndThenCompletable
com.google.gson.JsonPrimitive: int getAsInt()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(double[],java.util.Collection,kotlin.jvm.functions.Function2)
io.reactivex.observers.TestObserver: TestObserver()
android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object)
androidx.appcompat.app.ActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)
androidx.recyclerview.widget.SortedList$Callback: void onChanged(int,int,java.lang.Object)
io.reactivex.subjects.AsyncSubject: boolean hasThrowable()
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind valueOf(java.lang.String)
kotlin.text.MatchResult$Destructured
kotlin.collections.IndexingIterator: java.lang.Object next()
androidx.core.view.accessibility.AccessibilityRecordCompat: int getAddedCount()
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int getAudioStream()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionView(int)
androidx.appcompat.widget.ActivityChooserView: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
kotlin.ranges.IntRange: java.lang.Comparable getEndInclusive()
androidx.legacy.coreutils.R$dimen: int compat_button_inset_horizontal_material
android.support.v4.media.session.IMediaControllerCallback: void onExtrasChanged(android.os.Bundle)
androidx.constraintlayout.solver.LinearSystem: int getMemoryUsed()
io.reactivex.internal.util.QueueDrain: java.lang.Throwable error()
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: long serialVersionUID
androidx.appcompat.widget.PopupMenu: int getGravity()
kotlinx.coroutines.internal.ThreadContextKt
androidx.constraintlayout.widget.R$attr: int layout_constraintEnd_toEndOf
dagger.android.support.DaggerAppCompatActivity_MembersInjector: void injectSupportFragmentInjector(dagger.android.support.DaggerAppCompatActivity,dagger.android.DispatchingAndroidInjector)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(java.lang.Object[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.data.RatesApi: io.reactivex.Observable getAllRates(java.lang.String)
androidx.core.content.res.TypedArrayUtils: java.lang.String getString(android.content.res.TypedArray,int,int)
androidx.appcompat.R$attr: int lineHeight
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_END
androidx.databinding.ObservableShort
kotlin.ranges.LongRange$Companion: LongRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: int lastIndexOf(java.lang.Object)
kotlinx.coroutines.ResumeModeKt: int MODE_CANCELLABLE
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableCollection(java.lang.Object)
com.example.revolut.rates.R$styleable: int ConstraintSet_android_layout_height
kotlin.text.StringsKt___StringsKt: java.util.Map groupByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
com.jakewharton.rxbinding3.widget.RxAdapterView: io.reactivex.Observable itemLongClickEvents(android.widget.AdapterView,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)
androidx.core.text.PrecomputedTextCompat$Params
com.example.revolut.rates.R$layout: int abc_list_menu_item_checkbox
okhttp3.Headers: int size()
kotlinx.coroutines.internal.ThreadLocalElement: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doOnComplete(io.reactivex.functions.Action)
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.app.ActionBar getSupportActionBar()
androidx.appcompat.R$styleable: int DrawerArrowToggle_thickness
kotlin.text.MatchResult$Destructured: kotlin.text.MatchResult getMatch()
io.reactivex.internal.operators.maybe.MaybeFromRunnable: java.lang.Object call()
io.reactivex.internal.operators.observable.ObservableInternalHelper: java.util.concurrent.Callable replayCallable(io.reactivex.Observable,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)
kotlin.collections.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: int HORIZONTAL
androidx.core.R$attr: int fontStyle
androidx.viewpager.R$color: int ripple_material_light
androidx.legacy.v4.R$dimen: int notification_subtext_size
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder fragment(java.lang.String)
kotlinx.coroutines.Job: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)
io.reactivex.Flowable: io.reactivex.Flowable doFinally(io.reactivex.functions.Action)
com.example.revolut.rates.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
kotlin.ULong: void data$annotations()
io.reactivex.internal.util.QueueDrain: boolean accept(org.reactivestreams.Subscriber,java.lang.Object)
androidx.appcompat.view.ActionMode: void invalidate()
dagger.android.support.R$attr: int colorControlNormal
com.example.revolut.rates.R$id: int center_horizontal
com.google.gson.internal.reflect.ReflectionAccessor: void makeAccessible(java.lang.reflect.AccessibleObject)
io.reactivex.Observable: io.reactivex.Observable unsafeCreate(io.reactivex.ObservableSource)
androidx.constraintlayout.solver.widgets.ConstraintWidget: java.lang.String getType()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer: FlowableOnBackpressureBuffer(io.reactivex.Flowable,int,boolean,boolean,io.reactivex.functions.Action)
androidx.media.R$styleable: int FontFamily_fontProviderQuery
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemRangeInserted(int,int)
androidx.loader.R$style: int TextAppearance_Compat_Notification_Title
com.example.revolut.rates.common.NotifyCurrencies
io.reactivex.internal.subscribers.SubscriberResourceWrapper: boolean isDisposed()
com.example.revolut.rates.base.BaseViewModel: java.lang.ref.WeakReference getNotifier()
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.appcompat.app.AppCompatDelegate: void onStop()
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
kotlin.reflect.KType
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void cancel(java.lang.Object)
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription: long serialVersionUID
io.reactivex.internal.operators.single.SingleDoOnTerminate: void subscribeActual(io.reactivex.SingleObserver)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void unscheduleSelf(java.lang.Runnable)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapIndexedNotNullTo$3
io.reactivex.observers.SafeObserver: void onError(java.lang.Throwable)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int)
androidx.cursoradapter.widget.CursorAdapter: java.lang.Object getItem(int)
androidx.asynclayoutinflater.R$dimen: int notification_subtext_size
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function7)
com.jakewharton.rxbinding3.core.R$styleable: int ColorStateListItem_android_alpha
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.core.ktx.R$attr
androidx.databinding.adapters.LinearLayoutBindingAdapter
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: boolean contains(java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.String dropLast(java.lang.String,int)
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorListener doOnCancel(android.animation.Animator,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
androidx.constraintlayout.widget.R$attr: int layout_goneMarginEnd
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.internal.Symbol access$getRESUME_QUIESCENT$p()
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable flatMap(io.reactivex.functions.Function,boolean,int,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.example.revolut.rates.R$styleable: int ViewStubCompat_android_layout
androidx.fragment.R$dimen: int notification_small_icon_size_as_large
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat RTL
kotlin.jvm.internal.PropertyReference2: kotlin.reflect.KCallable computeReflected()
androidx.core.graphics.MatrixKt: android.graphics.Matrix rotationMatrix$default(float,float,float,int,java.lang.Object)
androidx.databinding.adapters.ChronometerBindingAdapter: ChronometerBindingAdapter()
io.reactivex.internal.util.AtomicThrowable
androidx.core.view.ViewCompat: int SCROLL_AXIS_HORIZONTAL
androidx.appcompat.widget.AppCompatRatingBar: AppCompatRatingBar(android.content.Context,android.util.AttributeSet,int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object getNext()
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionBar
androidx.viewpager.widget.PagerTitleStrip: void onAttachedToWindow()
kotlin.io.FilesKt__FileReadWriteKt: void forEachLine$default(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
com.example.revolut.rates.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
kotlin.random.Random
com.example.revolut.rates.R$layout: int abc_search_dropdown_item_icons_2line
kotlinx.coroutines.sync.MutexImpl: boolean holdsLock(java.lang.Object)
com.example.revolut.rates.R$attr: int layout_constraintBottom_creator
kotlin.Pair: kotlin.Pair copy(java.lang.Object,java.lang.Object)
androidx.appcompat.R$id: int image
androidx.appcompat.R$styleable: int MenuItem_numericModifiers
androidx.legacy.v4.R$id: int right_icon
androidx.databinding.Observable: void addOnPropertyChangedCallback(androidx.databinding.Observable$OnPropertyChangedCallback)
io.reactivex.Completable: io.reactivex.Observable andThen(io.reactivex.ObservableSource)
com.example.revolut.rates.R$styleable: int AppCompatTheme_panelMenuListWidth
androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)
androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$1: void onTransitionEnd(android.transition.Transition)
androidx.core.view.ActionProvider$VisibilityListener: void onActionProviderVisibilityChanged(boolean)
kotlin.jvm.internal.PropertyReference1
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long minWith(long[],java.util.Comparator)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: float getEndTrim()
android.support.v4.media.MediaDescriptionCompat: long BT_FOLDER_TYPE_YEARS
android.support.v4.media.session.MediaSessionCompat: void setRepeatMode(int)
androidx.versionedparcelable.VersionedParcel: void writeBoolean(boolean,int)
io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate: FlowableTakeUntilPredicate(io.reactivex.Flowable,io.reactivex.functions.Predicate)
androidx.core.util.Preconditions: float[] checkArrayElementsInRange(float[],float,float,java.lang.String)
androidx.appcompat.app.AlertDialog: void setIcon(int)
androidx.customview.R$color: int secondary_text_default_material_light
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
okhttp3.internal.http.HttpCodec: okio.Sink createRequestBody(okhttp3.Request,long)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int gravity
androidx.core.util.LogWriter: void write(char[],int,int)
androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$1: void onTransitionCancel(android.transition.Transition)
kotlin.collections.AbstractMap: int size()
androidx.media.AudioAttributesCompat: int USAGE_GAME
androidx.loader.content.Loader: void onStartLoading()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: int orientation
androidx.appcompat.app.ActionBar: int DISPLAY_SHOW_TITLE
androidx.coordinatorlayout.R$id: int notification_main_column
kotlin.jvm.internal.Intrinsics: void throwIllegalState(java.lang.String)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory BYTE_FACTORY
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(int,byte)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$last$3: ChannelsKt__Channels_commonKt$last$3(kotlin.coroutines.Continuation)
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.reactivex.internal.observers.QueueDrainObserver: void fastPathEmit(java.lang.Object,boolean,io.reactivex.disposables.Disposable)
io.reactivex.Flowable: java.lang.Object blockingLast(java.lang.Object)
io.reactivex.Scheduler: void start()
io.reactivex.Completable: io.reactivex.Completable doFinally(io.reactivex.functions.Action)
androidx.customview.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintScreenTimeout(int)
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_PLAY_FROM_URI
androidx.core.view.ScrollingView: int computeHorizontalScrollRange()
androidx.core.view.ViewGroupKt: void updateMarginsRelative(android.view.ViewGroup$MarginLayoutParams,int,int,int,int)
okhttp3.internal.Util: java.nio.charset.Charset ISO_8859_1
kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUnintercepted(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
io.reactivex.Observable: io.reactivex.Observable throttleLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybe(io.reactivex.functions.Function)
com.example.revolut.rates.R$string: int abc_action_bar_home_description
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PREPARE_FROM_MEDIA_ID
okio.Buffer: okio.BufferedSink emitCompleteSegments()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShowAsActionFlags(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
kotlin.reflect.KParameter: int getIndex()
com.example.revolut.rates.R$color: int abc_primary_text_material_dark
android.support.v4.media.MediaBrowserCompat$ItemCallback: MediaBrowserCompat$ItemCallback()
androidx.interpolator.view.animation.LookupTableInterpolator: float getInterpolation(float)
androidx.swiperefreshlayout.R$id: int italic
androidx.core.view.ViewCompat: int ACCESSIBILITY_LIVE_REGION_POLITE
androidx.core.ktx.R$dimen: int notification_small_icon_size_as_large
io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher)
androidx.appcompat.R$id: int action_text
kotlin.UIntArray: boolean remove(java.lang.Object)
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder color(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$attr: int editTextStyle
io.reactivex.internal.operators.maybe.MaybeToFlowable: io.reactivex.MaybeSource source()
io.reactivex.internal.util.NotificationLite: java.lang.Object error(java.lang.Throwable)
kotlinx.coroutines.test.TestCoroutineContext: void assertAllUnhandledExceptions$default(kotlinx.coroutines.test.TestCoroutineContext,java.lang.String,kotlin.jvm.functions.Function1,int,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableJust: FlowableJust(java.lang.Object)
androidx.appcompat.app.ActionBar: int DISPLAY_HOME_AS_UP
kotlin.ranges.IntProgression$Companion
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
dagger.android.support.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
kotlin.reflect.KVariance
androidx.legacy.coreutils.R$id: int line1
androidx.recyclerview.R$styleable: int FontFamilyFont_android_fontWeight
com.example.revolut.rates.R$styleable: int[] ListPopupWindow
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.support.v4.media.session.MediaSessionCompat$QueueItem fromQueueItem(java.lang.Object)
android.support.v4.media.session.MediaControllerCompat$Callback: void onExtrasChanged(android.os.Bundle)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setChannelId(java.lang.String)
kotlin.coroutines.experimental.CombinedContext: kotlin.coroutines.experimental.CoroutineContext plus(kotlin.coroutines.experimental.CoroutineContext)
androidx.core.widget.NestedScrollView: void fling(int)
androidx.media.app.NotificationCompat$MediaStyle: android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
kotlin.text.CharsetsKt
kotlin.sequences.DropWhileSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.DropWhileSequence)
androidx.core.view.WindowInsetsCompat: int getStableInsetRight()
com.example.revolut.rates.R$string: int abc_font_family_display_3_material
kotlin.reflect.KType$DefaultImpls: void classifier$annotations()
io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function9)
com.example.revolut.rates.R$drawable: int abc_list_selector_background_transition_holo_dark
kotlinx.coroutines.GlobalScope
kotlin.text.CharDirectionality
androidx.core.util.SparseBooleanArrayKt$keyIterator$1
androidx.legacy.v4.R$attr: int coordinatorLayoutStyle
androidx.appcompat.widget.ActivityChooserView
io.reactivex.internal.operators.flowable.FlowablePublish: void subscribeActual(org.reactivestreams.Subscriber)
kotlinx.coroutines.internal.LockFreeMPSCQueueCore$Companion: LockFreeMPSCQueueCore$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe
dagger.internal.MapProviderFactory: java.lang.Object get()
io.reactivex.ObservableOnSubscribe: void subscribe(io.reactivex.ObservableEmitter)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
dagger.android.support.R$style: int Platform_V25_AppCompat_Light
okhttp3.internal.http.HttpCodec: void finishRequest()
kotlin.ranges.ULongProgression: long getFirst()
androidx.core.view.accessibility.AccessibilityRecordCompat
androidx.appcompat.widget.SwitchCompat: boolean verifyDrawable(android.graphics.drawable.Drawable)
androidx.arch.core.executor.TaskExecutor: void executeOnDiskIO(java.lang.Runnable)
io.reactivex.internal.subscriptions.DeferredScalarSubscription: DeferredScalarSubscription(org.reactivestreams.Subscriber)
io.reactivex.Single
kotlin.text.Regex$Companion: java.lang.String escape(java.lang.String)
dagger.android.support.R$styleable: int[] TextAppearance
kotlin.coroutines.experimental.migration.CoroutinesMigrationKt
kotlin.BuilderInference
androidx.appcompat.R$styleable: int PopupWindowBackgroundState_state_above_anchor
androidx.core.app.NotificationCompat$Action$Builder: NotificationCompat$Action$Builder(int,java.lang.CharSequence,android.app.PendingIntent)
androidx.appcompat.R$styleable: int MenuItem_android_menuCategory
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(short[],int)
kotlin.text.UStringsKt: kotlin.UInt toUIntOrNull(java.lang.String)
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError: MaybeConcatArrayDelayError(io.reactivex.MaybeSource[])
android.support.v4.media.session.MediaSessionCompat$QueueItem: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(double[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int StateListDrawable_android_variablePadding
kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,byte)
androidx.annotation.WorkerThread
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
io.reactivex.subjects.AsyncSubject$AsyncDisposable: long serialVersionUID
androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)
kotlin.jvm.internal.ClassReference: void isInner$annotations()
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable: CompletableTakeUntilCompletable(io.reactivex.Completable,io.reactivex.CompletableSource)
androidx.legacy.coreutils.R$drawable: int notification_bg_low_normal
okhttp3.internal.http2.Http2Stream: void writeHeaders(java.util.List,boolean)
io.reactivex.internal.subscribers.InnerQueuedSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.graphics.PathParser
io.reactivex.Observable: io.reactivex.Observable concatArrayDelayError(io.reactivex.ObservableSource[])
dagger.android.support.R$id: int search_go_btn
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
kotlin.io.FilesKt__UtilsKt: java.io.File createTempDir$default(java.lang.String,java.lang.String,java.io.File,int,java.lang.Object)
com.example.revolut.rates.databinding.RatesItemBinding: android.widget.EditText currencyValue
androidx.media.R$styleable: int[] FontFamily
android.support.v4.media.session.MediaSessionCompat$Callback: void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
kotlinx.coroutines.CoroutineScope$DefaultImpls
androidx.recyclerview.widget.SortedListAdapterCallback: SortedListAdapterCallback(androidx.recyclerview.widget.RecyclerView$Adapter)
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1: ArraysKt___ArraysKt$groupingBy$1(java.lang.Object[],kotlin.jvm.functions.Function1)
io.reactivex.internal.subscribers.DeferredScalarSubscriber: DeferredScalarSubscriber(org.reactivestreams.Subscriber)
kotlin.ULongArray: boolean isEmpty()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedScroll(int,int,int,int,int[])
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.lang.Double toDoubleOrNull(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(io.reactivex.ObservableSource[],io.reactivex.functions.Function)
androidx.legacy.v4.R$styleable: int[] FontFamilyFont
io.reactivex.internal.subscribers.FutureSubscriber: boolean isDone()
androidx.appcompat.R$styleable: int SearchView_layout
kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle attachChild(kotlinx.coroutines.Job)
androidx.appcompat.R$anim: int abc_slide_in_bottom
androidx.legacy.coreutils.R$attr: int fontProviderFetchTimeout
androidx.appcompat.app.AppCompatCallback: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
androidx.legacy.coreui.R$styleable: int GradientColor_android_endX
io.reactivex.internal.observers.FutureObserver: boolean isDone()
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: int getLeft()
com.example.revolut.rates.di.AppComponent: void inject(com.example.revolut.rates.viewmodel.CurrenciesViewModel)
kotlin.UnsafeLazyImpl: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeChanged(int,int)
androidx.fragment.R$dimen: int notification_large_icon_width
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)
androidx.constraintlayout.solver.widgets.Helper: Helper()
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
androidx.appcompat.R$dimen: int abc_control_corner_material
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: RecyclerViewAccessibilityDelegate(androidx.recyclerview.widget.RecyclerView)
androidx.constraintlayout.widget.R$attr: int layout_constraintHeight_max
com.example.revolut.rates.R$attr: int windowActionModeOverlay
androidx.appcompat.widget.DecorToolbar: void setNavigationContentDescription(int)
okhttp3.Challenge: boolean equals(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableSingleSingle
io.reactivex.internal.operators.flowable.FlowableInternalHelper: io.reactivex.functions.Function flatMapIntoIterable(io.reactivex.functions.Function)
com.jakewharton.rxbinding3.widget.TextViewEditorActionEvent: android.view.KeyEvent getKeyEvent()
dagger.android.support.R$drawable: int abc_edit_text_material
io.reactivex.internal.operators.single.SingleDefer: SingleDefer(java.util.concurrent.Callable)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShortcut(char,char)
kotlin.annotation.AnnotationRetention: kotlin.annotation.AnnotationRetention valueOf(java.lang.String)
okio.Pipe: okio.Source source()
androidx.vectordrawable.R$styleable: int GradientColor_android_centerColor
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
io.reactivex.internal.operators.observable.ObservableCache: void subscribeActual(io.reactivex.Observer)
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(long[],kotlin.jvm.functions.Function1)
com.jakewharton.rxbinding3.core.R$styleable: int FontFamilyFont_android_font
io.reactivex.internal.util.HashMapSupplier
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
androidx.core.view.GravityCompat: int START
androidx.appcompat.R$styleable: int AppCompatTheme_colorPrimaryDark
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
kotlin.text.StringsKt__StringsKt: java.lang.String padStart$default(java.lang.String,int,char,int,java.lang.Object)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntRange until-Kr8caGY(byte,byte)
androidx.appcompat.R$styleable: int AppCompatSeekBar_android_thumb
com.example.revolut.rates.R$layout: int abc_activity_chooser_view_list_item
androidx.appcompat.app.ActionBarDrawerToggle: void setDrawerIndicatorEnabled(boolean)
com.example.revolut.rates.R$string: int abc_searchview_description_submit
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(short[])
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence replaceRange(java.lang.CharSequence,kotlin.ranges.IntRange,java.lang.CharSequence)
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)
androidx.media.AudioAttributesCompat: int USAGE_MEDIA
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List drop-PpDY95g(byte[],int)
android.support.v4.media.session.IMediaSession: void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
androidx.core.app.ShareCompat$IntentReader: boolean isMultipleShare()
androidx.appcompat.app.ActionBar$NavigationMode
dagger.android.support.R$drawable: int abc_switch_thumb_material
androidx.arch.core.executor.ArchTaskExecutor: void postToMainThread(java.lang.Runnable)
kotlinx.coroutines.LazyDeferredKt
androidx.core.content.res.TypedArrayKt: android.content.res.ColorStateList getColorStateListOrThrow(android.content.res.TypedArray,int)
okio.Buffer: void close()
androidx.core.view.MenuKt$iterator$1: java.lang.Object next()
io.reactivex.internal.operators.flowable.FlowableSingle: FlowableSingle(io.reactivex.Flowable,java.lang.Object,boolean)
androidx.appcompat.R$styleable: int[] ListPopupWindow
kotlin.collections.AbstractMap$Companion
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List zip(java.lang.Iterable,java.lang.Iterable)
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_HOVER_ENTER
io.reactivex.internal.operators.flowable.FlowableTakeWhile: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.FloatCompanionObject: float getPOSITIVE_INFINITY()
androidx.appcompat.widget.ActionBarContainer: void onFinishInflate()
androidx.core.widget.AutoScrollHelper: float NO_MAX
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long)
org.jetbrains.annotations.TestOnly
okhttp3.Response: okhttp3.Response networkResponse()
kotlin.jvm.internal.ClassReference: java.lang.String getSimpleName()
io.reactivex.Single: io.reactivex.Single delaySubscription(io.reactivex.ObservableSource)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy
com.jakewharton.rxbinding3.internal.AlwaysTrue: com.jakewharton.rxbinding3.internal.AlwaysTrue INSTANCE
androidx.databinding.CallbackRegistry
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
androidx.core.view.accessibility.AccessibilityEventCompat: int getRecordCount(android.view.accessibility.AccessibilityEvent)
kotlinx.coroutines.DelayKt
androidx.appcompat.R$style: int Widget_AppCompat_ListView_Menu
kotlin.collections.MapsKt___MapsKt: java.util.Collection mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1)
androidx.lifecycle.extensions.R$dimen: int notification_main_column_padding_top
androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)
androidx.recyclerview.R$dimen: int item_touch_helper_max_drag_scroll_per_frame
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getRightDecorationWidth(android.view.View)
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams: SlidingPaneLayout$LayoutParams(androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams)
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_POSITION
androidx.lifecycle.ViewModelProviders: androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.FragmentActivity)
io.reactivex.internal.observers.BasicIntQueueDisposable
io.reactivex.internal.operators.observable.ObservableMapNotification
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany: FlowableWithLatestFromMany(io.reactivex.Flowable,org.reactivestreams.Publisher[],io.reactivex.functions.Function)
androidx.databinding.adapters.AdapterViewBindingAdapter$OnItemSelected
kotlin.sequences.FlatteningSequence$iterator$1: java.lang.Object next()
io.reactivex.subscribers.SerializedSubscriber: SerializedSubscriber(org.reactivestreams.Subscriber)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void idleResetBeforeUnpark()
io.reactivex.internal.operators.maybe.MaybeNever: MaybeNever()
com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent: int getVisibleItemCount()
okhttp3.internal.connection.RouteException: RouteException(java.io.IOException)
io.reactivex.Maybe: io.reactivex.Flowable repeat()
com.example.revolut.rates.di.AppModule_ProvideCurrenciesRepositoryFactory: com.example.revolut.rates.data.repository.CurrenciesRepository proxyProvideCurrenciesRepository(com.example.revolut.rates.di.AppModule)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int)
io.reactivex.internal.observers.BiConsumerSingleObserver: void onSuccess(java.lang.Object)
io.reactivex.Single: io.reactivex.Flowable mergeDelayError(java.lang.Iterable)
com.google.gson.JsonArray: float getAsFloat()
androidx.core.view.MotionEventCompat: int ACTION_HOVER_ENTER
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type RIGHT
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setFromIndex(int)
io.reactivex.internal.subscribers.LambdaSubscriber: void onComplete()
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: int getSwipeDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.example.revolut.rates.R$style: int TextAppearance_Compat_Notification_Media
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean,int)
androidx.appcompat.R$layout: int notification_template_icon_group
org.intellij.lang.annotations.JdkConstants$ListSelectionMode
kotlinx.coroutines.selects.SelectInstance: boolean trySelect(java.lang.Object)
androidx.asynclayoutinflater.R$style: int Widget_Compat_NotificationActionContainer
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabelFor()
androidx.viewpager.widget.PagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)
kotlinx.coroutines.TimeSourceKt: kotlinx.coroutines.TimeSource getTimeSource()
androidx.appcompat.view.SupportActionModeWrapper
androidx.recyclerview.widget.LinearLayoutManager: int findLastVisibleItemPosition()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean maxWith(boolean[],java.util.Comparator)
kotlinx.coroutines.scheduling.BackgroundDispatcher: kotlinx.coroutines.CoroutineDispatcher getIO()
com.example.revolut.rates.R$id: int bottom
kotlin.KotlinVersion: int compareTo(kotlin.KotlinVersion)
androidx.drawerlayout.R$string
kotlin.jvm.internal.MutablePropertyReference0Impl: kotlin.reflect.KDeclarationContainer getOwner()
dagger.android.support.R$styleable: int MenuGroup_android_id
io.reactivex.internal.util.Pow2: boolean isPowerOfTwo(int)
androidx.constraintlayout.widget.ConstraintSet: int VERTICAL_GUIDELINE
okhttp3.EventListener: void dnsStart(okhttp3.Call,java.lang.String)
kotlinx.coroutines.channels.SendChannel: boolean isFull()
android.support.v4.media.MediaMetadataCompat: boolean containsKey(java.lang.String)
androidx.appcompat.graphics.drawable.DrawableContainer: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
androidx.loader.R$dimen: int notification_right_icon_size
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE
androidx.appcompat.R$style: int Base_V21_Theme_AppCompat
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutFallbackMaybeObserver: long serialVersionUID
io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher[],io.reactivex.functions.Function)
androidx.recyclerview.R$styleable: int[] CoordinatorLayout
androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationManagerCompat from(android.content.Context)
androidx.drawerlayout.R$id: int notification_background
androidx.media.R$id: int notification_main_column_container
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSortKey(java.lang.String)
kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String[] n()
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setShortLabel(java.lang.CharSequence)
kotlin.io.LinesSequence$iterator$1
okhttp3.internal.http.HttpCodec: int DISCARD_STREAM_TIMEOUT_MILLIS
kotlin.jvm.internal.CallableReference
androidx.core.graphics.CanvasKt: void withTranslation$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.constraintlayout.solver.widgets.WidgetContainer: void remove(androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.appcompat.widget.SearchView: void onMeasure(int,int)
dagger.android.support.R$dimen: int notification_top_pad
androidx.fragment.R$attr: int keylines
androidx.core.content.ContextKt: void withStyledAttributes$default(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment RIGHT
retrofit2.CallAdapter$Factory: retrofit2.CallAdapter get(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty2 property2(kotlin.jvm.internal.PropertyReference2)
io.reactivex.Flowable: java.util.concurrent.Future toFuture()
androidx.databinding.adapters.AbsListViewBindingAdapter: AbsListViewBindingAdapter()
kotlinx.coroutines.Deferred$DefaultImpls: void isComputing$annotations()
com.example.revolut.rates.viewmodel.CurrenciesViewModel: CurrenciesViewModel()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setState(int[])
io.reactivex.Observable: io.reactivex.Single contains(java.lang.Object)
kotlinx.coroutines.selects.SelectBuilderImpl: void invoke(kotlinx.coroutines.selects.SelectClause2,kotlin.jvm.functions.Function2)
kotlin.io.FileWalkDirection
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobCancellationException: boolean equals(java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int leftToLeft
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.Region getTransparentRegion()
io.reactivex.internal.subscriptions.ScalarSubscription
kotlin.ranges.UIntRange: kotlin.UInt getStart()
androidx.legacy.v4.R$attr: int layout_anchor
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe: ObservableConcatWithMaybe(io.reactivex.Observable,io.reactivex.MaybeSource)
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
com.example.revolut.rates.R$styleable: int AppCompatTheme_android_windowIsFloating
dagger.android.support.R$styleable: int AppCompatTheme_dialogTheme
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1: java.util.Iterator sourceIterator()
androidx.constraintlayout.solver.widgets.ConstraintWidget: java.lang.String getDebugName()
kotlin.collections.ArraysKt___ArraysKt: double last(double[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.Toolbar: boolean onTouchEvent(android.view.MotionEvent)
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(char[],char)
androidx.appcompat.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
com.google.gson.stream.JsonReader: void close()
androidx.appcompat.R$style: int Base_V7_Theme_AppCompat_Light
okhttp3.internal.cache.CacheRequest: okio.Sink body()
androidx.fragment.app.FragmentController: void noteStateNotSaved()
androidx.appcompat.R$attr: int imageButtonStyle
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(boolean[],kotlin.jvm.functions.Function1)
androidx.appcompat.app.AppCompatDelegate: int FEATURE_SUPPORT_ACTION_BAR
androidx.appcompat.widget.Toolbar: void onRestoreInstanceState(android.os.Parcelable)
androidx.appcompat.view.WindowCallbackWrapper
com.example.revolut.rates.R$styleable: int ActionBar_progressBarStyle
okhttp3.Dispatcher: void setIdleCallback(java.lang.Runnable)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
android.support.v4.media.MediaMetadataCompat$RatingKey
kotlin.text.CharCategory: kotlin.text.CharCategory PRIVATE_USE
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionButton
androidx.versionedparcelable.VersionedParcel: void writeBooleanArray(boolean[])
kotlinx.coroutines.AbstractCoroutine: void onCompleted(java.lang.Object)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
io.reactivex.Maybe: io.reactivex.Maybe unsubscribeOn(io.reactivex.Scheduler)
io.reactivex.internal.observers.QueueDrainObserver: boolean cancelled()
com.jakewharton.rxbinding3.core.R$dimen: int notification_main_column_padding_top
dagger.android.support.R$attr: int showAsAction
io.reactivex.observers.TestObserver$EmptyObserver: io.reactivex.observers.TestObserver$EmptyObserver valueOf(java.lang.String)
kotlin.random.Random: long nextLong()
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality PARAGRAPH_SEPARATOR
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec MODERN_TLS
dagger.internal.TypedReleasableReferenceManagerDecorator
io.reactivex.Flowable: io.reactivex.Flowable takeWhile(io.reactivex.functions.Predicate)
androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.graphics.drawable.DrawerArrowDrawable getDrawerArrowDrawable()
androidx.core.transition.TransitionKt$addListener$1: TransitionKt$addListener$1()
com.example.revolut.rates.R$styleable: int Toolbar_titleMargins
kotlin.UByte: kotlin.UByte box-impl(byte)
androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)
androidx.collection.SparseArrayCompat: int keyAt(int)
com.example.revolut.rates.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
io.reactivex.CompletableOnSubscribe
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEvent(android.view.View,int)
androidx.databinding.InverseMethod
androidx.appcompat.R$id: int activity_chooser_view_content
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany
io.reactivex.internal.operators.observable.ObserverResourceWrapper
com.example.revolut.rates.R$drawable: int icon_aud
kotlinx.coroutines.JobSupport: void selectAwaitCompletion$kotlinx_coroutines_core(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
io.reactivex.Maybe: io.reactivex.Observable toObservable()
com.example.revolut.rates.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
androidx.appcompat.R$styleable: int AnimatedStateListDrawableItem_android_drawable
okio.Buffer: boolean exhausted()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT
androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int matchConstraintDefaultWidth
androidx.core.view.OnApplyWindowInsetsListener
okhttp3.Request$Builder: okhttp3.Request$Builder delete(okhttp3.RequestBody)
kotlin.ranges.RangesKt__RangesKt: RangesKt__RangesKt()
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(float[],float)
io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable: void subscribeActual(io.reactivex.CompletableObserver)
androidx.appcompat.app.AlertDialog: void setCustomTitle(android.view.View)
io.reactivex.internal.operators.flowable.FlowableBlockingSubscribe: void subscribe(org.reactivestreams.Publisher)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setVisibility(int)
com.example.revolut.rates.R$attr: int voiceIcon
io.reactivex.internal.operators.flowable.BlockingFlowableNext
androidx.viewpager.widget.PagerAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Tooltip
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
io.reactivex.internal.util.VolatileSizeArrayList: java.util.ListIterator listIterator()
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable: void subscribeActual(io.reactivex.CompletableObserver)
kotlin.ranges.UIntRange$Companion: UIntRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.CollectionsKt___CollectionsKt: int lastIndexOf(java.util.List,java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler: void dispatch$default(kotlinx.coroutines.scheduling.CoroutineScheduler,java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean,int,java.lang.Object)
androidx.drawerlayout.R$styleable: int GradientColor_android_endY
androidx.appcompat.R$layout: int select_dialog_multichoice_material
okhttp3.internal.http2.Header: java.lang.String TARGET_SCHEME_UTF8
androidx.core.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)
io.reactivex.Scheduler: long clockDriftTolerance()
androidx.constraintlayout.widget.Constraints$LayoutParams: Constraints$LayoutParams(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.observers.InnerQueuedObserver: int fusionMode()
androidx.recyclerview.widget.RecyclerView: void requestChildFocus(android.view.View,android.view.View)
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams: float weight
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe
okhttp3.internal.cache.CacheRequest
io.reactivex.internal.subscriptions.SubscriptionHelper: boolean cancel(java.util.concurrent.atomic.AtomicReference)
androidx.vectordrawable.R$id: int right_icon
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map groupBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort firstOrNull-rL5Bavg(short[])
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(java.lang.Object[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int ConstraintSet_android_minHeight
io.reactivex.internal.operators.maybe.MaybeMaterialize
dagger.android.support.R$layout: int abc_action_bar_title_item
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object last(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
io.reactivex.subjects.MaybeSubject: void onError(java.lang.Throwable)
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollExtent()
androidx.core.app.ActivityCompat: void postponeEnterTransition(android.app.Activity)
dagger.android.support.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
okhttp3.Request: java.lang.String method()
androidx.appcompat.app.WindowDecorActionBar: void setTitle(java.lang.CharSequence)
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: void finishOnSuccess(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
dagger.internal.TypedReleasableReferenceManagerDecorator: TypedReleasableReferenceManagerDecorator(dagger.releasablereferences.ReleasableReferenceManager,java.lang.annotation.Annotation)
androidx.core.app.ActivityCompat: void setPermissionCompatDelegate(androidx.core.app.ActivityCompat$PermissionCompatDelegate)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object associateBy(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.recyclerview.R$dimen: int notification_subtext_size
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$firstOrNull$3
com.example.revolut.rates.R$attr: int actionViewClass
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ImageButton
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.example.revolut.rates.R$layout: int support_simple_spinner_dropdown_item
kotlin.ranges.UIntProgression$Companion: UIntProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_FLAG_AS_INAPPROPRIATE
androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)
androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2: int compare(java.lang.Object,java.lang.Object)
androidx.core.ktx.R$id: int text
io.reactivex.BackpressureOverflowStrategy: io.reactivex.BackpressureOverflowStrategy ERROR
androidx.constraintlayout.widget.Constraints$LayoutParams: float transformPivotY
androidx.appcompat.view.menu.SubMenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
android.support.v4.app.INotificationSideChannel: void cancelAll(java.lang.String)
kotlin.coroutines.EmptyCoroutineContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
androidx.core.graphics.drawable.DrawableKt
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getBaselineDistance()
androidx.viewpager.R$styleable: int FontFamilyFont_android_font
io.reactivex.Observable: io.reactivex.Observable skipWhile(io.reactivex.functions.Predicate)
androidx.core.app.NotificationCompat$MessagingStyle: boolean isGroupConversation()
android.support.v4.media.MediaBrowserCompat$SearchCallback: void onSearchResult(java.lang.String,android.os.Bundle,java.util.List)
dagger.android.support.R$id: int src_atop
androidx.core.app.TaskStackBuilder
com.example.revolut.rates.R$styleable: int AppCompatTextHelper_android_drawableLeft
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_TOUCH_INTERACTION_START
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object none(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.core.util.Pools$SimplePool: Pools$SimplePool(int)
dagger.android.support.R$styleable: int[] Spinner
io.reactivex.internal.schedulers.ScheduledDirectTask: java.lang.Void call()
kotlin.ranges.ClosedFloatingPointRange: boolean isEmpty()
androidx.appcompat.widget.PopupMenu: void setGravity(int)
io.reactivex.internal.operators.observable.ObservableElementAtMaybe: void subscribeActual(io.reactivex.MaybeObserver)
kotlin.reflect.KFunction: boolean isInline()
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe: void subscribeActual(io.reactivex.MaybeObserver)
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int)
kotlin.text.StringsKt___StringsKt: java.util.Collection toCollection(java.lang.CharSequence,java.util.Collection)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$partition$1: ChannelsKt__Channels_commonKt$partition$1(kotlin.coroutines.Continuation)
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget CLASS
androidx.media.MediaBrowserProtocol: java.lang.String DATA_PACKAGE_NAME
androidx.appcompat.widget.ListPopupWindow: int POSITION_PROMPT_BELOW
okhttp3.internal.http.RealInterceptorChain: int writeTimeoutMillis()
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewRemoveEvent: com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewRemoveEvent copy(android.view.ViewGroup,android.view.View)
dagger.android.support.R$styleable: int DrawerArrowToggle_thickness
android.support.v4.app.INotificationSideChannel$Stub$Proxy: void notify(java.lang.String,int,java.lang.String,android.app.Notification)
androidx.core.ktx.R$id: int blocking
androidx.core.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(long[],java.lang.Object[])
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentTabHost
com.example.revolut.rates.R$style: int TextAppearance_Compat_Notification_Title
io.reactivex.observers.SafeObserver: void onNext(java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_ADD_QUEUE_ITEM
io.reactivex.internal.util.NotificationLite$ErrorNotification: long serialVersionUID
androidx.fragment.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
androidx.appcompat.R$layout: int abc_screen_simple
com.example.revolut.rates.R$attr: int divider
io.reactivex.Scheduler$Worker
kotlin.collections.ArraysKt___ArraysKt: short last(short[])
androidx.loader.R$attr: int fontProviderFetchTimeout
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle getExtras()
io.reactivex.internal.schedulers.ScheduledDirectTask: java.lang.Runnable getWrappedRunnable()
androidx.core.graphics.drawable.DrawableKt: android.graphics.Bitmap toBitmap$default(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config,int,java.lang.Object)
com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent: int component3()
com.google.gson.reflect.TypeToken
androidx.databinding.ObservableLong: ObservableLong(androidx.databinding.Observable[])
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.experimental.Continuation createCoroutineUnchecked(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.experimental.Continuation)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.viewpager.R$drawable: int notification_template_icon_low_bg
com.example.revolut.rates.R$style: int AlertDialog_AppCompat_Light
io.reactivex.Observable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)
com.example.revolut.rates.R$dimen: int notification_small_icon_background_padding
kotlinx.coroutines.internal.LockFreeMPSCQueue: boolean addLast(java.lang.Object)
com.example.revolut.rates.R$color: int foreground_material_light
androidx.coordinatorlayout.R$dimen: int notification_right_icon_size
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(int[],kotlin.jvm.functions.Function1)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect)
io.reactivex.plugins.RxJavaPlugins: void setOnObservableAssembly(io.reactivex.functions.Function)
okhttp3.internal.cache.CacheStrategy: boolean isCacheable(okhttp3.Response,okhttp3.Request)
android.support.v4.media.MediaMetadataCompatApi21$Builder: void putText(java.lang.Object,java.lang.String,java.lang.CharSequence)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int MATCH_CONSTRAINT_PERCENT
kotlin.text.Regex: java.lang.String replace(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(double[],java.util.Collection)
com.example.revolut.rates.R$styleable: int ConstraintSet_barrierAllowsGoneWidgets
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContentInvalid(boolean)
dagger.android.support.R$styleable: int AppCompatTextHelper_android_drawableStart
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfterLast(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
kotlin.text.RegexOption: kotlin.text.RegexOption COMMENTS
androidx.vectordrawable.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeClipRevealAnimation(android.view.View,int,int,int,int)
com.jakewharton.rxbinding3.widget.SeekBarStartChangeEvent
android.support.v4.media.MediaBrowserCompat: void search(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SearchCallback)
androidx.viewpager.R$style: int TextAppearance_Compat_Notification_Time
kotlin.collections.ArraysKt___ArraysKt: double[] sortedArrayDescending(double[])
androidx.databinding.DataBindingUtil: androidx.databinding.ViewDataBinding findBinding(android.view.View)
com.google.gson.internal.ConstructorConstructor: ConstructorConstructor(java.util.Map)
androidx.loader.app.LoaderManager: androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
kotlin.jvm.internal.Reflection: java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase)
androidx.lifecycle.extensions.R$id: int left
com.example.revolut.rates.R$id: int all
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(long[],int)
androidx.appcompat.app.ActionBar: ActionBar()
kotlinx.coroutines.JobSupport: boolean hasOnFinishingHandler$kotlinx_coroutines_core(java.lang.Object)
kotlin.text.Typography: char greaterOrEqual
com.example.revolut.rates.R$color: int abc_search_url_text_selected
com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()
androidx.fragment.R$dimen
androidx.core.util.Preconditions: long checkArgumentNonnegative(long,java.lang.String)
okhttp3.internal.Internal: okhttp3.Call newWebSocketCall(okhttp3.OkHttpClient,okhttp3.Request)
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Double,java.lang.Double)
io.reactivex.internal.observers.FutureSingleObserver: void dispose()
androidx.appcompat.app.ActionBar: android.content.Context getThemedContext()
okio.Buffer: okio.Timeout timeout()
androidx.media.session.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)
androidx.core.graphics.drawable.RoundedBitmapDrawable: boolean hasMipMap()
androidx.core.app.JobIntentService: void onDestroy()
dagger.android.support.R$anim: int abc_fade_in
com.example.revolut.rates.R$id: int action_bar_root
dagger.android.support.R$anim: int abc_slide_out_bottom
androidx.databinding.adapters.CalendarViewBindingAdapter: void setDate(android.widget.CalendarView,long)
com.example.revolut.rates.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
okhttp3.internal.connection.RealConnection: okhttp3.internal.http.HttpCodec newCodec(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,okhttp3.internal.connection.StreamAllocation)
androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)
com.example.revolut.rates.R$styleable: int MenuView_android_headerBackground
okhttp3.internal.io.FileSystem: okhttp3.internal.io.FileSystem SYSTEM
dagger.android.DaggerApplication: DaggerApplication()
io.reactivex.internal.observers.BiConsumerSingleObserver: boolean isDisposed()
dagger.android.DaggerActivity
okhttp3.internal.http.CallServerInterceptor
com.example.revolut.rates.R$style: int Base_V7_Widget_AppCompat_Toolbar
androidx.recyclerview.widget.RecyclerView$OnFlingListener
androidx.media.AudioAttributesCompat$AttributeUsage
io.reactivex.Maybe: io.reactivex.Maybe fromSingle(io.reactivex.SingleSource)
com.jakewharton.rxbinding3.widget.RxRadioGroup: com.jakewharton.rxbinding3.InitialValueObservable checkedChanges(android.widget.RadioGroup)
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
androidx.appcompat.widget.ListPopupWindow: int INPUT_METHOD_NOT_NEEDED
androidx.databinding.BaseObservable: void notifyChange()
com.example.revolut.rates.R$dimen: int abc_action_bar_default_padding_start_material
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: void getBoundsInScreen(android.graphics.Rect)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
com.example.revolut.rates.R$layout: int abc_popup_menu_item_layout
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)
androidx.media.R$id: int tag_transition_group
io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.MediaType: java.lang.String type()
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getChildCount()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
io.reactivex.Observable: io.reactivex.Single toSortedList(int)
io.reactivex.internal.operators.flowable.FlowableFromFuture
dagger.android.support.R$styleable: int MenuItem_android_checked
androidx.core.provider.SelfDestructiveThread$ReplyCallback
androidx.versionedparcelable.VersionedParcel: float readFloat()
androidx.media.AudioAttributesCompat: int USAGE_UNKNOWN
android.support.v4.media.session.MediaSessionCompat: void removeOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)
androidx.databinding.ViewDataBinding$IncludedLayouts: int[][] indexes
io.reactivex.internal.operators.flowable.FlowableReplay: io.reactivex.flowables.ConnectableFlowable create(io.reactivex.Flowable,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)
androidx.legacy.app.ActionBarDrawerToggle: void syncState()
androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)
androidx.cursoradapter.widget.SimpleCursorAdapter: int getStringConversionColumn()
androidx.core.view.ViewCompat: boolean isPaddingRelative(android.view.View)
androidx.core.animation.AnimatorKt$doOnCancel$$inlined$addListener$1: AnimatorKt$doOnCancel$$inlined$addListener$1(kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$attr: int layout_constraintStart_toEndOf
androidx.core.app.ShareCompat: java.lang.String EXTRA_CALLING_ACTIVITY
kotlin.text.RegexOption: kotlin.text.RegexOption LITERAL
androidx.appcompat.R$styleable: int CompoundButton_android_button
androidx.slidingpanelayout.R$styleable: int GradientColor_android_endColor
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
androidx.coordinatorlayout.R$drawable: int notification_bg
io.reactivex.Observable: io.reactivex.Observable switchOnNext(io.reactivex.ObservableSource)
androidx.appcompat.view.ActionMode: void finish()
io.reactivex.FlowableOperator
dagger.android.support.R$attr: int textColorAlertDialogListItem
androidx.core.app.NavUtils: void navigateUpFromSameTask(android.app.Activity)
io.reactivex.Single: io.reactivex.Single contains(java.lang.Object,io.reactivex.functions.BiPredicate)
kotlinx.coroutines.ScheduledKt: java.lang.Object withTimeoutOrNull$default(long,java.util.concurrent.TimeUnit,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,int,java.lang.Object)
androidx.core.animation.AnimatorKt$doOnRepeat$$inlined$addListener$1: void onAnimationCancel(android.animation.Animator)
kotlin.text.StringsKt__StringsKt: int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)
androidx.appcompat.R$attr: int windowMinWidthMinor
androidx.slidingpanelayout.R$id: int tag_unhandled_key_listeners
okhttp3.HttpUrl: java.lang.String username()
okhttp3.internal.cache.DiskLruCache: void initialize()
io.reactivex.Single: io.reactivex.Single onErrorResumeNext(io.reactivex.functions.Function)
androidx.appcompat.widget.DecorToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
kotlin.UShort: kotlin.UShort$Companion Companion
kotlin.UIntArray
androidx.appcompat.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
androidx.recyclerview.widget.RecyclerView$ViewHolder: long getItemId()
kotlin.jvm.internal.Intrinsics: void throwAssert()
io.reactivex.subjects.ReplaySubject$ReplayDisposable: long serialVersionUID
androidx.cursoradapter.widget.SimpleCursorAdapter: int[] mTo
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher[],io.reactivex.functions.Function)
androidx.core.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_AUTO
com.example.revolut.rates.R$style: int Theme_AppCompat_NoActionBar
androidx.annotation.IntDef: int[] value()
androidx.appcompat.R$dimen: int abc_action_bar_content_inset_with_nav
androidx.constraintlayout.widget.Guideline: Guideline(android.content.Context,android.util.AttributeSet,int,int)
kotlin.text.StringsKt__IndentKt: java.lang.String replaceIndent$default(java.lang.String,java.lang.String,int,java.lang.Object)
androidx.versionedparcelable.VersionedParcel: java.lang.String readString()
androidx.recyclerview.widget.AsyncDifferConfig: java.util.concurrent.Executor getBackgroundThreadExecutor()
androidx.appcompat.view.StandaloneActionMode: void setCustomView(android.view.View)
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: long serialVersionUID
kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1
io.reactivex.Completable: io.reactivex.Completable onTerminateDetach()
io.reactivex.internal.operators.flowable.FlowableWindowBoundary: void subscribeActual(org.reactivestreams.Subscriber)
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext getCoroutineContext()
androidx.coordinatorlayout.R$styleable: int FontFamily_fontProviderPackage
com.example.revolut.rates.R$string: int app_name
androidx.core.view.ViewCompat: void setTranslationX(android.view.View,float)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintWidth_percent
androidx.databinding.adapters.ExpandableListViewBindingAdapter: ExpandableListViewBindingAdapter()
kotlin.sequences.SequencesKt___SequencesKt: java.util.HashSet toHashSet(kotlin.sequences.Sequence)
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
io.reactivex.subjects.PublishSubject: boolean hasComplete()
androidx.constraintlayout.solver.widgets.Snapshot: void updateFrom(androidx.constraintlayout.solver.widgets.ConstraintWidget)
kotlinx.coroutines.DispatchedContinuation: java.lang.Object getSuccessfulResult(java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence replaceRange(java.lang.CharSequence,int,int,java.lang.CharSequence)
androidx.media.R$styleable: int FontFamilyFont_ttcIndex
androidx.customview.R$id: int chronometer
dagger.internal.DaggerCollections: java.util.List presizedList(int)
androidx.core.view.PointerIconCompat: int TYPE_NULL
kotlin.text.StringsKt___StringsKt: char reduceRight(java.lang.CharSequence,kotlin.jvm.functions.Function2)
io.reactivex.internal.subscribers.ForEachWhileSubscriber: long serialVersionUID
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(byte[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.example.revolut.rates.R$attr: int coordinatorLayoutStyle
androidx.fragment.app.FragmentStatePagerAdapter: android.os.Parcelable saveState()
androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(short[],java.util.Map,kotlin.jvm.functions.Function1)
okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)
okhttp3.OkHttpClient: java.util.List protocols()
android.support.v4.media.session.MediaSessionCompat$Callback: void onSkipToNext()
androidx.core.view.ViewCompat: int getMeasuredWidthAndState(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable min(java.lang.Comparable[])
io.reactivex.internal.operators.maybe.MaybeEqualSingle: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.subscribers.TestSubscriber: TestSubscriber(org.reactivestreams.Subscriber)
com.example.revolut.rates.R$styleable: int TextAppearance_android_shadowColor
androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableMap: void subscribeActual(io.reactivex.Observer)
kotlin.internal.ProgressionUtilKt
kotlin.jvm.internal.FloatSpreadBuilder: FloatSpreadBuilder(int)
okhttp3.HttpUrl: int querySize()
okio.Buffer$UnsafeCursor: boolean readWrite
io.reactivex.internal.operators.observable.ObservableOnErrorNext: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.single.SingleInternalHelper: io.reactivex.functions.Function toFlowable()
dagger.android.support.R$dimen: int abc_dropdownitem_text_padding_left
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment MIDDLE
io.reactivex.processors.AsyncProcessor: java.lang.Throwable getThrowable()
kotlin.sequences.DropSequence: int access$getCount$p(kotlin.sequences.DropSequence)
kotlinx.coroutines.Deferred$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.Deferred,java.lang.Object,kotlin.jvm.functions.Function2)
io.reactivex.internal.operators.flowable.FlowableCreate: FlowableCreate(io.reactivex.FlowableOnSubscribe,io.reactivex.BackpressureStrategy)
androidx.core.database.CursorKt: java.lang.Long getLongOrNull(android.database.Cursor,int)
io.reactivex.Observable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable,io.reactivex.functions.Function)
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int getVolumeControl()
kotlin.io.FilesKt__UtilsKt: java.io.File copyTo$default(java.io.File,java.io.File,boolean,int,int,java.lang.Object)
androidx.appcompat.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget VALUE_PARAMETER
dagger.android.DaggerFragment_MembersInjector: void injectMembers(dagger.android.DaggerFragment)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence filter(java.lang.CharSequence,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$style
okhttp3.Handshake: boolean equals(java.lang.Object)
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: void invoke(kotlinx.coroutines.selects.SelectClause2,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.selects.SelectBuilderImpl: kotlin.coroutines.CoroutineContext getContext()
io.reactivex.internal.operators.observable.ObservableElementAtMaybe: io.reactivex.Observable fuseToObservable()
androidx.databinding.ObservableFloat: float get()
com.example.revolut.rates.R$styleable: int ViewBackgroundHelper_backgroundTint
io.reactivex.Flowable: io.reactivex.Flowable buffer(long,long,java.util.concurrent.TimeUnit)
com.example.revolut.rates.R$layout: int abc_action_bar_up_container
io.reactivex.internal.operators.observable.ObservableMaterialize
androidx.recyclerview.widget.DiffUtil$ItemCallback: DiffUtil$ItemCallback()
androidx.core.app.NotificationCompat: java.lang.String EXTRA_INFO_TEXT
io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function)
kotlin.jvm.internal.markers.KMutableMap$Entry
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
androidx.loader.content.Loader: void reset()
androidx.appcompat.app.WindowDecorActionBar: WindowDecorActionBar(android.app.Activity,boolean)
kotlinx.coroutines.AbstractContinuation: void resumeWith(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableMapNotification: ObservableMapNotification(io.reactivex.ObservableSource,io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)
okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()
androidx.appcompat.widget.ListPopupWindow: void show()
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable
com.google.gson.JsonNull: com.google.gson.JsonNull INSTANCE
kotlin.collections.ArraysKt___ArraysKt: float[] reversedArray(float[])
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: SwipeRefreshLayout(android.content.Context)
io.reactivex.internal.operators.single.SingleLift: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.ktx.R$styleable
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: int lastIndexOf(java.lang.Object)
androidx.asynclayoutinflater.R$id: int time
androidx.collection.ArraySet: boolean addAll(java.util.Collection)
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
io.reactivex.internal.operators.completable.CompletableCreate: void subscribeActual(io.reactivex.CompletableObserver)
com.example.revolut.rates.R$color: int color_grey_800
io.reactivex.subjects.UnicastSubject: boolean hasComplete()
androidx.appcompat.R$attr: int actionOverflowButtonStyle
androidx.recyclerview.widget.AsyncListUtil$DataCallback: int refreshData()
androidx.legacy.coreui.R$id: int actions
okhttp3.internal.connection.StreamAllocation: okhttp3.Call call
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BIG_INTEGER
kotlin.collections.AbstractMap$values$1: java.util.Iterator iterator()
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: void clear()
androidx.appcompat.widget.ActionBarOverlayLayout: void onWindowSystemUiVisibilityChanged(int)
androidx.viewpager.widget.PagerAdapter: void startUpdate(android.view.ViewGroup)
io.reactivex.internal.fuseable.HasUpstreamPublisher: org.reactivestreams.Publisher source()
androidx.core.util.LongSparseArrayKt: java.util.Iterator valueIterator(android.util.LongSparseArray)
androidx.core.view.MotionEventCompat: int AXIS_TOOL_MAJOR
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem
android.support.v4.media.MediaMetadataCompat$Builder: MediaMetadataCompat$Builder(android.support.v4.media.MediaMetadataCompat)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: float getProgressRotation()
kotlin.text.StringsKt___StringsKt$groupingBy$1: java.util.Iterator sourceIterator()
io.reactivex.Observable: java.lang.Object blockingFirst()
androidx.coordinatorlayout.R$styleable: int GradientColor_android_startColor
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()
androidx.asynclayoutinflater.R$attr: int ttcIndex
androidx.appcompat.view.menu.ActionMenuItem: int getNumericModifiers()
dagger.android.support.R$layout: int notification_template_media_custom
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constrainedWidth
androidx.core.util.LruCacheKt$lruCache$3
androidx.core.view.MenuKt: android.view.MenuItem get(android.view.Menu,int)
android.support.v4.media.RatingCompat: float getPercentRating()
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher: void subscribeActual(io.reactivex.MaybeObserver)
dagger.android.support.R$styleable: int AppCompatTheme_listPopupWindowStyle
io.reactivex.Completable: io.reactivex.Completable retry(io.reactivex.functions.Predicate)
io.reactivex.internal.subscriptions.DeferredScalarSubscription: void clear()
io.reactivex.internal.observers.CallbackCompletableObserver: CallbackCompletableObserver(io.reactivex.functions.Consumer,io.reactivex.functions.Action)
androidx.recyclerview.R$attr
androidx.recyclerview.widget.RecyclerView$SmoothScroller: int getChildPosition(android.view.View)
kotlinx.coroutines.ChildJob: void invoke(java.lang.Throwable)
androidx.media.MediaBrowserServiceCompat: java.lang.String KEY_MEDIA_ITEM
retrofit2.http.HTTP: java.lang.String path()
dagger.android.support.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
io.reactivex.Completable: io.reactivex.Completable doOnSubscribe(io.reactivex.functions.Consumer)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float horizontalWeight
io.reactivex.internal.subscribers.SubscriberResourceWrapper: void request(long)
dagger.android.support.R$color: int abc_search_url_text
androidx.viewpager.R$styleable: int GradientColorItem_android_offset
androidx.legacy.coreui.R$styleable: int[] GradientColor
androidx.appcompat.view.menu.MenuItemImpl: int getGroupId()
androidx.annotation.Size: long multiple()
androidx.core.R$attr: int fontProviderQuery
dagger.android.support.R$id: int withText
kotlin.text.StringsKt__StringsJVMKt: boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean)
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver: long serialVersionUID
io.reactivex.Flowable: java.lang.Iterable blockingMostRecent(java.lang.Object)
dagger.android.DispatchingAndroidInjector_Factory: dagger.android.DispatchingAndroidInjector provideInstance(javax.inject.Provider,javax.inject.Provider)
io.reactivex.observers.BaseTestConsumer: java.util.List errors
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean canChildScrollUp()
androidx.appcompat.view.menu.MenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.constraintlayout.widget.R$attr: int layout_constraintGuide_begin
kotlin.collections.AbstractMap$keys$1: boolean contains(java.lang.Object)
kotlinx.coroutines.channels.ProducerScope
androidx.appcompat.widget.LinearLayoutCompat: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
okio.ByteString: boolean rangeEquals(int,okio.ByteString,int,int)
androidx.recyclerview.R$layout
dagger.android.support.R$string: int abc_capital_off
androidx.appcompat.widget.Toolbar$OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)
kotlin.jvm.Transient
androidx.fragment.app.DialogFragment
androidx.legacy.v4.R$drawable: int notification_bg
androidx.collection.SparseArrayCompat: int size()
androidx.core.ktx.R$drawable: int notification_template_icon_bg
kotlin.jdk7.AutoCloseableKt: void closeFinally(java.lang.AutoCloseable,java.lang.Throwable)
com.google.gson.TypeAdapter: void toJson(java.io.Writer,java.lang.Object)
kotlin.LazyKt__LazyJVMKt: LazyKt__LazyJVMKt()
com.example.revolut.rates.databinding.RatesItemBinding: com.example.revolut.rates.databinding.RatesItemBinding bind(android.view.View,java.lang.Object)
androidx.appcompat.R$attr: int paddingEnd
dagger.internal.MapFactory
dagger.android.support.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
androidx.media.R$styleable: int[] ColorStateListItem
kotlinx.coroutines.JobSupport$HandleExceptionOp: java.lang.Object perform(java.lang.Object)
kotlinx.coroutines.JobKt: void cancelChildren(kotlinx.coroutines.Job,java.lang.Throwable)
androidx.core.ktx.R$integer
androidx.core.view.ViewCompat: int getLabelFor(android.view.View)
dagger.android.support.R$layout: int abc_list_menu_item_checkbox
androidx.appcompat.app.ActionBarDrawerToggle: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
androidx.appcompat.view.SupportActionModeWrapper: void finish()
io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateBy$2
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode PROTOCOL_ERROR
kotlin.TypeCastException: TypeCastException()
io.reactivex.internal.operators.completable.CompletableTimer
okhttp3.internal.http2.PushObserver: boolean onHeaders(int,java.util.List,boolean)
com.google.gson.annotations.Expose: boolean serialize()
com.jakewharton.rxbinding3.core.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.legacy.v4.R$attr: int layout_anchorGravity
androidx.core.R$styleable: int FontFamilyFont_fontStyle
androidx.loader.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidget getViewWidget(android.view.View)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] sliceArray-CFIt9YE(int[],java.util.Collection)
org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition
androidx.viewpager.widget.ViewPager: void computeScroll()
okhttp3.HttpUrl: int pathSize()
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PLAY_FROM_URI
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.app.AppCompatDelegate: void setLocalNightMode(int)
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable
androidx.recyclerview.widget.RecyclerView: void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int)
kotlin.ranges.ULongRange$Companion
kotlin.UShort: boolean equals(java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback
androidx.legacy.v4.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_GENRE
androidx.core.app.NotificationCompat$Style: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(int[],int[])
okhttp3.internal.cache.DiskLruCache$Snapshot: okio.Source getSource(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void jumpToCurrentState()
androidx.core.util.SparseLongArrayKt: void set(android.util.SparseLongArray,int,long)
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(java.lang.Object[],kotlin.jvm.functions.Function2)
androidx.core.app.NotificationCompat$Action: android.app.PendingIntent actionIntent
com.example.revolut.rates.R$styleable: int AnimatedStateListDrawableTransition_android_toId
kotlinx.android.parcel.TypeParceler
kotlinx.coroutines.CancellableContinuationKt: void disposeOnCancellation(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.DisposableHandle)
com.example.revolut.rates.R$styleable: int GradientColorItem_android_offset
dagger.android.support.R$attr: int paddingStart
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PLAY_FROM_SEARCH
io.reactivex.annotations.BackpressureSupport
kotlin.text.CharCategory: kotlin.text.CharCategory TITLECASE_LETTER
io.reactivex.android.plugins.RxAndroidPlugins: io.reactivex.Scheduler onMainThreadScheduler(io.reactivex.Scheduler)
androidx.core.view.MotionEventCompat: int AXIS_RX
io.reactivex.internal.operators.single.SingleMaterialize: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.Flowable: io.reactivex.Flowable switchIfEmpty(org.reactivestreams.Publisher)
kotlin.jvm.internal.Intrinsics: void throwUninitializedProperty(java.lang.String)
androidx.appcompat.app.WindowDecorActionBar: android.content.Context getThemedContext()
androidx.lifecycle.extensions.R$styleable: int GradientColor_android_tileMode
dagger.android.support.R$attr: int maxButtonHeight
kotlin.collections.EmptyList: java.lang.Void set(int,java.lang.Void)
androidx.legacy.coreutils.R$style: int TextAppearance_Compat_Notification_Time
androidx.customview.R$drawable: int notification_action_background
com.example.revolut.rates.data.model.CurrencyResponse: boolean equals(java.lang.Object)
androidx.appcompat.R$anim: int abc_fade_in
androidx.annotation.VisibleForTesting
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.core.provider.FontsContractCompat$Columns
io.reactivex.Observable: io.reactivex.Observable amb(java.lang.Iterable)
kotlinx.coroutines.JobSupport: java.lang.Object awaitInternal$kotlinx_coroutines_core(kotlin.coroutines.Continuation)
androidx.coordinatorlayout.R$id: int right_side
kotlinx.coroutines.channels.Closed: java.lang.Object tryResumeSend(java.lang.Object)
androidx.media.R$style: int Widget_Compat_NotificationActionText
io.reactivex.internal.functions.Functions: io.reactivex.functions.Function toFunction(io.reactivex.functions.Function8)
kotlin.text.CharCategory
androidx.appcompat.app.ActionBarDrawerToggle$Delegate: void setActionBarDescription(int)
io.reactivex.Completable: io.reactivex.Completable never()
kotlin.collections.CharIterator: java.lang.Object next()
io.reactivex.internal.subscribers.ForEachWhileSubscriber: boolean isDisposed()
kotlinx.coroutines.Deferred
androidx.recyclerview.R$styleable: int RecyclerView_android_orientation
io.reactivex.Single: java.lang.Object blockingGet()
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(int)
androidx.core.provider.FontRequest: java.lang.String getIdentifier()
androidx.core.graphics.drawable.IconCompat: java.lang.String mTintModeStr
dagger.android.support.R$style: int Widget_AppCompat_ImageButton
androidx.constraintlayout.solver.widgets.ConstraintWidget: int MATCH_CONSTRAINT_PERCENT
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5: java.util.Iterator iterator()
com.jakewharton.rxbinding3.core.R$style: int TextAppearance_Compat_Notification_Title
androidx.core.app.FrameMetricsAggregator: int COMMAND_INDEX
kotlin.ranges.LongRange: java.lang.Long getEndInclusive()
androidx.appcompat.R$id: int search_go_btn
dagger.android.support.R$styleable: int AppCompatTheme_actionMenuTextColor
io.reactivex.internal.observers.QueueDrainObserver: io.reactivex.internal.fuseable.SimplePlainQueue queue
androidx.viewpager.widget.PagerTabStrip: PagerTabStrip(android.content.Context)
dagger.android.support.R$styleable: int TextAppearance_android_textStyle
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle
android.support.v4.media.session.MediaSessionCompat: void setExtras(android.os.Bundle)
androidx.appcompat.app.AppCompatDialog: void onCreate(android.os.Bundle)
androidx.appcompat.R$drawable: int abc_ic_menu_share_mtrl_alpha
okhttp3.ResponseBody: java.io.InputStream byteStream()
com.example.revolut.rates.R$styleable: int[] AppCompatSeekBar
androidx.drawerlayout.R$drawable: int notification_template_icon_low_bg
io.reactivex.internal.functions.Functions$BoundedConsumer: void accept(org.reactivestreams.Subscription)
kotlin._Assertions: void ENABLED$annotations()
androidx.core.app.SharedElementCallback: void onMapSharedElements(java.util.List,java.util.Map)
android.support.v4.media.session.MediaControllerCompat: int getRatingType()
kotlinx.coroutines.test.TestCoroutineContext: TestCoroutineContext(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.MotionEventCompat: float getAxisValue(android.view.MotionEvent,int)
androidx.viewpager.widget.ViewPager: boolean onInterceptTouchEvent(android.view.MotionEvent)
io.reactivex.disposables.SerialDisposable: boolean set(io.reactivex.disposables.Disposable)
androidx.legacy.coreui.R$layout: int notification_template_part_time
okio.HashingSink: void write(okio.Buffer,long)
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.ClosedRange,long)
kotlin.math.MathKt__MathJVMKt: int roundToInt(float)
io.reactivex.internal.operators.maybe.MaybeObserveOn$ObserveOnMaybeObserver: long serialVersionUID
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: int lastIndexOf(float)
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(int,long,java.util.concurrent.TimeUnit)
kotlin.jvm.internal.ClassReference: void isOpen$annotations()
kotlin.collections.TypeAliasesKt: void ArrayList$annotations()
kotlin.io.FilesKt__FileReadWriteKt: void forEachBlock(java.io.File,int,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7
androidx.media.MediaBrowserServiceCompat: void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompat$Result,android.os.Bundle)
androidx.asynclayoutinflater.R$dimen: int notification_large_icon_width
io.reactivex.internal.operators.single.SingleFlatMapCompletable
com.example.revolut.rates.R$styleable: int AlertDialog_multiChoiceItemLayout
androidx.appcompat.R$color: int button_material_light
kotlin.ranges.IntProgression: kotlin.ranges.IntProgression$Companion Companion
androidx.fragment.R$dimen: int notification_large_icon_height
com.example.revolut.rates.R$styleable: int[] FontFamilyFont
androidx.core.R$styleable: int[] FontFamilyFont
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List reversed-QwZRm1k(long[])
com.example.revolut.rates.R$attr: int paddingTopNoTitle
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: boolean isEmpty()
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ProducerJob buildChannel(kotlin.coroutines.CoroutineContext,int,kotlin.jvm.functions.Function2)
io.reactivex.Flowable: io.reactivex.Flowable buffer(int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(short[],short[],kotlin.jvm.functions.Function2)
androidx.appcompat.app.AlertController$AlertParams: int mIconAttrId
kotlin.jvm.internal.FloatCompanionObject: float getMAX_VALUE()
kotlinx.coroutines.JobSupport: java.lang.Throwable getCompletionCause()
com.google.gson.reflect.TypeToken: java.lang.Class getRawType()
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_DISC_NUMBER
io.reactivex.SingleEmitter: boolean isDisposed()
androidx.core.view.WindowInsetsCompat: int hashCode()
io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher: FlowableFlatMapPublisher(org.reactivestreams.Publisher,io.reactivex.functions.Function,boolean,int,int)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
io.reactivex.internal.subscribers.QueueDrainSubscriber: boolean fastEnter()
kotlinx.coroutines.DispatchedContinuation: void resumeUndispatchedWithException(java.lang.Throwable)
io.reactivex.internal.fuseable.SimplePlainQueue
androidx.core.os.HandlerKt: java.lang.Runnable postAtTime$default(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0,int,java.lang.Object)
kotlin.text.RegexOption: int getMask()
kotlin.collections.ArraysKt___ArraysKt: byte random(byte[],kotlin.random.Random)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(java.lang.Comparable[])
com.google.gson.internal.JavaVersion: int getMajorJavaVersion()
androidx.documentfile.provider.DocumentFile: boolean canWrite()
kotlin.io.FilePathComponents: java.lang.String getRootName()
androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren
androidx.appcompat.widget.ListPopupWindow: void setHeight(int)
io.reactivex.internal.operators.flowable.FlowableCollectSingle: void subscribeActual(io.reactivex.SingleObserver)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1: java.util.Iterator iterator()
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Display4
androidx.annotation.BoolRes
io.reactivex.Maybe: java.lang.Object blockingGet()
io.reactivex.Flowable: io.reactivex.Flowable concatWith(io.reactivex.CompletableSource)
kotlin.coroutines.experimental.CoroutinesKt
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setNumericShortcut(char,int)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2: java.util.Iterator iterator()
okhttp3.internal.http2.Header: okio.ByteString name
kotlin.reflect.KFunction
androidx.constraintlayout.widget.R$attr: int layout_constraintWidth_min
okhttp3.EventListener: void callStart(okhttp3.Call)
io.reactivex.Completable: io.reactivex.Completable hide()
androidx.core.app.NotificationCompat: int PRIORITY_HIGH
androidx.databinding.InverseBindingMethods
kotlin.sequences.FilteringSequence$iterator$1: void setNextItem(java.lang.Object)
okhttp3.internal.connection.RealConnection: boolean isMultiplexed()
dagger.internal.SetFactory$Builder: dagger.internal.SetFactory$Builder addProvider(javax.inject.Provider)
androidx.databinding.ObservableInt: void set(int)
com.example.revolut.rates.R$attr: int textAppearanceSearchResultSubtitle
androidx.fragment.R$dimen: int compat_notification_large_icon_max_height
androidx.appcompat.view.SupportActionModeWrapper: java.lang.CharSequence getSubtitle()
androidx.media.R$id: int text2
androidx.vectordrawable.R$dimen: int compat_button_inset_vertical_material
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getRootX()
androidx.constraintlayout.widget.ConstraintSet: int CHAIN_PACKED
androidx.appcompat.R$style: int Base_Animation_AppCompat_Dialog
androidx.core.view.NestedScrollingParent2: void onNestedPreScroll(android.view.View,int,int,int[],int)
io.reactivex.annotations.Experimental
kotlin.coroutines.experimental.jvm.internal.CoroutineImpl
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.TickerMode: kotlinx.coroutines.channels.TickerMode FIXED_DELAY
androidx.appcompat.app.AppCompatDialog: AppCompatDialog(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)
androidx.documentfile.provider.DocumentFile: boolean isDirectory()
androidx.appcompat.R$styleable: int Toolbar_subtitle
androidx.constraintlayout.widget.R$id: int percent
androidx.core.app.NotificationCompat$Action$Extender
com.example.revolut.rates.view.adapter.CurrenciesAdapter: void access$setCurrentAmount$p(com.example.revolut.rates.view.adapter.CurrenciesAdapter,double)
androidx.lifecycle.ViewModelStoreOwner: androidx.lifecycle.ViewModelStore getViewModelStore()
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.ClosedRange,float)
androidx.recyclerview.widget.ItemTouchHelper: int ACTION_STATE_IDLE
kotlin.collections.EmptyMap
io.reactivex.Completable: io.reactivex.Completable fromFuture(java.util.concurrent.Future)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object indexOf(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.coroutines.Continuation)
okhttp3.Dns: java.util.List lookup(java.lang.String)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setWidthWrapContent(boolean)
com.example.revolut.rates.R$drawable: int abc_ic_menu_cut_mtrl_alpha
dagger.android.support.R$styleable: int AppCompatTheme_actionBarWidgetTheme
dagger.android.support.R$id: int action_bar_root
io.reactivex.internal.operators.single.SingleFlatMapPublisher: SingleFlatMapPublisher(io.reactivex.SingleSource,io.reactivex.functions.Function)
io.reactivex.Observable: io.reactivex.Observable doOnComplete(io.reactivex.functions.Action)
kotlin.io.FilePathComponents: java.util.List component2()
androidx.viewpager.R$style: int TextAppearance_Compat_Notification_Title
androidx.drawerlayout.R$drawable: int notification_template_icon_bg
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput build()
kotlin.jvm.internal.FunctionReferenceImpl: java.lang.String getName()
androidx.appcompat.R$attr: int trackTint
kotlin.coroutines.CoroutineContext$Element
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapMaybeObserver: long serialVersionUID
io.reactivex.observers.BaseTestConsumer: java.lang.String valueAndClass(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeCount: io.reactivex.MaybeSource source()
androidx.databinding.ObservableByte: void set(byte)
androidx.appcompat.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
androidx.media.MediaBrowserServiceCompatApi26$ServiceCompatProxy
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
androidx.appcompat.widget.ListPopupWindow: void setWindowLayoutType(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(int,android.graphics.PorterDuff$Mode)
kotlin.text.Charsets: kotlin.text.Charsets INSTANCE
kotlin.random.Random: int nextInt()
com.example.revolut.rates.R$attr: int submitBackground
kotlin.reflect.KProperty1: java.lang.Object get(java.lang.Object)
dagger.android.support.R$drawable: int abc_btn_check_material
io.reactivex.Flowable: io.reactivex.Flowable skipLast(int)
io.reactivex.Observable: io.reactivex.Completable concatMapCompletable(io.reactivex.functions.Function,int)
okio.BufferedSink: okio.BufferedSink write(byte[])
androidx.appcompat.view.StandaloneActionMode: void finish()
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber: long serialVersionUID
okio.HashingSink: okio.HashingSink sha512(okio.Sink)
androidx.databinding.adapters.ListenerUtil: ListenerUtil()
kotlin.jvm.internal.TypeReference: java.util.List getAnnotations()
androidx.core.widget.CompoundButtonCompat: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
androidx.appcompat.R$id: int search_close_btn
okio.Okio: okio.Sink appendingSink(java.io.File)
kotlin.sequences.MergingSequence$iterator$1: java.util.Iterator getIterator2()
androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)
androidx.appcompat.R$styleable: int AppCompatImageView_tint
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(short[],java.lang.Iterable)
com.example.revolut.rates.R$attr: int listChoiceBackgroundIndicator
kotlin.collections.CollectionsKt__CollectionsKt: int getLastIndex(java.util.List)
androidx.vectordrawable.R$styleable: int GradientColor_android_startY
androidx.core.animation.AnimatorKt$addListener$3: AnimatorKt$addListener$3()
io.reactivex.internal.observers.BlockingObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged: void subscribeActual(io.reactivex.Observer)
kotlin.text.CharsKt__CharJVMKt: boolean isWhitespace(char)
dagger.android.support.R$attr: int titleMarginStart
com.example.revolut.rates.R$color: int material_blue_grey_800
dagger.android.DaggerFragment: void onAttach(android.content.Context)
androidx.appcompat.view.menu.MenuBuilder: void setGroupCheckable(int,boolean,boolean)
dagger.internal.InstanceFactory
androidx.lifecycle.extensions.R$style: int Widget_Support_CoordinatorLayout
androidx.appcompat.R$style: int TextAppearance_AppCompat_Body1
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context)
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1: java.util.Iterator iterator()
kotlin.io.ByteStreamsKt: byte[] readBytes$default(java.io.InputStream,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int[] sortedArray(int[])
com.example.revolut.rates.R$styleable: int Toolbar_titleMarginTop
androidx.core.app.ShareCompat$IntentReader: java.lang.CharSequence getCallingApplicationLabel()
androidx.legacy.coreui.R$attr: int layout_anchor
com.example.revolut.rates.RatesApp$Companion: com.example.revolut.rates.RatesApp getInstance()
androidx.appcompat.R$layout: int notification_action
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1
androidx.core.app.ActivityCompat$PermissionCompatDelegate: boolean onActivityResult(android.app.Activity,int,int,android.content.Intent)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filter(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
io.reactivex.internal.subscriptions.SubscriptionArbiter
androidx.constraintlayout.solver.widgets.ResolutionNode: int REMOVED
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setAllowDataType(java.lang.String,boolean)
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,kotlin.sequences.Sequence)
kotlin.jvm.internal.FunctionReferenceImpl
androidx.appcompat.R$attr: int actionBarWidgetTheme
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean handlesInternalConstraints()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
io.reactivex.subjects.PublishSubject: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.DecorContentParent: void setIcon(int)
io.reactivex.functions.Function7
androidx.core.util.Pair: java.lang.Object first
retrofit2.http.Part: java.lang.String value()
dagger.android.support.R$styleable: int[] Toolbar
kotlin.text.StringsKt__StringsJVMKt: java.lang.String decapitalize(java.lang.String)
com.example.revolut.rates.R$styleable: int MenuItem_android_onClick
io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sequential(int)
androidx.core.app.ShareCompat: android.content.ComponentName getCallingActivity(android.app.Activity)
androidx.recyclerview.widget.RecyclerView$Adapter: void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_NULL_SHA
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int)
androidx.versionedparcelable.VersionedParcel: android.os.IBinder readStrongBinder()
androidx.arch.core.executor.DefaultTaskExecutor: boolean isMainThread()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
androidx.constraintlayout.widget.ConstraintSet: void setGuidelineEnd(int,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set union(java.lang.Iterable,java.lang.Iterable)
com.example.revolut.rates.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
androidx.core.view.MenuItemCompat: android.view.MenuItem setActionView(android.view.MenuItem,int)
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getAlpha()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Float min(kotlin.sequences.Sequence)
androidx.recyclerview.widget.ItemTouchHelper$Callback: int getBoundingBoxMargin()
androidx.appcompat.widget.ListPopupWindow: void setHorizontalOffset(int)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_NULL_SHA
dagger.internal.MapFactory$Builder
androidx.viewpager.R$attr: int fontProviderQuery
androidx.core.internal.view.SupportMenuItem: android.content.res.ColorStateList getIconTintList()
androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)
kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState
androidx.customview.R$drawable: int notification_bg_low_pressed
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber: long serialVersionUID
dagger.android.support.R$attr: int toolbarStyle
androidx.core.util.PatternsCompat
androidx.recyclerview.widget.BatchingListUpdateCallback: void onMoved(int,int)
androidx.appcompat.R$styleable: int ViewBackgroundHelper_backgroundTint
androidx.swiperefreshlayout.widget.CircularProgressDrawable: float getStartTrim()
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget EXPRESSION
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: FingerprintManagerCompat$AuthenticationCallback()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStarted(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.appcompat.app.AlertController$RecycleListView
androidx.legacy.coreui.R$styleable: int GradientColorItem_android_offset
androidx.core.util.Pools$SimplePool
androidx.lifecycle.extensions.R$id: int info
androidx.appcompat.R$styleable: int[] ActionMenuItemView
io.reactivex.internal.operators.completable.CompletableHide: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.internal.operators.maybe.MaybeCount: void subscribeActual(io.reactivex.SingleObserver)
com.example.revolut.rates.R$styleable: int[] LinearLayoutCompat_Layout
io.reactivex.internal.operators.parallel.ParallelReduceFull: ParallelReduceFull(io.reactivex.parallel.ParallelFlowable,io.reactivex.functions.BiFunction)
kotlinx.coroutines.internal.LockFreeLinkedListNode: int tryCondAddNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp)
com.example.revolut.rates.R$layout: int notification_media_action
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setNumericShortcut(char)
androidx.slidingpanelayout.R$drawable: int notification_bg_normal_pressed
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set toSet(java.lang.Iterable)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
io.reactivex.Observable: java.lang.Iterable blockingMostRecent(java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int editorAbsoluteY
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(androidx.loader.content.Loader,java.lang.Object)
androidx.fragment.app.FragmentStatePagerAdapter: void finishUpdate(android.view.ViewGroup)
androidx.viewpager.widget.PagerTabStrip
androidx.viewpager.R$drawable: int notification_tile_bg
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.collection.LongSparseArray: void put(long,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isItemPrefetchEnabled()
androidx.appcompat.R$attr: int drawableSize
com.example.revolut.rates.R$style: int Platform_Widget_AppCompat_Spinner
kotlin.collections.CollectionsKt___CollectionsKt: int count(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ListPopupWindow: void setPromptView(android.view.View)
android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener
dagger.android.support.R$attr: int colorControlHighlight
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewRemoveEvent: android.view.View getChild()
com.example.revolut.rates.R$dimen: int notification_big_circle_margin
kotlin.random.Random$Companion: kotlin.random.Random$Companion INSTANCE
androidx.viewpager.R$dimen: int notification_content_margin_start
androidx.appcompat.R$style: int Widget_AppCompat_ProgressBar
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence)
kotlin.jvm.internal.PropertyReference2Impl: java.lang.String getName()
androidx.constraintlayout.widget.ConstraintHelper: void init(android.util.AttributeSet)
kotlin.reflect.KDeclarationContainer: java.util.Collection getMembers()
okhttp3.internal.Util: void addSuppressedIfPossible(java.lang.Throwable,java.lang.Throwable)
kotlin.ranges.ULongProgression
dagger.Binds
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintGuide_end
androidx.core.widget.TextViewCompat$AutoSizeTextType
androidx.databinding.ViewDataBinding: void setTo(int[],int,int)
androidx.constraintlayout.solver.Metrics: long simpleconstraints
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber: long serialVersionUID
androidx.drawerlayout.R$style: int TextAppearance_Compat_Notification
androidx.databinding.ObservableLong: void set(long)
okhttp3.internal.tls.CertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
androidx.media.app.NotificationCompat$MediaStyle: NotificationCompat$MediaStyle(androidx.core.app.NotificationCompat$Builder)
io.reactivex.Observable: io.reactivex.Flowable toFlowable(io.reactivex.BackpressureStrategy)
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.Flowable: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function,boolean,int)
androidx.appcompat.R$styleable: int ActionBarLayout_android_layout_gravity
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.viewpager.R$id: int tag_transition_group
androidx.slidingpanelayout.R$styleable: int GradientColor_android_endX
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_NOT_AVAILABLE_IN_REGION
kotlin.jvm.internal.CharCompanionObject: char MAX_SURROGATE
androidx.appcompat.R$styleable: int DrawerArrowToggle_barLength
androidx.collection.SparseArrayCompat: void delete(int)
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: boolean isDisposed()
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcel,java.lang.ClassLoader)
androidx.core.content.res.FontResourcesParserCompat$FetchStrategy
kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.CoroutineExceptionHandler,kotlin.coroutines.CoroutineContext)
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber: long serialVersionUID
com.example.revolut.rates.R$styleable: int DrawerArrowToggle_drawableSize
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
io.reactivex.internal.subscribers.BasicFuseableSubscriber: boolean offer(java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIcon(int)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean tryForbidTermination()
androidx.viewpager.widget.ViewPager$LayoutParams: int gravity
androidx.viewpager.R$id: int notification_main_column_container
androidx.core.widget.ListViewAutoScrollHelper: ListViewAutoScrollHelper(android.widget.ListView)
androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
kotlin.UShort: short unbox-impl()
androidx.collection.SimpleArrayMap: SimpleArrayMap()
androidx.core.app.AlarmManagerCompat: void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
com.example.revolut.rates.R$attr: int colorPrimaryDark
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object associateBy(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)
androidx.appcompat.R$id: int normal
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View findViewByPosition(int)
com.example.revolut.rates.R$mipmap
kotlin.ranges.CharRange$Companion: CharRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.drawerlayout.R$attr: int alpha
kotlinx.coroutines.CommonPool: kotlinx.coroutines.CommonPool INSTANCE
androidx.constraintlayout.solver.widgets.ConstraintAnchor
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()
okhttp3.Response: java.lang.String message()
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
kotlin.collections.EmptyList: boolean equals(java.lang.Object)
okio.Utf8: long size(java.lang.String,int,int)
androidx.collection.ArrayMap: ArrayMap(int)
okhttp3.internal.http.HttpCodec: void writeRequestHeaders(okhttp3.Request)
kotlin.collections.GroupingKt__GroupingJVMKt: java.util.Map eachCount(kotlin.collections.Grouping)
io.reactivex.Observable
androidx.legacy.widget.Space: Space(android.content.Context,android.util.AttributeSet)
com.jakewharton.rxbinding3.view.ViewAttachAttachedEvent: int hashCode()
androidx.appcompat.R$styleable: int TextAppearance_android_shadowDx
com.example.revolut.rates.R$styleable: int AppCompatTheme_imageButtonStyle
kotlinx.coroutines.ThreadPoolDispatcherKt: kotlin.coroutines.CoroutineContext newFixedThreadPoolContext$default(int,java.lang.String,kotlinx.coroutines.Job,int,java.lang.Object)
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
androidx.media.AudioAttributesCompat: int CONTENT_TYPE_MUSIC
kotlin.collections.IndexingIterator: boolean hasNext()
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeStepGranularity
kotlinx.coroutines.selects.SelectInstance: boolean isSelected()
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SELF_DISPLAY_NAME
kotlin.text.UStringsKt: kotlin.UInt toUIntOrNull(java.lang.String,int)
kotlin.UShort$Companion: UShort$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.R$id: int tag_unhandled_key_event_manager
androidx.drawerlayout.R$styleable: int[] FontFamily
androidx.media.AudioAttributesCompat: int getLegacyStreamType()
okhttp3.Challenge: java.util.Map authParams()
androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_AUTO
androidx.core.graphics.ColorKt: android.graphics.Color toColor(long)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException(java.lang.String,java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelCoroutine: boolean isClosedForSend()
androidx.drawerlayout.R$dimen: int notification_media_narrow_margin
kotlin.text.MatchGroupCollection: kotlin.text.MatchGroup get(int)
androidx.recyclerview.R$style: int TextAppearance_Compat_Notification_Info
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9(char[])
io.reactivex.Observable: io.reactivex.Observable mergeDelayError(java.lang.Iterable,int,int)
io.reactivex.internal.operators.flowable.FlowableFromPublisher
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_OBJECT
androidx.core.R$styleable: int[] GradientColorItem
androidx.appcompat.R$dimen: int abc_control_inset_material
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.net.URL)
com.jakewharton.rxbinding3.core.R$dimen: int compat_button_padding_horizontal_material
com.example.revolut.rates.viewmodel.CurrenciesViewModel$fetchCurrencies$1: void onNext(java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setIcon(int)
com.example.revolut.rates.R$styleable: int TextAppearance_android_textStyle
dagger.android.support.R$styleable: int Toolbar_collapseIcon
androidx.appcompat.R$styleable: int Toolbar_titleMargins
kotlinx.coroutines.channels.Closed: void resumeSendClosed(kotlinx.coroutines.channels.Closed)
com.example.revolut.rates.R$layout: int abc_action_mode_close_item_material
androidx.core.R$dimen: int notification_small_icon_size_as_large
com.example.revolut.rates.R$styleable: int[] AlertDialog
androidx.appcompat.view.menu.MenuView: int getWindowAnimations()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toMutableList(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode takeAffectedNode(kotlinx.coroutines.internal.OpDescriptor)
androidx.legacy.coreutils.R$style: int TextAppearance_Compat_Notification_Title
kotlinx.coroutines.PoolThread: kotlinx.coroutines.ThreadPoolDispatcher dispatcher
androidx.appcompat.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
io.reactivex.Maybe: io.reactivex.Maybe concatMap(io.reactivex.functions.Function)
androidx.versionedparcelable.VersionedParcel: android.util.Size readSize(android.util.Size,int)
kotlin.collections.CollectionsKt___CollectionsKt: kotlin.Pair partition(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float min(float[])
kotlin.reflect.KProperty2: java.lang.Object get(java.lang.Object,java.lang.Object)
kotlin.io.ByteStreamsKt$iterator$1: int getNextByte()
dagger.android.support.R$styleable: int AppCompatTheme_actionBarStyle
kotlin.reflect.KType: java.util.List getArguments()
androidx.asynclayoutinflater.R$dimen: int notification_media_narrow_margin
androidx.viewpager.R$drawable: int notification_bg_low_pressed
androidx.databinding.ViewDataBinding: ViewDataBinding(java.lang.Object,android.view.View,int)
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: int sourceMode
kotlin.jvm.internal.PropertyReference2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
okio.ForwardingTimeout: long timeoutNanos()
io.reactivex.annotations.Nullable
androidx.customview.R$id: int time
kotlin.ranges.CharProgression$Companion: kotlin.ranges.CharProgression fromClosedRange(char,char,int)
com.example.revolut.rates.R$styleable: int FontFamily_fontProviderFetchTimeout
io.reactivex.internal.subscribers.ForEachWhileSubscriber
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget TYPEALIAS
com.example.revolut.rates.R$drawable: int abc_ratingbar_material
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean setState(int[])
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setColorSchemeColors(int[])
kotlin.sequences.MergingSequence$iterator$1
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object groupByTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Map,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_PARENTAL_CONTROL_RESTRICTED
androidx.appcompat.widget.ActionBarOverlayLayout: void restoreToolbarHierarchyState(android.util.SparseArray)
androidx.coordinatorlayout.R$drawable: int notification_tile_bg
io.reactivex.Observable: io.reactivex.observers.TestObserver test()
androidx.collection.ArrayMap: java.util.Collection values()
androidx.loader.R$styleable: int[] GradientColorItem
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(int,boolean)
androidx.drawerlayout.R$color: int notification_icon_bg_color
androidx.legacy.v4.R$id: int forever
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_ARABIC
io.reactivex.internal.operators.observable.ObservableJoin: ObservableJoin(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
androidx.core.R$style: int TextAppearance_Compat_Notification_Title
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: SwipeRefreshLayout(android.content.Context,android.util.AttributeSet)
com.example.revolut.rates.R$drawable: int abc_btn_borderless_material
kotlin.collections.ArraysKt___ArraysKt: boolean none(long[],kotlin.jvm.functions.Function1)
io.reactivex.internal.disposables.EmptyDisposable: int requestFusion(int)
io.reactivex.internal.fuseable.HasUpstreamObservableSource
dagger.android.support.R$attr: int titleMarginEnd
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
dagger.android.support.DaggerApplication: dagger.android.AndroidInjector applicationInjector()
androidx.drawerlayout.R$style: int TextAppearance_Compat_Notification_Title
androidx.lifecycle.extensions.R$dimen: int notification_right_icon_size
com.example.revolut.rates.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
okio.GzipSink: void flush()
androidx.appcompat.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
kotlinx.coroutines.channels.AbstractChannelKt: java.lang.Object HANDLER_INVOKED
io.reactivex.subjects.MaybeSubject: boolean hasObservers()
io.reactivex.Observable: io.reactivex.Observable mergeDelayError(java.lang.Iterable,int)
androidx.recyclerview.widget.ItemTouchHelper: int LEFT
io.reactivex.internal.operators.flowable.FlowableCollectSingle
kotlin.coroutines.experimental.CoroutineContext$Element
androidx.core.app.AppComponentFactory: android.app.Service instantiateServiceCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent)
io.reactivex.internal.operators.observable.ObservableRepeat: ObservableRepeat(io.reactivex.Observable,long)
androidx.coordinatorlayout.R
io.reactivex.internal.operators.flowable.FlowableConcatArray: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.subscribers.QueueDrainSubscriber: void fastPathEmitMax(java.lang.Object,boolean,io.reactivex.disposables.Disposable)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.channels.ConflatedBroadcastChannel$State INITIAL_STATE
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback: void loadTile(int,int)
io.reactivex.subscribers.TestSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.R$attr: int actionModeBackground
androidx.lifecycle.extensions.R$dimen: int notification_media_narrow_margin
kotlin.io.LinesSequence$iterator$1: java.lang.String next()
androidx.appcompat.widget.ShareActionProvider
okhttp3.Protocol: okhttp3.Protocol H2_PRIOR_KNOWLEDGE
androidx.databinding.adapters.ProgressBarBindingAdapter: ProgressBarBindingAdapter()
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem)
okhttp3.internal.platform.Platform: java.lang.String getPrefix()
androidx.lifecycle.extensions.R$style: int Widget_Compat_NotificationActionContainer
androidx.appcompat.app.WindowDecorActionBar: void setHideOffset(int)
dagger.android.support.R$id: int notification_background
com.example.revolut.rates.R$drawable: int abc_text_select_handle_right_mtrl_light
kotlinx.coroutines.scheduling.NonBlockingContext
androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
androidx.core.util.Pools
androidx.recyclerview.R$drawable: int notification_bg_low_normal
io.reactivex.processors.UnicastProcessor: void onError(java.lang.Throwable)
androidx.coordinatorlayout.R$id: int tag_unhandled_key_event_manager
com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent: int getTotalItemCount()
androidx.appcompat.R$styleable: int ColorStateListItem_android_color
kotlin.collections.BooleanIterator: BooleanIterator()
androidx.collection.SparseArrayCompat: androidx.collection.SparseArrayCompat clone()
dagger.android.support.R$styleable: int SwitchCompat_thumbTextPadding
io.reactivex.FlowableEmitter: void setCancellable(io.reactivex.functions.Cancellable)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onRestoreInstanceState(android.os.Parcelable)
dagger.android.support.R$id: int scrollIndicatorDown
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
dagger.android.support.R$attr: int editTextStyle
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object minBy(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.appcompat.R$styleable: int AppCompatTheme_android_windowAnimationStyle
io.reactivex.internal.operators.observable.ObservableCache: void onNext(java.lang.Object)
kotlin.ranges.URangesKt___URangesKt: byte coerceAtMost-Kr8caGY(byte,byte)
kotlin.collections.MapsKt___MapsKt: java.util.Collection mapNotNullTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1)
io.reactivex.Observable: io.reactivex.Observable join(io.reactivex.ObservableSource,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
dagger.android.support.R$id: int status_bar_latest_event_content
com.example.revolut.rates.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
io.reactivex.internal.operators.flowable.FlowableAnySingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.constraintlayout.widget.ConstraintLayout: void solveLinearSystem(java.lang.String)
io.reactivex.Flowable: io.reactivex.Single elementAtOrError(long)
androidx.viewpager.widget.PagerTitleStrip: void setTextSpacing(int)
io.reactivex.subscribers.SafeSubscriber: SafeSubscriber(org.reactivestreams.Subscriber)
com.example.revolut.rates.di.DaggerAppComponent: com.example.revolut.rates.di.DaggerAppComponent$Builder builder()
androidx.constraintlayout.widget.ConstraintHelper
kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,double)
androidx.viewpager.R$attr: int fontVariationSettings
androidx.appcompat.view.menu.MenuBuilder: void savePresenterStates(android.os.Bundle)
io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer,io.reactivex.functions.Consumer)
io.reactivex.internal.operators.flowable.FlowableRetryPredicate: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.UByteArray: boolean isEmpty-impl(byte[])
androidx.legacy.v4.R$attr: int fontProviderQuery
io.reactivex.Emitter: void onError(java.lang.Throwable)
androidx.media.MediaSessionManager$RemoteUserInfo: int getUid()
android.support.v4.media.RatingCompat: java.lang.Object getRating()
android.support.v4.media.session.MediaControllerCompat$TransportControls: void rewind()
io.reactivex.internal.util.BackpressureHelper: long produced(java.util.concurrent.atomic.AtomicLong,long)
androidx.appcompat.R$attr: int showText
kotlin.ULongArray: boolean removeAll(java.util.Collection)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionProvider(android.view.ActionProvider)
androidx.coordinatorlayout.R$id: int none
androidx.appcompat.R$attr: int contentInsetStartWithNavigation
androidx.databinding.ObservableBoolean: void set(boolean)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context)
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.R$attr: int actionBarPopupTheme
androidx.databinding.CallbackRegistry: java.lang.Object clone()
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1
androidx.databinding.ObservableLong
kotlin.jvm.internal.InlineMarker: void finallyEnd(int)
io.reactivex.internal.operators.completable.CompletableUsing$UsingObserver: long serialVersionUID
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
io.reactivex.internal.subscriptions.BooleanSubscription: BooleanSubscription()
dagger.android.support.R$style: int Base_V23_Theme_AppCompat
okhttp3.Response
okhttp3.internal.http2.Http2Connection$Listener: Http2Connection$Listener()
kotlin.ranges.CharRange
kotlin.Pair: java.lang.Object component2()
kotlin.collections.IntIterator: void remove()
io.reactivex.Single: io.reactivex.Single doAfterSuccess(io.reactivex.functions.Consumer)
kotlinx.coroutines.channels.Send: void completeResumeSend(java.lang.Object)
okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(java.security.cert.X509Certificate[])
kotlinx.coroutines.channels.ConflatedChannel: boolean isBufferAlwaysEmpty()
androidx.fragment.app.FragmentTabHost: FragmentTabHost(android.content.Context,android.util.AttributeSet)
androidx.core.app.NotificationCompat$Action$Extender: androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Builder)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
androidx.core.view.accessibility.AccessibilityRecordCompat: void recycle()
androidx.customview.widget.ViewDragHelper$Callback: int clampViewPositionVertical(android.view.View,int,int)
kotlin.KotlinVersion: java.lang.String toString()
okhttp3.internal.platform.Platform: boolean isConscryptPreferred()
kotlin.coroutines.experimental.Continuation: kotlin.coroutines.experimental.CoroutineContext getContext()
androidx.legacy.coreutils.R$styleable: int[] ColorStateListItem
androidx.appcompat.app.ActionBarDrawerToggle: void setDrawerArrowDrawable(androidx.appcompat.graphics.drawable.DrawerArrowDrawable)
androidx.legacy.v4.R$id: int actions
kotlinx.coroutines.JobKt: java.lang.Object joinChildren(kotlinx.coroutines.Job,kotlin.coroutines.Continuation)
androidx.media.app.NotificationCompat$MediaStyle: androidx.media.app.NotificationCompat$MediaStyle setShowActionsInCompactView(int[])
com.example.revolut.rates.common.StringToDoubleKt
kotlin.io.FilesKt__UtilsKt: java.io.File relativeToOrSelf(java.io.File,java.io.File)
com.google.gson.internal.$Gson$Types: java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type)
com.example.revolut.rates.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat)
androidx.legacy.coreutils.R$layout: int notification_template_icon_group
kotlin.text.StringsKt___StringsKt: java.lang.String takeLastWhile(java.lang.String,kotlin.jvm.functions.Function1)
kotlin.random.Random: kotlin.random.Random$Default Default
kotlin.ranges.RangesKt___RangesKt: short coerceAtMost(short,short)
io.reactivex.internal.subscribers.BoundedSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void setSpanIndexCacheEnabled(boolean)
androidx.databinding.library.baseAdapters.BuildConfig: boolean DEBUG
io.reactivex.Completable: io.reactivex.Completable observeOn(io.reactivex.Scheduler)
androidx.media.VolumeProviderCompat$Callback: VolumeProviderCompat$Callback()
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChangeEvent
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionBarTabStyle
androidx.appcompat.R$drawable: int abc_ic_voice_search_api_material
androidx.loader.R$dimen: int notification_subtext_size
okio.ForwardingTimeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
io.reactivex.internal.operators.maybe.MaybeCache: void onComplete()
com.jakewharton.rxbinding3.view.ViewScrollChangeEvent: int component2()
io.reactivex.internal.operators.maybe.MaybePeek
kotlin.collections.IndexedValue: int hashCode()
androidx.appcompat.widget.AppCompatButton: void onLayout(boolean,int,int,int,int)
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_DISPLAY_DESCRIPTION
kotlinx.coroutines.CompletableDeferred$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.CompletableDeferred,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.collection.LongSparseArray: int indexOfKey(long)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void assertNotInLayoutOrScroll(java.lang.String)
dagger.android.BroadcastReceiverKey
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(java.lang.Object[],java.lang.Iterable,kotlin.jvm.functions.Function2)
androidx.core.widget.AutoScrollHelper: boolean canTargetScrollVertically(int)
io.reactivex.internal.operators.single.SingleZipArray
io.reactivex.Flowable: io.reactivex.Flowable defaultIfEmpty(java.lang.Object)
androidx.databinding.ViewDataBinding: java.lang.Object getFromList(android.util.SparseArray,int)
androidx.viewpager.R$styleable: int ColorStateListItem_alpha
androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener
kotlin.text.StringsKt__StringsKt: boolean hasSurrogatePairAt(java.lang.CharSequence,int)
io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
androidx.constraintlayout.solver.widgets.Barrier: void resetResolutionNodes()
androidx.databinding.adapters.ViewBindingAdapter: void setRequiresFadingEdge(android.view.View,int)
io.reactivex.Single: io.reactivex.Flowable repeatWhen(io.reactivex.functions.Function)
android.support.v4.media.session.IMediaSession: void fastForward()
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
io.reactivex.internal.operators.observable.ObservableZip: ObservableZip(io.reactivex.ObservableSource[],java.lang.Iterable,io.reactivex.functions.Function,int,boolean)
androidx.constraintlayout.widget.Placeholder: android.view.View getContent()
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(int,int)
dagger.android.support.DaggerAppCompatActivity: dagger.android.AndroidInjector supportFragmentInjector()
androidx.appcompat.widget.AppCompatTextView: void onLayout(boolean,int,int,int,int)
androidx.core.widget.ScrollerCompat: int getFinalX()
io.reactivex.functions.Predicate: boolean test(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(long[],kotlin.jvm.functions.Function2)
androidx.databinding.adapters.AdapterViewBindingAdapter$OnItemSelectedComponentListener
androidx.slidingpanelayout.R
kotlinx.coroutines.Job: kotlin.sequences.Sequence getChildren()
io.reactivex.internal.operators.parallel.ParallelRunOn: void subscribe(org.reactivestreams.Subscriber[])
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_LIST_ITEM
com.example.revolut.rates.R$styleable: int TextAppearance_android_shadowDx
androidx.loader.content.CursorLoader: void setSortOrder(java.lang.String)
com.example.revolut.rates.R$style: int TextAppearance_Compat_Notification_Info_Media
dagger.android.support.R$style: int Base_ThemeOverlay_AppCompat_Dialog
kotlin.collections.CollectionsKt___CollectionsKt: void sortByDescending(java.util.List,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.maybe.MaybeFromRunnable: void subscribeActual(io.reactivex.MaybeObserver)
androidx.constraintlayout.widget.R$styleable: int LinearConstraintLayout_android_orientation
androidx.drawerlayout.widget.DrawerLayout$SavedState: DrawerLayout$SavedState(android.os.Parcelable)
dagger.android.support.R$attr: int track
kotlin.text.StringsKt___StringsKt: kotlin.Pair partition(java.lang.String,kotlin.jvm.functions.Function1)
androidx.fragment.R$id: int icon
androidx.drawerlayout.R$styleable: int FontFamilyFont_android_ttcIndex
com.example.revolut.rates.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: long serialVersionUID
org.jetbrains.annotations.PropertyKey: java.lang.String resourceBundle()
androidx.appcompat.R$attr: int actionMenuTextColor
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object associateByTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat: int getPaddingEnd(android.view.View)
androidx.appcompat.view.menu.BaseMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
io.reactivex.internal.fuseable.HasUpstreamSingleSource
kotlinx.coroutines.channels.TickerMode: kotlinx.coroutines.channels.TickerMode FIXED_PERIOD
androidx.asynclayoutinflater.R$string
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(float[])
kotlin.text.DelimitedRangesSequence$iterator$1: java.lang.Object next()
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7
androidx.appcompat.widget.TintTypedArray: int getInteger(int,int)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateByTo$1
io.reactivex.internal.functions.Functions: io.reactivex.functions.Function toFunction(io.reactivex.functions.Function6)
androidx.fragment.R$id: int async
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object singleOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.annotation.Dimension: int DP
androidx.core.ktx.R$id: int italic
com.example.revolut.rates.R$drawable: int abc_textfield_activated_mtrl_alpha
kotlin.collections.ArraysKt___ArraysKt: int sumBy(byte[],kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View,int)
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type)
kotlinx.coroutines.JobKt
androidx.drawerlayout.R$styleable: int FontFamilyFont_fontStyle
kotlin.collections.MapsKt___MapsKt: MapsKt___MapsKt()
kotlin.jvm.internal.PropertyReference: PropertyReference()
androidx.vectordrawable.R$id: int left
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setEnabled(boolean)
dagger.android.support.R$styleable: int AppCompatTheme_actionBarDivider
com.example.revolut.rates.R$string: int abc_font_family_display_1_material
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean collapseActionView()
androidx.core.view.PointerIconCompat: int TYPE_VERTICAL_DOUBLE_ARROW
androidx.appcompat.view.menu.MenuBuilder: int findGroupIndex(int,int)
androidx.constraintlayout.solver.widgets.Guideline: void setMinimumPosition(int)
okio.ForwardingSource: okio.Source delegate()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setHotspot(float,float)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Inverse
kotlin.collections.CollectionsKt___CollectionsKt: int indexOfLast(java.util.List,kotlin.jvm.functions.Function1)
androidx.appcompat.view.ContextThemeWrapper
kotlin.jvm.internal.TypeIntrinsics: java.util.Set asMutableSet(java.lang.Object,java.lang.String)
kotlin.UByteArray: boolean equals-impl0(byte[],byte[])
kotlin.jvm.internal.MutablePropertyReference1Impl: kotlin.reflect.KDeclarationContainer getOwner()
kotlinx.coroutines.scheduling.CoroutineScheduler: void close()
com.example.revolut.rates.R$styleable: int[] ConstraintLayout_Layout
dagger.android.support.R$attr: int textColorSearchUrl
io.reactivex.subjects.AsyncSubject: void onError(java.lang.Throwable)
androidx.core.R$style
io.reactivex.internal.operators.flowable.FlowableSingleMaybe: void subscribeActual(io.reactivex.MaybeObserver)
kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1: java.util.Iterator iterator()
androidx.databinding.ViewDataBinding: androidx.databinding.ViewDataBinding inflateInternal(android.view.LayoutInflater,int,android.view.ViewGroup,boolean,java.lang.Object)
androidx.appcompat.widget.ListPopupWindow: void postShow()
okhttp3.internal.connection.ConnectInterceptor
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
kotlin.collections.MapsKt__MapsKt: java.util.Map plus(java.util.Map,kotlin.sequences.Sequence)
androidx.coordinatorlayout.R$id: int bottom
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_ttcIndex
androidx.appcompat.R$drawable: int abc_ic_ab_back_material
androidx.loader.R$styleable: int ColorStateListItem_alpha
io.reactivex.internal.util.LinkedArrayList: java.lang.Object[] head()
androidx.appcompat.R$id: int action_menu_divider
androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)
androidx.appcompat.R$id: int tabMode
androidx.appcompat.R$styleable: int AppCompatTheme_buttonBarStyle
kotlin.collections.ArraysKt___ArraysKt: boolean none(short[],kotlin.jvm.functions.Function1)
dagger.android.support.R$styleable: int AppCompatTheme_controlBackground
androidx.core.util.SparseBooleanArrayKt: void forEach(android.util.SparseBooleanArray,kotlin.jvm.functions.Function2)
androidx.core.internal.view.SupportMenuItem: int getAlphabeticModifiers()
android.support.v4.media.RatingCompat: android.support.v4.media.RatingCompat newPercentageRating(float)
okhttp3.internal.connection.RouteSelector: boolean hasNext()
io.reactivex.CompletableTransformer: io.reactivex.CompletableSource apply(io.reactivex.Completable)
io.reactivex.Observable: io.reactivex.Observable window(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)
androidx.appcompat.view.SupportActionModeWrapper: android.view.Menu getMenu()
androidx.core.animation.AnimatorKt$addPauseListener$listener$1: AnimatorKt$addPauseListener$listener$1(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$Action$Builder: android.os.Bundle getExtras()
androidx.appcompat.R$color: int background_floating_material_dark
kotlin.reflect.KTypeProjection$Companion: kotlin.reflect.KTypeProjection contravariant(kotlin.reflect.KType)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.Send takeFirstSendOrPeekClosed()
okio.ByteString: okio.ByteString of(java.nio.ByteBuffer)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA256
com.example.revolut.rates.R$style: int Base_V22_Theme_AppCompat_Light
androidx.core.graphics.PathParser: void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
kotlin.sequences.SequencesKt___SequencesKt: double sumOfDouble(kotlin.sequences.Sequence)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object lastOrNull(java.lang.Object[])
androidx.constraintlayout.solver.SolverVariable: int STRENGTH_LOW
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: long serialVersionUID
kotlin.sequences.TakeSequence
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2)
okhttp3.Dispatcher: java.util.List queuedCalls()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumWidth()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: boolean isHierarchical()
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_startY
androidx.core.app.AppOpsManagerCompat: int MODE_ERRORED
dagger.android.support.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(double[],int)
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_START
androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
com.example.revolut.rates.R$id: int right_side
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(long[],long)
androidx.core.widget.ScrollerCompat: void startScroll(int,int,int,int,int)
kotlinx.coroutines.Job: java.util.concurrent.CancellationException getCancellationException()
io.reactivex.internal.operators.observable.ObservablePublish$InnerDisposable: long serialVersionUID
androidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()
com.jakewharton.rxbinding3.view.MenuItemActionViewExpandEvent: MenuItemActionViewExpandEvent(android.view.MenuItem)
androidx.core.app.NotificationCompat$WearableExtender: int getContentIcon()
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object pollSelectInternal(kotlinx.coroutines.selects.SelectInstance)
io.reactivex.internal.operators.maybe.MaybeSubscribeOn: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.observers.ResumeSingleObserver: void onSuccess(java.lang.Object)
androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)
androidx.appcompat.R$attr: int alertDialogCenterButtons
dagger.android.support.R$color: int abc_tint_btn_checkable
androidx.databinding.adapters.CompoundButtonBindingAdapter: CompoundButtonBindingAdapter()
io.reactivex.schedulers.Timed: java.lang.Object value()
io.reactivex.internal.operators.observable.ObservableSkipUntil: ObservableSkipUntil(io.reactivex.ObservableSource,io.reactivex.ObservableSource)
kotlinx.coroutines.timeunit.TimeUnitKt: void TimeUnit$annotations()
androidx.appcompat.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
androidx.appcompat.app.AlertDialog: void setTitle(java.lang.CharSequence)
kotlin.jvm.internal.Intrinsics
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean isTitleOptional()
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_endY
androidx.appcompat.app.AlertController$AlertParams: java.lang.String mLabelColumn
kotlin.io.FilesKt__FileTreeWalkKt: kotlin.io.FileTreeWalk walkTopDown(java.io.File)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.drawerlayout.R$style
androidx.lifecycle.MutableLiveData
okhttp3.internal.http2.Http2Connection$Listener: void onSettings(okhttp3.internal.http2.Http2Connection)
androidx.swiperefreshlayout.R$id: int chronometer
io.reactivex.internal.observers.ConsumerSingleObserver: void onError(java.lang.Throwable)
kotlin.ranges.RangesKt___RangesKt: java.lang.Comparable coerceIn(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable
androidx.recyclerview.widget.SortedList$BatchedCallback: void onChanged(int,int,java.lang.Object)
androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$1: void onTransitionCancel(android.transition.Transition)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
kotlin.text.Typography: char lowDoubleQuote
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightEndSubscriber: long serialVersionUID
io.reactivex.Observable: io.reactivex.Observable onErrorResumeNext(io.reactivex.functions.Function)
io.reactivex.subscribers.DisposableSubscriber: DisposableSubscriber()
io.reactivex.internal.operators.flowable.FlowableReplay: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.sequences.SequencesKt___SequencesKt: boolean any(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.constraintlayout.widget.ConstraintHelper: void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
io.reactivex.FlowableOperator: org.reactivestreams.Subscriber apply(org.reactivestreams.Subscriber)
androidx.asynclayoutinflater.R$dimen: int compat_button_inset_horizontal_material
io.reactivex.internal.util.LinkedArrayList: int size()
androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener: void onPanelOpened(android.view.View)
com.example.revolut.rates.R$id: int notification_main_column
androidx.core.view.MenuKt$iterator$1: android.view.MenuItem next()
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder setSemanticAction(int)
androidx.core.app.NotificationCompat$InboxStyle: androidx.core.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence)
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom
kotlin.Result: boolean isSuccess-impl(java.lang.Object)
io.reactivex.internal.operators.single.SingleDelay: SingleDelay(io.reactivex.SingleSource,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
androidx.legacy.coreui.R$attr: int layout_keyline
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder pingInterval(java.time.Duration)
io.reactivex.parallel.ParallelFlowableConverter
io.reactivex.internal.operators.completable.CompletableMergeIterable
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean)
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int)
okio.Buffer: okio.ByteString sha256()
androidx.drawerlayout.widget.DrawerLayout: boolean drawChild(android.graphics.Canvas,android.view.View,long)
com.example.revolut.rates.R$dimen: int abc_select_dialog_padding_start_material
androidx.core.ktx.R$style: int TextAppearance_Compat_Notification_Title
androidx.recyclerview.widget.RecyclerView: void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
androidx.loader.R$id: int tag_unhandled_key_listeners
kotlinx.coroutines.scheduling.TaskMode: kotlinx.coroutines.scheduling.TaskMode valueOf(java.lang.String)
com.example.revolut.rates.R$attr: int subtitleTextStyle
androidx.appcompat.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect)
kotlin.collections.ULongIterator: kotlin.ULong next()
com.example.revolut.rates.R$drawable: int abc_seekbar_thumb_material
com.example.revolut.rates.R$layout: int abc_select_dialog_material
com.google.gson.Gson: void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)
dagger.android.support.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
androidx.slidingpanelayout.R$color: int ripple_material_light
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
dagger.android.DaggerContentProvider: boolean onCreate()
androidx.appcompat.R$color: int material_grey_50
androidx.core.animation.AnimatorKt$addListener$listener$1: void onAnimationEnd(android.animation.Animator)
kotlin.jvm.internal.FunctionReference
androidx.appcompat.widget.ForwardingListener: boolean onForwardingStopped()
dagger.android.support.R$id: int right_side
io.reactivex.internal.subscribers.BoundedSubscriber
kotlin.collections.unsigned.UArraysKt___UArraysKt: void indices$annotations(long[])
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getMinimumHeight()
okhttp3.Response$Builder: okhttp3.Response$Builder priorResponse(okhttp3.Response)
androidx.core.internal.view.SupportMenu: int USER_SHIFT
kotlinx.coroutines.YieldKt: java.lang.Object yield(kotlin.coroutines.Continuation)
com.google.gson.stream.JsonReader: java.lang.String getPath()
okhttp3.Challenge: java.nio.charset.Charset charset()
okhttp3.internal.NamedRunnable
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(byte[],kotlin.jvm.functions.Function1)
com.jakewharton.rxbinding3.widget.AdapterViewItemClickEvent: com.jakewharton.rxbinding3.widget.AdapterViewItemClickEvent copy$default(com.jakewharton.rxbinding3.widget.AdapterViewItemClickEvent,android.widget.AdapterView,android.view.View,int,long,int,java.lang.Object)
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality UNDEFINED
dagger.android.support.R$color: int foreground_material_light
androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup: int[] mGroupDimensions
androidx.core.widget.ScrollerCompat: int getCurrX()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener)
io.reactivex.disposables.CompositeDisposable
kotlin.InitializedLazyImpl: java.lang.Object getValue()
dagger.android.DispatchingAndroidInjector_Factory: dagger.android.DispatchingAndroidInjector_Factory create(javax.inject.Provider,javax.inject.Provider)
kotlin.contracts.Effect
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter endArray()
androidx.recyclerview.widget.AsyncListUtil$DataCallback: AsyncListUtil$DataCallback()
androidx.appcompat.R$drawable: int abc_ic_star_half_black_16dp
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void run()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(int,int)
androidx.lifecycle.LifecycleRegistry: int getObserverCount()
kotlinx.coroutines.internal.ThreadSafeHeap: void clear()
okhttp3.OkHttpClient: boolean followSslRedirects()
dagger.android.support.R$drawable: int notification_bg
kotlinx.coroutines.internal.LockFreeMPSCQueue: boolean isEmpty()
androidx.recyclerview.R$styleable: int[] CoordinatorLayout_Layout
com.google.gson.internal.reflect.ReflectionAccessor: ReflectionAccessor()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void performCompletion()
androidx.core.ktx.R$styleable: int FontFamilyFont_fontWeight
dagger.android.support.R$styleable: int ViewStubCompat_android_id
androidx.appcompat.R$drawable: int abc_textfield_search_default_mtrl_alpha
androidx.databinding.ObservableDouble: double get()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(java.lang.Iterable,io.reactivex.functions.Function,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$sumBy$1: ChannelsKt__Channels_commonKt$sumBy$1(kotlin.coroutines.Continuation)
androidx.media.R$id: int icon
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper
io.reactivex.Maybe: io.reactivex.Maybe retry(io.reactivex.functions.BiPredicate)
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,boolean)
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Subhead
com.example.revolut.rates.R$styleable: int ActionMenuItemView_android_minWidth
com.example.revolut.rates.R$id: int search_go_btn
androidx.slidingpanelayout.R$dimen: int notification_action_icon_size
io.reactivex.internal.operators.observable.ObservableLift: void subscribeActual(io.reactivex.Observer)
androidx.media.AudioAttributesCompat: java.lang.Object unwrap()
kotlin.jvm.internal.Ref$ShortRef: java.lang.String toString()
io.reactivex.subjects.CompletableSubject: io.reactivex.subjects.CompletableSubject create()
dagger.android.support.R$id: int scrollIndicatorUp
io.reactivex.internal.schedulers.SchedulerMultiWorkerSupport: void createWorkers(int,io.reactivex.internal.schedulers.SchedulerMultiWorkerSupport$WorkerCallback)
com.example.revolut.rates.R$styleable: int ActionBar_backgroundSplit
androidx.core.R$attr: int fontProviderAuthority
androidx.appcompat.widget.LinearLayoutCompat: boolean isBaselineAligned()
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertEmpty()
androidx.legacy.v4.R$attr: int fontProviderAuthority
androidx.databinding.BaseObservableField: BaseObservableField(androidx.databinding.Observable[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double getOrNull(double[],int)
io.reactivex.Observable: io.reactivex.Maybe firstElement()
androidx.media.R$styleable: int ColorStateListItem_alpha
kotlinx.coroutines.EventLoopBase$DelayedTask: int compareTo(java.lang.Object)
dagger.android.support.R$styleable: int ActionBar_icon
kotlin.collections.AbstractMap$Companion: int entryHashCode$kotlin_stdlib(java.util.Map$Entry)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List zip(java.lang.Iterable,java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlinx.coroutines.ChildContinuation: void invoke(java.lang.Throwable)
androidx.databinding.library.BuildConfig: java.lang.String VERSION_NAME
io.reactivex.annotations.BackpressureSupport: io.reactivex.annotations.BackpressureKind value()
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence dropLast(java.lang.CharSequence,int)
dagger.android.support.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
androidx.appcompat.view.WindowCallbackWrapper: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void connectCircularConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int)
androidx.coordinatorlayout.R$layout: int notification_template_part_time
androidx.core.view.PointerIconCompat: int TYPE_ZOOM_OUT
androidx.appcompat.widget.ActionBarContextView: boolean isOverflowMenuShowing()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResume(java.lang.Object,java.lang.Object)
androidx.customview.R$attr: int fontProviderQuery
io.reactivex.internal.observers.QueueDrainObserver: io.reactivex.Observer downstream
kotlinx.coroutines.channels.SendElement: void resumeSendClosed(kotlinx.coroutines.channels.Closed)
dagger.android.support.R$id: int home
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void measureChildWithMargins(android.view.View,int,int)
io.reactivex.internal.operators.completable.CompletableDefer: void subscribeActual(io.reactivex.CompletableObserver)
androidx.asynclayoutinflater.R$drawable: int notification_bg_normal_pressed
kotlinx.coroutines.channels.AbstractChannel: void onReceiveEnqueued()
com.example.revolut.rates.R$style: int CurrencyNameStyle
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat()
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(short[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(double[],kotlin.jvm.functions.Function2)
dagger.android.support.R$styleable: int MenuItem_showAsAction
com.example.revolut.rates.R$attr: int imageButtonStyle
androidx.recyclerview.widget.ItemTouchHelper$Callback: float getSwipeEscapeVelocity(float)
android.support.v4.os.ResultReceiver
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView
com.example.revolut.rates.R$styleable: int GradientColor_android_endY
androidx.customview.R$id: int blocking
androidx.appcompat.app.WindowDecorActionBar: void onWindowVisibilityChanged(int)
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable: ObservableConcatWithCompletable(io.reactivex.Observable,io.reactivex.CompletableSource)
io.reactivex.internal.operators.flowable.FlowableCollect$CollectSubscriber: long serialVersionUID
kotlinx.coroutines.internal.LockFreeMPSCQueueCore$Companion: long access$wo(kotlinx.coroutines.internal.LockFreeMPSCQueueCore$Companion,long,long)
dagger.android.support.R$styleable: int AppCompatTheme_selectableItemBackground
android.support.v4.media.session.IMediaSession: void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int)
dagger.android.support.R$attr: int tickMarkTint
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_statusBarBackground
androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle: android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
com.jakewharton.rxbinding3.widget.ToolbarNavigationClickObservable: ToolbarNavigationClickObservable(android.widget.Toolbar)
androidx.appcompat.R$style: int Widget_AppCompat_Light_PopupMenu
androidx.appcompat.view.menu.ListMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.customview.widget.ViewDragHelper: int getViewDragState()
kotlin.jvm.internal.MutablePropertyReference: MutablePropertyReference()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_NULL_SHA
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)
com.example.revolut.rates.R$styleable: int RecyclerView_stackFromEnd
androidx.loader.content.CursorLoader: void deliverResult(android.database.Cursor)
dagger.android.support.R$id: int action_container
androidx.lifecycle.extensions.R$id: int tag_unhandled_key_listeners
com.example.revolut.rates.view.adapter.CurrenciesAdapter: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.appcompat.R$styleable: int CompoundButton_buttonTint
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer lastOrNull(int[])
androidx.core.graphics.MatrixKt: android.graphics.Matrix times(android.graphics.Matrix,android.graphics.Matrix)
io.reactivex.internal.operators.completable.CompletableDoFinally: void subscribeActual(io.reactivex.CompletableObserver)
androidx.asynclayoutinflater.R
kotlin.text.StringsKt__StringsKt: kotlin.Pair findLastAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean)
okio.Timeout: Timeout()
okio.ByteString: int indexOf(byte[])
kotlinx.coroutines.channels.ActorKt: kotlinx.coroutines.channels.SendChannel actor$default(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlinx.coroutines.Job,kotlin.jvm.functions.Function2,int,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableCountSingle: io.reactivex.Observable fuseToObservable()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent: int component5()
androidx.appcompat.widget.AbsActionBarView: boolean onTouchEvent(android.view.MotionEvent)
dagger.android.support.FragmentKey
kotlin.collections.ShortIterator: java.lang.Short next()
dagger.android.support.R$dimen: int hint_pressed_alpha_material_dark
io.reactivex.processors.ReplayProcessor: void subscribeActual(org.reactivestreams.Subscriber)
okhttp3.internal.connection.RealConnection: boolean noNewStreams
androidx.appcompat.widget.DecorContentParent: void saveToolbarHierarchyState(android.util.SparseArray)
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: java.util.Iterator iterator()
io.reactivex.internal.operators.parallel.ParallelCollect: void subscribe(org.reactivestreams.Subscriber[])
androidx.appcompat.R$styleable: int GradientColorItem_android_offset
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(byte[])
kotlinx.coroutines.CoroutineContextKt
com.example.revolut.rates.R$styleable: int AppCompatTheme_alertDialogCenterButtons
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
androidx.vectordrawable.R$style: int Widget_Support_CoordinatorLayout
kotlin.collections.UArraysKt: java.lang.String contentToString--ajY-9A(int[])
io.reactivex.Observable: io.reactivex.Observable zipWith(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction,boolean)
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe
androidx.fragment.app.Fragment: void setTargetFragment(androidx.fragment.app.Fragment,int)
kotlinx.coroutines.selects.SelectKt
retrofit2.Response: java.lang.String toString()
okhttp3.Call: okio.Timeout timeout()
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trimStart(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
androidx.appcompat.R$styleable: int AppCompatTheme_colorAccent
okhttp3.Route: boolean equals(java.lang.Object)
androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)
androidx.constraintlayout.widget.ConstraintSet: int UNSET
androidx.legacy.coreui.R$attr: int fontStyle
androidx.appcompat.R$attr: int spinnerStyle
com.example.revolut.rates.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
androidx.core.graphics.ColorUtils: int calculateMinimumAlpha(int,int,float)
io.reactivex.internal.operators.maybe.MaybeZipArray: MaybeZipArray(io.reactivex.MaybeSource[],io.reactivex.functions.Function)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setAlphabeticShortcut(char)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber: long serialVersionUID
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function8)
io.reactivex.subjects.Subject: boolean hasObservers()
androidx.legacy.coreutils.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.media.R$attr
kotlin.collections.ULongIterator
androidx.appcompat.text.AllCapsTransformationMethod
kotlin.ranges.CharRange: boolean isEmpty()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintLeft_toLeftOf
dagger.android.support.R$attr: int panelMenuListWidth
io.reactivex.internal.observers.SubscriberCompletableObserver: void onComplete()
androidx.fragment.app.Fragment: java.lang.String getTag()
androidx.core.util.LruCacheKt
okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
com.google.gson.stream.JsonReader: long nextLong()
dagger.android.support.R$dimen: int abc_text_size_headline_material
kotlin.math.MathKt__MathJVMKt: void absoluteValue$annotations(long)
androidx.appcompat.R$id: int scrollView
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(java.lang.Object[])
com.example.revolut.rates.R$attr: int layout_constraintWidth_min
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9: java.util.Iterator iterator()
com.example.revolut.rates.R$dimen: int notification_top_pad
io.reactivex.internal.operators.maybe.MaybeHide: MaybeHide(io.reactivex.MaybeSource)
com.example.revolut.rates.R$styleable: int AppCompatTextView_autoSizeMinTextSize
okio.BufferedSink: okio.BufferedSink writeShort(int)
androidx.appcompat.view.menu.MenuItemImpl: boolean isEnabled()
androidx.loader.R$dimen
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean onStateChange(int[])
androidx.asynclayoutinflater.R$styleable: int FontFamily_fontProviderFetchStrategy
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KClass createKotlinClass(java.lang.Class)
androidx.print.PrintHelper: int getScaleMode()
androidx.core.view.ViewCompat: int getOverScrollMode(android.view.View)
androidx.appcompat.R$styleable: int AppCompatTheme_buttonBarButtonStyle
kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)
kotlinx.coroutines.scheduling.NanoTimeSource: kotlinx.coroutines.scheduling.NanoTimeSource INSTANCE
android.support.v4.media.session.MediaSessionCompat: java.lang.Object getMediaSession()
androidx.appcompat.app.AppCompatActivity: boolean supportRequestWindowFeature(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] reversedArray(java.lang.Object[])
androidx.vectordrawable.R$string
com.example.revolut.rates.R$style: int Widget_AppCompat_ActionMode
io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher
kotlin.jvm.functions.Function0: java.lang.Object invoke()
androidx.appcompat.R$anim: int abc_popup_enter
retrofit2.Response: okhttp3.ResponseBody errorBody()
androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
io.reactivex.internal.operators.single.SingleHide: SingleHide(io.reactivex.SingleSource)
kotlin.text.RegexOption
androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList
androidx.core.R$styleable: int GradientColor_android_tileMode
androidx.versionedparcelable.VersionedParcel: void writeSet(java.util.Set,int)
org.intellij.lang.annotations.Flow
okio.HashingSource: okio.HashingSource hmacSha1(okio.Source,okio.ByteString)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$sumByDouble$1: ChannelsKt__Channels_commonKt$sumByDouble$1(kotlin.coroutines.Continuation)
kotlin.internal.RequireKotlin
okio.InflaterSource: boolean refill()
androidx.drawerlayout.R$dimen: int notification_top_pad_large_text
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int DEFAULT_SLINGSHOT_DISTANCE
kotlin.jvm.internal.Ref$FloatRef: float element
androidx.recyclerview.widget.SnapHelper: int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
kotlin.io.ByteStreamsKt$iterator$1: void setNextByte(int)
androidx.fragment.app.DialogFragment: int STYLE_NO_FRAME
kotlin.properties.ReadOnlyProperty: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
android.support.v4.media.session.MediaControllerCompat: MediaControllerCompat(android.content.Context,android.support.v4.media.session.MediaSessionCompat)
androidx.loader.R$attr: int fontProviderCerts
com.example.revolut.rates.R$drawable: int abc_ic_star_black_48dp
io.reactivex.internal.operators.maybe.MaybeMergeArray: MaybeMergeArray(io.reactivex.MaybeSource[])
kotlin.jvm.JvmName: java.lang.String name()
com.example.revolut.rates.R$styleable: int SearchView_iconifiedByDefault
io.reactivex.internal.operators.flowable.FlowableWindow
kotlin.sequences.SubSequence$iterator$1: java.lang.Object next()
com.example.revolut.rates.R$styleable: int View_theme
kotlin.text.CharCategory: kotlin.text.CharCategory PARAGRAPH_SEPARATOR
androidx.appcompat.view.SupportActionModeWrapper: boolean getTitleOptionalHint()
okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)
androidx.appcompat.R$style: int TextAppearance_AppCompat_SearchResult_Title
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(long[],kotlin.jvm.functions.Function1)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener)
io.reactivex.processors.ReplayProcessor: io.reactivex.processors.ReplayProcessor create(int)
com.example.revolut.rates.R$attr: int suggestionRowLayout
kotlin.collections.ArraysKt___ArraysKt: long[] reversedArray(long[])
kotlin.NotImplementedError
androidx.coordinatorlayout.R$styleable: int ColorStateListItem_android_alpha
com.example.revolut.rates.R$styleable: int ActionBar_divider
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object filterNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.coroutines.Continuation)
androidx.viewpager.widget.ViewPager: void setOffscreenPageLimit(int)
androidx.core.view.accessibility.AccessibilityRecordCompat: AccessibilityRecordCompat(java.lang.Object)
com.example.revolut.rates.R$styleable: int Toolbar_titleTextColor
kotlin.collections.SetsKt__SetsJVMKt: java.util.TreeSet sortedSetOf(java.util.Comparator,java.lang.Object[])
androidx.appcompat.R$style: int Widget_AppCompat_ActionMode
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable flatMap(io.reactivex.functions.Function,boolean,int)
kotlin.ranges.LongProgressionIterator: long nextLong()
androidx.appcompat.R$style: int Base_Widget_AppCompat_ListView_DropDown
kotlin.jvm.internal.Ref$ObjectRef: java.lang.String toString()
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Medium_Inverse
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float getProgress()
androidx.appcompat.widget.Toolbar: boolean isOverflowMenuShowing()
io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)
dagger.android.support.R$color: int notification_icon_bg_color
com.example.revolut.rates.R$style: int Widget_AppCompat_CompoundButton_RadioButton
androidx.appcompat.widget.AppCompatTextView: void onMeasure(int,int)
io.reactivex.Maybe: io.reactivex.Maybe retry(io.reactivex.functions.Predicate)
androidx.versionedparcelable.VersionedParcel: int[] readIntArray(int[],int)
androidx.core.view.MotionEventCompat: int AXIS_Y
okhttp3.internal.connection.RouteException
kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)
androidx.fragment.R$styleable: int GradientColor_android_startX
androidx.appcompat.R$styleable: int AlertDialog_multiChoiceItemLayout
androidx.legacy.coreui.R$drawable: int notification_bg
io.reactivex.internal.util.VolatileSizeArrayList: VolatileSizeArrayList(int)
android.support.v4.media.session.MediaControllerCompat: android.app.PendingIntent getSessionActivity()
io.reactivex.internal.operators.observable.ObservableRefCount: ObservableRefCount(io.reactivex.observables.ConnectableObservable)
androidx.recyclerview.R$attr: int font
androidx.appcompat.view.StandaloneActionMode: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.constraintlayout.solver.Metrics: Metrics()
androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.appcompat.R$color: int abc_btn_colored_text_material
com.example.revolut.rates.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
androidx.appcompat.widget.ScrollingTabContainerView: android.view.ViewPropertyAnimator mVisibilityAnim
androidx.appcompat.app.WindowDecorActionBar: boolean requestFocus()
kotlin.coroutines.experimental.CoroutineContext: kotlin.coroutines.experimental.CoroutineContext minusKey(kotlin.coroutines.experimental.CoroutineContext$Key)
androidx.recyclerview.widget.LinearLayoutManager: void scrollToPositionWithOffset(int,int)
dagger.android.support.R$style: int Widget_AppCompat_Light_ActionBar_TabText
io.reactivex.internal.operators.observable.BlockingObservableMostRecent: BlockingObservableMostRecent(io.reactivex.ObservableSource,java.lang.Object)
com.jakewharton.rxbinding3.widget.TextViewAfterTextChangeEvent: com.jakewharton.rxbinding3.widget.TextViewAfterTextChangeEvent copy(android.widget.TextView,android.text.Editable)
androidx.appcompat.R$styleable: int FontFamily_fontProviderFetchStrategy
com.google.gson.JsonIOException: JsonIOException(java.lang.String)
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_SCROLLED
androidx.core.app.ShareCompat$IntentBuilder: android.content.Intent getIntent()
io.reactivex.internal.disposables.SequentialDisposable
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)
androidx.swiperefreshlayout.R$drawable: int notification_icon_background
io.reactivex.internal.operators.observable.ObservableAutoConnect
android.support.v4.media.session.IMediaSession: void prepareFromUri(android.net.Uri,android.os.Bundle)
androidx.constraintlayout.solver.LinearSystem
androidx.databinding.adapters.VideoViewBindingAdapter
io.reactivex.internal.operators.maybe.AbstractMaybeWithUpstream: io.reactivex.MaybeSource source
com.example.revolut.rates.R$id: int edit_query
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: boolean hasCustomOnError()
kotlin.text.StringsKt___StringsKt: java.util.HashSet toHashSet(java.lang.CharSequence)
com.jakewharton.rxbinding3.core.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.appcompat.widget.ListPopupWindow: void setEpicenterBounds(android.graphics.Rect)
kotlin.collections.CollectionsKt___CollectionsKt: kotlin.sequences.Sequence asSequence(java.lang.Iterable)
io.reactivex.Observer: void onNext(java.lang.Object)
kotlin.UByteArray: boolean equals-impl(byte[],java.lang.Object)
io.reactivex.internal.util.NotificationLite: io.reactivex.disposables.Disposable getDisposable(java.lang.Object)
androidx.viewpager.widget.ViewPager$LayoutParams
com.example.revolut.rates.R$id: int action_bar_spinner
androidx.core.view.ViewKt$postDelayed$runnable$1
dagger.android.support.R$id: int action_mode_bar
okhttp3.internal.ws.RealWebSocket: void onReadPing(okio.ByteString)
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorListener doOnEnd(android.animation.Animator,kotlin.jvm.functions.Function1)
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$2: void resume(kotlin.Unit)
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)
androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.R$dimen: int notification_small_icon_background_padding
io.reactivex.Completable: io.reactivex.Completable concatArray(io.reactivex.CompletableSource[])
androidx.recyclerview.widget.DiffUtil$ItemCallback
androidx.recyclerview.widget.StaggeredGridLayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
io.reactivex.internal.schedulers.SingleScheduler: void shutdown()
okhttp3.internal.http.HttpHeaders
androidx.appcompat.widget.TintContextWrapper: void setTheme(int)
io.reactivex.internal.operators.flowable.FlowableAllSingle
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription: long serialVersionUID
kotlin.collections.CollectionsKt___CollectionsKt: int[] toIntArray(java.util.Collection)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitle(int)
androidx.vectordrawable.R$dimen: int notification_top_pad
androidx.fragment.app.DialogFragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_INVALIDATED
com.google.gson.internal.JsonReaderInternalAccess: JsonReaderInternalAccess()
io.reactivex.internal.operators.observable.ObservableOnErrorReturn: ObservableOnErrorReturn(io.reactivex.ObservableSource,io.reactivex.functions.Function)
androidx.loader.R$dimen: int notification_small_icon_size_as_large
kotlinx.coroutines.EventLoopBase$DelayedTask: void setIndex(int)
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback: void updateItemCount(int,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List sorted(java.lang.Iterable)
androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Button
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ranges.IntRange getIndices-QwZRm1k(long[])
android.support.v4.media.MediaMetadataCompat$Builder: android.support.v4.media.MediaMetadataCompat$Builder putRating(java.lang.String,android.support.v4.media.RatingCompat)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)
okio.ByteString: byte[] toByteArray()
androidx.core.util.SparseLongArrayKt$keyIterator$1: int nextInt()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int getRowCount()
androidx.core.text.LocaleKt
io.reactivex.internal.operators.maybe.MaybeDetach
kotlin.text.StringsKt___StringsKt: java.util.List chunked(java.lang.CharSequence,int,kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup()
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List listOf(java.lang.Object)
androidx.appcompat.R$styleable: int[] ButtonBarLayout
okhttp3.CertificatePinner: okhttp3.CertificatePinner DEFAULT
androidx.appcompat.R$dimen: int abc_list_item_padding_horizontal_material
kotlinx.coroutines.EventLoopBase$DelayedRunnableTask: EventLoopBase$DelayedRunnableTask(kotlinx.coroutines.EventLoopBase,long,java.util.concurrent.TimeUnit,java.lang.Runnable)
okhttp3.internal.http2.Http2Stream: void close(okhttp3.internal.http2.ErrorCode)
androidx.constraintlayout.solver.widgets.ConstraintWidget
kotlinx.coroutines.DispatchedContinuation: void resumeCancellableWithException(java.lang.Throwable)
androidx.appcompat.app.WindowDecorActionBar: void onContentScrollStarted()
androidx.appcompat.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
androidx.appcompat.app.ActionBar: int DISPLAY_USE_LOGO
androidx.customview.widget.ExploreByTouchHelper: void onVirtualViewKeyboardFocusChanged(int,boolean)
io.reactivex.Observable: io.reactivex.Observable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.ObservableSource)
androidx.appcompat.R$style: int Platform_AppCompat_Light
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitle(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(int[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int MenuItem_actionProviderClass
io.reactivex.Observable: io.reactivex.Observable delay(io.reactivex.functions.Function)
kotlinx.coroutines.CoroutineScopeKt: void isActive$annotations(kotlinx.coroutines.CoroutineScope)
androidx.appcompat.R$styleable: int Toolbar_navigationIcon
io.reactivex.observers.BaseTestConsumer: long completions()
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver: long serialVersionUID
dagger.android.DaggerDialogFragment_MembersInjector: void injectMembers(dagger.android.DaggerDialogFragment)
androidx.core.os.CancellationSignal: CancellationSignal()
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class)
okio.ForwardingTimeout: okio.Timeout delegate()
androidx.constraintlayout.widget.ConstraintHelper: void validateParams()
androidx.recyclerview.R$id: int notification_background
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(short[],int,int,int,java.lang.Object)
androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$1: void onTransitionCancel(android.transition.Transition)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintBottom_toTopOf
kotlin.coroutines.experimental.CoroutinesKt: kotlin.coroutines.experimental.Continuation createCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.experimental.Continuation)
kotlinx.coroutines.CancellableContinuation: void completeResume(java.lang.Object)
dagger.android.DaggerActivity_MembersInjector: dagger.MembersInjector create(javax.inject.Provider)
com.google.gson.internal.LinkedHashTreeMap: boolean containsKey(java.lang.Object)
androidx.collection.CircularIntArray: void removeFromEnd(int)
okhttp3.Handshake
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)
kotlinx.android.parcel.Parcelize
kotlin.text.CharCategory: kotlin.text.CharCategory CONNECTOR_PUNCTUATION
androidx.media.MediaBrowserServiceCompat: void onSearch(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$Result)
kotlin.collections.SetsKt___SetsKt: SetsKt___SetsKt()
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void onComplete()
dagger.android.ContentProviderKey
androidx.core.app.FrameMetricsAggregator: int DRAW_DURATION
androidx.appcompat.R$styleable: int AppCompatTheme_colorControlNormal
kotlin.internal.PlatformDependent
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable map(io.reactivex.functions.Function)
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: void onSuccess(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort singleOrNull-rL5Bavg(short[])
androidx.databinding.ObservableParcelable: ObservableParcelable()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[])
io.reactivex.internal.util.ConnectConsumer: void accept(java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.functions.Function)
com.example.revolut.rates.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
io.reactivex.internal.subscriptions.SubscriptionHelper: boolean setOnce(java.util.concurrent.atomic.AtomicReference,org.reactivestreams.Subscription)
io.reactivex.processors.UnicastProcessor: io.reactivex.processors.UnicastProcessor create()
androidx.appcompat.widget.DecorToolbar: void collapseActionView()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIcon(int)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toMap(kotlinx.coroutines.channels.ReceiveChannel,java.util.Map,kotlin.coroutines.Continuation)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlinx.coroutines.Job,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
io.reactivex.internal.operators.single.SingleError: SingleError(java.util.concurrent.Callable)
kotlin.MathKt__BigIntegersKt: MathKt__BigIntegersKt()
com.example.revolut.rates.R$id: int never
io.reactivex.internal.operators.observable.ObservableConcatWithSingle
io.reactivex.internal.operators.flowable.FlowableSequenceEqual: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.DecorContentParent: void restoreToolbarHierarchyState(android.util.SparseArray)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void resetResolutionNodes()
androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.appcompat.widget.DecorToolbar: android.view.ViewGroup getViewGroup()
androidx.viewpager.R$styleable: int FontFamilyFont_ttcIndex
androidx.collection.LongSparseArray: void append(long,java.lang.Object)
androidx.loader.app.LoaderManagerImpl$LoaderInfo
androidx.appcompat.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setTargetDensity(android.graphics.Canvas)
androidx.databinding.adapters.TextViewBindingAdapter: void setPassword(android.widget.TextView,boolean)
androidx.core.widget.ScrollerCompat: boolean computeScrollOffset()
androidx.core.internal.view.SupportMenuItem: boolean collapseActionView()
io.reactivex.Observable: io.reactivex.Observable zipIterable(java.lang.Iterable,io.reactivex.functions.Function,boolean,int)
androidx.legacy.coreui.R$styleable: int GradientColor_android_type
androidx.core.provider.FontsContractCompat: void requestFont(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
kotlin.collections.ArraysKt___ArraysKt: boolean any(char[])
io.reactivex.internal.operators.observable.ObservableSampleWithObservable
androidx.drawerlayout.widget.DrawerLayout: void setScrimColor(int)
io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)
com.example.revolut.rates.R$dimen: int notification_action_text_size
androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)
androidx.appcompat.R$dimen: int abc_text_size_menu_header_material
io.reactivex.internal.util.VolatileSizeArrayList: java.lang.Object[] toArray(java.lang.Object[])
androidx.coordinatorlayout.R$drawable: int notification_template_icon_low_bg
androidx.recyclerview.R$layout: int notification_action
kotlin.jvm.internal.TypeIntrinsics: java.util.ListIterator castToListIterator(java.lang.Object)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_goneMarginEnd
androidx.collection.ArraySet: boolean contains(java.lang.Object)
io.reactivex.Flowable: io.reactivex.Single reduce(java.lang.Object,io.reactivex.functions.BiFunction)
androidx.appcompat.R$dimen: int compat_notification_large_icon_max_width
com.example.revolut.rates.R$styleable: int AppCompatTheme_android_windowAnimationStyle
androidx.appcompat.R$attr: int actionProviderClass
com.jakewharton.rxbinding3.widget.RatingBarChangeEvent: RatingBarChangeEvent(android.widget.RatingBar,float,boolean)
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence)
androidx.swiperefreshlayout.R$attr: int alpha
androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewPosition()
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
androidx.core.provider.FontsContractCompat$FontRequestCallback: void onTypefaceRetrieved(android.graphics.Typeface)
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
androidx.core.database.CursorKt
androidx.recyclerview.widget.ItemTouchHelper$Callback: int interpolateOutOfBoundsScroll(androidx.recyclerview.widget.RecyclerView,int,int,int,long)
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener: void onDrawerClosed(android.view.View)
kotlinx.coroutines.channels.BroadcastKt: kotlinx.coroutines.channels.BroadcastChannel broadcast(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlinx.coroutines.Job,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
androidx.legacy.v4.R$dimen: int notification_small_icon_size_as_large
io.reactivex.Observable: java.lang.Iterable blockingIterable()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dns(okhttp3.Dns)
androidx.core.util.SparseLongArrayKt: long getOrDefault(android.util.SparseLongArray,int,long)
android.support.v4.media.session.PlaybackStateCompat: int STATE_PLAYING
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedTop(android.view.View)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_SHA
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams: SlidingPaneLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.media.R$id: int tag_unhandled_key_listeners
android.support.v4.media.session.PlaybackStateCompat: int REPEAT_MODE_ONE
androidx.vectordrawable.R$dimen: int compat_notification_large_icon_max_width
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalBiasPercent(float)
io.reactivex.Single: io.reactivex.Single delaySubscription(org.reactivestreams.Publisher)
io.reactivex.Flowable: io.reactivex.Maybe singleElement()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int HORIZONTAL
androidx.fragment.app.DialogFragment: int STYLE_NORMAL
androidx.constraintlayout.solver.SolverVariable: void reset()
androidx.loader.content.AsyncTaskLoader: void cancelLoadInBackground()
androidx.customview.widget.ExploreByTouchHelper: void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState)
androidx.legacy.app.ActionBarDrawerToggle
com.example.revolut.rates.R$color: int material_grey_50
kotlinx.coroutines.YieldKt
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float firstOrNull(float[],kotlin.jvm.functions.Function1)
androidx.slidingpanelayout.R$dimen: int notification_media_narrow_margin
androidx.constraintlayout.widget.ConstraintSet: void setVisibility(int,int)
io.reactivex.internal.operators.maybe.MaybeCache
androidx.versionedparcelable.ParcelImpl: ParcelImpl(android.os.Parcel)
androidx.lifecycle.ReportFragment: void onActivityCreated(android.os.Bundle)
androidx.media.MediaBrowserProtocol: int CLIENT_MSG_REGISTER_CALLBACK_MESSENGER
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintEnd_toEndOf
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable mutate()
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind[] values()
io.reactivex.internal.observers.BasicFuseableObserver: io.reactivex.internal.fuseable.QueueDisposable qd
kotlin.sequences.SubSequence$iterator$1: java.util.Iterator getIterator()
io.reactivex.internal.disposables.DisposableHelper: boolean replace(java.util.concurrent.atomic.AtomicReference,io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableIgnoreElements: ObservableIgnoreElements(io.reactivex.ObservableSource)
io.reactivex.internal.functions.Functions$NaturalComparator: io.reactivex.internal.functions.Functions$NaturalComparator[] values()
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
io.reactivex.Single: io.reactivex.Single onErrorResumeNext(io.reactivex.Single)
kotlinx.coroutines.EventLoopBase: boolean isCorrectThread()
com.example.revolut.rates.R$styleable: int Toolbar_android_gravity
kotlinx.coroutines.scheduling.Task: long submissionTime
io.reactivex.internal.operators.flowable.FlowableCache: void onNext(java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: int getMargin()
android.support.v4.media.session.IMediaControllerCallback: void onShuffleModeChangedRemoved(boolean)
io.reactivex.internal.util.NotificationLite: boolean acceptFull(java.lang.Object,org.reactivestreams.Subscriber)
kotlin.jvm.internal.MutablePropertyReference2: java.lang.Object getDelegate(java.lang.Object,java.lang.Object)
com.example.revolut.rates.R$string: int abc_shareactionprovider_share_with
kotlin.ranges.URangesKt___URangesKt: int coerceIn-WZ9TVnA(int,int,int)
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: ObservableScalarXMap$ScalarDisposable(io.reactivex.Observer,java.lang.Object)
androidx.core.view.ViewGroupKt
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character minBy(char[],kotlin.jvm.functions.Function1)
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.ActionBar getSupportActionBar()
io.reactivex.parallel.ParallelFlowable: java.lang.Object to(io.reactivex.functions.Function)
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_textAppearance
androidx.constraintlayout.solver.widgets.ConstraintWidget: float getDimensionRatio()
io.reactivex.internal.subscriptions.SubscriptionArbiter: boolean isUnbounded()
kotlin.collections.EmptyIterator: int previousIndex()
com.example.revolut.rates.R$id: int radio
androidx.appcompat.view.menu.MenuBuilder
io.reactivex.internal.schedulers.RxThreadFactory: RxThreadFactory(java.lang.String,int)
androidx.appcompat.R$id: int search_button
androidx.fragment.R$dimen: int notification_big_circle_margin
androidx.appcompat.widget.AbsActionBarView: boolean showOverflowMenu()
io.reactivex.internal.subscriptions.EmptySubscription: void error(java.lang.Throwable,org.reactivestreams.Subscriber)
androidx.appcompat.R$attr: int actionBarTheme
androidx.appcompat.R$attr: int actionButtonStyle
org.intellij.lang.annotations.Flow: java.lang.String DEFAULT_SOURCE
androidx.collection.ArraySet: boolean isEmpty()
androidx.databinding.ObservableArrayMap: boolean retainAll(java.util.Collection)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object elementAt(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.Continuation)
androidx.constraintlayout.widget.ConstraintSet: void constrainDefaultWidth(int,int)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int sumBy(boolean[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.databinding.ActivityMainBindingImpl: boolean setVariable(int,java.lang.Object)
androidx.vectordrawable.R$dimen: int notification_big_circle_margin
androidx.lifecycle.extensions.R$id: int forever
com.example.revolut.rates.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
androidx.media.MediaBrowserProtocol: java.lang.String DATA_CALLING_PID
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable: void subscribeActual(org.reactivestreams.Subscriber)
com.google.gson.JsonParseException: JsonParseException(java.lang.String)
io.reactivex.internal.operators.observable.ObservableAllSingle
okhttp3.CacheControl: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView: void requestLayout()
com.example.revolut.rates.R$styleable: int StateListDrawable_android_exitFadeDuration
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setActions(long)
androidx.swiperefreshlayout.R$styleable: int ColorStateListItem_android_alpha
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPath(java.lang.String)
androidx.appcompat.widget.ListPopupWindow: android.view.View$OnTouchListener createDragToOpenListener(android.view.View)
kotlin.jvm.JvmPackageName: java.lang.String name()
io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport: void innerComplete(io.reactivex.internal.subscribers.InnerQueuedSubscriber)
io.reactivex.internal.operators.flowable.FlowablePublishAlt$InnerSubscription: long serialVersionUID
com.jakewharton.rxbinding3.view.ViewScrollChangeEvent: ViewScrollChangeEvent(android.view.View,int,int,int,int)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: int compare(java.lang.Object,java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setSubtitle(java.lang.CharSequence)
com.google.gson.internal.bind.JsonTreeReader: boolean nextBoolean()
androidx.core.util.SparseBooleanArrayKt$valueIterator$1
com.google.gson.Gson: java.lang.String toJson(java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListHead: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: int indexOf(java.lang.Object)
androidx.recyclerview.widget.SimpleItemAnimator: void onMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KMutableProperty2 mutableProperty2(kotlin.jvm.internal.MutablePropertyReference2)
kotlin.text.StringsKt__IndentKt: StringsKt__IndentKt()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object maxBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
dagger.android.support.R$layout: int select_dialog_multichoice_material
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(boolean[],kotlin.jvm.functions.Function1)
okhttp3.Callback
io.reactivex.Single: void subscribe(io.reactivex.SingleObserver)
dagger.android.support.R$styleable: int ActionMode_titleTextStyle
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable collect(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)
dagger.android.support.R$styleable: int AppCompatTheme_alertDialogStyle
io.reactivex.internal.operators.parallel.ParallelFromPublisher
androidx.appcompat.widget.TintTypedArray: int getIndex(int)
androidx.core.util.Preconditions: float checkArgumentFinite(float,java.lang.String)
kotlin.jvm.functions.Function18: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.app.NotificationCompatSideChannelService
androidx.fragment.app.Fragment: void onAttach(android.app.Activity)
androidx.loader.content.AsyncTaskLoader: boolean isLoadInBackgroundCanceled()
kotlinx.coroutines.channels.BroadcastChannel: kotlinx.coroutines.channels.SubscriptionReceiveChannel open()
io.reactivex.internal.observers.DeferredScalarObserver: void dispose()
kotlinx.coroutines.channels.LinkedListChannel
androidx.appcompat.R$dimen: int abc_text_size_subhead_material
androidx.recyclerview.widget.ItemTouchHelper$Callback: int DEFAULT_SWIPE_ANIMATION_DURATION
com.example.revolut.rates.R$styleable: int AppCompatTheme_windowNoTitle
androidx.appcompat.widget.SearchView: boolean isIconfiedByDefault()
io.reactivex.internal.operators.maybe.MaybeOnErrorComplete: MaybeOnErrorComplete(io.reactivex.MaybeSource,io.reactivex.functions.Predicate)
kotlinx.coroutines.JobNode: JobNode(kotlinx.coroutines.Job)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short lastOrNull(short[])
androidx.customview.R$color: int notification_action_color_filter
io.reactivex.Single: io.reactivex.Flowable concat(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)
io.reactivex.internal.operators.observable.ObservableElementAt
androidx.core.view.MenuItemCompat: void setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)
kotlin.jvm.internal.Ref$ByteRef
io.reactivex.Flowable: io.reactivex.subscribers.TestSubscriber test()
androidx.appcompat.widget.DecorToolbar: void setMenuPrepared()
androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence)
android.support.v4.media.session.MediaControllerCompatApi21$Callback
okhttp3.internal.http2.ErrorCode: int httpCode
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0)
androidx.arch.core.internal.FastSafeIterableMap
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean)
androidx.drawerlayout.widget.DrawerLayout$SavedState: DrawerLayout$SavedState(android.os.Parcel,java.lang.ClassLoader)
io.reactivex.schedulers.SchedulerRunnableIntrospection
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: boolean stackFromEnd
androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$1
androidx.core.util.SparseArrayKt: boolean isNotEmpty(android.util.SparseArray)
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(androidx.appcompat.widget.ActionMenuView$LayoutParams)
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
androidx.fragment.app.FragmentController: android.os.Parcelable saveAllState()
androidx.appcompat.widget.AbsActionBarView: void dismissPopupMenus()
io.reactivex.internal.schedulers.AbstractDirectTask: java.lang.Thread runner
androidx.core.view.ViewGroupCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
io.reactivex.internal.subscribers.BasicFuseableSubscriber: void afterDownstream()
kotlin.jvm.internal.ClassReference: void isFinal$annotations()
androidx.appcompat.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
io.reactivex.internal.queue.SpscLinkedArrayQueue: java.lang.Object peek()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void drawableStateChanged()
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver$DelayErrorInnerObserver: long serialVersionUID
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Medium
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableCollect: void subscribeActual(io.reactivex.Observer)
androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber$SwitchMapSingleObserver: long serialVersionUID
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle: void subscribeActual(io.reactivex.Observer)
androidx.core.view.ViewGroupCompat: int getNestedScrollAxes(android.view.ViewGroup)
io.reactivex.internal.util.ConnectConsumer
androidx.appcompat.view.menu.MenuBuilder: void changeMenuMode()
com.google.gson.FieldAttributes: FieldAttributes(java.lang.reflect.Field)
okhttp3.internal.NamedRunnable: NamedRunnable(java.lang.String,java.lang.Object[])
androidx.appcompat.app.WindowDecorActionBar: void doShow(boolean)
androidx.core.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[])
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setCancelable(boolean)
io.reactivex.internal.disposables.ListCompositeDisposable: ListCompositeDisposable(java.lang.Iterable)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode COMPRESSION_ERROR
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableRight
kotlinx.coroutines.internal.LockFreeMPMCQueue: boolean addLast(kotlinx.coroutines.internal.LockFreeMPMCQueueNode)
androidx.lifecycle.extensions.R$drawable: int notification_bg_normal
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(float[],java.util.Collection)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterIndexedTo$1: java.lang.Object invokeSuspend(java.lang.Object)
okhttp3.Response: okhttp3.Response cacheResponse()
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int SELECTION_MODE_SINGLE
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object single(java.lang.Object[])
com.example.revolut.rates.R$dimen: int tooltip_margin
androidx.fragment.R$styleable: int FontFamilyFont_android_fontWeight
androidx.appcompat.R$style: int TextAppearance_AppCompat_Medium
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.BiFunction getOnCompletableSubscribe()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_RC4_128_SHA
kotlin.reflect.KTypeProjection$Companion: KTypeProjection$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChangeEvent: ViewGroupHierarchyChangeEvent(kotlin.jvm.internal.DefaultConstructorMarker)
io.reactivex.internal.operators.completable.CompletableCache$InnerCompletableCache: long serialVersionUID
androidx.appcompat.view.menu.MenuAdapter: java.lang.Object getItem(int)
io.reactivex.internal.subscribers.BasicFuseableSubscriber: void onError(java.lang.Throwable)
android.support.v4.media.session.MediaControllerCompat$TransportControls: void setRating(android.support.v4.media.RatingCompat)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
io.reactivex.internal.operators.flowable.FlowableCount: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowDrawableLeft(android.graphics.drawable.Drawable)
androidx.core.app.TaskStackBuilder: void startActivities()
okhttp3.EventListener: void secureConnectStart(okhttp3.Call)
androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int)
androidx.lifecycle.ViewModelProvider: ViewModelProvider(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory)
kotlinx.coroutines.CompletableDeferredKt
androidx.core.app.ShareCompat$IntentReader: java.lang.String[] getEmailBcc()
io.reactivex.Flowable: io.reactivex.Flowable repeatWhen(io.reactivex.functions.Function)
androidx.appcompat.view.ActionMode: boolean isTitleOptional()
android.support.v4.media.session.MediaControllerCompat$Callback: void binderDied()
dagger.android.support.R$id: int action_bar
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short firstOrNull(short[])
kotlinx.coroutines.AwaitKt
androidx.asynclayoutinflater.R$attr: int fontWeight
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipCoordinator: long serialVersionUID
kotlin.sequences.SequencesKt___SequencesKt: java.util.Set toSet(kotlin.sequences.Sequence)
androidx.appcompat.R$id: int async
androidx.fragment.R$id: int action_container
com.jakewharton.rxbinding3.widget.SearchViewQueryTextEvent: java.lang.String toString()
okhttp3.internal.ws.RealWebSocket: void connect(okhttp3.OkHttpClient)
androidx.loader.content.Loader: void onAbandon()
androidx.core.util.SparseArrayKt: android.util.SparseArray plus(android.util.SparseArray,android.util.SparseArray)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterNotTo$3
dagger.android.DaggerApplication_MembersInjector: void injectMembers(dagger.android.DaggerApplication)
com.example.revolut.rates.R$styleable: R$styleable()
com.example.revolut.rates.R$styleable: int[] FontFamily
com.jakewharton.rxbinding3.core.R$integer: int status_bar_notification_info_maxnum
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBeforeLast$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
androidx.cursoradapter.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
androidx.appcompat.R$drawable: int abc_ic_go_search_api_material
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(java.lang.Object[],java.lang.Object,int,int)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast(java.lang.String,java.lang.String,java.lang.String)
androidx.core.R$color: int ripple_material_light
dagger.android.support.R$styleable: int SearchView_suggestionRowLayout
io.reactivex.internal.operators.maybe.MaybeCreate: MaybeCreate(io.reactivex.MaybeOnSubscribe)
io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher)
androidx.customview.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.core.content.res.TypedArrayKt: android.graphics.Typeface getFontOrThrow(android.content.res.TypedArray,int)
android.support.v4.media.session.MediaControllerCompat$TransportControls: void pause()
okhttp3.internal.http2.Settings: Settings()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(boolean[],boolean[],kotlin.jvm.functions.Function2)
com.jakewharton.rxbinding3.view.MenuItemActionViewCollapseEvent: boolean equals(java.lang.Object)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Body2
androidx.appcompat.R$styleable: int SwitchCompat_trackTint
io.reactivex.internal.operators.maybe.MaybeEmpty: java.lang.Object call()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintRight_toRightOf
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getHeight()
kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)
kotlin.jvm.internal.ShortSpreadBuilder: int getSize(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo unwrap()
androidx.core.graphics.ColorKt: int toColorInt(long)
dagger.android.support.R$style: int TextAppearance_AppCompat_Button
androidx.viewpager.widget.PagerTabStrip: void setBackgroundResource(int)
androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageSelected(int)
okhttp3.internal.connection.StreamAllocation: boolean hasMoreRoutes()
io.reactivex.internal.operators.observable.ObservableBlockingSubscribe: void subscribe(io.reactivex.ObservableSource,io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
androidx.lifecycle.ComputableLiveData: androidx.lifecycle.LiveData getLiveData()
com.example.revolut.rates.R$attr: int buttonBarButtonStyle
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7: java.util.Iterator iterator()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(java.time.Duration)
androidx.customview.R$styleable: int ColorStateListItem_alpha
androidx.fragment.app.FragmentController: boolean dispatchPrepareOptionsMenu(android.view.Menu)
androidx.appcompat.R$attr: int listPreferredItemPaddingLeft
okhttp3.Dispatcher: Dispatcher(java.util.concurrent.ExecutorService)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMovementGranularities(int)
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
retrofit2.KotlinExtensions$awaitResponse$2$2
androidx.legacy.coreutils.R$drawable: int notification_bg_normal_pressed
io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter: long serialVersionUID
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isWidthWrapContent()
androidx.core.widget.AutoScrollHelper: float RELATIVE_UNSPECIFIED
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(float[])
kotlin.jvm.functions.Function4
io.reactivex.processors.UnicastProcessor: void onSubscribe(org.reactivestreams.Subscription)
androidx.constraintlayout.solver.widgets.Barrier: void addToSolver(androidx.constraintlayout.solver.LinearSystem)
kotlin.coroutines.ContinuationKt: kotlin.coroutines.Continuation createCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
androidx.lifecycle.extensions.R$styleable: int GradientColor_android_centerColor
androidx.recyclerview.widget.LinearSnapHelper: int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View)
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(boolean[],boolean)
androidx.databinding.BaseObservableField: BaseObservableField()
androidx.appcompat.R$attr: int subtitleTextColor
kotlin.math.MathKt__MathJVMKt: int getSign(long)
androidx.fragment.app.Fragment: void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
android.support.v4.media.RatingCompat: android.support.v4.media.RatingCompat newThumbRating(boolean)
dagger.Component$Builder
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintGuide_begin
okhttp3.OkHttpClient: int writeTimeoutMillis()
androidx.loader.R$layout
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setDither(boolean)
androidx.core.ktx.R$id: int title
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(short[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.reactivex.observers.DisposableCompletableObserver: boolean isDisposed()
kotlin.collections.CollectionsKt___CollectionsKt: byte[] toByteArray(java.util.Collection)
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_android_fontStyle
androidx.legacy.coreui.R$dimen: int compat_button_inset_horizontal_material
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setLatestTimestamp(long)
androidx.legacy.v4.R$layout: int notification_template_big_media_narrow_custom
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
androidx.media.R$attr: int fontProviderQuery
com.example.revolut.rates.R$attr: int fontProviderAuthority
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object)
androidx.customview.R$dimen
io.reactivex.observers.TestObserver: void onComplete()
com.example.revolut.rates.R$id: int customPanel
androidx.appcompat.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
androidx.appcompat.R$string: int abc_search_hint
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: long serialVersionUID
kotlin.random.AbstractPlatformRandom: java.util.Random getImpl()
androidx.recyclerview.widget.ItemTouchHelper$Callback: float getSwipeThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder)
io.reactivex.internal.operators.mixed.CompletableAndThenObservable
androidx.appcompat.R$style: int Widget_AppCompat_SeekBar_Discrete
androidx.coordinatorlayout.R$attr: int fontProviderCerts
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1: ComparisonsKt__ComparisonsKt$thenByDescending$1(java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.AtomicOp: java.lang.Object perform(java.lang.Object)
dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewStartOffset()
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$1: void resume(java.lang.Object)
androidx.core.app.ShareCompat$IntentReader
kotlinx.coroutines.test.TestCoroutineContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
io.reactivex.Maybe: io.reactivex.Flowable toFlowable()
androidx.databinding.adapters.SeekBarBindingAdapter$OnStopTrackingTouch
io.reactivex.internal.operators.flowable.FlowableError: FlowableError(java.util.concurrent.Callable)
androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
android.support.v4.media.session.MediaSessionCompat$Callback: void onSetRating(android.support.v4.media.RatingCompat,android.os.Bundle)
okio.Buffer: void readFully(okio.Buffer,long)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper
androidx.media.MediaBrowserProtocol
io.reactivex.internal.operators.maybe.MaybeFromCompletable: MaybeFromCompletable(io.reactivex.CompletableSource)
io.reactivex.Flowable: io.reactivex.Flowable throttleFirst(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.animation.AnimatorKt$addListener$3: java.lang.Object invoke(java.lang.Object)
okhttp3.Handshake: java.util.List peerCertificates()
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintLeft_toRightOf
androidx.appcompat.view.menu.MenuPopupHelper
com.example.revolut.rates.R$attr: int paddingBottomNoButtons
dagger.android.support.R$id: int action_bar_container
androidx.databinding.DataBinderMapper: androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View,int)
kotlin.Deprecated
okhttp3.internal.platform.Platform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
io.reactivex.internal.subscribers.QueueDrainSubscriber: void requested(long)
kotlin.reflect.KProperty: boolean isConst()
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
androidx.core.view.ViewCompat: int combineMeasuredStates(int,int)
io.reactivex.internal.observers.ConsumerSingleObserver: long serialVersionUID
io.reactivex.Flowable: io.reactivex.subscribers.TestSubscriber test(long)
androidx.recyclerview.R$styleable: int GradientColor_android_gradientRadius
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setView(int)
androidx.core.app.NotificationCompat$CarExtender: android.graphics.Bitmap getLargeIcon()
androidx.core.app.NotificationManagerCompat
dagger.android.support.R$attr: int actionModeBackground
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
kotlinx.coroutines.JobImpl: boolean cancel(java.lang.Throwable)
androidx.core.graphics.RegionKt: android.graphics.Region and(android.graphics.Region,android.graphics.Rect)
dagger.android.support.R$color: int abc_secondary_text_material_dark
androidx.recyclerview.widget.LinearLayoutManager: int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
com.example.revolut.rates.R$id: int action_bar_title
kotlin.collections.IndexedValue: int component1()
io.reactivex.Maybe: io.reactivex.Flowable repeatUntil(io.reactivex.functions.BooleanSupplier)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
androidx.fragment.app.FragmentStatePagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] sortedArrayDescending-GBYM_sE(byte[])
kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$scheduleResumeAfterDelay$$inlined$Runnable$1: TestCoroutineContext$Dispatcher$scheduleResumeAfterDelay$$inlined$Runnable$1(kotlinx.coroutines.test.TestCoroutineContext$Dispatcher,kotlinx.coroutines.CancellableContinuation)
androidx.core.view.DragStartHelper: void detach()
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationCancel(android.animation.Animator)
androidx.appcompat.view.menu.MenuBuilder: void clearHeader()
androidx.appcompat.R$style: int Widget_AppCompat_ActionBar_TabView
androidx.constraintlayout.solver.widgets.WidgetContainer: void add(androidx.constraintlayout.solver.widgets.ConstraintWidget[])
androidx.appcompat.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
dagger.android.support.DaggerAppCompatActivity_MembersInjector
androidx.constraintlayout.widget.R$id: int wrap
kotlin.collections.ArraysKt___ArraysKt: int[] reversedArray(int[])
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Double min(kotlin.sequences.Sequence)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler getScheduler()
com.example.revolut.rates.R$styleable: int MenuItem_alphabeticModifiers
io.reactivex.internal.operators.flowable.FlowableRepeatUntil: FlowableRepeatUntil(io.reactivex.Flowable,io.reactivex.functions.BooleanSupplier)
com.google.gson.stream.JsonReader: java.lang.String toString()
com.example.revolut.rates.R$id: int right_icon
dagger.android.support.R$styleable: int MenuItem_iconTintMode
dagger.android.support.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
kotlin.jvm.internal.ShortCompanionObject
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$find$1: java.lang.Object invokeSuspend(java.lang.Object)
com.jakewharton.rxbinding3.InitialValueObservable: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver: long serialVersionUID
io.reactivex.android.schedulers.AndroidSchedulers
kotlinx.coroutines.ResumeModeKt: void resumeMode(kotlin.coroutines.Continuation,java.lang.Object,int)
okhttp3.Response: okhttp3.Response$Builder newBuilder()
androidx.lifecycle.extensions.R$style: int Widget_Compat_NotificationActionText
androidx.legacy.coreutils.R$id: int right_side
kotlin.ULong: long MIN_VALUE
androidx.databinding.library.BuildConfig: java.lang.String APPLICATION_ID
com.jakewharton.rxbinding3.widget.SeekBarStopChangeEvent: boolean equals(java.lang.Object)
androidx.core.view.MotionEventCompat: int ACTION_POINTER_INDEX_MASK
androidx.recyclerview.R$id: int notification_main_column_container
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setHotspot(float,float)
io.reactivex.internal.util.HashMapSupplier: io.reactivex.internal.util.HashMapSupplier[] values()
kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,int)
androidx.appcompat.R$dimen: int abc_action_button_min_width_overflow_material
okhttp3.CacheControl: boolean noStore()
io.reactivex.Observable: io.reactivex.Observable mergeArrayDelayError(io.reactivex.ObservableSource[])
kotlin.system.TimingKt
io.reactivex.Flowable: io.reactivex.Flowable amb(java.lang.Iterable)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Completable onAssembly(io.reactivex.Completable)
retrofit2.http.QueryName
kotlin.collections.ArraysKt___ArraysKt: float reduceRight(float[],kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBeforeLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
com.example.revolut.rates.R$layout: int notification_template_media
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampDownDuration(int)
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Title
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMaxTextLength(int)
kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)
androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener
io.reactivex.internal.subscribers.FutureSubscriber: java.lang.Object get()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associate$1: ChannelsKt__Channels_commonKt$associate$1(kotlin.coroutines.Continuation)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2: ComparisonsKt__ComparisonsKt$compareByDescending$2(java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.legacy.coreui.R$attr: int fontProviderPackage
androidx.core.ktx.R$styleable: int FontFamilyFont_fontStyle
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: void onItemLoaded(int)
dagger.android.support.R$styleable: int[] MenuGroup
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
com.example.revolut.rates.R$attr: int layout_constraintHorizontal_weight
androidx.fragment.R$id: int text2
kotlin.ranges.CharProgression$Companion: CharProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)
androidx.appcompat.R$styleable: int AppCompatTheme_textColorSearchUrl
com.example.revolut.rates.R$attr: int buttonPanelSideLayout
androidx.slidingpanelayout.R$id: int right_icon
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.appcompat.R$dimen: int disabled_alpha_material_dark
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int)
androidx.legacy.v4.R$layout: int notification_media_action
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBeforeLast(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
kotlin.jvm.internal.Lambda
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintHeight_min
androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup: boolean mSkipSolver
okhttp3.RequestBody: RequestBody()
io.reactivex.internal.observers.FutureObserver: boolean isCancelled()
androidx.core.text.HtmlCompat: int TO_HTML_PARAGRAPH_LINES_INDIVIDUAL
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: boolean isHeading()
com.example.revolut.rates.R$attr: int windowFixedHeightMajor
io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function6)
androidx.drawerlayout.widget.DrawerLayout: android.os.Parcelable onSaveInstanceState()
androidx.drawerlayout.R$drawable: int notification_bg_low_normal
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object prepare(java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onScrollStateChanged(int)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
androidx.cursoradapter.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)
kotlin.io.FilesKt__UtilsKt: boolean deleteRecursively(java.io.File)
com.example.revolut.rates.R$dimen: int abc_action_bar_stacked_max_height
io.reactivex.internal.operators.flowable.FlowableWindowTimed
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long lastOrNull(long[])
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List filter(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.recyclerview.R$id: int time
com.example.revolut.rates.R$mipmap: int ic_launcher_round
androidx.core.ktx.R$attr: int ttcIndex
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(char[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.collection.LruCache: LruCache(int)
androidx.appcompat.R$drawable: int abc_list_selector_disabled_holo_light
androidx.appcompat.R$attr: int toolbarNavigationButtonStyle
okhttp3.ConnectionSpec: boolean supportsTlsExtensions()
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
dagger.android.support.R$styleable: int Toolbar_contentInsetStartWithNavigation
androidx.databinding.ObservableArrayList: void clear()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object consume(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1)
androidx.viewpager.widget.ViewPager: void drawableStateChanged()
kotlin.text.StringsKt__StringsKt: java.util.List split(java.lang.CharSequence,char[],boolean,int)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_layout_marginEnd
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setAlphabeticShortcut(char,int)
androidx.databinding.Bindable
io.reactivex.internal.operators.flowable.FlowableRefCount$RefCountSubscriber: long serialVersionUID
androidx.databinding.ObservableList$OnListChangedCallback: void onItemRangeChanged(androidx.databinding.ObservableList,int,int)
androidx.recyclerview.widget.SnapHelper: android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.customview.R$layout: int notification_template_part_time
dagger.android.support.R$attr: int iconifiedByDefault
androidx.core.widget.AutoSizeableTextView: int[] getAutoSizeTextAvailableSizes()
io.reactivex.Flowable: io.reactivex.Flowable window(long)
androidx.fragment.R$id: int end
io.reactivex.internal.operators.single.SingleUnsubscribeOn
androidx.core.view.accessibility.AccessibilityEventCompat: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
androidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)
dagger.android.support.R$attr: int backgroundTintMode
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: java.lang.Object get(int)
androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$1: void onTransitionEnd(android.transition.Transition)
androidx.drawerlayout.R$integer: int status_bar_notification_info_maxnum
androidx.loader.R$styleable: int FontFamilyFont_fontStyle
io.reactivex.internal.subscriptions.SubscriptionHelper: boolean validate(long)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintLeft_creator
androidx.media.MediaBrowserProtocol: int SERVICE_VERSION_2
io.reactivex.internal.observers.DisposableLambdaObserver: void onNext(java.lang.Object)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleY(float)
androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)
androidx.media.R$dimen: int compat_control_corner_material
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doOnNext(io.reactivex.functions.Consumer)
androidx.appcompat.R$attr: int actionModeStyle
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(float[],java.util.Map,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.flowable.FlowableScalarXMap: io.reactivex.Flowable scalarXMap(java.lang.Object,io.reactivex.functions.Function)
okhttp3.Challenge: int hashCode()
okio.Buffer: okio.BufferedSink writeLong(long)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int LARGE
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void cycleColumnAlignment(int)
dagger.android.support.R$styleable: int[] AppCompatImageView
androidx.core.view.WindowInsetsCompat: boolean hasInsets()
androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context)
kotlin.collections.AbstractMutableSet: boolean add(java.lang.Object)
androidx.databinding.adapters.CalendarViewBindingAdapter: void setListeners(android.widget.CalendarView,android.widget.CalendarView$OnDateChangeListener,androidx.databinding.InverseBindingListener)
androidx.core.app.NotificationCompat$BadgeIconType
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer max(int[])
kotlin.jvm.internal.ClassReference: boolean isFinal()
io.reactivex.internal.operators.single.SingleNever
androidx.appcompat.R$attr: int titleMarginTop
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getDimensionRatioSide()
androidx.core.transition.TransitionKt$addListener$3: TransitionKt$addListener$3()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SET_SELECTION
androidx.core.text.ICUCompat
okhttp3.Cookie: long expiresAt()
kotlin.jvm.internal.PropertyReference2: kotlin.reflect.KProperty2$Getter getGetter()
com.example.revolut.rates.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
io.reactivex.internal.subscriptions.EmptySubscription: int requestFusion(int)
androidx.appcompat.widget.AppCompatButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.example.revolut.rates.R$dimen: int abc_action_bar_default_height_material
io.reactivex.subscribers.TestSubscriber: io.reactivex.subscribers.TestSubscriber create(long)
dagger.android.support.R$drawable: int notification_action_background
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean isOpen()
androidx.databinding.ObservableMap$OnMapChangedCallback: ObservableMap$OnMapChangedCallback()
com.example.revolut.rates.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedNoLast: long serialVersionUID
androidx.legacy.widget.Space
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.constraintlayout.widget.ConstraintSet: int RIGHT
androidx.recyclerview.R$styleable: int GradientColor_android_centerY
kotlin.reflect.KProperty2: java.lang.Object getDelegate(java.lang.Object,java.lang.Object)
kotlin.coroutines.experimental.SequenceBuilderKt
io.reactivex.Observable: io.reactivex.Observable fromFuture(java.util.concurrent.Future,io.reactivex.Scheduler)
androidx.core.view.inputmethod.InputContentInfoCompat: void requestPermission()
kotlin.collections.EmptySet: int hashCode()
io.reactivex.schedulers.TestScheduler: io.reactivex.Scheduler$Worker createWorker()
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float getBarLength()
com.google.gson.internal.bind.DateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.loader.R$layout: int notification_template_part_chronometer
kotlin.coroutines.CombinedContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
retrofit2.http.DELETE
io.reactivex.Flowable: io.reactivex.Flowable map(io.reactivex.functions.Function)
kotlinx.coroutines.test.TestCoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
okhttp3.Cookie: boolean matches(okhttp3.HttpUrl)
androidx.databinding.adapters.CheckedTextViewBindingAdapter: CheckedTextViewBindingAdapter()
androidx.core.os.ConfigurationCompat: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
kotlin.ranges.IntRange$Companion: kotlin.ranges.IntRange getEMPTY()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
androidx.core.view.ViewCompat: int MEASURED_STATE_MASK
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_AUTHOR
dagger.android.support.R$style: int Widget_AppCompat_Button_Colored
kotlin.random.URandomKt: byte[] nextUBytes-Wvrt4B4$default(kotlin.random.Random,byte[],int,int,int,java.lang.Object)
dagger.android.support.R$style: int Widget_AppCompat_ProgressBar_Horizontal
androidx.appcompat.app.AlertController$AlertParams: android.view.LayoutInflater mInflater
kotlin.collections.unsigned.UArraysKt
kotlinx.coroutines.internal.SystemPropsKt: int systemProp(java.lang.String,int,int,int)
kotlin.jvm.internal.markers.KMutableList
androidx.recyclerview.widget.GridLayoutManager: int getSpanCount()
kotlinx.coroutines.CoroutineExceptionHandlerImplKt: void handleCoroutineExceptionImpl(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(double[],kotlin.jvm.functions.Function1)
kotlinx.android.extensions.CacheImplementation: kotlinx.android.extensions.CacheImplementation SPARSE_ARRAY
androidx.media.R$layout: int notification_template_big_media_narrow
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Widget_Button
androidx.constraintlayout.solver.widgets.Analyzer: void determineGroups(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer)
kotlin.io.FilePathComponents: boolean isRooted()
androidx.coordinatorlayout.R$drawable: int notification_bg_low
kotlin.ULongArray: void clear()
androidx.appcompat.view.menu.MenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
dagger.android.support.R$attr: int searchViewStyle
kotlinx.coroutines.EventLoopBase$DelayedTask: void dispose()
kotlin.collections.MapsKt__MapsKt: java.util.Map plus(java.util.Map,java.util.Map)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getItemCount()
androidx.core.ktx.R$dimen: int notification_main_column_padding_top
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(float[],kotlin.jvm.functions.Function1)
androidx.appcompat.R$string: int abc_font_family_subhead_material
com.google.gson.internal.bind.TimeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.customview.R$layout: int notification_action_tombstone
kotlinx.coroutines.internal.LockFreeMPSCQueueCore$Companion
kotlinx.coroutines.channels.SendChannel: boolean offer(java.lang.Object)
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
android.support.v4.media.MediaDescriptionCompat: android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object)
com.example.revolut.rates.R$attr: int contentInsetLeft
androidx.core.graphics.drawable.RoundedBitmapDrawable
androidx.core.app.NavUtils
io.reactivex.internal.fuseable.HasUpstreamCompletableSource: io.reactivex.CompletableSource source()
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.Object[])
androidx.appcompat.R$styleable: int MenuView_android_verticalDivider
io.reactivex.plugins.RxJavaPlugins: void reset()
retrofit2.Response: retrofit2.Response error(okhttp3.ResponseBody,okhttp3.Response)
kotlinx.coroutines.TimeoutCancellationException: TimeoutCancellationException(java.lang.String,kotlinx.coroutines.Job)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence sorted(kotlin.sequences.Sequence)
androidx.constraintlayout.widget.R$attr: int layout_constraintRight_toRightOf
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder serializeSpecialFloatingPointValues()
androidx.appcompat.widget.ActionMenuView$LayoutParams
io.reactivex.internal.operators.maybe.MaybeFilter: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.Flowable: io.reactivex.Flowable retry(io.reactivex.functions.Predicate)
kotlin.ranges.LongProgression$Companion
kotlin.jvm.internal.CharCompanionObject: char MAX_VALUE
com.google.gson.internal.LinkedHashTreeMap: java.util.Set keySet()
androidx.constraintlayout.widget.Barrier: int TOP
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Subhead
android.support.v4.media.session.MediaSessionCompatApi23$Callback: void onPlayFromUri(android.net.Uri,android.os.Bundle)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constrainedWidth
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setShowWhen(boolean)
dagger.internal.MapFactory: java.lang.Object get()
androidx.appcompat.R$attr: int dividerHorizontal
com.example.revolut.rates.R$styleable: int SwitchCompat_switchPadding
kotlin.coroutines.experimental.ContinuationInterceptor$Key
com.example.revolut.rates.R$id: int notification_background
kotlin.jvm.internal.PropertyReference1: PropertyReference1()
androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)
io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.ActivityChooserView: boolean dismissPopup()
androidx.loader.R$dimen: int notification_media_narrow_margin
io.reactivex.Observable: io.reactivex.Observable repeat(long)
androidx.coordinatorlayout.R$attr: int layout_dodgeInsetEdges
io.reactivex.internal.operators.observable.ObservableEmpty: java.lang.Object call()
kotlin.collections.ArraysKt___ArraysKt: char reduceRightIndexed(char[],kotlin.jvm.functions.Function3)
com.example.revolut.rates.R$attr: int collapseContentDescription
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()
io.reactivex.internal.operators.maybe.MaybeConcatArray: MaybeConcatArray(io.reactivex.MaybeSource[])
androidx.recyclerview.widget.LinearLayoutManager: int HORIZONTAL
io.reactivex.internal.operators.observable.ObservableMap
androidx.loader.R$styleable: int GradientColor_android_startY
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed: void subscribeActual(io.reactivex.Observer)
androidx.core.view.ViewCompat: android.graphics.Rect getClipBounds(android.view.View)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDrawOrigin(int,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object fold(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence flatMap(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte firstOrNull-GBYM_sE(byte[])
com.example.revolut.rates.R$styleable: int AppCompatTextView_autoSizeStepGranularity
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContent(android.widget.RemoteViews)
androidx.databinding.library.baseAdapters.BuildConfig: java.lang.String VERSION_NAME
com.jakewharton.rxbinding3.widget.SeekBarProgressChangeEvent: boolean getFromUser()
android.support.v4.media.RatingCompat: int RATING_PERCENTAGE
android.support.v4.media.MediaBrowserCompat: java.lang.String CUSTOM_ACTION_REMOVE_DOWNLOADED_FILE
androidx.appcompat.app.AlertController$AlertParams: boolean mForceInverseBackground
kotlinx.coroutines.channels.ReceiveOrClosed
kotlin.jvm.internal.CharCompanionObject: kotlin.jvm.internal.CharCompanionObject INSTANCE
okio.ByteString: int lastIndexOf(okio.ByteString)
dagger.android.DaggerContentProvider: DaggerContentProvider()
com.example.revolut.rates.R$styleable: int AppCompatTheme_dialogPreferredPadding
androidx.appcompat.app.ActionBar$TabListener
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState(androidx.recyclerview.widget.LinearLayoutManager$SavedState)
dagger.android.support.R$attr: int actionModeCloseDrawable
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTitle()
dagger.android.DispatchingAndroidInjector_Factory
kotlin.text.DelimitedRangesSequence$iterator$1: int getNextState()
kotlinx.android.extensions.CacheImplementation$Companion: CacheImplementation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.constraintlayout.widget.ConstraintSet: void clear(int,int)
androidx.appcompat.view.menu.MenuBuilder: android.content.Context getContext()
androidx.viewpager.widget.PagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setRemoteInputHistory(java.lang.CharSequence[])
io.reactivex.internal.operators.observable.ObservableToList: ObservableToList(io.reactivex.ObservableSource,java.util.concurrent.Callable)
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.Metrics sMetrics
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter
kotlinx.coroutines.JobSupport: boolean isActive()
dagger.android.support.R$styleable: int AppCompatImageView_srcCompat
com.google.gson.annotations.Since
androidx.core.view.InputDeviceCompat: int SOURCE_TOUCHSCREEN
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA
androidx.appcompat.R$styleable: int SwitchCompat_thumbTintMode
androidx.fragment.app.FragmentActivity: void supportFinishAfterTransition()
androidx.loader.content.Loader: boolean isReset()
androidx.loader.content.AsyncTaskLoader: void waitForLoader()
kotlinx.coroutines.Deferred: java.lang.Throwable getCompletionExceptionOrNull()
okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()
io.reactivex.Scheduler
androidx.appcompat.R$color: int material_grey_600
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(short[],int)
kotlin.UInt: boolean equals(java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ResolutionDimension getResolutionHeight()
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
io.reactivex.internal.operators.observable.BlockingObservableLatest
kotlin.collections.UArraysKt: java.lang.String contentToString-QwZRm1k(long[])
kotlin.coroutines.CoroutineContext$Element: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.slidingpanelayout.R$styleable: int GradientColor_android_startX
com.example.revolut.rates.R$style: int Theme_AppCompat_DayNight_NoActionBar
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable reduce(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(int[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.reflect.KMutableProperty1
androidx.legacy.v4.R$attr: int ttcIndex
androidx.appcompat.graphics.drawable.DrawableContainer: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)
androidx.core.view.InputDeviceCompat: int SOURCE_ANY
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: int getOldRight()
com.example.revolut.rates.R$attr: int toolbarNavigationButtonStyle
androidx.legacy.v4.R$string
com.example.revolut.rates.R$attr: int layout_constraintCircle
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowPending()
io.reactivex.ObservableEmitter: void setCancellable(io.reactivex.functions.Cancellable)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addAll(okhttp3.Headers)
io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function)
io.reactivex.internal.observers.InnerQueuedObserver
io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback: long serialVersionUID
io.reactivex.FlowableEmitter
io.reactivex.subjects.UnicastSubject: io.reactivex.subjects.UnicastSubject create(int)
androidx.appcompat.view.menu.MenuBuilder: void removeGroup(int)
io.reactivex.internal.util.ArrayListSupplier: io.reactivex.internal.util.ArrayListSupplier INSTANCE
kotlinx.coroutines.CoroutineStart
androidx.core.R$dimen: int notification_top_pad_large_text
androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)
androidx.legacy.coreui.R$drawable: int notification_bg_low
androidx.appcompat.R$styleable: int MenuView_android_horizontalDivider
androidx.fragment.app.FragmentHostCallback: boolean onShouldShowRequestPermissionRationale(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(char[])
io.reactivex.internal.operators.maybe.MaybeIsEmptySingle: io.reactivex.Maybe fuseToMaybe()
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener: androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(android.view.ViewPropertyAnimator,int)
kotlin.sequences.SequencesKt___SequencesKt$sorted$1: java.util.Iterator iterator()
androidx.core.graphics.drawable.IconCompat: int getResId()
dagger.android.support.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
dagger.android.support.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
dagger.android.support.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
androidx.core.widget.NestedScrollView: void onStopNestedScroll(android.view.View)
kotlinx.coroutines.DispatchedKt: void resumeCancellable(kotlin.coroutines.Continuation,java.lang.Object)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
com.jakewharton.rxbinding3.widget.AdapterViewItemClickEvent: int hashCode()
kotlin.Pair: boolean equals(java.lang.Object)
kotlin.sequences.MergingSequence: kotlin.sequences.Sequence access$getSequence1$p(kotlin.sequences.MergingSequence)
androidx.databinding.ObservableArrayList: boolean add(java.lang.Object)
kotlinx.coroutines.NodeList: NodeList()
io.reactivex.internal.operators.completable.CompletableFromAction: void subscribeActual(io.reactivex.CompletableObserver)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_DES_CBC_SHA
androidx.recyclerview.widget.LinearSmoothScroller: int mInterimTargetDx
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_endX
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: boolean handlesInternalConstraints()
io.reactivex.internal.operators.flowable.FlowableDoOnEach: void subscribeActual(org.reactivestreams.Subscriber)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.recyclerview.widget.SnapHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
com.example.revolut.rates.R$style: int Widget_AppCompat_ActionBar_TabView
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable: FlowableConcatWithCompletable(io.reactivex.Flowable,io.reactivex.CompletableSource)
android.support.v4.media.session.MediaSessionCompat$Callback: void onStop()
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle
androidx.core.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)
dagger.android.support.R$styleable: int ActionBar_contentInsetEnd
retrofit2.Converter$Factory: Converter$Factory()
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(double[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
io.reactivex.Flowable: io.reactivex.Flowable window(long,long)
dagger.android.support.R$style: int Base_Animation_AppCompat_Dialog
androidx.lifecycle.extensions.R$color: int secondary_text_default_material_light
com.example.revolut.rates.R$attr: int navigationMode
io.reactivex.internal.operators.observable.ObservableRangeLong
io.reactivex.internal.operators.observable.ObservableRefCount: ObservableRefCount(io.reactivex.observables.ConnectableObservable,int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$lastOrNull$3
androidx.appcompat.app.WindowDecorActionBar: int getNavigationItemCount()
androidx.constraintlayout.solver.LinearSystem: void addCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)
androidx.lifecycle.extensions.R$styleable: int GradientColorItem_android_color
kotlinx.coroutines.DispatchedKt: void resumeCancellableWithException(kotlin.coroutines.Continuation,java.lang.Throwable)
androidx.legacy.coreui.R$attr
kotlin.collections.MapsKt__MapsKt: java.lang.Object getValue(java.util.Map,java.lang.Object)
kotlin.text.CharsKt__CharKt: boolean equals$default(char,char,boolean,int,java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable distinctUntilChanged(io.reactivex.functions.Function)
androidx.appcompat.R$attr: int panelMenuListWidth
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDefaultNavigationIcon(android.graphics.drawable.Drawable)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addStream(android.net.Uri)
kotlin.text.StringsKt__StringsKt: boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: int getConnectionCreator()
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView mMenuView
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void clearMenuPresenters()
kotlinx.coroutines.CompletableDeferred$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.CompletableDeferred,kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.widget.DecorToolbar: int getDisplayOptions()
io.reactivex.Maybe: Maybe()
retrofit2.http.Field: boolean encoded()
androidx.appcompat.app.WindowDecorActionBar: void hideForSystem()
kotlinx.coroutines.Job: kotlinx.coroutines.selects.SelectClause0 getOnJoin()
androidx.appcompat.widget.ScrollingTabContainerView: void onAttachedToWindow()
dagger.android.ContentProviderKey: java.lang.Class value()
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List emptyList()
kotlin.collections.AbstractCollection: AbstractCollection()
kotlinx.coroutines.channels.ActorScope$DefaultImpls: boolean isActive(kotlinx.coroutines.channels.ActorScope)
com.example.revolut.rates.R$dimen: R$dimen()
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable)
androidx.appcompat.R$dimen: int abc_text_size_display_2_material
androidx.constraintlayout.solver.widgets.Rectangle: void setBounds(int,int,int,int)
kotlin.reflect.KFunction$DefaultImpls: void isExternal$annotations()
androidx.databinding.adapters.ViewBindingAdapter
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat build()
androidx.appcompat.R$styleable: int[] CoordinatorLayout
com.jakewharton.rxbinding3.widget.RxTextView: io.reactivex.Observable editorActionEvents(android.widget.TextView)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode ENHANCE_YOUR_CALM
kotlinx.coroutines.NonCancellable: boolean start()
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle: ObservableSequenceEqualSingle(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiPredicate,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(char[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.maybe.MaybeTimer: void subscribeActual(io.reactivex.MaybeObserver)
androidx.appcompat.widget.ActionBarContextView: boolean shouldDelayChildPressedState()
android.support.v4.media.MediaMetadataCompat$Builder
androidx.recyclerview.widget.RecyclerView$LayoutManager: void measureChild(android.view.View,int,int)
androidx.swiperefreshlayout.R$color: int notification_action_color_filter
dagger.android.support.R$color: int foreground_material_dark
dagger.android.support.DaggerApplication_MembersInjector
kotlin.collections.CollectionsKt__IterablesKt: java.lang.Integer collectionSizeOrNull(java.lang.Iterable)
androidx.drawerlayout.R$style: int TextAppearance_Compat_Notification_Time
com.google.gson.internal.Excluder: Excluder()
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PREPARE_FROM_SEARCH
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxy(java.net.Proxy)
androidx.constraintlayout.solver.widgets.ResolutionNode: void reset()
androidx.vectordrawable.R$style: int Widget_Compat_NotificationActionContainer
retrofit2.http.Tag
okio.ByteString: okio.ByteString hmacSha1(okio.ByteString)
androidx.appcompat.R$style: int TextAppearance_Compat_Notification
io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function,int)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onSessionDestroyed()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minBy(double[],kotlin.jvm.functions.Function1)
androidx.appcompat.app.WindowDecorActionBar: void setLogo(int)
okio.BufferedSource: long indexOf(byte,long)
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable attaches(android.view.View)
io.reactivex.Flowable: io.reactivex.Flowable cache()
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintRight_toRightOf
com.example.revolut.rates.R$attr: int layout_goneMarginLeft
kotlinx.coroutines.channels.AbstractChannel: java.lang.Object pollInternal()
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle: io.reactivex.Observable fuseToObservable()
kotlin.io.TextStreamsKt: java.lang.Object useLines(java.io.Reader,kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.RecyclerView$Adapter: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: ConflatedBroadcastChannel(java.lang.Object)
androidx.appcompat.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
androidx.constraintlayout.solver.Metrics: long barrierConnectionResolved
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int)
kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1
androidx.core.text.SpannableStringKt: void clearSpans(android.text.Spannable)
dagger.android.support.R$drawable: int abc_ratingbar_indicator_material
android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_REMOVE_QUEUE_ITEM_AT
androidx.vectordrawable.R$dimen: int compat_button_padding_horizontal_material
dagger.android.support.R$color: int material_grey_800
androidx.versionedparcelable.VersionedParcel: void writeArray(java.lang.Object[])
io.reactivex.Maybe: io.reactivex.Flowable concatEager(org.reactivestreams.Publisher)
androidx.constraintlayout.solver.ArrayLinkedVariables: float get(androidx.constraintlayout.solver.SolverVariable)
io.reactivex.internal.operators.completable.CompletableDelay: CompletableDelay(io.reactivex.CompletableSource,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
io.reactivex.internal.util.ArrayListSupplier: java.util.List call()
com.google.gson.internal.bind.SqlDateTypeAdapter: java.sql.Date read(com.google.gson.stream.JsonReader)
androidx.constraintlayout.solver.ArrayRow: ArrayRow(androidx.constraintlayout.solver.Cache)
com.example.revolut.rates.R$color: int abc_hint_foreground_material_dark
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.util.Map)
androidx.viewpager.R$dimen: int notification_right_side_padding_top
io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver: long serialVersionUID
io.reactivex.internal.operators.single.SingleDelayWithObservable$OtherSubscriber: long serialVersionUID
androidx.core.R$id: int tag_transition_group
okhttp3.Response: okhttp3.Protocol protocol()
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintRight_toRightOf
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: long serialVersionUID
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object sumBy(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
io.reactivex.processors.ReplayProcessor$ReplaySubscription: long serialVersionUID
io.reactivex.Flowable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function,boolean)
com.jakewharton.rxbinding3.core.R$color: int secondary_text_default_material_light
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMajor
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.internal.Symbol access$getNOT_IN_STACK$cp()
androidx.core.widget.NestedScrollView$OnScrollChangeListener
io.reactivex.internal.disposables.ListCompositeDisposable: void clear()
com.google.gson.internal.$Gson$Preconditions: java.lang.Object checkNotNull(java.lang.Object)
androidx.appcompat.widget.DecorToolbar
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri)
com.example.revolut.rates.R$attr: int windowNoTitle
com.example.revolut.rates.R$anim: int abc_slide_out_bottom
io.reactivex.internal.observers.CallbackCompletableObserver: void accept(java.lang.Object)
io.reactivex.subjects.ReplaySubject: io.reactivex.subjects.ReplaySubject create()
kotlin.jvm.internal.Intrinsics: void checkReturnedValueIsNotNull(java.lang.Object,java.lang.String,java.lang.String)
androidx.appcompat.R$string: int abc_menu_meta_shortcut_label
androidx.core.app.AppLaunchChecker: AppLaunchChecker()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState
dagger.android.support.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
io.reactivex.Observable: io.reactivex.Observable buffer(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,java.util.concurrent.Callable)
io.reactivex.Completable: io.reactivex.Completable ambArray(io.reactivex.CompletableSource[])
androidx.media.AudioAttributesCompat: int FLAG_HW_AV_SYNC
androidx.constraintlayout.widget.R$attr: int layout_constraintTop_creator
android.support.v4.media.MediaMetadataCompat: java.lang.Object getMediaMetadata()
kotlin.text.StringsKt__StringsKt: java.lang.String substring(java.lang.CharSequence,kotlin.ranges.IntRange)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
dagger.android.support.R$layout: int abc_popup_menu_item_layout
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_goneMarginEnd
androidx.media.MediaBrowserProtocol: int CLIENT_VERSION_CURRENT
okhttp3.Dns: okhttp3.Dns SYSTEM
com.example.revolut.rates.R$styleable: int ActionBar_contentInsetStart
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onTouchEvent(android.view.MotionEvent)
kotlinx.coroutines.internal.AtomicDesc: java.lang.Object prepare(kotlinx.coroutines.internal.AtomicOp)
androidx.appcompat.R$attr: int actionDropDownStyle
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection filterNotNullTo(kotlin.sequences.Sequence,java.util.Collection)
com.jakewharton.rxbinding3.widget.AdapterDataChangeObservable$ObserverDisposable$dataSetObserver$1: void onChanged()
com.example.revolut.rates.R$id: int content
kotlin.collections.AbstractSet: java.util.Iterator iterator()
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_SERVICE
androidx.core.content.SharedPreferencesCompat$EditorCompat: void apply(android.content.SharedPreferences$Editor)
androidx.core.util.SizeKt: float component2(android.util.SizeF)
androidx.core.os.LocaleListCompat: int size()
okhttp3.internal.Internal: void initializeInstanceForTests()
io.reactivex.internal.disposables.EmptyDisposable: boolean offer(java.lang.Object)
kotlin.random.Random$Default: long nextLong(long,long)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintTop_toBottomOf
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,int)
dagger.android.support.R$styleable: int SearchView_queryHint
kotlinx.coroutines.internal.ThreadSafeHeap: boolean remove(kotlinx.coroutines.internal.ThreadSafeHeapNode)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_SearchResult
retrofit2.KotlinExtensions$await$4$2: void onResponse(retrofit2.Call,retrofit2.Response)
dagger.android.support.R$dimen: int abc_alert_dialog_button_bar_height
io.reactivex.internal.operators.parallel.ParallelSortedJoin
kotlin.random.URandomKt: int nextUInt-qCasIEU(kotlin.random.Random,int)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.core.view.ViewKt: void updatePaddingRelative(android.view.View,int,int,int,int)
dagger.android.support.R$styleable: int AppCompatTheme_actionBarTabTextStyle
okhttp3.internal.cache.CacheStrategy: okhttp3.Response cacheResponse
dagger.android.support.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
androidx.recyclerview.widget.SortedList$BatchedCallback: boolean areContentsTheSame(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeErrorCallable: MaybeErrorCallable(java.util.concurrent.Callable)
io.reactivex.observers.ResourceSingleObserver
io.reactivex.internal.operators.observable.ObservableReduceWithSingle: void subscribeActual(io.reactivex.SingleObserver)
dagger.android.support.R$styleable: int MenuView_android_headerBackground
dagger.android.support.R$styleable: int Toolbar_subtitleTextAppearance
io.reactivex.internal.operators.maybe.MaybeOnErrorReturn
kotlin.ranges.ULongRange: boolean isEmpty()
com.example.revolut.rates.view.adapter.CurrenciesAdapter: int getItemCount()
io.reactivex.internal.disposables.CancellableDisposable: void dispose()
androidx.appcompat.app.WindowDecorActionBar
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedPreScroll(android.view.View,int,int,int[])
com.google.gson.internal.bind.JsonTreeReader: double nextDouble()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] sortedArrayWith(java.lang.Object[],java.util.Comparator)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)
com.example.revolut.rates.R$styleable: int AnimatedStateListDrawableItem_android_drawable
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short getOrNull(short[],int)
androidx.appcompat.widget.AppCompatDrawableManager
kotlin.random.Random$Default: long nextLong()
kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)
androidx.loader.R$layout: int notification_template_custom_big
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[])
androidx.recyclerview.widget.GridLayoutManager: int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(double[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.CoroutineScheduler: int access$createdWorkers(kotlinx.coroutines.scheduling.CoroutineScheduler,long)
androidx.recyclerview.R$styleable: int FontFamily_fontProviderCerts
androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)
com.example.revolut.rates.R$drawable: int notification_bg_low
com.example.revolut.rates.R$styleable: int MenuItem_android_alphabeticShortcut
io.reactivex.subscribers.DefaultSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.PorterDuff$Mode getIconTintMode()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.CharProgression downTo(char,char)
androidx.appcompat.R$color: int dim_foreground_material_dark
androidx.cursoradapter.widget.SimpleCursorAdapter: SimpleCursorAdapter(android.content.Context,int,android.database.Cursor,java.lang.String[],int[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(byte[],kotlin.jvm.functions.Function1)
retrofit2.Converter$Factory: java.lang.reflect.Type getParameterUpperBound(int,java.lang.reflect.ParameterizedType)
androidx.core.view.ScrollingView: int computeHorizontalScrollOffset()
kotlin.text.StringsKt___StringsKt: java.lang.String takeLast(java.lang.String,int)
androidx.appcompat.R$styleable: int AppCompatTheme_ratingBarStyleSmall
com.example.revolut.rates.R$id: int wrap_content
io.reactivex.internal.operators.single.SingleToObservable: SingleToObservable(io.reactivex.SingleSource)
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutObserver: long serialVersionUID
kotlin.jvm.internal.DoubleCompanionObject
io.reactivex.Flowable: io.reactivex.Flowable debounce(io.reactivex.functions.Function)
io.reactivex.internal.operators.observable.ObservableTakeLast
androidx.appcompat.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
androidx.appcompat.R$style: int Base_Widget_AppCompat_Button_Borderless
androidx.core.graphics.ColorKt: long toColorLong(int)
androidx.appcompat.R$color: int abc_search_url_text_normal
kotlin.jvm.internal.LocalVariableReferencesKt: java.lang.Void access$notSupportedError()
com.example.revolut.rates.di.AppModule: retrofit2.Retrofit getRetrofit()
com.example.revolut.rates.R$dimen: int abc_text_size_subtitle_material_toolbar
androidx.fragment.app.Fragment: boolean isMenuVisible()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(double[],java.util.Collection,kotlin.jvm.functions.Function1)
io.reactivex.subjects.Subject: io.reactivex.subjects.Subject toSerialized()
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
io.reactivex.internal.operators.maybe.MaybeDoFinally: MaybeDoFinally(io.reactivex.MaybeSource,io.reactivex.functions.Action)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
androidx.lifecycle.extensions.R$id: int async
androidx.core.view.InputDeviceCompat: int SOURCE_TOUCH_NAVIGATION
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(int,int)
com.jakewharton.rxbinding3.widget.RatingBarChangeEvent: float component2()
io.reactivex.Flowable: io.reactivex.Flowable takeUntil(io.reactivex.functions.Predicate)
io.reactivex.Maybe: io.reactivex.Flowable mergeArrayDelayError(io.reactivex.MaybeSource[])
com.example.revolut.rates.R$id: int action_menu_divider
kotlin.collections.ArraysKt___ArraysKt: char[] reversedArray(char[])
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator()
kotlin.collections.ArraysKt___ArraysKt: short reduceRight(short[],kotlin.jvm.functions.Function2)
com.jakewharton.rxbinding3.core.R$dimen: int notification_right_icon_size
com.jakewharton.rxbinding3.core.R$layout: int notification_action
kotlin.io.FilesKt__FileReadWriteKt: java.lang.Object useLines(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.maybe.MaybeErrorCallable
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintCircleAngle
io.reactivex.internal.util.BackpressureHelper
androidx.appcompat.app.AlertController$AlertParams: android.content.Context mContext
androidx.constraintlayout.widget.ConstraintSet: androidx.constraintlayout.widget.ConstraintSet$Constraint getParameters(int)
dagger.android.support.R$attr: int buttonStyle
com.example.revolut.rates.R$style: int Widget_AppCompat_ActionBar_Solid
kotlin.io.FilePathComponents: int getSize()
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ActionButton
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: java.lang.Object get(int)
androidx.lifecycle.extensions.R$dimen: int notification_big_circle_margin
io.reactivex.internal.subscribers.InnerQueuedSubscriber: void onError(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(byte[],byte[])
dagger.android.support.R$styleable: int AppCompatTextHelper_android_drawableRight
com.example.revolut.rates.R$attr: int actionBarPopupTheme
kotlin.text.MatcherMatchResult$groups$1: boolean contains(java.lang.Object)
io.reactivex.internal.util.VolatileSizeArrayList: java.util.List subList(int,int)
androidx.databinding.library.baseAdapters.BR: int viewModel
androidx.core.view.ViewKt: boolean isInvisible(android.view.View)
io.reactivex.internal.observers.FutureSingleObserver: java.lang.Object get()
okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)
io.reactivex.internal.subscriptions.DeferredScalarSubscription: java.lang.Object value
androidx.core.graphics.MatrixKt: android.graphics.Matrix scaleMatrix$default(float,float,int,java.lang.Object)
androidx.constraintlayout.solver.widgets.ChainHead: boolean mHasDefinedWeights
kotlin.collections.ArraysKt___ArraysKt: float reduceIndexed(float[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.ThreadPoolDispatcher: void close()
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.lang.String getColumnsAlignmentRepresentation()
kotlinx.coroutines.channels.ConflatedBroadcastChannel$onSend$1: void registerSelectClause2(kotlinx.coroutines.selects.SelectInstance,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.asynclayoutinflater.R$layout: int notification_action_tombstone
com.example.revolut.rates.R$id: int gone
kotlin.collections.AbstractList: AbstractList()
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int)
androidx.appcompat.R$drawable: int abc_popup_background_mtrl_mult
androidx.appcompat.R$drawable: int notification_bg
androidx.databinding.library.baseAdapters.BuildConfig: java.lang.String BUILD_TYPE
kotlin.ranges.UIntProgression: boolean equals(java.lang.Object)
androidx.constraintlayout.solver.widgets.ResolutionNode: ResolutionNode()
okio.Buffer: void readFully(byte[])
com.jakewharton.rxbinding3.widget.TextViewEditorActionEvent: com.jakewharton.rxbinding3.widget.TextViewEditorActionEvent copy(android.widget.TextView,int,android.view.KeyEvent)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
kotlin.text.MatcherMatchResult$groupValues$1: int lastIndexOf(java.lang.String)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.Pair partition(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
android.support.v4.media.session.MediaControllerCompat: void adjustVolume(int,int)
io.reactivex.Observable: io.reactivex.Observable concatMap(io.reactivex.functions.Function,int)
androidx.core.graphics.ColorUtils: void LABToXYZ(double,double,double,double[])
io.reactivex.internal.operators.parallel.ParallelReduce: ParallelReduce(io.reactivex.parallel.ParallelFlowable,java.util.concurrent.Callable,io.reactivex.functions.BiFunction)
androidx.appcompat.R$attr: int layout_insetEdge
kotlin.text.Regex: boolean containsMatchIn(java.lang.CharSequence)
com.jakewharton.rxbinding3.view.RxViewGroup
androidx.lifecycle.extensions.R$integer
androidx.recyclerview.widget.StaggeredGridLayoutManager: void offsetChildrenVertical(int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setContainerItemSkip(int)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: boolean isEmpty()
com.example.revolut.rates.di.AppModule_ProvideRatesApiFactory: AppModule_ProvideRatesApiFactory(com.example.revolut.rates.di.AppModule)
dagger.android.support.R$id: int search_button
kotlin.jvm.internal.BooleanSpreadBuilder: void add(boolean)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_editor_absoluteX
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
androidx.lifecycle.R
io.reactivex.Single: io.reactivex.Single materialize()
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult
kotlin.text.StringsKt___StringsKt: java.util.List windowed(java.lang.CharSequence,int,int,boolean)
androidx.appcompat.R$styleable: int[] Toolbar
androidx.appcompat.app.AppCompatActivity: void onPanelClosed(int,android.view.Menu)
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,boolean,boolean,io.reactivex.functions.Action)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: java.lang.Comparable maxOf(java.lang.Comparable,java.lang.Comparable)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void addToSolver(androidx.constraintlayout.solver.LinearSystem)
kotlinx.coroutines.channels.LinkedListChannel: boolean isBufferFull()
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(int[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.ContextScope: ContextScope(kotlin.coroutines.CoroutineContext)
kotlin.text.StringsKt___StringsKt: java.util.Map associateByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isEnabled()
dagger.android.support.R$id: int ifRoom
androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener: boolean onChooseActivity(androidx.appcompat.widget.ActivityChooserModel,android.content.Intent)
dagger.android.support.R$styleable: int ViewStubCompat_android_layout
dagger.android.support.R$styleable: int AppCompatTheme_switchStyle
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed: ObservableThrottleFirstTimed(io.reactivex.ObservableSource,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.animation.AnimatorKt$addPauseListener$1: androidx.core.animation.AnimatorKt$addPauseListener$1 INSTANCE
androidx.appcompat.R$attr: int selectableItemBackground
androidx.core.graphics.RegionKt$iterator$1: void remove()
io.reactivex.observers.ResourceMaybeObserver: void add(io.reactivex.disposables.Disposable)
androidx.databinding.ViewDataBinding: java.lang.Object[] mapBindings(androidx.databinding.DataBindingComponent,android.view.View[],int,androidx.databinding.ViewDataBinding$IncludedLayouts,android.util.SparseIntArray)
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: io.reactivex.observers.BaseTestConsumer$TestWaitStrategy SLEEP_1000MS
kotlin.internal.NoInfer
kotlinx.coroutines.channels.BroadcastChannel$DefaultImpls: kotlinx.coroutines.channels.SubscriptionReceiveChannel openSubscription(kotlinx.coroutines.channels.BroadcastChannel)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style)
com.example.revolut.rates.R$drawable: int icon_sek
androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String)
androidx.databinding.adapters.SwitchCompatBindingAdapter
com.example.revolut.rates.R$style: int Base_DialogWindowTitleBackground_AppCompat
com.example.revolut.rates.R$styleable: int Toolbar_collapseIcon
kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt: SequenceBuilderKt__SequenceBuilderKt()
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher plus(kotlinx.coroutines.CoroutineDispatcher)
dagger.android.DaggerService: void onCreate()
kotlin.UShortArray: boolean retainAll(java.util.Collection)
kotlin.collections.AbstractCollection: boolean removeAll(java.util.Collection)
androidx.legacy.v4.R$id: int notification_main_column_container
androidx.core.view.ViewKt$doOnNextLayout$1: ViewKt$doOnNextLayout$1(kotlin.jvm.functions.Function1)
io.reactivex.annotations.BackpressureKind: io.reactivex.annotations.BackpressureKind valueOf(java.lang.String)
io.reactivex.internal.operators.maybe.MaybeOnErrorNext: MaybeOnErrorNext(io.reactivex.MaybeSource,io.reactivex.functions.Function,boolean)
androidx.appcompat.R$styleable: int AppCompatTheme_alertDialogStyle
androidx.appcompat.R$anim: int abc_slide_out_top
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA256
com.jakewharton.rxbinding3.internal.Preconditions: boolean checkMainThread(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableTimer$TimerSubscriber: long serialVersionUID
androidx.media.R$styleable: int FontFamilyFont_fontStyle
androidx.core.view.DisplayCutoutCompat: int getSafeInsetLeft()
com.example.revolut.rates.R$styleable: int AlertDialog_buttonPanelSideLayout
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isImportantForAccessibility()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.view.GravityCompat: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function getOnCompletableAssembly()
androidx.appcompat.app.ActionBar: void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
androidx.databinding.adapters.ViewGroupBindingAdapter: void setListener(android.view.ViewGroup,androidx.databinding.adapters.ViewGroupBindingAdapter$OnAnimationStart,androidx.databinding.adapters.ViewGroupBindingAdapter$OnAnimationEnd,androidx.databinding.adapters.ViewGroupBindingAdapter$OnAnimationRepeat)
androidx.appcompat.R$dimen: int tooltip_horizontal_padding
io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int,java.util.concurrent.Callable,boolean)
io.reactivex.internal.operators.flowable.FlowableFromArray: void subscribeActual(org.reactivestreams.Subscriber)
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Bundle getSessionToken2Bundle()
kotlin.collections.EmptySet: boolean removeAll(java.util.Collection)
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer()
io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit,boolean)
io.reactivex.internal.operators.single.SingleContains
kotlin.collections.CollectionsKt__IterablesKt: int collectionSizeOrDefault(java.lang.Iterable,int)
kotlin.jvm.internal.Ref$CharRef: char element
okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)
androidx.appcompat.widget.Toolbar: void onDetachedFromWindow()
okio.Buffer: okio.Buffer write(okio.ByteString)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_128_CBC_SHA
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(long[],int,int)
androidx.viewpager.R$dimen: int notification_main_column_padding_top
com.example.revolut.rates.R$style: int Base_Animation_AppCompat_DropDownUp
okhttp3.internal.tls.BasicTrustRootIndex: boolean equals(java.lang.Object)
androidx.drawerlayout.R$styleable: int GradientColor_android_endColor
io.reactivex.internal.subscribers.SubscriberResourceWrapper: void onError(java.lang.Throwable)
kotlinx.coroutines.CoroutineId: java.lang.String updateThreadContext(kotlin.coroutines.CoroutineContext)
androidx.appcompat.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
io.reactivex.internal.util.ObservableQueueDrain: boolean cancelled()
androidx.core.view.MenuItemCompat: androidx.core.view.ActionProvider getActionProvider(android.view.MenuItem)
androidx.core.widget.EdgeEffectCompat: boolean onAbsorb(int)
androidx.core.view.MotionEventCompat: int AXIS_HAT_X
androidx.legacy.coreui.R$styleable
androidx.viewpager.widget.ViewPager$SavedState
io.reactivex.internal.operators.maybe.MaybeAmb: void subscribeActual(io.reactivex.MaybeObserver)
kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)
io.reactivex.Completable: java.lang.Throwable blockingGet()
com.google.gson.LongSerializationPolicy
com.example.revolut.rates.R$drawable: int abc_scrubber_control_off_mtrl_alpha
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
androidx.legacy.v4.R$id: int action_text
io.reactivex.internal.observers.DeferredScalarObserver: DeferredScalarObserver(io.reactivex.Observer)
dagger.android.support.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
com.example.revolut.rates.R$styleable: int[] LinearConstraintLayout
kotlin.math.MathKt__MathJVMKt: double acosh(double)
okhttp3.internal.platform.Platform: int INFO
okio.ForwardingSink: void close()
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence windowedSequence$default(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.AbstractContinuation: void run()
retrofit2.Call: void cancel()
androidx.appcompat.app.ActionBar: void setCustomView(android.view.View)
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable scrollChangeEvents(android.view.View)
io.reactivex.exceptions.CompositeException: int size()
androidx.appcompat.R$attr: int navigationContentDescription
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(long[],int)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintWidth_percent
kotlin.collections.ArraysKt___ArraysKt: boolean contains(java.lang.Object[],java.lang.Object)
io.reactivex.internal.functions.Functions: io.reactivex.functions.Action futureAction(java.util.concurrent.Future)
androidx.databinding.adapters.DatePickerBindingAdapter
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTooltipText(java.lang.CharSequence)
androidx.media.MediaBrowserProtocol: int CLIENT_MSG_SEND_CUSTOM_ACTION
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)
androidx.appcompat.app.ActionBar$Tab: android.view.View getCustomView()
io.reactivex.internal.util.VolatileSizeArrayList: java.lang.Object set(int,java.lang.Object)
okhttp3.Response$Builder: okhttp3.Response$Builder sentRequestAtMillis(long)
androidx.legacy.v4.R$styleable: int[] ColorStateListItem
dagger.android.support.R$styleable: int AppCompatTheme_actionMenuTextAppearance
androidx.fragment.R$id: int none
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: float getMax()
androidx.core.app.NotificationCompat: int DEFAULT_VIBRATE
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_2
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: int getRowSpan()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: int indexOf(java.lang.Object)
com.example.revolut.rates.R$attr: int closeIcon
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTint(int)
androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler: void prepareForDrop(android.view.View,android.view.View,int,int)
kotlin.sequences.TransformingIndexedSequence$iterator$1
dagger.android.AndroidMemorySensitiveReferenceManager_Factory: dagger.android.AndroidMemorySensitiveReferenceManager provideInstance(javax.inject.Provider)
io.reactivex.disposables.SerialDisposable: io.reactivex.disposables.Disposable get()
androidx.core.provider.FontRequest: java.lang.String toString()
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_DIV
androidx.appcompat.app.AppCompatDelegate$NightMode
kotlin.sequences.TransformingIndexedSequence$iterator$1: java.lang.Object next()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduce(java.lang.Object[],kotlin.jvm.functions.Function2)
io.reactivex.internal.operators.completable.CompletableErrorSupplier: CompletableErrorSupplier(java.util.concurrent.Callable)
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError: void subscribeActual(org.reactivestreams.Subscriber)
kotlinx.coroutines.channels.AbstractChannel$TryPollDesc: java.lang.Object failure(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object)
dagger.android.support.R$styleable: int SearchView_searchIcon
androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Extender)
kotlin.ranges.IntProgression: int hashCode()
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.text.RegexOption: int getValue()
androidx.recyclerview.widget.RecyclerView: void removeItemDecorationAt(int)
com.example.revolut.rates.R$dimen: int currency_image_margin
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setCheckable(boolean)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintWidth_default
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: void fill-2fe2U9s(int[],int,int,int)
io.reactivex.internal.subscriptions.BasicQueueSubscription: long serialVersionUID
androidx.appcompat.R$attr: int autoSizeStepGranularity
androidx.recyclerview.R$attr: int fontStyle
com.example.revolut.rates.R$styleable: int[] StateListDrawableItem
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence ifEmpty(kotlin.sequences.Sequence,kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(short[],kotlin.ranges.IntRange)
dagger.android.support.R$color: int abc_primary_text_disable_only_material_dark
androidx.loader.R$drawable: int notification_bg_normal
kotlin.UIntArray: boolean containsAll-impl(int[],java.util.Collection)
com.example.revolut.rates.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
androidx.appcompat.R$dimen: int disabled_alpha_material_light
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_RatingBar_Small
androidx.recyclerview.widget.LinearLayoutManager
androidx.core.widget.PopupMenuCompat: android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object)
okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
androidx.core.R$id: int icon_group
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ListPopupWindow
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_PROVIDER_NOT_FOUND
androidx.core.ktx.R$drawable: int notification_bg
androidx.appcompat.view.menu.MenuBuilder: void clearAll()
androidx.constraintlayout.widget.Guideline: void draw(android.graphics.Canvas)
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: long serialVersionUID
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
io.reactivex.internal.operators.observable.ObservableFromArray
io.reactivex.internal.util.LinkedArrayList: LinkedArrayList(int)
androidx.recyclerview.widget.RecyclerView: boolean drawChild(android.graphics.Canvas,android.view.View,long)
io.reactivex.Flowable: io.reactivex.Flowable publish(io.reactivex.functions.Function,int)
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener: void onRequestDisallowInterceptTouchEvent(boolean)
androidx.drawerlayout.R$drawable: int notification_bg
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
androidx.appcompat.widget.Toolbar: void setTitle(int)
androidx.appcompat.widget.ListPopupWindow: int POSITION_PROMPT_ABOVE
io.reactivex.Completable: io.reactivex.Completable concat(org.reactivestreams.Publisher)
androidx.recyclerview.widget.SortedList$BatchedCallback: void onRemoved(int,int)
androidx.fragment.R$attr: int layout_anchor
com.example.revolut.rates.R$styleable: int MenuItem_numericModifiers
io.reactivex.BackpressureOverflowStrategy: io.reactivex.BackpressureOverflowStrategy[] values()
androidx.constraintlayout.solver.widgets.Guideline: void updateFromSolver(androidx.constraintlayout.solver.LinearSystem)
androidx.recyclerview.widget.ListAdapter: ListAdapter(androidx.recyclerview.widget.DiffUtil$ItemCallback)
androidx.appcompat.R$dimen: int tooltip_y_offset_non_touch
com.example.revolut.rates.R$attr: int icon
androidx.recyclerview.widget.StaggeredGridLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy
com.example.revolut.rates.di.AppModule_ProvideCurrenciesRepositoryFactory: java.lang.Object get()
kotlinx.coroutines.Job: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1,boolean)
io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okio.BufferedSource: java.lang.String readUtf8(long)
kotlin.internal.DynamicExtension
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(int)
androidx.databinding.adapters.AutoCompleteTextViewBindingAdapter: void setValidator(android.widget.AutoCompleteTextView,androidx.databinding.adapters.AutoCompleteTextViewBindingAdapter$FixText,androidx.databinding.adapters.AutoCompleteTextViewBindingAdapter$IsValid)
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged
androidx.core.app.JobIntentService: android.os.IBinder onBind(android.content.Intent)
androidx.core.view.ViewPropertyAnimatorCompat: long getStartDelay()
androidx.recyclerview.widget.LinearLayoutManager$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.arch.core.R
androidx.appcompat.R$attr: int progressBarPadding
kotlinx.coroutines.scheduling.CoroutineScheduler: CoroutineScheduler(int,int,long,java.lang.String)
androidx.lifecycle.extensions.R$styleable: int FontFamily_fontProviderFetchTimeout
dagger.android.support.R$attr: int actionLayout
androidx.constraintlayout.solver.widgets.ConstraintWidget: void analyze(int)
androidx.annotation.RestrictTo
dagger.android.support.R$drawable
kotlinx.coroutines.channels.ActorKt: kotlinx.coroutines.channels.SendChannel actor$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_android_font
androidx.core.content.FileProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Appendable joinTo$default(kotlin.sequences.Sequence,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[])
kotlinx.coroutines.BlockingEventLoop: boolean isCompleted()
io.reactivex.internal.operators.flowable.FlowableAny$AnySubscriber: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
androidx.vectordrawable.R$attr
dagger.internal.SetFactory$Builder: dagger.internal.SetFactory$Builder addCollectionProvider(javax.inject.Provider)
dagger.android.support.R$attr: int actionBarTheme
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Subhead_Inverse
dagger.android.support.R$styleable: int LinearLayoutCompat_android_baselineAligned
io.reactivex.Observable: io.reactivex.Observable timestamp(java.util.concurrent.TimeUnit)
kotlinx.coroutines.channels.BroadcastChannel$Factory
kotlin.contracts.SimpleEffect: kotlin.contracts.ConditionalEffect implies(boolean)
androidx.core.graphics.RectKt: android.graphics.Rect minus(android.graphics.Rect,android.graphics.Point)
androidx.core.view.ViewCompat: android.view.Display getDisplay(android.view.View)
androidx.core.app.NotificationCompat: int FLAG_LOCAL_ONLY
dagger.android.support.R$styleable: int AppCompatTheme_popupWindowStyle
io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,boolean)
io.reactivex.Flowable: io.reactivex.Flowable intervalRange(long,long,long,long,java.util.concurrent.TimeUnit)
kotlin.text.StringsKt___StringsKt: java.util.Map associateBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.reactivex.internal.observers.QueueDrainObserver: QueueDrainObserver(io.reactivex.Observer,io.reactivex.internal.fuseable.SimplePlainQueue)
androidx.appcompat.view.menu.MenuBuilder: void close(boolean)
kotlin.sequences.DropWhileSequence$iterator$1: void setDropState(int)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: int SCOUT_CREATOR
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(byte[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.random.AbstractPlatformRandom
androidx.core.view.accessibility.AccessibilityRecordCompat: int getRemovedCount()
io.reactivex.Observable: io.reactivex.Observable sorted()
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: io.reactivex.observers.BaseTestConsumer$TestWaitStrategy SLEEP_1MS
androidx.recyclerview.R$styleable: int FontFamilyFont_android_ttcIndex
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List distinctBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.ULong
com.example.revolut.rates.view.MainActivity: void access$hideKeyboard(com.example.revolut.rates.view.MainActivity)
androidx.recyclerview.widget.RecyclerView: void onScrolled(int,int)
kotlin.text.Regex: Regex(java.lang.String,java.util.Set)
com.example.revolut.rates.R$string: int abc_shareactionprovider_share_with_application
io.reactivex.internal.operators.observable.ObservableRetryPredicate$RepeatObserver: long serialVersionUID
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_NONE
androidx.core.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiverCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent)
okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder disableInnerClassSerialization()
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_baselineAligned
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken STRING
kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.CoroutineExceptionHandler,java.lang.Object,kotlin.jvm.functions.Function2)
dagger.android.support.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
okio.ByteString: int compareTo(java.lang.Object)
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: void onDrop(java.lang.Object)
androidx.core.graphics.MatrixKt: float[] values(android.graphics.Matrix)
io.reactivex.observables.ConnectableObservable: io.reactivex.Observable refCount(long,java.util.concurrent.TimeUnit)
com.jakewharton.rxbinding3.widget.AdapterViewItemSelectionEvent: int getPosition()
androidx.appcompat.R$style: int Platform_Widget_AppCompat_Spinner
androidx.media.MediaBrowserProtocol: java.lang.String EXTRA_SERVICE_VERSION
androidx.core.graphics.ColorUtils: int compositeColors(int,int)
io.reactivex.internal.operators.observable.ObservableBufferBoundary: void subscribeActual(io.reactivex.Observer)
androidx.databinding.library.baseAdapters.R$id: int onAttachStateChangeListener
androidx.core.view.InputDeviceCompat: int SOURCE_ROTARY_ENCODER
kotlin.Experimental
androidx.appcompat.widget.AppCompatSeekBar: AppCompatSeekBar(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.app.AlertController$AlertParams: java.lang.String mIsCheckedColumn
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat: boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapNotNullTo$3: ChannelsKt__Channels_commonKt$mapNotNullTo$3(kotlin.coroutines.Continuation)
kotlin.jvm.internal.ClassReference: java.util.List getSealedSubclasses()
kotlin.io.FileSystemException: java.io.File getFile()
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
io.reactivex.subscribers.DefaultSubscriber: void request(long)
androidx.loader.R$dimen: int notification_content_margin_start
kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.text.MatcherMatchResult$groupValues$1: java.lang.Object get(int)
dagger.android.support.R$styleable: int[] PopupWindowBackgroundState
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] toUIntArray(kotlin.UInt[])
io.reactivex.internal.subscribers.LambdaSubscriber: void cancel()
io.reactivex.subscribers.DefaultSubscriber: DefaultSubscriber()
io.reactivex.Observable: io.reactivex.Observable buffer(java.util.concurrent.Callable,java.util.concurrent.Callable)
androidx.databinding.library.baseAdapters.DataBinderMapperImpl: int getLayoutId(java.lang.String)
androidx.appcompat.R$style: int Widget_AppCompat_ActionBar_TabText
android.support.v4.media.session.PlaybackStateCompat: int describeContents()
io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybeDelayError(io.reactivex.functions.Function,boolean,int)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.core.graphics.drawable.DrawableKt: android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config)
androidx.recyclerview.widget.SortedList$BatchedCallback: int compare(java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: LockFreeLinkedListNode$CondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setChangingConfigurations(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressViewOffset(boolean,int,int)
okhttp3.internal.ws.RealWebSocket
androidx.recyclerview.R$attr: int fontVariationSettings
androidx.swiperefreshlayout.R$id: int blocking
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener: DrawerLayout$SimpleDrawerListener()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double singleOrNull(double[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.example.revolut.rates.R$styleable: int CoordinatorLayout_Layout_layout_keyline
dagger.android.support.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
androidx.core.animation.AnimatorKt$doOnStart$$inlined$addListener$1: void onAnimationRepeat(android.animation.Animator)
okhttp3.ConnectionSpec: boolean isTls()
androidx.core.view.ViewCompat: void setLayoutDirection(android.view.View,int)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBeforeLast(java.lang.String,char,java.lang.String,java.lang.String)
kotlin.text.StringsKt__StringsKt: java.util.List split$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.lang.String toString()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
androidx.customview.R$drawable: int notification_tile_bg
io.reactivex.internal.observers.FutureObserver: void dispose()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.operators.flowable.FlowableRetryWhen: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.collections.EmptyIterator
dagger.android.support.R$layout: int abc_activity_chooser_view
com.example.revolut.rates.R$styleable: int AppCompatTextHelper_android_textAppearance
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_GROUP_KEY
androidx.legacy.v4.R$attr: int fontVariationSettings
com.example.revolut.rates.R$drawable: int abc_text_select_handle_middle_mtrl_dark
android.support.v4.media.MediaMetadataCompat: android.support.v4.media.RatingCompat getRating(java.lang.String)
androidx.appcompat.R$style: int Base_V23_Theme_AppCompat
androidx.appcompat.R$color: int bright_foreground_disabled_material_dark
io.reactivex.Observable: io.reactivex.Observable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
io.reactivex.internal.observers.BlockingBaseObserver: BlockingBaseObserver()
androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener: void onInflateFinished(android.view.View,int,android.view.ViewGroup)
androidx.vectordrawable.R$styleable: int CoordinatorLayout_Layout_layout_anchor
androidx.legacy.coreui.R$id: int text2
kotlin.collections.EmptyList: java.lang.Void remove(int)
io.reactivex.internal.operators.parallel.ParallelFilter: int parallelism()
dagger.android.support.R$styleable: int CompoundButton_buttonTintMode
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object any(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.core.app.ShareCompat$IntentBuilder
androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View,int)
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
androidx.drawerlayout.widget.DrawerLayout: void onAttachedToWindow()
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String)
androidx.appcompat.app.AlertController$AlertParams: android.widget.ListAdapter mAdapter
androidx.swiperefreshlayout.R$style: int TextAppearance_Compat_Notification_Title
com.example.revolut.rates.common.ConstantsKt: long RETRIES
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
androidx.lifecycle.GeneratedAdapter
androidx.databinding.ViewDataBinding: boolean updateRegistration(int,androidx.databinding.ObservableList)
dagger.android.support.R$color: int switch_thumb_normal_material_light
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(float[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.databinding.ViewDataBinding
androidx.core.R$styleable: int FontFamilyFont_android_fontWeight
dagger.android.support.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
io.reactivex.internal.operators.maybe.MaybeDoOnEvent: void subscribeActual(io.reactivex.MaybeObserver)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-kdPth3s(byte[],byte[])
com.jakewharton.rxbinding3.core.R$id: int tag_unhandled_key_listeners
kotlin.text.MatchGroup: kotlin.text.MatchGroup copy$default(kotlin.text.MatchGroup,java.lang.String,kotlin.ranges.IntRange,int,java.lang.Object)
retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory: retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory create()
androidx.databinding.ListChangeRegistry: void notifyMoved(androidx.databinding.ObservableList,int,int,int)
androidx.core.app.NotificationCompat$MessagingStyle$Message: NotificationCompat$MessagingStyle$Message(java.lang.CharSequence,long,androidx.core.app.Person)
androidx.core.view.ViewCompat: void setRotationY(android.view.View,float)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder disableInnerClassSerialization()
io.reactivex.subjects.SingleSubject: io.reactivex.subjects.SingleSubject create()
androidx.databinding.adapters.NumberPickerBindingAdapter: void setListeners(android.widget.NumberPicker,android.widget.NumberPicker$OnValueChangeListener,androidx.databinding.InverseBindingListener)
com.example.revolut.rates.R$styleable: int[] Spinner
androidx.legacy.coreui.R$id: int tag_unhandled_key_listeners
androidx.core.content.MimeTypeFilter: java.lang.String matches(java.lang.String,java.lang.String[])
dagger.android.support.R$styleable: int ActionMode_backgroundSplit
androidx.versionedparcelable.VersionedParcel: void writeBundle(android.os.Bundle)
androidx.core.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()
androidx.core.text.PrecomputedTextCompat$Params: int getHyphenationFrequency()
io.reactivex.subscribers.TestSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.R$drawable: int abc_vector_test
androidx.constraintlayout.solver.widgets.ConstraintWidget: float DEFAULT_BIAS
androidx.annotation.Dimension
io.reactivex.Completable: io.reactivex.Completable lift(io.reactivex.CompletableOperator)
kotlin.coroutines.ContinuationKt$Continuation$1: void resumeWith(java.lang.Object)
androidx.recyclerview.R$id: int right_side
androidx.appcompat.R$styleable: int Spinner_android_dropDownWidth
androidx.core.ktx.R$drawable: int notification_bg_normal
androidx.core.widget.NestedScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.viewpager.widget.PagerTabStrip: void setDrawFullUnderline(boolean)
android.support.v4.media.session.IMediaSession: void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
androidx.constraintlayout.widget.ConstraintSet: void clone(android.content.Context,int)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer awaitDone(long,java.util.concurrent.TimeUnit)
io.reactivex.internal.fuseable.HasUpstreamSingleSource: io.reactivex.SingleSource source()
androidx.loader.content.ModernAsyncTask$Status
androidx.databinding.ListChangeRegistry: void notifyCallbacks(java.lang.Object,int,java.lang.Object)
retrofit2.http.Path: java.lang.String value()
dagger.android.support.R$attr: int goIcon
androidx.core.content.ContextCompat: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable
kotlin.InitializedLazyImpl: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(byte[],byte[],kotlin.jvm.functions.Function2)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
kotlin.coroutines.ContinuationKt: void startCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
androidx.databinding.adapters.ViewBindingAdapter: void setPaddingTop(android.view.View,float)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
kotlinx.coroutines.selects.SelectBuilder
okio.Buffer: java.lang.Object clone()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View,int)
androidx.core.content.ContextKt: void withStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1)
androidx.asynclayoutinflater.R$color
androidx.drawerlayout.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionProvider(android.view.ActionProvider)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String)
androidx.core.view.ViewKt: int getMarginRight(android.view.View)
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] plus(byte[],byte)
androidx.media.R$id: int chronometer
androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicHeight()
androidx.fragment.app.Fragment: void onHiddenChanged(boolean)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatRadioButton
androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)
androidx.asynclayoutinflater.R$drawable: int notification_bg
androidx.constraintlayout.solver.widgets.Guideline: int VERTICAL
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setIntent(android.content.Intent)
okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)
kotlin.ranges.UIntProgression: int getStep()
androidx.databinding.ObservableMap
com.example.revolut.rates.R$dimen: int abc_alert_dialog_button_dimen
androidx.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy
android.support.v4.media.MediaBrowserCompat$ConnectionCallback: void onConnectionSuspended()
androidx.fragment.app.Fragment: void setReturnTransition(java.lang.Object)
androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionModeSplitBackground
dagger.android.support.R$dimen: int notification_small_icon_size_as_large
androidx.core.R$styleable: int[] GradientColor
com.example.revolut.rates.R$id: int end_padder
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)
androidx.core.util.PairKt: java.lang.Object component1(android.util.Pair)
androidx.appcompat.R$attr: int actionModeCloseButtonStyle
kotlinx.coroutines.channels.ArrayBroadcastChannel: ArrayBroadcastChannel(int)
io.reactivex.Notification: io.reactivex.Notification createOnNext(java.lang.Object)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
androidx.appcompat.widget.SearchView: int getImeOptions()
dagger.android.support.R$attr: int layout
androidx.collection.LruCache: void trimToSize(int)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1: int compare(java.lang.Object,java.lang.Object)
androidx.annotation.MainThread
io.reactivex.Completable: void subscribe(io.reactivex.CompletableObserver)
com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent: int getAfter()
kotlin.io.ConsoleKt
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context)
androidx.fragment.R$dimen: int notification_subtext_size
com.jakewharton.rxbinding3.core.R$layout
androidx.core.content.ContextCompat: java.io.File getNoBackupFilesDir(android.content.Context)
androidx.slidingpanelayout.widget.SlidingPaneLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(char[],int)
androidx.appcompat.widget.Toolbar$OnMenuItemClickListener
okhttp3.Cookie: boolean httpOnly()
androidx.appcompat.R$styleable: int StateListDrawableItem_android_drawable
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followSslRedirects(boolean)
com.google.gson.internal.LinkedHashTreeMap: void clear()
kotlin.collections.ArraysKt___ArraysKt: int reduceIndexed(int[],kotlin.jvm.functions.Function3)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$AdapterChanges
androidx.slidingpanelayout.R$id: int icon
kotlin.coroutines.experimental.CombinedContext: CombinedContext(kotlin.coroutines.experimental.CoroutineContext,kotlin.coroutines.experimental.CoroutineContext$Element)
androidx.recyclerview.widget.AsyncListUtil: int getItemCount()
androidx.swiperefreshlayout.widget.CircularProgressDrawable: float getCenterRadius()
androidx.constraintlayout.widget.ConstraintSet: void setScaleY(int,float)
androidx.legacy.v4.R$styleable: int GradientColor_android_centerY
com.example.revolut.rates.data.RatesApi
androidx.fragment.app.Fragment: void setAllowEnterTransitionOverlap(boolean)
androidx.constraintlayout.solver.widgets.ConstraintWidget: float mDimensionRatio
io.reactivex.internal.subscribers.BoundedSubscriber: void onNext(java.lang.Object)
androidx.appcompat.R$attr: int toolbarStyle
androidx.core.view.DragStartHelper: DragStartHelper(android.view.View,androidx.core.view.DragStartHelper$OnDragStartListener)
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedNoLast: long serialVersionUID
kotlinx.coroutines.BuildersKt: java.lang.Object run(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
io.reactivex.internal.operators.single.SingleDoOnSubscribe: SingleDoOnSubscribe(io.reactivex.SingleSource,io.reactivex.functions.Consumer)
androidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_ROW_INT
androidx.legacy.coreui.R$style: int Widget_Compat_NotificationActionContainer
io.reactivex.internal.operators.flowable.FlowableMapNotification: FlowableMapNotification(io.reactivex.Flowable,io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)
androidx.appcompat.view.menu.MenuItemImpl: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
androidx.recyclerview.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
okhttp3.EventListener: void requestBodyStart(okhttp3.Call)
androidx.fragment.app.FragmentController: void dispatchActivityCreated()
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_goneMarginTop
kotlin.reflect.KClass$DefaultImpls: void isInner$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(char[],java.lang.Iterable)
io.reactivex.Maybe: java.lang.Object as(io.reactivex.MaybeConverter)
okio.Sink: void write(okio.Buffer,long)
androidx.appcompat.content.res.AppCompatResources
androidx.legacy.coreui.R$id: int title
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
kotlinx.coroutines.internal.AtomicDesc: AtomicDesc()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVisibility(int)
okio.Buffer: long readAll(okio.Sink)
androidx.media.VolumeProviderCompat: int getCurrentVolume()
io.reactivex.processors.UnicastProcessor: boolean hasComplete()
android.support.v4.media.MediaBrowserCompat: void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$CustomActionCallback)
com.jakewharton.rxbinding3.core.R$dimen: int notification_big_circle_margin
androidx.viewpager.widget.ViewPager$SavedState: ViewPager$SavedState(android.os.Parcelable)
io.reactivex.internal.subscribers.SubscriberResourceWrapper: void cancel()
io.reactivex.Observable: io.reactivex.Observable skip(long)
androidx.coordinatorlayout.R$layout
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.lang.Iterable,java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener: void onPanelClosed(android.view.View)
androidx.customview.R$attr: int ttcIndex
androidx.viewpager.R$layout: int notification_template_custom_big
androidx.vectordrawable.R$style: int TextAppearance_Compat_Notification_Time
okio.HashingSource: long read(okio.Buffer,long)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: PathInterpolatorCompat(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(int[],java.util.Collection,kotlin.jvm.functions.Function2)
dagger.android.support.R$styleable: int Toolbar_contentInsetEnd
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
androidx.legacy.v4.R$dimen: int compat_control_corner_material
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams: SlidingPaneLayout$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
dagger.android.support.R$style: int ThemeOverlay_AppCompat_Dialog
androidx.appcompat.R$dimen: int abc_action_button_min_width_material
androidx.lifecycle.CompositeGeneratedAdaptersObserver
kotlin.UByteArray: kotlin.collections.UByteIterator iterator()
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_editor_absoluteY
com.jakewharton.rxbinding3.widget.AdapterViewSelectionEvent
androidx.databinding.ListChangeRegistry: ListChangeRegistry()
okio.Buffer$UnsafeCursor: int next()
androidx.appcompat.widget.DropDownListView: void dispatchDraw(android.graphics.Canvas)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalMatchStyle(int,int,int,float)
kotlin.ranges.RangesKt
com.google.gson.internal.$Gson$Preconditions
androidx.core.view.ViewCompat: boolean canScrollVertically(android.view.View,int)
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt
io.reactivex.subjects.SingleSubject: java.lang.Object getValue()
androidx.constraintlayout.solver.widgets.ConstraintWidget: float getHorizontalBiasPercent()
androidx.core.view.MotionEventCompat: int ACTION_HOVER_MOVE
kotlin.text.StringsKt__StringsKt: boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)
androidx.media.VolumeProviderCompatApi21$Delegate: void onSetVolumeTo(int)
io.reactivex.Observable: io.reactivex.Observable range(int,int)
kotlin.text.StringsKt___StringsKt$groupingBy$1: StringsKt___StringsKt$groupingBy$1(java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.reactivex.Flowable: io.reactivex.Flowable ofType(java.lang.Class)
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: int DIRECTION_RIGHT
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.appcompat.R$styleable: int MenuItem_android_id
androidx.viewpager.widget.ViewPager$SavedState: void writeToParcel(android.os.Parcel,int)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3
io.reactivex.exceptions.ProtocolViolationException
com.example.revolut.rates.R$attr: int showText
kotlin.comparisons.UComparisonsKt___UComparisonsKt: int maxOf-J1ME1BU(int,int)
androidx.databinding.ViewDataBinding: int safeUnbox(java.lang.Integer)
androidx.constraintlayout.widget.ConstraintHelper: void onDraw(android.graphics.Canvas)
io.reactivex.disposables.SerialDisposable: boolean replace(io.reactivex.disposables.Disposable)
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doOnSubscribe(io.reactivex.functions.Consumer)
dagger.android.support.R$dimen: int abc_control_inset_material
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.example.revolut.rates.R$layout: int notification_template_big_media_narrow_custom
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void fastForward(java.lang.Object)
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionModeCloseDrawable
kotlin.jvm.internal.IntSpreadBuilder: int getSize(java.lang.Object)
androidx.media.R$drawable: int notification_template_icon_bg
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber$OtherSubscriber: long serialVersionUID
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt getOrNull-qFRl0hI(int[],int)
dagger.android.support.R$color: int abc_secondary_text_material_light
androidx.appcompat.R$styleable: int ActionBar_navigationMode
androidx.vectordrawable.R$id: int notification_main_column
io.reactivex.internal.operators.maybe.MaybeEmpty: MaybeEmpty()
com.jakewharton.rxbinding3.widget.TextViewAfterTextChangeEvent: boolean equals(java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mGroupsWrapOptimized
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(double[],java.lang.Iterable)
io.reactivex.internal.operators.flowable.FlowableRetryWhen$RetryWhenSubscriber: long serialVersionUID
kotlin.text.StringsKt__StringsKt: java.lang.String padEnd(java.lang.String,int,char)
com.google.gson.Gson: com.google.gson.stream.JsonReader newJsonReader(java.io.Reader)
com.example.revolut.rates.R$anim: int abc_popup_enter
androidx.appcompat.app.AlertDialog: AlertDialog(android.content.Context,int)
okhttp3.internal.ws.RealWebSocket: void initReaderAndWriter(java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams)
com.example.revolut.rates.databinding.ActivityMainBindingImpl: void invalidateAll()
retrofit2.http.Part: java.lang.String encoding()
com.jakewharton.rxbinding3.core.R$dimen: int notification_top_pad_large_text
androidx.core.view.accessibility.AccessibilityRecordCompat: void setContentDescription(java.lang.CharSequence)
com.google.gson.internal.bind.MapTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
dagger.android.support.R$styleable: int TextAppearance_android_textSize
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver: long serialVersionUID
androidx.recyclerview.R$styleable: int ColorStateListItem_android_alpha
kotlin.collections.IndexedValue: int getIndex()
androidx.core.ktx.R$id: int action_text
androidx.appcompat.app.AppCompatActivity: void supportInvalidateOptionsMenu()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void layoutDecorated(android.view.View,int,int,int,int)
androidx.cursoradapter.widget.SimpleCursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$lastOrNull$3: java.lang.Object invokeSuspend(java.lang.Object)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Subhead
kotlin.random.RandomKt: java.lang.String boundsErrorMessage(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[],int)
io.reactivex.internal.operators.observable.ObservableCreate: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.media.MediaBrowserProtocol: java.lang.String EXTRA_MESSENGER_BINDER
okhttp3.internal.http2.Http2Codec: okio.Sink createRequestBody(okhttp3.Request,long)
com.example.revolut.rates.BuildConfig: boolean DEBUG
kotlin.collections.ArraysKt___ArraysKt: short[] sliceArray(short[],java.util.Collection)
androidx.databinding.ViewDataBinding: int getFromArray(int[],int)
kotlin.collections.CollectionsKt___CollectionsKt: double sumOfDouble(java.lang.Iterable)
okhttp3.internal.connection.RouteException: java.io.IOException getLastConnectException()
io.reactivex.internal.operators.flowable.FlowableRepeatUntil$RepeatSubscriber: long serialVersionUID
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.internal.Symbol access$getSELECT_SUCCESS$p()
kotlin.collections.IntIterator: java.lang.Object next()
io.reactivex.Flowable: io.reactivex.Flowable cast(java.lang.Class)
androidx.appcompat.view.menu.MenuItemImpl: void setIsActionButton(boolean)
androidx.core.graphics.RectKt: android.graphics.Rect toRect(android.graphics.RectF)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: void invokeOnClose(kotlin.jvm.functions.Function1)
kotlin.text.DelimitedRangesSequence$iterator$1: int getCurrentStartIndex()
androidx.core.view.NestedScrollingChild: boolean isNestedScrollingEnabled()
androidx.appcompat.widget.AppCompatSeekBar
dagger.android.support.R$styleable: int ColorStateListItem_android_color
io.reactivex.internal.operators.observable.ObservableCount: ObservableCount(io.reactivex.ObservableSource)
kotlin.collections.ArraysKt___ArraysKt: int sumBy(float[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: void forEach(boolean[],kotlin.jvm.functions.Function1)
androidx.media.AudioAttributesCompat: void setForceLegacyBehavior(boolean)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setExclusive(boolean)
kotlin.text.MatchResult$Destructured: MatchResult$Destructured(kotlin.text.MatchResult)
androidx.recyclerview.widget.RecyclerView$Adapter: void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView)
com.example.revolut.rates.R$attr: int thumbTintMode
io.reactivex.internal.operators.observable.ObservableSkipLastTimed: void subscribeActual(io.reactivex.Observer)
androidx.loader.content.Loader: void rollbackContentChanged()
io.reactivex.Observable: io.reactivex.Observable rangeLong(long,long)
com.jakewharton.rxbinding3.widget.AdapterViewItemClickEvent: boolean equals(java.lang.Object)
androidx.core.animation.AnimatorKt$addPauseListener$listener$1: void onAnimationPause(android.animation.Animator)
kotlin.Result: kotlin.Result$Companion Companion
androidx.recyclerview.widget.RecyclerView$SmoothScroller
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_editor_absoluteX
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder callTimeout(long,java.util.concurrent.TimeUnit)
kotlin.coroutines.ContinuationInterceptor$Key
androidx.appcompat.R$dimen: int tooltip_y_offset_touch
com.example.revolut.rates.R$id: int right
kotlin.sequences.SequencesKt___SequencesKt: java.util.Set toMutableSet(kotlin.sequences.Sequence)
kotlin.collections.CollectionsKt__ReversedViewsKt: CollectionsKt__ReversedViewsKt()
okhttp3.internal.http2.Http2Connection: okhttp3.Protocol getProtocol()
io.reactivex.internal.operators.completable.CompletableDetach
androidx.legacy.v4.R$dimen: int notification_top_pad
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLiveRegion(int)
io.reactivex.internal.operators.observable.ObservableTakeLastTimed: ObservableTakeLastTimed(io.reactivex.ObservableSource,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int,boolean)
kotlin.UIntArray: boolean containsAll(java.util.Collection)
dagger.android.support.R$styleable: int AppCompatTheme_ratingBarStyleSmall
kotlin.collections.FloatIterator: void remove()
kotlin.collections.ArraysKt___ArraysJvmKt: void sortWith$default(java.lang.Object[],java.util.Comparator,int,int,int,java.lang.Object)
retrofit2.Retrofit$Builder
androidx.core.util.Pair: int hashCode()
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment LEFT
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.ClosedRange,double)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: int getSize()
androidx.media.R$color: int notification_material_background_media_default_color
okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)
kotlin.collections.SetsKt___SetsKt: java.util.Set minus(java.util.Set,kotlin.sequences.Sequence)
com.example.revolut.rates.R$dimen: int abc_dropdownitem_text_padding_left
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(float[])
androidx.constraintlayout.widget.Placeholder: Placeholder(android.content.Context,android.util.AttributeSet,int)
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl: RestrictedContinuationImpl(kotlin.coroutines.Continuation)
androidx.lifecycle.extensions.R$color: int notification_action_color_filter
androidx.lifecycle.extensions.R$id
kotlin.text.DelimitedRangesSequence$iterator$1: void setNextItem(kotlin.ranges.IntRange)
kotlin.jvm.internal.LongSpreadBuilder: void add(long)
kotlin.jvm.functions.Function6
kotlin.collections.ArraysKt___ArraysKt: int reduce(int[],kotlin.jvm.functions.Function2)
androidx.media.AudioAttributesCompat: int USAGE_ASSISTANCE_NAVIGATION_GUIDANCE
kotlin.sequences.SequencesKt___SequencesKt: double averageOfInt(kotlin.sequences.Sequence)
androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)
dagger.android.support.R$string: int abc_activity_chooser_view_see_all
kotlin.ranges.RangesKt___RangesKt: long coerceAtMost(long,long)
com.example.revolut.rates.data.model.Rate: void setRate(java.lang.Double)
io.reactivex.internal.operators.observable.ObservableInterval
io.reactivex.Flowable: io.reactivex.Flowable doOnNext(io.reactivex.functions.Consumer)
androidx.swiperefreshlayout.R$integer: int status_bar_notification_info_maxnum
kotlin.jvm.JvmClassMappingKt: kotlin.reflect.KClass getAnnotationClass(java.lang.annotation.Annotation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean equals(java.lang.Object)
androidx.legacy.coreui.R$id: int none
com.example.revolut.rates.R$styleable: int ConstraintSet_constraint_referenced_ids
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setScrollY(int)
androidx.appcompat.R$dimen: int abc_seekbar_track_background_height_material
androidx.asynclayoutinflater.R$attr: int fontProviderFetchTimeout
io.reactivex.processors.MulticastProcessor: void onComplete()
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
okhttp3.OkHttpClient: java.util.List networkInterceptors()
androidx.appcompat.R$styleable: int AppCompatTheme_popupWindowStyle
dagger.android.support.R$style: int Widget_AppCompat_PopupWindow
com.example.revolut.rates.R$drawable: int icon_eur
dagger.android.support.R$styleable: int AppCompatTheme_listPreferredItemHeight
androidx.fragment.app.ListFragment: void setListShown(boolean)
androidx.databinding.OnRebindCallback: void onCanceled(androidx.databinding.ViewDataBinding)
kotlin.math.MathKt__MathJVMKt: void sign$annotations(float)
io.reactivex.internal.operators.maybe.MaybeFromCompletable: io.reactivex.CompletableSource source()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object last(kotlin.sequences.Sequence)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findViewByPosition(int)
androidx.fragment.R$styleable: int[] GradientColor
androidx.core.app.NotificationCompat$Action$WearableExtender: NotificationCompat$Action$WearableExtender()
dagger.android.AndroidMemorySensitiveReferenceManager_Factory
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterTo$3: ChannelsKt__Channels_commonKt$filterTo$3(kotlin.coroutines.Continuation)
kotlin.collections.RingBuffer$iterator$1: void computeNext()
androidx.drawerlayout.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.graphics.PathParser$PathDataNode
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
androidx.appcompat.widget.DecorToolbar: void setNavigationMode(int)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfterLast(java.lang.String,char,java.lang.String,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintRight_creator
androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String)
androidx.core.ktx.R$string
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor mCursor
dagger.android.support.R$dimen: int hint_alpha_material_dark
androidx.versionedparcelable.VersionedParcelize: int[] deprecatedIds()
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_font
androidx.appcompat.app.AppCompatDialogFragment
kotlin.coroutines.experimental.EmptyCoroutineContext: kotlin.coroutines.experimental.CoroutineContext$Element get(kotlin.coroutines.experimental.CoroutineContext$Key)
kotlin.collections.ArraysKt___ArraysKt: byte reduceRight(byte[],kotlin.jvm.functions.Function2)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
com.google.gson.TypeAdapter: com.google.gson.TypeAdapter nullSafe()
androidx.vectordrawable.R$styleable: int GradientColor_android_endX
io.reactivex.processors.AsyncProcessor: io.reactivex.processors.AsyncProcessor create()
kotlinx.coroutines.CoroutineContextKt: java.lang.Object withCoroutineContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function0)
androidx.viewpager.widget.ViewPager: void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener)
androidx.appcompat.R$id: int none
com.example.revolut.rates.R$dimen: int abc_dialog_title_divider_material
io.reactivex.Observable: io.reactivex.Observable hide()
com.example.revolut.rates.R$color: int material_grey_900
androidx.constraintlayout.solver.widgets.ConstraintWidget: int mMinWidth
androidx.core.view.GestureDetectorCompat: GestureDetectorCompat(android.content.Context,android.view.GestureDetector$OnGestureListener)
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,boolean,int,int)
io.reactivex.internal.subscribers.BasicFuseableSubscriber: void clear()
kotlin.collections.CollectionsKt___CollectionsKt: int count(java.lang.Iterable)
androidx.customview.R$style
io.reactivex.internal.operators.flowable.FlowableConcatMap: FlowableConcatMap(io.reactivex.Flowable,io.reactivex.functions.Function,int,io.reactivex.internal.util.ErrorMode)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int MATCH_CONSTRAINT_SPREAD
kotlin.reflect.KClass: java.util.Collection getMembers()
dagger.android.support.R$attr: int navigationIcon
androidx.viewpager.R$id: int icon_group
kotlin.text.StringsKt__StringsKt: boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean)
io.reactivex.subjects.BehaviorSubject: boolean hasObservers()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setCustomSizePreset(int)
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: long serialVersionUID
com.example.revolut.rates.di.AppModule_ProvideCurrenciesRepositoryFactory: com.example.revolut.rates.data.repository.CurrenciesRepository provideInstance(com.example.revolut.rates.di.AppModule)
dagger.android.support.R$attr: int buttonBarNegativeButtonStyle
androidx.legacy.v4.R$dimen: int notification_action_text_size
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(byte[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.Delay$DefaultImpls: java.lang.Object delay$default(kotlinx.coroutines.Delay,long,java.util.concurrent.TimeUnit,kotlin.coroutines.Continuation,int,java.lang.Object)
android.support.v4.media.session.PlaybackStateCompat: long ACTION_SET_RATING
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumWidth()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setWidth(int)
okio.Buffer: int hashCode()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List minus(java.lang.Iterable,java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function)
kotlin.Triple: java.lang.Object getSecond()
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class,java.lang.String)
androidx.core.util.SparseIntArrayKt: boolean isNotEmpty(android.util.SparseIntArray)
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFinished
dagger.android.support.R$id: int select_dialog_listview
androidx.lifecycle.extensions.R$styleable: int FontFamily_fontProviderQuery
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner: long serialVersionUID
com.jakewharton.rxbinding3.view.RxMenuItem: io.reactivex.Observable clicks(android.view.MenuItem,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt__SequenceBuilderKt: void SequenceBuilder$annotations()
androidx.fragment.app.FragmentPagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_minHeight
androidx.appcompat.R$attr: int windowMinWidthMajor
kotlin.reflect.KVariance: kotlin.reflect.KVariance IN
dagger.internal.DoubleCheck
com.example.revolut.rates.R$styleable: int MenuItem_tooltipText
androidx.constraintlayout.solver.widgets.ResolutionAnchor
androidx.appcompat.widget.MenuItemHoverListener: void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
dagger.android.support.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterNotNull(kotlinx.coroutines.channels.ReceiveChannel)
okio.Buffer: boolean rangeEquals(long,okio.ByteString)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean canApplyTheme()
androidx.fragment.R$attr: int fontVariationSettings
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void draw(android.graphics.Canvas)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[])
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setDistanceToTriggerSync(int)
androidx.core.widget.NestedScrollView: void onRestoreInstanceState(android.os.Parcelable)
okhttp3.Address: java.util.List connectionSpecs()
com.example.revolut.rates.viewmodel.CurrenciesViewModel_MembersInjector: void injectRepository(com.example.revolut.rates.viewmodel.CurrenciesViewModel,com.example.revolut.rates.data.repository.CurrenciesRepository)
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.drawerlayout.R$drawable: int notification_bg_normal_pressed
com.example.revolut.rates.R$styleable: int ButtonBarLayout_allowStacking
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Button
androidx.appcompat.R$style: int TextAppearance_AppCompat_Inverse
okhttp3.internal.ws.RealWebSocket: okhttp3.Request request()
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int)
androidx.customview.widget.ViewDragHelper
com.example.revolut.rates.R$color: int notification_material_background_media_default_color
androidx.collection.CircularArray: java.lang.Object popFirst()
io.reactivex.Single: io.reactivex.Single wrap(io.reactivex.SingleSource)
kotlin.Triple: kotlin.Triple copy(java.lang.Object,java.lang.Object,java.lang.Object)
okhttp3.internal.tls.OkHostnameVerifier: java.util.List allSubjectAltNames(java.security.cert.X509Certificate)
io.reactivex.internal.operators.single.SingleCache
kotlinx.coroutines.DispatchedContinuation: void resumeWith(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$State: RecyclerView$State()
androidx.swiperefreshlayout.R$id: int text2
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(java.lang.Object[])
com.example.revolut.rates.R$styleable: int AppCompatTheme_colorButtonNormal
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Short toShortOrNull(java.lang.String)
com.example.revolut.rates.R$styleable: int ActionBar_homeAsUpIndicator
dagger.android.support.R$attr: int subMenuArrow
dagger.android.support.R$attr: int hideOnContentScroll
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Double,double)
kotlin.text.UStringsKt: kotlin.UShort toUShortOrNull(java.lang.String,int)
dagger.android.support.R$id: int none
io.reactivex.internal.operators.maybe.MaybeAmb
android.support.v4.media.session.MediaSessionCompat$Callback: void onRewind()
com.jakewharton.rxbinding3.widget.AdapterViewItemSelectionEvent: int component3()
kotlin.collections.AbstractSet: int hashCode()
io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription: long serialVersionUID
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet,int)
androidx.core.view.inputmethod.InputContentInfoCompat: java.lang.Object unwrap()
io.reactivex.internal.subscriptions.SubscriptionHelper: void reportSubscriptionSet()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Float min(java.lang.Iterable)
androidx.core.animation.AnimatorKt$doOnEnd$$inlined$addListener$1: void onAnimationRepeat(android.animation.Animator)
com.example.revolut.rates.R$attr: int layout_constraintRight_toLeftOf
kotlin.UByteArray: boolean containsAll(java.util.Collection)
androidx.fragment.app.Fragment: int getTargetRequestCode()
androidx.fragment.app.Fragment: void onStart()
androidx.appcompat.app.AppCompatDelegate: void setDefaultNightMode(int)
io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.internal.Symbol access$getENQUEUE_FAIL$p()
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction openTransaction()
androidx.recyclerview.widget.RecyclerView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
android.support.v4.media.session.MediaSessionCompat$Token: int describeContents()
androidx.media.R$id: int title
androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)
okhttp3.FormBody: java.lang.String value(int)
com.example.revolut.rates.R$styleable: int MenuView_android_itemTextAppearance
dagger.android.support.R$styleable: int LinearLayoutCompat_showDividers
androidx.viewpager.R$color
com.google.gson.TypeAdapter: com.google.gson.JsonElement toJsonTree(java.lang.Object)
androidx.appcompat.R$attr: int borderlessButtonStyle
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: int indexOf-7apg3OU(byte)
io.reactivex.internal.operators.mixed.SingleFlatMapObservable: void subscribeActual(io.reactivex.Observer)
android.support.v4.media.session.MediaSessionCompat$Callback: void onPause()
io.reactivex.Flowable: io.reactivex.Flowable interval(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
androidx.appcompat.view.menu.MenuPresenter$Callback
androidx.media.AudioAttributesCompat: android.os.Bundle toBundle()
okhttp3.Headers: java.lang.String value(int)
com.jakewharton.rxbinding3.view.ViewScrollChangeEvent: int getScrollY()
kotlinx.coroutines.channels.ConflatedBroadcastChannel: boolean cancel(java.lang.Throwable)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIcon(int)
io.reactivex.internal.operators.flowable.BlockingFlowableIterable: BlockingFlowableIterable(io.reactivex.Flowable,int)
io.reactivex.Observable: io.reactivex.Observable mergeWith(io.reactivex.CompletableSource)
kotlin.collections.MovingSubList: MovingSubList(java.util.List)
io.reactivex.Flowable: java.lang.Object as(io.reactivex.FlowableConverter)
io.reactivex.exceptions.CompositeException: void printStackTrace(java.io.PrintStream)
kotlin.PreconditionsKt__PreconditionsKt: PreconditionsKt__PreconditionsKt()
androidx.databinding.adapters.CompoundButtonBindingAdapter: void setChecked(android.widget.CompoundButton,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-f7H3mmw(long[],java.lang.Object[])
androidx.loader.R$drawable: int notification_bg_low_normal
androidx.viewpager.widget.ViewPager: boolean isFakeDragging()
kotlin.InitializedLazyImpl: boolean isInitialized()
androidx.recyclerview.widget.DefaultItemAnimator: DefaultItemAnimator()
io.reactivex.internal.operators.flowable.FlowableRepeat: FlowableRepeat(io.reactivex.Flowable,long)
androidx.legacy.coreutils.R$id: int line3
androidx.databinding.Bindable: java.lang.String[] value()
kotlin.collections.ArraysKt___ArraysJvmKt: int[] plus(int[],java.util.Collection)
androidx.loader.R$id: int action_image
io.reactivex.observers.ResourceCompletableObserver: boolean isDisposed()
kotlinx.coroutines.selects.SelectBuilderImpl: void resumeWith(java.lang.Object)
com.example.revolut.rates.R$attr: int homeAsUpIndicator
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
kotlinx.coroutines.channels.Closed
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence)
okhttp3.internal.platform.Platform
kotlin.collections.CollectionsKt__CollectionsKt: java.util.ArrayList arrayListOf(java.lang.Object[])
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
io.reactivex.Flowable: io.reactivex.Flowable distinctUntilChanged(io.reactivex.functions.BiPredicate)
androidx.coordinatorlayout.widget.CoordinatorLayout: void drawableStateChanged()
io.reactivex.internal.operators.mixed.SingleFlatMapObservable$FlatMapObserver: long serialVersionUID
com.example.revolut.rates.R$drawable: int ic_launcher_background
androidx.databinding.ObservableChar: long serialVersionUID
androidx.lifecycle.ViewModelProviders: androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.FragmentActivity,androidx.lifecycle.ViewModelProvider$Factory)
kotlin.io.ByteStreamsKt$iterator$1: boolean getNextPrepared()
dagger.android.support.R$style: int Platform_ThemeOverlay_AppCompat_Dark
androidx.core.app.NotificationCompat: java.lang.String EXTRA_MESSAGES
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: ActivityChooserModel$ActivityResolveInfo(android.content.pm.ResolveInfo)
androidx.recyclerview.widget.SortedList$Callback: java.lang.Object getChangePayload(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(short[])
androidx.core.app.NotificationCompat: int COLOR_DEFAULT
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(boolean[])
androidx.appcompat.view.menu.ListMenuPresenter: void restoreHierarchyState(android.os.Bundle)
kotlinx.coroutines.CoroutineId: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable: ObservableIgnoreElementsCompletable(io.reactivex.ObservableSource)
okio.Buffer: java.lang.String readUtf8LineStrict(long)
androidx.loader.R$integer: int status_bar_notification_info_maxnum
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1)
kotlin.io.FileTreeWalk: FileTreeWalk(java.io.File,kotlin.io.FileWalkDirection)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setStrokeCap(android.graphics.Paint$Cap)
androidx.databinding.ObservableParcelable: void writeToParcel(android.os.Parcel,int)
kotlin.coroutines.jvm.internal.DebugMetadataKt: java.lang.String[] getSpilledVariableFieldMapping(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
androidx.recyclerview.widget.OrientationHelper: int getTransformedEndWithDecoration(android.view.View)
kotlin.text.StringsKt___StringsKt: StringsKt___StringsKt()
kotlin.text.StringsKt___StringsKt: java.lang.String drop(java.lang.String,int)
io.reactivex.internal.disposables.EmptyDisposable: void complete(io.reactivex.MaybeObserver)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getBaseline()
androidx.core.view.ViewCompat: boolean hasExplicitFocusable(android.view.View)
io.reactivex.internal.operators.single.SingleCreate$Emitter: long serialVersionUID
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void normalize(android.graphics.PointF)
io.reactivex.internal.subscribers.BasicFuseableSubscriber: void onComplete()
android.support.v4.media.session.MediaSessionCompat: java.lang.Object getRemoteControlClient()
com.example.revolut.rates.R$styleable: int ActionBar_elevation
kotlin.jvm.internal.DoubleSpreadBuilder: void add(double)
androidx.drawerlayout.R$id: int normal
androidx.constraintlayout.solver.widgets.ConstraintWidget: float getBiasPercent(int)
io.reactivex.internal.operators.flowable.FlowablePublishAlt: void resetIf(io.reactivex.disposables.Disposable)
androidx.appcompat.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
com.example.revolut.rates.R$styleable: int AppCompatTextView_autoSizeTextType
androidx.appcompat.R$dimen: int abc_seekbar_track_progress_height_material
io.reactivex.internal.util.EmptyComponent: void dispose()
kotlin.UIntArray: int hashCode()
io.reactivex.Observable: io.reactivex.Observable ofType(java.lang.Class)
kotlin.ranges.CharRange: java.lang.Character getEndInclusive()
androidx.fragment.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)
androidx.versionedparcelable.VersionedParcel: float[] readFloatArray()
androidx.viewpager.R$dimen: int notification_media_narrow_margin
io.reactivex.internal.operators.maybe.MaybeMergeArray$ClqSimpleQueue: long serialVersionUID
kotlin.sequences.ConstrainedOnceSequence: java.util.Iterator iterator()
com.example.revolut.rates.R$layout: int abc_expanded_menu_layout
io.reactivex.internal.operators.observable.ObservableRepeat
com.example.revolut.rates.R$drawable: int notification_bg_normal
android.support.v4.media.session.MediaSessionCompat: java.lang.String ARGUMENT_MEDIA_ATTRIBUTE_VALUE
com.example.revolut.rates.R$attr: int fastScrollEnabled
androidx.appcompat.view.menu.SubMenuBuilder: boolean isQwertyMode()
androidx.customview.R$drawable: int notification_bg_normal_pressed
kotlin.reflect.KAnnotatedElement
androidx.appcompat.widget.SearchView$OnSuggestionListener: boolean onSuggestionClick(int)
androidx.core.graphics.PointKt: int component2(android.graphics.Point)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany: FlowableWithLatestFromMany(io.reactivex.Flowable,java.lang.Iterable,io.reactivex.functions.Function)
kotlin.UInt: int compareTo(java.lang.Object)
androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)
kotlin.text.MatcherMatchResult$groupValues$1: int lastIndexOf(java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable concatMapSingleDelayError(io.reactivex.functions.Function,boolean)
androidx.appcompat.widget.ViewStubCompat$OnInflateListener: void onInflate(androidx.appcompat.widget.ViewStubCompat,android.view.View)
com.example.revolut.rates.R$attr: int layout_constraintBottom_toBottomOf
androidx.core.widget.ScrollerCompat: void fling(int,int,int,int,int,int,int,int,int,int)
okio.ForwardingSink: java.lang.String toString()
dagger.android.DaggerApplication: dagger.android.DispatchingAndroidInjector fragmentInjector()
retrofit2.CallAdapter
androidx.constraintlayout.widget.R$styleable: int[] ConstraintLayout_placeholder
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_PARAGRAPH
androidx.viewpager.widget.ViewPager$LayoutParams: ViewPager$LayoutParams(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.channels.ArrayBroadcastChannel: boolean isBufferFull()
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainAll(java.util.Collection,java.lang.Iterable)
androidx.recyclerview.widget.RecyclerView: android.os.Parcelable onSaveInstanceState()
com.example.revolut.rates.base.BaseNotifier: void isLoading(boolean)
com.example.revolut.rates.R$style: int Widget_AppCompat_DrawerArrowToggle
com.example.revolut.rates.R$id: int action_bar_subtitle
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onMeasure(int,int)
kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.channels.ChannelIterator iterator()
com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent: java.lang.String toString()
androidx.appcompat.R$style: int Widget_AppCompat_PopupMenu_Overflow
kotlinx.coroutines.internal.ScopeOwnerCoroutine: kotlin.coroutines.CoroutineContext getCoroutineContext()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: boolean contains(long)
androidx.appcompat.R$attr: int fontProviderPackage
kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List getActionList()
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1
io.reactivex.internal.operators.maybe.MaybeFromAction: MaybeFromAction(io.reactivex.functions.Action)
androidx.recyclerview.widget.PagerSnapHelper: androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.example.revolut.rates.R$id: int activity_chooser_view_content
com.google.gson.JsonObject: com.google.gson.JsonElement remove(java.lang.String)
androidx.core.provider.SelfDestructiveThread: SelfDestructiveThread(java.lang.String,int,int)
io.reactivex.internal.operators.flowable.FlowableSkipUntil
androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerClosed(android.view.View)
androidx.media.R$layout: int notification_action
dagger.android.support.R$id: int media_actions
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_layout_height
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.OkHttpClient: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)
androidx.loader.R$id: int title
com.google.gson.internal.bind.JsonTreeReader: int nextInt()
androidx.databinding.adapters.ViewBindingAdapter: void setOnLongClick(android.view.View,android.view.View$OnLongClickListener,boolean)
io.reactivex.Completable: io.reactivex.Completable merge(java.lang.Iterable)
okhttp3.internal.platform.Platform: boolean isCleartextTrafficPermitted(java.lang.String)
retrofit2.Response
okhttp3.internal.cache.CacheStrategy
androidx.localbroadcastmanager.content.LocalBroadcastManager: void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)
io.reactivex.internal.operators.flowable.FlowablePublishAlt: FlowablePublishAlt(org.reactivestreams.Publisher,int)
io.reactivex.Flowable: io.reactivex.Flowable mergeArray(int,int,org.reactivestreams.Publisher[])
androidx.fragment.R$styleable: int GradientColor_android_startY
kotlinx.coroutines.internal.LockFreeLinkedListHead: boolean remove()
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder setAllowGeneratedReplies(boolean)
androidx.versionedparcelable.VersionedParcel: void writeStrongInterface(android.os.IInterface,int)
androidx.appcompat.widget.AppCompatTextView: void drawableStateChanged()
io.reactivex.subjects.PublishSubject: io.reactivex.subjects.PublishSubject create()
dagger.android.support.R$styleable: int[] ListPopupWindow
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_DOCUMENT
androidx.vectordrawable.R$styleable: int FontFamily_fontProviderAuthority
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(long[],java.util.Collection)
androidx.fragment.app.FragmentTransaction: boolean isEmpty()
androidx.lifecycle.LiveData: void onActive()
kotlinx.coroutines.DispatchedKt: void resumeDirect(kotlin.coroutines.Continuation,java.lang.Object)
androidx.drawerlayout.R$id: int tag_unhandled_key_listeners
okio.BufferedSink: java.io.OutputStream outputStream()
androidx.core.app.Person: android.os.Bundle toBundle()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$count$3: ChannelsKt__Channels_commonKt$count$3(kotlin.coroutines.Continuation)
androidx.constraintlayout.solver.Cache
org.jetbrains.annotations.Contract
kotlin.random.RandomKt: long nextLong(kotlin.random.Random,kotlin.ranges.LongRange)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.util.Collection filterIsInstanceTo(kotlin.sequences.Sequence,java.util.Collection,java.lang.Class)
com.example.revolut.rates.R$attr: int navigationIcon
com.example.revolut.rates.R$attr: int track
androidx.appcompat.R$attr: int statusBarBackground
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(int[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(double[])
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String)
io.reactivex.internal.schedulers.SchedulerPoolFactory
androidx.core.view.ViewCompat: int LAYER_TYPE_NONE
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getMaxWidth()
kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String f()
androidx.appcompat.R$drawable: int abc_cab_background_internal_bg
androidx.viewpager.widget.PagerAdapter: void destroyItem(android.view.View,int,java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
kotlin.collections.UShortIterator: short nextUShort()
kotlin.collections.EmptySet: java.lang.Object[] toArray(java.lang.Object[])
androidx.appcompat.view.menu.MenuView$ItemView: void setCheckable(boolean)
com.example.revolut.rates.viewmodel.CurrenciesViewModel$fetchCurrencies$1: void onNext(com.example.revolut.rates.data.model.CurrencyResponse)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
io.reactivex.processors.MulticastProcessor: io.reactivex.processors.MulticastProcessor create(int,boolean)
dagger.android.support.R$string: int abc_toolbar_collapse_description
androidx.appcompat.graphics.drawable.DrawableWrapper: void setAutoMirrored(boolean)
com.example.revolut.rates.R$styleable: int MenuItem_android_title
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object getCONDITION_FALSE()
androidx.appcompat.view.menu.MenuPopupHelper: boolean isShowing()
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.util.BlockingIgnoringReceiver
androidx.legacy.coreutils.R$dimen: int compat_control_corner_material
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setProgressRotation(float)
androidx.media.R$dimen: int notification_small_icon_size_as_large
androidx.legacy.coreutils.R$styleable: int GradientColor_android_startX
kotlin.Triple: java.lang.String toString()
kotlin.collections.CollectionsKt___CollectionsKt: int indexOf(java.util.List,java.lang.Object)
androidx.loader.R$attr: int alpha
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)
androidx.appcompat.widget.ActionMenuView: void dismissPopupMenus()
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener: void onAnimationsFinished()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isAccessibilityFocused()
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory: JsonAdapterAnnotationTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor)
dagger.android.support.R$styleable: int AppCompatTheme_searchViewStyle
androidx.legacy.widget.Space: void onMeasure(int,int)
kotlin.ranges.UIntProgression: java.util.Iterator iterator()
androidx.loader.content.AsyncTaskLoader: void onForceLoad()
androidx.core.R$id: int tag_unhandled_key_listeners
androidx.appcompat.R$styleable: int ActionBar_elevation
androidx.localbroadcastmanager.content.LocalBroadcastManager
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void draw(android.graphics.Canvas)
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.core.util.Consumer
okhttp3.Address: okhttp3.CertificatePinner certificatePinner()
androidx.recyclerview.widget.LinearLayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.cursoradapter.widget.SimpleCursorAdapter
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_UNDEFINED
com.example.revolut.rates.R$drawable: int icon_huf
androidx.appcompat.R$drawable: int notification_template_icon_bg
kotlin.text.StringsKt___StringsKt$groupingBy$1: java.lang.Object keyOf(char)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int bottomToTop
androidx.collection.CircularArray: boolean isEmpty()
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntRange until-J1ME1BU(int,int)
androidx.core.util.SparseBooleanArrayKt: void putAll(android.util.SparseBooleanArray,android.util.SparseBooleanArray)
androidx.fragment.app.FragmentController: void doLoaderDestroy()
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
com.example.revolut.rates.R$drawable: int icon_ron
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterTo$1
kotlin.text.CharDirectionality: kotlin.Lazy access$getDirectionalityMap$cp()
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarPopupTheme
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection filterIndexedTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.graphics.RectKt: android.graphics.Region minus(android.graphics.RectF,android.graphics.RectF)
androidx.fragment.R$dimen: int notification_right_icon_size
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_DISPLAY_ICON_URI
androidx.legacy.v4.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.appcompat.R$attr: int windowFixedWidthMinor
androidx.core.app.Person: boolean isImportant()
androidx.core.R$drawable: int notification_icon_background
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(long[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.util.SparseLongArrayKt: void putAll(android.util.SparseLongArray,android.util.SparseLongArray)
androidx.core.app.Person: androidx.core.app.Person fromBundle(android.os.Bundle)
kotlin.collections.ArraysKt___ArraysJvmKt: float[] plus(float[],float[])
androidx.lifecycle.Transformations: androidx.lifecycle.LiveData switchMap(androidx.lifecycle.LiveData,androidx.arch.core.util.Function)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.List getWidgetGroups()
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE
io.reactivex.Flowable: java.lang.Iterable blockingNext()
kotlinx.coroutines.channels.SendChannel$DefaultImpls: boolean close$default(kotlinx.coroutines.channels.SendChannel,java.lang.Throwable,int,java.lang.Object)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)
kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,short)
kotlin.ranges.UIntProgression: kotlin.ranges.UIntProgression$Companion Companion
androidx.core.view.accessibility.AccessibilityNodeProviderCompat
io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,int,long,java.util.concurrent.TimeUnit)
io.reactivex.Observable: io.reactivex.Observable never()
dagger.android.support.R$styleable: int[] MenuView
com.jakewharton.rxbinding3.widget.RxSeekBar: com.jakewharton.rxbinding3.InitialValueObservable userChanges(android.widget.SeekBar)
com.example.revolut.rates.R$styleable: int[] MenuView
androidx.appcompat.widget.DecorContentParent: void setLogo(int)
io.reactivex.processors.PublishProcessor$PublishSubscription: long serialVersionUID
kotlin.text.CharCategory: kotlin.text.CharCategory[] values()
io.reactivex.internal.operators.mixed.MaterializeSingleObserver
okio.BufferedSource: java.lang.String readString(long,java.nio.charset.Charset)
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable hovers(android.view.View,kotlin.jvm.functions.Function1)
androidx.fragment.app.Fragment: boolean shouldShowRequestPermissionRationale(java.lang.String)
androidx.core.content.PermissionChecker$PermissionResult
kotlin.ranges.ULongRange: kotlin.ranges.ULongRange$Companion Companion
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
io.reactivex.parallel.ParallelFlowable: int parallelism()
com.example.revolut.rates.R$style: int Theme_AppCompat_DayNight_DarkActionBar
androidx.core.app.RemoteInput: android.os.Bundle getExtras()
com.example.revolut.rates.BR: int viewModel
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(char[])
okhttp3.Request: java.lang.String toString()
androidx.media.VolumeProviderCompatApi21$Delegate
kotlin.ranges.IntProgression: boolean isEmpty()
androidx.coordinatorlayout.R$layout: int notification_template_icon_group
android.support.v4.media.session.IMediaSession: java.lang.String getPackageName()
dagger.internal.MapProviderFactory
androidx.customview.R$styleable: int[] GradientColor
okio.ByteString: okio.ByteString hmacSha512(okio.ByteString)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapMaybeObserver: long serialVersionUID
dagger.internal.MembersInjectors$NoOpMembersInjector: dagger.internal.MembersInjectors$NoOpMembersInjector[] values()
androidx.appcompat.R$attr: int dropDownListViewStyle
androidx.legacy.v4.R$id: int top
androidx.annotation.XmlRes
kotlin.collections.ArraysKt___ArraysKt: int count(boolean[],kotlin.jvm.functions.Function1)
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
androidx.media.R$color
androidx.appcompat.R$attr: int actionModePopupWindowStyle
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light_Dialog
kotlin.sequences.SequencesKt___SequencesKt: java.util.List toMutableList(kotlin.sequences.Sequence)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean canOpenPopup()
androidx.databinding.Observable$OnPropertyChangedCallback: void onPropertyChanged(androidx.databinding.Observable,int)
android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo()
io.reactivex.disposables.CompositeDisposable: boolean remove(io.reactivex.disposables.Disposable)
kotlin.coroutines.SafeContinuation: SafeContinuation(kotlin.coroutines.Continuation,java.lang.Object)
kotlin.properties.ObservableProperty: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.legacy.coreutils.R$drawable: int notification_icon_background
com.jakewharton.rxbinding3.core.R$id: int title
androidx.appcompat.widget.SwitchCompat: void setSwitchTextAppearance(android.content.Context,int)
androidx.databinding.ViewDataBinding: void setBindingInverseListener(androidx.databinding.ViewDataBinding,androidx.databinding.InverseBindingListener,androidx.databinding.ViewDataBinding$PropertyChangedInverseListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean getPadding(android.graphics.Rect)
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_FONT_UNAVAILABLE
kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)
kotlinx.coroutines.channels.ActorKt: kotlinx.coroutines.channels.SendChannel actor(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlinx.coroutines.Job,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
io.reactivex.internal.subscriptions.SubscriptionHelper: boolean validate(org.reactivestreams.Subscription,org.reactivestreams.Subscription)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$groupBy$1: ChannelsKt__Channels_commonKt$groupBy$1(kotlin.coroutines.Continuation)
kotlin.UByte$Companion
androidx.drawerlayout.R$styleable: int GradientColor_android_tileMode
kotlin.collections.AbstractCollection: boolean contains(java.lang.Object)
androidx.core.view.ViewKt: void doOnPreDraw(android.view.View,kotlin.jvm.functions.Function1)
io.reactivex.CompletableEmitter: void setDisposable(io.reactivex.disposables.Disposable)
androidx.databinding.ViewDataBinding$IncludedLayouts: int[][] layoutIds
kotlin.collections.AbstractMap: java.lang.Object remove(java.lang.Object)
io.reactivex.internal.util.EmptyComponent: boolean isDisposed()
androidx.core.graphics.ColorKt: float component1(long)
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker: void run()
androidx.slidingpanelayout.R$drawable: int notification_tile_bg
androidx.core.internal.view.SupportMenuItem: int getNumericModifiers()
com.jakewharton.rxbinding3.widget.SeekBarProgressChangeEvent: com.jakewharton.rxbinding3.widget.SeekBarProgressChangeEvent copy$default(com.jakewharton.rxbinding3.widget.SeekBarProgressChangeEvent,android.widget.SeekBar,int,boolean,int,java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.reactivex.internal.operators.observable.ObservableWindowTimed
kotlinx.coroutines.CommonPool
dagger.android.support.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
com.example.revolut.rates.databinding.RatesItemBinding
androidx.drawerlayout.R$color: int ripple_material_light
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(double[])
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part)
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(double[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(float[],java.lang.Object[])
com.example.revolut.rates.R$styleable: int AnimatedStateListDrawableItem_android_id
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isDismissable()
androidx.core.view.ViewCompat: void dispatchStartTemporaryDetach(android.view.View)
com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent: android.widget.TextView getView()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-uaTIQ5s(short[],java.lang.Object[])
androidx.appcompat.R$id: int spacer
okhttp3.Response: long sentRequestAtMillis()
io.reactivex.Flowable: io.reactivex.Flowable subscribeOn(io.reactivex.Scheduler,boolean)
dagger.android.support.R$attr: int elevation
io.reactivex.internal.util.NotificationLite: boolean accept(java.lang.Object,io.reactivex.Observer)
dagger.android.support.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
androidx.appcompat.widget.AbsActionBarView: android.content.Context mPopupContext
com.example.revolut.rates.R$dimen: int abc_button_padding_vertical_material
io.reactivex.Flowable: void subscribe(io.reactivex.FlowableSubscriber)
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.channels.Closed getPollResult()
io.reactivex.internal.schedulers.ExecutorScheduler: ExecutorScheduler(java.util.concurrent.Executor,boolean)
androidx.core.view.ViewCompat: void setSaveFromParentEnabled(android.view.View,boolean)
kotlin.collections.GroupingKt__GroupingJVMKt: GroupingKt__GroupingJVMKt()
androidx.appcompat.R$styleable: int FontFamilyFont_font
io.reactivex.internal.util.ExceptionHelper: java.lang.Throwable TERMINATED
kotlin.jvm.Throws
io.reactivex.internal.disposables.EmptyDisposable: void error(java.lang.Throwable,io.reactivex.MaybeObserver)
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemChanged(int,java.lang.Object)
androidx.recyclerview.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getOldPosition()
androidx.legacy.v4.R$attr
androidx.fragment.app.FragmentTabHost: void onRestoreInstanceState(android.os.Parcelable)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitle(java.lang.CharSequence)
android.support.v4.media.RatingCompat: boolean isThumbUp()
kotlin.text.StringsKt__StringsJVMKt: java.util.List split(java.lang.CharSequence,java.util.regex.Pattern,int)
kotlinx.coroutines.DispatchedContinuation: void run()
kotlin.io.FileTreeWalk
androidx.appcompat.view.menu.MenuAdapter: void notifyDataSetChanged()
dagger.android.support.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
com.example.revolut.rates.R$dimen: int notification_right_side_padding_top
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager
okhttp3.Cache: long size()
kotlin.io.FilePathComponents: FilePathComponents(java.io.File,java.util.List)
kotlin.UShortArray: kotlin.collections.UShortIterator iterator-impl(short[])
com.example.revolut.rates.R$style: int Platform_V21_AppCompat
androidx.core.R$id: int icon
androidx.core.graphics.PathKt: java.lang.Iterable flatten$default(android.graphics.Path,float,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte maxWith(byte[],java.util.Comparator)
dagger.android.support.R$style: int Widget_AppCompat_EditText
androidx.recyclerview.R$dimen: int notification_large_icon_width
dagger.android.support.R$styleable: int AppCompatTheme_android_windowAnimationStyle
kotlin.text.StringsKt___StringsKt: char reduce(java.lang.CharSequence,kotlin.jvm.functions.Function2)
okhttp3.internal.ws.RealWebSocket: void cancel()
androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
com.example.revolut.rates.R$styleable: int[] SwitchCompat
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onTouchEvent(android.view.MotionEvent)
androidx.recyclerview.widget.RecyclerView$OnScrollListener
kotlin.properties.ObservableProperty: void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
androidx.legacy.coreui.R$styleable: int GradientColor_android_centerY
okio.Buffer: boolean rangeEquals(long,okio.ByteString,int,int)
com.example.revolut.rates.R$dimen: int fastscroll_minimum_range
androidx.core.graphics.RegionKt$iterator$1: java.lang.Object next()
androidx.print.PrintHelper: int SCALE_MODE_FILL
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: long time
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapNotNull$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
dagger.android.support.R$color: int material_grey_900
io.reactivex.internal.operators.maybe.MaybeFlatten
android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_ARGUMENT_INDEX
kotlinx.coroutines.JobSupport: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: io.reactivex.observers.BaseTestConsumer$TestWaitStrategy SPIN
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleXBy(float)
io.reactivex.subjects.ReplaySubject: io.reactivex.subjects.ReplaySubject create(int)
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit)
androidx.recyclerview.widget.RecyclerView: void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean)
kotlin.collections.AbstractIterator: void setNext(java.lang.Object)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.lifecycle.extensions.R$dimen: int notification_large_icon_height
io.reactivex.subscribers.TestSubscriber$EmptySubscriber: io.reactivex.subscribers.TestSubscriber$EmptySubscriber valueOf(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.DispatchedTask$DefaultImpls: java.lang.Throwable getExceptionalResult(kotlinx.coroutines.DispatchedTask,java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Worker[] access$getWorkers$p(kotlinx.coroutines.scheduling.CoroutineScheduler)
kotlin.text.Typography: char notEqual
androidx.appcompat.app.WindowDecorActionBar: void setHomeButtonEnabled(boolean)
androidx.appcompat.R$attr: int actionBarTabStyle
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)
androidx.lifecycle.ViewModelProvider
kotlin.jvm.internal.Reflection: kotlin.reflect.KType typeOf(java.lang.Class)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BOTTOM
androidx.viewpager.R$styleable: int FontFamilyFont_android_fontStyle
androidx.core.R$styleable: int GradientColorItem_android_color
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
com.example.revolut.rates.R$style: int Base_V23_Theme_AppCompat
androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChangeEvent: android.view.View getChild()
kotlin.collections.ArraysKt___ArraysKt: byte last(byte[],kotlin.jvm.functions.Function1)
androidx.viewpager.widget.ViewPager: void setCurrentItem(int)
androidx.appcompat.R$styleable: int ActionBar_subtitleTextStyle
androidx.databinding.adapters.AbsSpinnerBindingAdapter
io.reactivex.internal.operators.observable.ObservableJust: void subscribeActual(io.reactivex.Observer)
kotlin.io.SerializableKt
io.reactivex.SingleOnSubscribe
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
androidx.recyclerview.widget.ItemTouchHelper: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
dagger.android.support.R$styleable: int AppCompatTextHelper_android_drawableEnd
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isRunning()
com.google.gson.JsonArray: void add(java.lang.Number)
kotlin.ULongArray: boolean retainAll(java.util.Collection)
androidx.core.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPaused(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_Button_Small
dagger.android.support.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.selects.SelectClause1 getOnReceive()
androidx.drawerlayout.R$styleable: int FontFamily_fontProviderCerts
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onNestedPreFling(android.view.View,float,float)
androidx.appcompat.widget.MenuPopupWindow: void setExitTransition(java.lang.Object)
androidx.swiperefreshlayout.R$dimen: int compat_button_inset_vertical_material
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TEXT_LINES
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: org.reactivestreams.Subscriber downstream
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollOffset()
androidx.recyclerview.widget.SimpleItemAnimator: void onRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
kotlin.UByteArray: int hashCode()
dagger.android.support.R$styleable: int MenuItem_android_enabled
dagger.android.support.R$dimen: int abc_seekbar_track_progress_height_material
kotlin.jvm.functions.Function21: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.concurrent.TimersKt$timerTask$1: void run()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
androidx.core.app.Person: android.app.Person toAndroidPerson()
androidx.constraintlayout.solver.widgets.Guideline: int mRelativeBegin
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable getKey()
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class)
androidx.legacy.v4.R$drawable: int notify_panel_notification_icon_bg
kotlinx.coroutines.internal.SystemPropsKt: long systemProp(java.lang.String,long,long,long)
androidx.core.util.RangeKt: android.util.Range plus(android.util.Range,java.lang.Comparable)
com.example.revolut.rates.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
androidx.appcompat.widget.AbsActionBarView: int next(int,int,boolean)
okio.ByteString: java.lang.String utf8()
kotlinx.coroutines.EventLoopBase: EventLoopBase()
okio.Buffer: okio.BufferedSink write(okio.ByteString)
androidx.loader.content.AsyncTaskLoader: void onCanceled(java.lang.Object)
dagger.android.support.R$id: int topPanel
com.jakewharton.rxbinding3.widget.AdapterViewItemClickEvent: android.widget.AdapterView component1()
androidx.versionedparcelable.VersionedParcel: void writeInt(int,int)
io.reactivex.internal.operators.parallel.ParallelMap
androidx.databinding.ViewDataBinding: float getFromArray(float[],int)
io.reactivex.internal.operators.flowable.FlowableAny: FlowableAny(io.reactivex.Flowable,io.reactivex.functions.Predicate)
io.reactivex.Observable: io.reactivex.Observable observeOn(io.reactivex.Scheduler)
androidx.fragment.app.FragmentStatePagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapNotNull(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.ItemTouchHelper: int RIGHT
androidx.legacy.coreui.R$styleable: int GradientColor_android_centerX
androidx.appcompat.R$attr: int font
kotlin.collections.ArraysKt___ArraysJvmKt: short[] plus(short[],short[])
dagger.android.AndroidInjector$Builder
kotlinx.coroutines.AbstractContinuation: void resumeImpl(java.lang.Object,int)
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: boolean retry(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object)
androidx.core.text.CharSequenceKt: boolean isDigitsOnly(java.lang.CharSequence)
dagger.android.support.R$styleable: int[] AppCompatTextView
kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry minWith(java.util.Map,java.util.Comparator)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA
dagger.android.support.R$style: int Widget_AppCompat_AutoCompleteTextView
dagger.android.support.R$dimen: int abc_action_bar_elevation_material
kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext newCoroutineContext$default(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.Job,int,java.lang.Object)
okio.Buffer$UnsafeCursor: long resizeBuffer(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean setState(int[])
kotlin.jvm.internal.FloatSpreadBuilder: void add(float)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedPreScroll(android.view.View,int,int,int[],int)
kotlinx.coroutines.AbstractCoroutine: void resumeWith(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableTakeLastOne: void subscribeActual(io.reactivex.Observer)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type LEFT
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
kotlin.collections.CollectionsKt___CollectionsKt: double averageOfByte(java.lang.Iterable)
io.reactivex.Single: io.reactivex.Single hide()
androidx.appcompat.R$styleable: int ColorStateListItem_alpha
kotlin.StandardKt__SynchronizedKt: StandardKt__SynchronizedKt()
androidx.media.VolumeProviderCompatApi21$Delegate: void onAdjustVolume(int)
io.reactivex.internal.operators.flowable.FlowableSubscribeOn: void subscribeActual(org.reactivestreams.Subscriber)
com.jakewharton.rxbinding3.widget.SearchViewQueryTextEvent: com.jakewharton.rxbinding3.widget.SearchViewQueryTextEvent copy$default(com.jakewharton.rxbinding3.widget.SearchViewQueryTextEvent,android.widget.SearchView,java.lang.CharSequence,boolean,int,java.lang.Object)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: int getAlpha()
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[])
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BOOLEAN_AS_STRING
dagger.android.support.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object lastOrNull(java.util.List)
androidx.cursoradapter.widget.CursorAdapter
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(boolean)
androidx.appcompat.app.ActionBar: void setDisplayOptions(int,int)
io.reactivex.internal.operators.flowable.FlowableCreate$DropAsyncEmitter: long serialVersionUID
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(long[],kotlin.jvm.functions.Function1)
io.reactivex.internal.subscriptions.AsyncSubscription: void request(long)
androidx.lifecycle.OnLifecycleEvent: androidx.lifecycle.Lifecycle$Event value()
io.reactivex.internal.operators.observable.ObservableTimer$TimerObserver: long serialVersionUID
kotlinx.coroutines.channels.AbstractChannel$TryPollDesc: java.lang.Object resumeToken
androidx.constraintlayout.solver.widgets.Barrier
kotlin.text.Regex$Companion: kotlin.text.Regex fromLiteral(java.lang.String)
com.example.revolut.rates.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
kotlinx.coroutines.channels.Channel
androidx.databinding.ObservableParcelable: long serialVersionUID
com.example.revolut.rates.R$attr: int layout_anchorGravity
kotlin.sequences.TakeWhileSequence$iterator$1: void setNextItem(java.lang.Object)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: boolean cancel(java.lang.Throwable)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Menu
kotlin.text.StringsKt__StringsKt: java.lang.String commonPrefixWith(java.lang.CharSequence,java.lang.CharSequence,boolean)
androidx.core.ktx.R$id: int icon_group
androidx.appcompat.R$styleable: int FontFamilyFont_fontWeight
okhttp3.ConnectionSpec: int hashCode()
com.example.revolut.rates.R$style: int Theme_AppCompat_Light_DarkActionBar
androidx.appcompat.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SMALL_ICON
androidx.legacy.coreui.R$id: int right
kotlin.Result$Failure: java.lang.Throwable exception
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback: void updateRange(int,int,int,int,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List sortedDescending(java.lang.Iterable)
androidx.core.view.ViewKt: void updateLayoutParams(android.view.View,kotlin.jvm.functions.Function1)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(byte[])
kotlin.jvm.internal.Ref$CharRef: java.lang.String toString()
androidx.databinding.adapters.SeekBarBindingAdapter$OnStartTrackingTouch: void onStartTrackingTouch(android.widget.SeekBar)
io.reactivex.Observable: io.reactivex.Observable ambWith(io.reactivex.ObservableSource)
androidx.appcompat.R$styleable: int[] AlertDialog
kotlin.collections.ArraysKt___ArraysJvmKt: double[] plus(double[],java.util.Collection)
androidx.slidingpanelayout.R$dimen: int notification_action_text_size
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float horizontalBias
io.reactivex.internal.util.NotificationLite: boolean acceptFull(java.lang.Object,io.reactivex.Observer)
androidx.appcompat.widget.Toolbar: void setTitleTextAppearance(android.content.Context,int)
androidx.appcompat.widget.VectorEnabledTintResources: boolean isCompatVectorFromResourcesEnabled()
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedEmitLast: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_256_CBC_SHA
io.reactivex.internal.operators.single.SingleFlatMap
kotlinx.coroutines.CancellableContinuation: boolean cancel(java.lang.Throwable)
androidx.core.app.NotificationCompat: int FLAG_HIGH_PRIORITY
io.reactivex.internal.observers.ForEachWhileObserver: boolean isDisposed()
androidx.asynclayoutinflater.R$id: int info
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
android.support.v4.media.session.PlaybackStateCompat: long getPosition()
androidx.appcompat.R$style: int Theme_AppCompat_DialogWhenLarge
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onStopNestedScroll(android.view.View)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
androidx.core.widget.ContentLoadingProgressBar: void onAttachedToWindow()
androidx.constraintlayout.widget.ConstraintHelper: ConstraintHelper(android.content.Context,android.util.AttributeSet,int)
androidx.fragment.R$id: int normal
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder path(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getAlpha()
com.example.revolut.rates.R$attr: int windowFixedHeightMinor
kotlinx.coroutines.intrinsics.CancellableKt
kotlinx.coroutines.test.TestCoroutineContext
androidx.media.R$dimen: int notification_action_text_size
androidx.annotation.RequiresPermission$Read: androidx.annotation.RequiresPermission value()
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.Dispatchers INSTANCE
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int changeFlags
kotlinx.coroutines.channels.AbstractChannel$enqueueReceive$$inlined$addLastIfPrevAndIf$1: java.lang.Object prepare(java.lang.Object)
com.google.gson.internal.UnsafeAllocator: UnsafeAllocator()
io.reactivex.internal.operators.flowable.FlowableFromCallable: void subscribeActual(org.reactivestreams.Subscriber)
androidx.slidingpanelayout.R$integer: int status_bar_notification_info_maxnum
com.google.gson.JsonObject: int size()
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: long serialVersionUID
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)
androidx.appcompat.R$attr: int autoSizeMinTextSize
io.reactivex.processors.BehaviorProcessor: boolean hasComplete()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: java.security.Signature getSignature()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintHorizontal_weight
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(short,short)
com.example.revolut.rates.view.adapter.CurrenciesAdapter: com.example.revolut.rates.common.NotifyCurrencies access$getParentNotifier$p(com.example.revolut.rates.view.adapter.CurrenciesAdapter)
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object maxWith(java.lang.Iterable,java.util.Comparator)
com.example.revolut.rates.di.Injector: com.example.revolut.rates.di.Injector$Companion Companion
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener)
androidx.core.util.SparseArrayKt$keyIterator$1: void setIndex(int)
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber: long serialVersionUID
androidx.appcompat.widget.ScrollingTabContainerView: void removeTabAt(int)
okhttp3.internal.http2.Http2Connection: void writeData(int,boolean,okio.Buffer,long)
androidx.recyclerview.widget.RecyclerView$Adapter: int getItemCount()
kotlin.TypeAliasesKt: void RuntimeException$annotations()
androidx.appcompat.widget.ActionBarContextView: boolean onTouchEvent(android.view.MotionEvent)
kotlinx.coroutines.Job$DefaultImpls: java.lang.Throwable getCompletionException(kotlinx.coroutines.Job)
io.reactivex.internal.util.BlockingIgnoringReceiver: BlockingIgnoringReceiver()
androidx.coordinatorlayout.R$style: int Widget_Compat_NotificationActionContainer
kotlin.collections.SetsKt___SetsKt: java.util.Set minus(java.util.Set,java.lang.Object[])
androidx.lifecycle.extensions.R$styleable: int GradientColor_android_centerY
androidx.constraintlayout.widget.Constraints: Constraints(android.content.Context)
io.reactivex.internal.operators.maybe.MaybeFromSingle: io.reactivex.SingleSource source()
androidx.constraintlayout.widget.Constraints$LayoutParams: float translationY
androidx.core.util.AtomicFile: AtomicFile(java.io.File)
io.reactivex.internal.operators.maybe.MaybeConcatArray: void subscribeActual(org.reactivestreams.Subscriber)
androidx.recyclerview.widget.ItemTouchHelper: void startSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder)
kotlin.sequences.USequencesKt
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintVertical_bias
org.reactivestreams.Publisher: void subscribe(org.reactivestreams.Subscriber)
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionModeShareDrawable
androidx.viewpager.R$color: int secondary_text_default_material_light
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3: java.util.Iterator iterator()
io.reactivex.internal.operators.observable.ObservableAnySingle: ObservableAnySingle(io.reactivex.ObservableSource,io.reactivex.functions.Predicate)
kotlin.collections.AbstractMap$values$1
androidx.constraintlayout.widget.R$id: int bottom
dagger.android.support.R$id
com.example.revolut.rates.R$styleable: int Toolbar_title
io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt singleOrNull--ajY-9A(int[])
kotlinx.coroutines.ThreadPoolDispatcher: java.util.concurrent.atomic.AtomicInteger access$getThreadNo$p(kotlinx.coroutines.ThreadPoolDispatcher)
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionMenuTextAppearance
androidx.legacy.app.ActionBarDrawerToggle: boolean isDrawerIndicatorEnabled()
androidx.core.content.res.ResourcesCompat$FontCallback: void onFontRetrieved(android.graphics.Typeface)
androidx.databinding.adapters.ViewBindingAdapter: void setClickListener(android.view.View,android.view.View$OnClickListener,boolean)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(int,int,int)
dagger.android.support.R$style: int Widget_AppCompat_Light_ActionBar_TabView
io.reactivex.internal.operators.observable.ObservableSkip: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.view.CollapsibleActionView: void onActionViewCollapsed()
kotlin.ranges.CharProgressionIterator: boolean hasNext()
androidx.core.graphics.RectKt: android.graphics.Rect plus(android.graphics.Rect,android.graphics.Rect)
kotlin.collections.EmptySet
kotlin.UInt: int MAX_VALUE
androidx.appcompat.view.menu.ActionMenuItemView: void onRestoreInstanceState(android.os.Parcelable)
io.reactivex.Flowable: io.reactivex.Flowable filter(io.reactivex.functions.Predicate)
androidx.constraintlayout.solver.widgets.Barrier: int TOP
androidx.core.view.accessibility.AccessibilityRecordCompat: int getWindowId()
androidx.drawerlayout.widget.DrawerLayout: int STATE_IDLE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD
retrofit2.KotlinExtensions$await$4$2: void onFailure(retrofit2.Call,java.lang.Throwable)
io.reactivex.internal.operators.single.SingleFlatMapCompletable: SingleFlatMapCompletable(io.reactivex.SingleSource,io.reactivex.functions.Function)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setItemPrefetchEnabled(boolean)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int getNumCols()
kotlin.LazyKt$WhenMappings
io.reactivex.CompletableEmitter: void onComplete()
kotlin.coroutines.jvm.internal.Boxing: java.lang.Boolean boxBoolean(boolean)
okio.Okio: okio.Source source(java.io.File)
com.example.revolut.rates.di.AppModule_ProvideCurrenciesRepositoryFactory: com.example.revolut.rates.data.repository.CurrenciesRepository get()
androidx.appcompat.app.WindowDecorActionBar: android.view.View getCustomView()
androidx.recyclerview.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.core.graphics.RectKt: android.graphics.RectF toRectF(android.graphics.Rect)
dagger.android.DaggerIntentService: DaggerIntentService(java.lang.String)
androidx.core.view.accessibility.AccessibilityManagerCompat: java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)
androidx.core.content.SharedPreferencesKt: void edit$default(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.recyclerview.widget.LinearSmoothScroller: int SNAP_TO_ANY
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.content.MimeTypeFilter: boolean matches(java.lang.String,java.lang.String)
androidx.core.view.ViewCompat: int LAYOUT_DIRECTION_LOCALE
androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMajor
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
androidx.appcompat.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
androidx.fragment.app.FragmentActivity: void onLowMemory()
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(byte[],byte,int,int,int,java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: boolean retry(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object)
dagger.android.support.R$attr: int actionModePopupWindowStyle
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(int[],int,int,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(int[])
com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent: int getBefore()
io.reactivex.observers.LambdaConsumerIntrospection
com.google.gson.internal.LinkedHashTreeMap: java.lang.Object writeReplace()
androidx.fragment.app.ListFragment: void setListAdapter(android.widget.ListAdapter)
androidx.recyclerview.widget.DiffUtil$Callback: java.lang.Object getChangePayload(int,int)
io.reactivex.internal.util.QueueDrainHelper: void drainLoop(io.reactivex.internal.fuseable.SimplePlainQueue,io.reactivex.Observer,boolean,io.reactivex.disposables.Disposable,io.reactivex.internal.util.ObservableQueueDrain)
io.reactivex.processors.FlowableProcessor: boolean hasThrowable()
androidx.lifecycle.LifecycleObserver
androidx.constraintlayout.solver.Metrics: long resolvedWidgets
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_RC4_40_MD5
androidx.legacy.coreutils.R$styleable: int FontFamily_fontProviderCerts
androidx.core.os.TraceKt: java.lang.Object trace(java.lang.String,kotlin.jvm.functions.Function0)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayShowTitleEnabled(boolean)
kotlin.text.TypeAliasesKt: void CharacterCodingException$annotations()
com.example.revolut.rates.R$attr: int layout_constraintHeight_max
androidx.appcompat.widget.ForwardingListener: boolean onTouch(android.view.View,android.view.MotionEvent)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object last(java.util.List,kotlin.jvm.functions.Function1)
io.reactivex.observers.TestObserver: void onSuccess(java.lang.Object)
androidx.recyclerview.R$attr: int keylines
com.example.revolut.rates.R$styleable: int TextAppearance_android_textColorHint
kotlin.text.StringsKt__StringsKt: int lastIndexOfAny$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object)
androidx.legacy.v4.R$dimen: int compat_notification_large_icon_max_height
android.support.v4.media.session.PlaybackStateCompat$CustomAction: java.lang.Object getCustomAction()
androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)
io.reactivex.internal.disposables.DisposableHelper: io.reactivex.internal.disposables.DisposableHelper[] values()
androidx.core.view.NestedScrollingParent2
androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()
androidx.legacy.coreutils.R$dimen: int notification_small_icon_size_as_large
androidx.databinding.adapters.AdapterViewBindingAdapter$OnItemSelectedComponentListener: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
dagger.android.support.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.example.revolut.rates.R$attr: int actionModeCopyDrawable
io.reactivex.internal.operators.flowable.FlowableNever: void subscribeActual(org.reactivestreams.Subscriber)
androidx.databinding.ObservableParcelable: ObservableParcelable(android.os.Parcelable)
androidx.core.widget.PopupWindowCompat: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
com.example.revolut.rates.R$styleable: int AppCompatSeekBar_tickMarkTintMode
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(boolean[])
androidx.appcompat.R$style: int Base_Widget_AppCompat_EditText
androidx.appcompat.R$layout: int abc_popup_menu_header_item_layout
androidx.core.app.NotificationCompat: int GROUP_ALERT_SUMMARY
kotlin.ULongArray: boolean containsAll(java.util.Collection)
androidx.vectordrawable.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
com.example.revolut.rates.R$id: int currency_name
androidx.swiperefreshlayout.R$drawable: int notification_bg
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber: long serialVersionUID
com.google.gson.Gson: java.lang.Object fromJson(java.io.Reader,java.lang.Class)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setActionView(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(boolean[],kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.flowable.FlowableBufferBoundary: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.TypeAliasesKt: void NumberFormatException$annotations()
io.reactivex.internal.operators.completable.CompletableOnErrorComplete: CompletableOnErrorComplete(io.reactivex.CompletableSource,io.reactivex.functions.Predicate)
io.reactivex.Single: io.reactivex.Single retry(io.reactivex.functions.BiPredicate)
androidx.legacy.v4.R$layout: int notification_template_part_chronometer
com.example.revolut.rates.R$styleable: int LinearConstraintLayout_android_orientation
dagger.android.support.R$style: int Base_Widget_AppCompat_ListView
kotlin.random.FallbackThreadLocalRandom: FallbackThreadLocalRandom()
kotlin.collections.MapsKt__MapsKt: java.util.HashMap hashMapOf(kotlin.Pair[])
androidx.viewpager.R$drawable: int notification_template_icon_bg
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setTabListener(androidx.appcompat.app.ActionBar$TabListener)
com.example.revolut.rates.R$attr: int dividerPadding
androidx.appcompat.R$color: int material_blue_grey_950
kotlin.coroutines.experimental.CoroutineContext
io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean,int)
com.example.revolut.rates.R$styleable: int AppCompatTheme_dialogTheme
io.reactivex.internal.util.ExceptionHelper: java.util.List flatten(java.lang.Throwable)
com.jakewharton.rxbinding3.widget.RxTextView: com.jakewharton.rxbinding3.InitialValueObservable textChanges(android.widget.TextView)
io.reactivex.internal.operators.observable.ObservableRangeLong: ObservableRangeLong(long,long)
androidx.core.os.OperationCanceledException: OperationCanceledException()
kotlin.reflect.KType: boolean isMarkedNullable()
dagger.android.support.R$styleable: int AppCompatTheme_buttonStyle
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getPrimaryNavigationFragment()
androidx.print.PrintHelper: int ORIENTATION_PORTRAIT
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: java.lang.CharSequence getContentDescription()
kotlin.coroutines.jvm.internal.DebugMetadata: int v()
kotlinx.coroutines.CancelledContinuation: CancelledContinuation(kotlin.coroutines.Continuation,java.lang.Throwable)
io.reactivex.internal.operators.parallel.ParallelConcatMap: ParallelConcatMap(io.reactivex.parallel.ParallelFlowable,io.reactivex.functions.Function,int,io.reactivex.internal.util.ErrorMode)
androidx.appcompat.R$dimen: int notification_top_pad
androidx.lifecycle.extensions.R$style: int TextAppearance_Compat_Notification_Info
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object poll()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.loader.content.AsyncTaskLoader: java.lang.Object onLoadInBackground()
kotlin.UIntKt
androidx.core.app.SharedElementCallback: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)
androidx.databinding.adapters.RadioGroupBindingAdapter: RadioGroupBindingAdapter()
androidx.documentfile.provider.DocumentFile: androidx.documentfile.provider.DocumentFile fromSingleUri(android.content.Context,android.net.Uri)
androidx.appcompat.view.menu.MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
androidx.fragment.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
kotlin.collections.EmptyList: int getSize()
io.reactivex.internal.observers.CallbackCompletableObserver
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed()
com.google.gson.internal.JsonReaderInternalAccess: void promoteNameToValue(com.google.gson.stream.JsonReader)
kotlin.jvm.internal.CharSpreadBuilder: int getSize(java.lang.Object)
com.example.revolut.rates.R$style: int Base_V7_Theme_AppCompat_Light
androidx.recyclerview.widget.SortedList: void replaceAll(java.util.Collection)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_goneMarginBottom
androidx.collection.SparseArrayCompat: int indexOfValue(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.lang.Iterable,kotlin.sequences.Sequence)
kotlin.ranges.CharRange$Companion
kotlinx.coroutines.DelayKt: java.lang.Object delay(long,java.util.concurrent.TimeUnit,kotlin.coroutines.Continuation)
androidx.databinding.adapters.TextViewBindingAdapter: void setText(android.widget.TextView,java.lang.CharSequence)
androidx.core.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver$TimeoutFallbackObserver: long serialVersionUID
androidx.appcompat.R$styleable: int TextAppearance_android_typeface
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(long[])
com.example.revolut.rates.R$layout
kotlin.reflect.KParameter$Kind
androidx.core.app.AppOpsManagerCompat: int MODE_IGNORED
io.reactivex.functions.BiPredicate: boolean test(java.lang.Object,java.lang.Object)
okhttp3.CookieJar
com.example.revolut.rates.R$layout: int abc_list_menu_item_layout
kotlinx.coroutines.channels.AbstractChannel$onReceive$1
io.reactivex.internal.operators.flowable.FlowableDoAfterNext: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.util.LruCacheKt$lruCache$2: androidx.core.util.LruCacheKt$lruCache$2 INSTANCE
com.google.gson.internal.bind.DateTypeAdapter: java.util.Date read(com.google.gson.stream.JsonReader)
androidx.legacy.coreui.R$dimen: int notification_subtext_size
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCustomBigContentView(android.widget.RemoteViews)
io.reactivex.Observable: io.reactivex.Observable defer(java.util.concurrent.Callable)
kotlin.collections.ArraysKt___ArraysKt: long[] sliceArray(long[],java.util.Collection)
androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)
kotlin.coroutines.CoroutineContext$Element: kotlin.coroutines.CoroutineContext$Key getKey()
dagger.android.support.R$styleable: int AppCompatTheme_windowFixedHeightMinor
kotlin.ranges.URangesKt___URangesKt: long random(kotlin.ranges.ULongRange,kotlin.random.Random)
android.support.v4.media.MediaMetadataCompat$Builder: android.support.v4.media.MediaMetadataCompat$Builder putLong(java.lang.String,long)
androidx.appcompat.R$attr: int dialogCornerRadius
io.reactivex.internal.operators.observable.ObservableScalarXMap: boolean tryScalarXMapSubscribe(io.reactivex.ObservableSource,io.reactivex.Observer,io.reactivex.functions.Function)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TEXT
kotlin.collections.ArraysKt___ArraysKt: boolean[] sliceArray(boolean[],kotlin.ranges.IntRange)
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object count(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
android.support.v4.media.session.PlaybackStateCompat: long ACTION_SET_CAPTIONING_ENABLED
okhttp3.internal.http2.Http2Connection$Listener: void onStream(okhttp3.internal.http2.Http2Stream)
kotlinx.coroutines.channels.ClosedReceiveChannelException: ClosedReceiveChannelException(java.lang.String)
io.reactivex.Single: io.reactivex.Single onTerminateDetach()
androidx.appcompat.widget.AppCompatButton: void setTextAppearance(android.content.Context,int)
okhttp3.OkHttpClient$Builder: java.util.List interceptors()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT
kotlin.text.DelimitedRangesSequence$iterator$1: int getCounter()
androidx.core.view.InputDeviceCompat: int SOURCE_GAMEPAD
androidx.fragment.R$id: int icon_group
androidx.fragment.R$id: int actions
io.reactivex.Completable: io.reactivex.Completable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
android.support.v4.media.session.ParcelableVolumeInfo: int maxVolume
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object singleOrNull(java.util.List)
androidx.appcompat.R$id: int select_dialog_listview
kotlin.math.MathKt__MathJVMKt: double log(double,double)
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.core.content.res.TypedArrayKt: float getFloatOrThrow(android.content.res.TypedArray,int)
dagger.android.DaggerActivity_MembersInjector: void injectMembers(dagger.android.DaggerActivity)
okio.GzipSink
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber$OtherSubscriber: long serialVersionUID
kotlinx.coroutines.EventLoopBase: void unpark()
kotlin.jvm.functions.Function15
androidx.appcompat.R$string: int abc_font_family_body_1_material
androidx.core.app.NotificationManagerCompat: void cancel(int)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence dropLastWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.databinding.ViewDataBinding: java.lang.Object getObservedField(int)
androidx.core.view.ScaleGestureDetectorCompat: boolean isQuickScaleEnabled(java.lang.Object)
kotlin.ranges.ClosedRange
io.reactivex.internal.subscribers.LambdaSubscriber
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String PUBLIC_SUFFIX_RESOURCE
kotlin.sequences.FlatteningSequence$iterator$1: void remove()
com.example.revolut.rates.BuildConfig
okio.Okio: okio.BufferedSink buffer(okio.Sink)
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_startY
androidx.media.MediaBrowserProtocol: int CLIENT_MSG_CONNECT
com.example.revolut.rates.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
dagger.android.support.R$attr: int alertDialogButtonGroupStyle
androidx.appcompat.R$dimen: int abc_text_size_display_3_material
androidx.swiperefreshlayout.R$drawable: int notification_bg_low
dagger.android.support.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
io.reactivex.internal.subscriptions.ScalarSubscription: ScalarSubscription(org.reactivestreams.Subscriber,java.lang.Object)
androidx.constraintlayout.solver.LinearSystem: void minimize()
retrofit2.http.Path
androidx.appcompat.R$attr: int checkboxStyle
androidx.core.R$attr: int fontWeight
androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$1: TransitionKt$doOnCancel$$inlined$addListener$1(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
io.reactivex.internal.util.VolatileSizeArrayList: boolean addAll(int,java.util.Collection)
dagger.android.support.R$styleable: int[] AppCompatTextHelper
com.jakewharton.rxbinding3.core.R$dimen: int notification_large_icon_height
androidx.recyclerview.R$styleable: int GradientColor_android_endY
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.BiFunction getOnMaybeSubscribe()
androidx.legacy.coreutils.R$dimen: int notification_subtext_size
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_ACTIVE$p()
android.support.v4.media.MediaDescriptionCompat$Builder: MediaDescriptionCompat$Builder()
androidx.fragment.app.Fragment: boolean isHidden()
androidx.appcompat.widget.ActivityChooserView: boolean showPopup()
androidx.swiperefreshlayout.R$dimen: int compat_button_padding_vertical_material
androidx.core.view.MotionEventCompat: int AXIS_LTRIGGER
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: java.lang.Object fold(kotlin.coroutines.ContinuationInterceptor,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.ranges.CharProgressionIterator: CharProgressionIterator(char,char,int)
android.support.v4.media.session.PlaybackStateCompat: long ACTION_SKIP_TO_NEXT
androidx.legacy.coreutils.R$id: int tag_transition_group
kotlin.io.FilePathComponents: java.io.File getRoot()
io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable: long serialVersionUID
dagger.android.support.R$styleable: int View_paddingEnd
io.reactivex.internal.functions.Functions: io.reactivex.functions.Function toFunction(io.reactivex.functions.Function7)
androidx.viewpager.R$styleable: int[] FontFamily
androidx.appcompat.widget.Toolbar: void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)
io.reactivex.internal.subscribers.DeferredScalarSubscriber
kotlin.jvm.internal.Ref$ByteRef: byte element
io.reactivex.disposables.Disposables: io.reactivex.disposables.Disposable fromFuture(java.util.concurrent.Future)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler initIoScheduler(java.util.concurrent.Callable)
androidx.appcompat.widget.VectorEnabledTintResources
androidx.customview.R$styleable: int GradientColor_android_tileMode
androidx.recyclerview.widget.LinearLayoutManager: int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State)
kotlin.annotation.Retention: kotlin.annotation.AnnotationRetention value()
com.example.revolut.rates.R$styleable: int MenuView_android_verticalDivider
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_TOUCH_INTERACTION_END
androidx.core.R$drawable: int notification_action_background
androidx.appcompat.view.StandaloneActionMode: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.appcompat.R$style: int Base_Widget_AppCompat_ListPopupWindow
io.reactivex.internal.schedulers.SchedulerWhen: boolean isDisposed()
androidx.core.util.AtomicFile: java.io.File getBaseFile()
androidx.coordinatorlayout.R$attr
kotlin.collections.ArraysKt___ArraysJvmKt: double[] plus(double[],double[])
io.reactivex.internal.observers.BiConsumerSingleObserver: void dispose()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_EXPAND
androidx.core.content.res.TypedArrayKt: float getDimensionOrThrow(android.content.res.TypedArray,int)
com.example.revolut.rates.R$style: int Widget_AppCompat_RatingBar_Small
kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: boolean offer(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
io.reactivex.internal.operators.observable.ObservableObserveOn
io.reactivex.internal.operators.maybe.MaybeJust: java.lang.Object call()
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.channels.Closed getOfferResult()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.appcompat.R$style: int ThemeOverlay_AppCompat
okio.AsyncTimeout: void timedOut()
androidx.recyclerview.R$id: int notification_main_column
kotlin.collections.unsigned.UArraysKt___UArraysKt: int getLastIndex--ajY-9A(int[])
androidx.recyclerview.R$id: int right_icon
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String capabilityToString(int)
android.support.v4.media.MediaBrowserCompat: android.os.Bundle getNotifyChildrenChangedOptions()
androidx.appcompat.R$dimen: int compat_control_corner_material
androidx.appcompat.widget.DialogTitle: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.view.WindowCallbackWrapper: boolean onSearchRequested()
io.reactivex.Flowable: io.reactivex.Completable switchMapCompletableDelayError(io.reactivex.functions.Function)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setDither(boolean)
androidx.appcompat.R$attr: int ratingBarStyleIndicator
com.example.revolut.rates.R$styleable: int SwitchCompat_switchTextAppearance
androidx.core.ktx.R$id: int time
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionItemInfo(java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableList(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(float[],kotlin.jvm.functions.Function1)
com.jakewharton.rxbinding3.widget.AdapterViewItemClickEvent: int component3()
androidx.fragment.app.FragmentTransaction: int TRANSIT_FRAGMENT_CLOSE
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mNegativeButtonText
androidx.media.VolumeProviderCompat: int VOLUME_CONTROL_ABSOLUTE
okio.Buffer: okio.BufferedSink writeLongLe(long)
androidx.core.widget.ContentLoadingProgressBar: ContentLoadingProgressBar(android.content.Context,android.util.AttributeSet)
com.example.revolut.rates.R$dimen: int abc_switch_padding
androidx.appcompat.R$style: int Widget_AppCompat_ButtonBar
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
kotlin.text.MatchResult: kotlin.text.MatchGroupCollection getGroups()
io.reactivex.processors.ReplayProcessor: java.lang.Throwable getThrowable()
android.support.v4.media.MediaDescriptionCompat: long BT_FOLDER_TYPE_MIXED
io.reactivex.internal.operators.flowable.FlowableConcatMap: org.reactivestreams.Subscriber subscribe(org.reactivestreams.Subscriber,io.reactivex.functions.Function,int,io.reactivex.internal.util.ErrorMode)
androidx.legacy.v4.R$color: int ripple_material_light
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)
androidx.collection.LruCache: int sizeOf(java.lang.Object,java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: WindowDecorActionBar$TabImpl(androidx.appcompat.app.WindowDecorActionBar)
kotlin.text.Typography: char copyright
io.reactivex.internal.util.VolatileSizeArrayList: java.lang.Object remove(int)
io.reactivex.parallel.ParallelFailureHandling
androidx.recyclerview.widget.DiffUtil$Callback: int getNewListSize()
io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource,io.reactivex.functions.Function,java.util.concurrent.Callable)
androidx.core.ktx.R$dimen: int notification_large_icon_width
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$indexOfLast$1
dagger.android.support.R$styleable: int LinearLayoutCompat_android_orientation
retrofit2.CallAdapter$Factory: CallAdapter$Factory()
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler onSingleScheduler(io.reactivex.Scheduler)
androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.example.revolut.rates.R$attr: int backgroundStacked
androidx.media.R$drawable: int notification_tile_bg
io.reactivex.internal.observers.InnerQueuedObserver: boolean isDisposed()
kotlin.sequences.TakeWhileSequence$iterator$1: java.util.Iterator getIterator()
okhttp3.OkHttpClient: okhttp3.Dns dns()
androidx.legacy.v4.R$color
io.reactivex.Completable: io.reactivex.Completable startWith(io.reactivex.CompletableSource)
androidx.viewpager.R$styleable: int FontFamilyFont_fontWeight
kotlin.contracts.ReturnsNotNull
com.example.revolut.rates.R$style: int Base_V26_Theme_AppCompat
okhttp3.internal.http.CallServerInterceptor: CallServerInterceptor(boolean)
androidx.loader.R$attr: int ttcIndex
io.reactivex.internal.operators.observable.ObservableInternalHelper: io.reactivex.functions.Function replayFunction(io.reactivex.functions.Function,io.reactivex.Scheduler)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getDrawY()
androidx.coordinatorlayout.R$color: int notification_action_color_filter
androidx.documentfile.provider.DocumentFile
com.example.revolut.rates.R$id: int collapseActionView
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableFromObservable: FlowableFromObservable(io.reactivex.Observable)
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.os.Parcelable onSaveInstanceState()
android.support.v4.media.session.PlaybackStateCompat: long getBufferedPosition()
androidx.drawerlayout.R$drawable
com.google.gson.annotations.JsonAdapter: java.lang.Class value()
io.reactivex.internal.util.NotificationLite: boolean accept(java.lang.Object,org.reactivestreams.Subscriber)
okio.BufferedSource: int read(byte[],int,int)
com.jakewharton.rxbinding3.widget.SearchViewQueryTextEvent: java.lang.CharSequence getQueryText()
kotlinx.coroutines.scheduling.TaskMode: kotlinx.coroutines.scheduling.TaskMode NON_BLOCKING
androidx.vectordrawable.R$dimen: int notification_large_icon_width
androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()
androidx.swiperefreshlayout.R$layout
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter: long serialVersionUID
android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onSessionEvent(java.lang.String,android.os.Bundle)
androidx.appcompat.widget.AppCompatImageHelper: void setImageResource(int)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
dagger.android.support.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
androidx.core.view.ViewCompat$ScrollIndicators
dagger.android.support.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean refresh()
androidx.core.app.NotificationCompat$Builder: android.app.Notification getNotification()
androidx.core.util.RangeKt: android.util.Range toRange(kotlin.ranges.ClosedRange)
com.google.gson.JsonElement: boolean getAsBoolean()
androidx.core.ktx.R$style: int TextAppearance_Compat_Notification_Info
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String)
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.ranges.IntRange next()
kotlin.UnsafeLazyImpl
io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess
kotlinx.coroutines.JobCancellationException: kotlinx.coroutines.Job job
androidx.core.ktx.R$dimen: int notification_subtext_size
androidx.loader.content.Loader: java.lang.String toString()
androidx.appcompat.R$styleable: int Toolbar_titleTextColor
androidx.fragment.app.FragmentHostCallback
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_SECURITY_VIOLATION
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setShowAsActionFlags(int)
androidx.core.app.NotificationCompat: java.lang.String getGroup(android.app.Notification)
androidx.core.graphics.PointKt: android.graphics.Point plus(android.graphics.Point,android.graphics.Point)
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()
android.support.v4.media.session.IMediaSession: void setVolumeTo(int,int,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(short[],java.lang.Iterable)
androidx.constraintlayout.solver.widgets.Optimizer
io.reactivex.Flowable: io.reactivex.Flowable empty()
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionDelayError: long serialVersionUID
retrofit2.http.Headers
okhttp3.internal.cache.InternalCache: void trackResponse(okhttp3.internal.cache.CacheStrategy)
io.reactivex.internal.operators.completable.CompletableCreate$Emitter: long serialVersionUID
com.example.revolut.rates.R$attr: int actionModeShareDrawable
kotlin.text.StringsKt___StringsKt: java.util.List windowed$default(java.lang.CharSequence,int,int,boolean,int,java.lang.Object)
androidx.media.AudioAttributesCompat$Builder
com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory: java.lang.Class access$getRawType$s572770538(java.lang.reflect.Type)
androidx.loader.R$styleable: int FontFamilyFont_android_fontStyle
androidx.asynclayoutinflater.R$dimen: int compat_control_corner_material
androidx.databinding.adapters.NumberPickerBindingAdapter: void setValue(android.widget.NumberPicker,int)
androidx.arch.core.executor.TaskExecutor: void postToMainThread(java.lang.Runnable)
okhttp3.internal.connection.StreamAllocation: void release()
androidx.asynclayoutinflater.R$id: int tag_unhandled_key_event_manager
androidx.recyclerview.R$id: int icon
androidx.core.app.NotificationCompat
androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior
io.reactivex.internal.schedulers.SchedulerPoolFactory: int PURGE_PERIOD_SECONDS
okhttp3.internal.Util: java.lang.String format(java.lang.String,java.lang.Object[])
androidx.appcompat.graphics.drawable.DrawableWrapper: int getChangingConfigurations()
com.example.revolut.rates.R$id: int listMode
com.example.revolut.rates.R$styleable: int Spinner_android_dropDownWidth
com.example.revolut.rates.R$attr: int allowStacking
io.reactivex.Maybe: io.reactivex.Flowable concat(org.reactivestreams.Publisher,int)
io.reactivex.internal.util.HalfSerializer: void onNext(org.reactivestreams.Subscriber,java.lang.Object,java.util.concurrent.atomic.AtomicInteger,io.reactivex.internal.util.AtomicThrowable)
androidx.core.os.EnvironmentCompat: java.lang.String MEDIA_UNKNOWN
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isSpreadWidth()
dagger.android.support.R$dimen: int disabled_alpha_material_dark
androidx.legacy.coreui.R$color: int ripple_material_light
io.reactivex.internal.subscribers.SubscriberResourceWrapper: void dispose()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy)
com.jakewharton.rxbinding3.view.ViewScrollChangeEvent: android.view.View component1()
androidx.core.ktx.R$attr: int fontProviderAuthority
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: LockFreeLinkedListNode$AddLastDesc(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
com.example.revolut.rates.R$attr: int emptyVisibility
dagger.android.support.DaggerAppCompatDialogFragment_MembersInjector: void injectMembers(java.lang.Object)
kotlin.reflect.KParameter: java.lang.String getName()
kotlin.coroutines.experimental.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.experimental.CoroutineContext minusKey(kotlin.coroutines.experimental.CoroutineContext$Element,kotlin.coroutines.experimental.CoroutineContext$Key)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.appcompat.R$attr: int autoSizePresetSizes
kotlin.sequences.GeneratorSequence$iterator$1: void setNextItem(java.lang.Object)
kotlin.io.NoSuchFileException
androidx.core.R$layout: int notification_action
io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)
androidx.core.app.NotificationCompat: int FLAG_INSISTENT
androidx.appcompat.R$attr: int colorControlNormal
io.reactivex.Notification: java.lang.Throwable getError()
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: io.reactivex.internal.fuseable.ConditionalSubscriber downstream
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_FOCUS
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object lastOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentStatePagerAdapter: androidx.fragment.app.Fragment getItem(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$layout: int abc_screen_simple_overlay_action_mode
dagger.android.support.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String,java.nio.charset.Charset)
androidx.core.widget.NestedScrollView: void stopNestedScroll(int)
androidx.slidingpanelayout.R$dimen: int notification_large_icon_height
io.reactivex.observers.TestObserver: void onError(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(double[],int,int)
kotlin.internal.PlatformImplementationsKt: kotlin.internal.PlatformImplementations IMPLEMENTATIONS
dagger.android.support.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
io.reactivex.Flowable: io.reactivex.Flowable concatMapIterable(io.reactivex.functions.Function)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void resetGraph()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCustomContentView(android.widget.RemoteViews)
androidx.recyclerview.widget.AdapterListUpdateCallback: void onInserted(int,int)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int getIntrinsicHeight()
com.example.revolut.rates.R$attr: int color
android.support.v4.media.RatingCompat: void writeToParcel(android.os.Parcel,int)
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: int component3()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(short,byte)
kotlin.UShortArray: int size()
androidx.fragment.app.FragmentManager: boolean popBackStackImmediate(java.lang.String,int)
io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.internal.connection.StreamAllocation: void streamFailed(java.io.IOException)
dagger.android.support.R$styleable: int AppCompatTheme_actionDropDownStyle
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status RUNNING
androidx.appcompat.R$dimen: int compat_button_inset_horizontal_material
androidx.loader.R$id: int async
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.app.WindowDecorActionBar: int getDisplayOptions()
androidx.loader.R$id: int info
androidx.core.R$styleable: int GradientColor_android_endColor
androidx.fragment.app.Fragment: java.lang.CharSequence getText(int)
androidx.core.util.Pair: java.lang.Object second
okhttp3.MultipartBody$Part
androidx.swiperefreshlayout.R$id: int icon_group
io.reactivex.Flowable: io.reactivex.Flowable fromArray(java.lang.Object[])
io.reactivex.internal.operators.observable.ObservableMergeWithSingle: void subscribeActual(io.reactivex.Observer)
androidx.customview.R$integer: int status_bar_notification_info_maxnum
kotlin.collections.MapsKt__MapsKt: java.util.Map plus(java.util.Map,kotlin.Pair)
kotlin.ranges.RangesKt___RangesKt: java.lang.Comparable coerceIn(java.lang.Comparable,kotlin.ranges.ClosedFloatingPointRange)
retrofit2.Response: retrofit2.Response success(java.lang.Object)
io.reactivex.internal.queue.SpscArrayQueue: boolean offer(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.view.ActionProvider getSupportActionProvider()
kotlin.jvm.internal.IntCompanionObject
kotlinx.coroutines.scheduling.WorkQueueKt
kotlin.jvm.internal.ClassReference: java.util.List getAnnotations()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List sortedWith(java.lang.Iterable,java.util.Comparator)
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URI)
kotlinx.coroutines.ResumeModeKt: void MODE_IGNORE$annotations()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int startToStart
androidx.appcompat.R$attr: int thumbTint
androidx.core.app.NotificationCompat: int DEFAULT_LIGHTS
org.intellij.lang.annotations.JdkConstants$FontStyle
androidx.fragment.R$layout: int notification_action_tombstone
dagger.android.support.R$style: int Widget_AppCompat_SeekBar_Discrete
kotlinx.coroutines.CoroutineId: kotlinx.coroutines.CoroutineId$Key Key
kotlin.ranges.UIntRange: kotlin.ranges.UIntRange access$getEMPTY$cp()
io.reactivex.internal.util.HalfSerializer: void onError(io.reactivex.Observer,java.lang.Throwable,java.util.concurrent.atomic.AtomicInteger,io.reactivex.internal.util.AtomicThrowable)
androidx.appcompat.R$attr: int contentInsetRight
androidx.appcompat.R$style: int AlertDialog_AppCompat_Light
androidx.core.content.pm.ActivityInfoCompat
androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$1: void onTransitionCancel(android.transition.Transition)
androidx.appcompat.R$attr: int searchViewStyle
androidx.constraintlayout.widget.R$attr: int layout_constraintCircle
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(java.lang.Object[])
io.reactivex.processors.ReplayProcessor: void onComplete()
kotlin.collections.UIntIterator
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(float[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.constraintlayout.widget.Guideline: Guideline(android.content.Context,android.util.AttributeSet)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(boolean[],java.lang.Iterable,kotlin.jvm.functions.Function2)
androidx.swiperefreshlayout.widget.CircularProgressDrawable
com.example.revolut.rates.databinding.RatesItemBindingImpl: void invalidateAll()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setAlphabeticShortcut(char,int)
kotlin.collections.ArraysKt___ArraysKt: int count(float[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
androidx.arch.core.executor.TaskExecutor
androidx.recyclerview.widget.RecyclerView$OnFlingListener: RecyclerView$OnFlingListener()
kotlin.jvm.functions.Function11: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.graphics.PointF computeScrollVectorForPosition(int)
androidx.coordinatorlayout.R$id: int action_container
androidx.fragment.app.FragmentActivity: void onStop()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence)
android.support.v4.media.MediaMetadataCompat$Builder: android.support.v4.media.MediaMetadataCompat$Builder putText(java.lang.String,java.lang.CharSequence)
io.reactivex.Maybe: io.reactivex.observers.TestObserver test(boolean)
kotlin.collections.UArraysKt: kotlin.collections.UArraysKt INSTANCE
androidx.drawerlayout.R$styleable: int GradientColor_android_centerY
io.reactivex.MaybeOperator: io.reactivex.MaybeObserver apply(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.completable.CompletableUsing
androidx.core.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)
androidx.core.os.PersistableBundleKt: android.os.PersistableBundle persistableBundleOf(kotlin.Pair[])
androidx.databinding.adapters.AdapterViewBindingAdapter$OnNothingSelected: void onNothingSelected(android.widget.AdapterView)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: java.util.ArrayList getSortedList()
androidx.vectordrawable.R$layout: int notification_action
okhttp3.EventListener: void secureConnectEnd(okhttp3.Call,okhttp3.Handshake)
kotlinx.coroutines.CoroutineContextKt: void IO$annotations()
com.google.gson.internal.LinkedTreeMap: LinkedTreeMap()
kotlin.ranges.RangesKt___RangesKt: java.lang.Byte toByteExactOrNull(int)
androidx.appcompat.widget.SwitchCompat: SwitchCompat(android.content.Context)
androidx.core.graphics.PointKt: int component1(android.graphics.Point)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
androidx.lifecycle.extensions.R$dimen: int compat_button_inset_horizontal_material
androidx.appcompat.view.menu.MenuPopupHelper: void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection filterIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2)
com.example.revolut.rates.R$attr: int background
com.example.revolut.rates.data.model.Rate: com.example.revolut.rates.data.model.Rate copy$default(com.example.revolut.rates.data.model.Rate,java.lang.String,java.lang.Double,int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: boolean isSelected()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)
io.reactivex.internal.operators.observable.ObservableReplay$UnboundedReplayBuffer: long serialVersionUID
kotlin.collections.MapsKt__MapsKt: java.util.Map filter(java.util.Map,kotlin.jvm.functions.Function1)
io.reactivex.internal.schedulers.IoScheduler: int size()
kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1
androidx.core.ktx.R$integer: int status_bar_notification_info_maxnum
androidx.appcompat.graphics.drawable.DrawableWrapper: void setHotspotBounds(int,int,int,int)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(float[],float,int,int,int,java.lang.Object)
kotlinx.coroutines.internal.LockFreeMPSCQueueCore: int addLast(java.lang.Object)
androidx.drawerlayout.R$id: int tag_unhandled_key_event_manager
androidx.recyclerview.widget.StaggeredGridLayoutManager: void scrollToPosition(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(float[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: char[] sortedArrayDescending(char[])
dagger.android.support.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
androidx.lifecycle.LiveData: void postValue(java.lang.Object)
androidx.core.app.JobIntentService: JobIntentService()
androidx.appcompat.app.WindowDecorActionBar: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.reactivex.Observable: io.reactivex.Observable skipUntil(io.reactivex.ObservableSource)
io.reactivex.internal.operators.observable.BlockingObservableIterable
com.example.revolut.rates.R$dimen: int abc_text_size_display_2_material
androidx.appcompat.app.ActionBar: android.view.View getCustomView()
io.reactivex.subjects.BehaviorSubject: io.reactivex.subjects.BehaviorSubject create()
androidx.core.util.LruCacheKt$lruCache$3: androidx.core.util.LruCacheKt$lruCache$3 INSTANCE
kotlin.ULong: long constructor-impl(long)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
androidx.appcompat.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
androidx.databinding.Untaggable
androidx.legacy.v4.R$styleable: int ColorStateListItem_android_alpha
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.example.revolut.rates.R$drawable: int abc_textfield_search_material
androidx.constraintlayout.widget.ConstraintSet: void setVerticalWeight(int,float)
io.reactivex.internal.operators.flowable.FlowableReplay: org.reactivestreams.Publisher source()
androidx.appcompat.R$string: int abc_action_menu_overflow_description
androidx.appcompat.widget.MenuPopupWindow: MenuPopupWindow(android.content.Context,android.util.AttributeSet,int,int)
kotlinx.coroutines.internal.AtomicOp: void complete(java.lang.Object,java.lang.Object)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)
com.example.revolut.rates.R$attr: int listDividerAlertDialog
androidx.recyclerview.widget.SortedList: int add(java.lang.Object)
androidx.databinding.adapters.Converters: Converters()
androidx.appcompat.R$id: int bottom
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet,int)
io.reactivex.internal.observers.BlockingMultiObserver: void onComplete()
kotlin.ranges.LongRange: int hashCode()
kotlin.collections.CollectionsKt___CollectionsKt: boolean none(java.lang.Iterable)
dagger.android.support.R$drawable: int abc_btn_check_to_on_mtrl_000
androidx.appcompat.widget.AbsActionBarView: int mContentHeight
androidx.swiperefreshlayout.widget.CircularProgressDrawable: int getBackgroundColor()
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
io.reactivex.internal.util.VolatileSizeArrayList: java.lang.Object get(int)
androidx.vectordrawable.R$drawable: int notification_bg_low_normal
androidx.appcompat.R$styleable: int SearchView_submitBackground
kotlinx.coroutines.ChildContinuation: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservableCreate: ObservableCreate(io.reactivex.ObservableOnSubscribe)
androidx.core.view.ScrollingView
com.example.revolut.rates.R$styleable: int AppCompatTheme_ratingBarStyle
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: io.reactivex.internal.fuseable.QueueSubscription qs
io.reactivex.Observable: io.reactivex.Observable flatMapIterable(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
kotlin.jvm.internal.MagicApiIntrinsics: void voidMagicApiCall(java.lang.Object)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: float getArrowWidth()
androidx.media.R$dimen: int compat_button_padding_horizontal_material
androidx.legacy.coreutils.R$styleable: int FontFamily_fontProviderAuthority
kotlinx.coroutines.internal.AnnotationsKt
androidx.appcompat.view.menu.BaseMenuPresenter: void updateMenuView(boolean)
androidx.core.util.AtomicFileKt: java.lang.String readText(android.util.AtomicFile,java.nio.charset.Charset)
androidx.appcompat.app.AppCompatDelegate: void onCreate(android.os.Bundle)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: ConstraintTableLayout(int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabeledBy(android.view.View)
io.reactivex.internal.operators.flowable.FlowableAmb: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.Flowable: io.reactivex.Flowable switchMap(io.reactivex.functions.Function,int)
androidx.recyclerview.widget.ItemTouchHelper$Callback: int makeMovementFlags(int,int)
okio.Buffer: okio.Buffer writeUtf8CodePoint(int)
dagger.android.DaggerDialogFragment_MembersInjector: void injectMembers(java.lang.Object)
android.support.v4.media.session.MediaSessionCompat$QueueItem: int UNKNOWN_ID
io.reactivex.internal.operators.flowable.FlowableCombineLatest: FlowableCombineLatest(java.lang.Iterable,io.reactivex.functions.Function,int,boolean)
androidx.core.content.ContextCompat: java.io.File[] getExternalCacheDirs(android.content.Context)
com.example.revolut.rates.R$dimen: int item_touch_helper_swipe_escape_max_velocity
androidx.appcompat.app.ActionBar: void setDisplayHomeAsUpEnabled(boolean)
androidx.recyclerview.R$styleable: int[] GradientColor
okhttp3.WebSocket$Factory
androidx.drawerlayout.R$styleable: int GradientColor_android_startColor
androidx.customview.widget.ViewDragHelper$Callback: void onViewDragStateChanged(int)
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionBar_TabText
kotlinx.coroutines.scheduling.TaskMode
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
dagger.android.support.R$styleable: int AppCompatTheme_colorControlActivated
android.support.v4.media.session.MediaControllerCompat$TransportControls: void setRating(android.support.v4.media.RatingCompat,android.os.Bundle)
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
retrofit2.Retrofit: retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])
androidx.loader.R
kotlin.text.Typography: char leftGuillemete
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri)
kotlin.text.Regex: Regex(java.lang.String)
kotlinx.coroutines.ThreadContextElementKt: kotlinx.coroutines.ThreadContextElement asContextElement$default(java.lang.ThreadLocal,java.lang.Object,int,java.lang.Object)
okhttp3.internal.http.HttpHeaders: java.util.Set varyFields(okhttp3.Headers)
io.reactivex.internal.operators.parallel.ParallelFilterTry: ParallelFilterTry(io.reactivex.parallel.ParallelFlowable,io.reactivex.functions.Predicate,io.reactivex.functions.BiFunction)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(short[])
com.jakewharton.rxbinding3.view.RxView: com.jakewharton.rxbinding3.InitialValueObservable focusChanges(android.view.View)
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion: CoroutineScheduler$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Display2
com.example.revolut.rates.R$styleable: int AppCompatTheme_listPreferredItemHeight
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_SELECTION_START_INT
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onWindowFocusChanged(boolean)
io.reactivex.observers.TestObserver: void onSubscribe(io.reactivex.disposables.Disposable)
kotlin.jvm.internal.ClassReference: java.util.Collection getNestedClasses()
kotlin.random.RandomKt: void checkRangeBounds(double,double)
androidx.lifecycle.Lifecycle$Event
androidx.recyclerview.widget.SortedList: SortedList(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback,int)
io.reactivex.internal.operators.observable.ObservableRepeatWhen: ObservableRepeatWhen(io.reactivex.ObservableSource,io.reactivex.functions.Function)
kotlinx.coroutines.internal.ContextScope
io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription: long serialVersionUID
com.jakewharton.rxbinding3.view.ViewScrollChangeEvent: com.jakewharton.rxbinding3.view.ViewScrollChangeEvent copy$default(com.jakewharton.rxbinding3.view.ViewScrollChangeEvent,android.view.View,int,int,int,int,int,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther: FlowableDelaySubscriptionOther(org.reactivestreams.Publisher,org.reactivestreams.Publisher)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void attachView(android.view.View)
kotlin.UByteArrayKt
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode NONE
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle: FlowableMergeWithSingle(io.reactivex.Flowable,io.reactivex.SingleSource)
androidx.legacy.v4.R$color: int secondary_text_default_material_dark
androidx.appcompat.widget.Toolbar$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.core.app.SharedElementCallback: void onSharedElementEnd(java.util.List,java.util.List,java.util.List)
androidx.appcompat.R$drawable: int abc_btn_check_to_on_mtrl_000
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean)
androidx.core.app.ActivityCompat: androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(java.lang.Object[],java.lang.Iterable)
kotlin.sequences.TransformingSequence: TransformingSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.SafePublicationLazyImpl
androidx.constraintlayout.solver.widgets.Rectangle: int y
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_NEW$p()
androidx.recyclerview.widget.LinearLayoutManager: boolean getReverseLayout()
androidx.databinding.adapters.ViewGroupBindingAdapter$OnAnimationRepeat: void onAnimationRepeat(android.view.animation.Animation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(java.lang.Object[])
androidx.customview.R$styleable: int GradientColor_android_centerColor
androidx.databinding.ViewDataBinding: boolean hasPendingBindings()
androidx.appcompat.R$id: int title
androidx.recyclerview.R$integer: int status_bar_notification_info_maxnum
okhttp3.internal.connection.StreamAllocation: java.lang.String toString()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object last(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.SafePublicationLazyImpl$Companion
androidx.appcompat.app.AppCompatActivity: void onSaveInstanceState(android.os.Bundle)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintWidth_percent
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: long serialVersionUID
kotlin.text.Charsets: java.nio.charset.Charset UTF32_BE()
androidx.collection.CircularArray: java.lang.Object getFirst()
io.reactivex.Maybe: io.reactivex.Maybe flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)
dagger.android.support.R$dimen: int abc_action_button_min_height_material
com.jakewharton.rxbinding3.view.ViewAttachDetachedEvent: android.view.View component1()
io.reactivex.SingleObserver
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
androidx.core.graphics.BitmapCompat: void setHasMipMap(android.graphics.Bitmap,boolean)
androidx.core.ktx.R$attr: int fontWeight
com.example.revolut.rates.R$attr: int layout_constraintDimensionRatio
io.reactivex.internal.operators.parallel.ParallelFlatMap: ParallelFlatMap(io.reactivex.parallel.ParallelFlowable,io.reactivex.functions.Function,boolean,int,int)
androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
kotlinx.coroutines.channels.AbstractSendChannel: AbstractSendChannel()
io.reactivex.disposables.ReferenceDisposable: long serialVersionUID
com.example.revolut.rates.R$color: int color_grey_600
io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver: long serialVersionUID
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
kotlin.collections.ArraysKt___ArraysKt: long first(long[])
io.reactivex.internal.functions.Functions$NaturalComparator: io.reactivex.internal.functions.Functions$NaturalComparator valueOf(java.lang.String)
okio.Buffer: long indexOf(byte,long)
androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)
androidx.legacy.coreutils.R$drawable
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_goneMarginBottom
androidx.legacy.v4.R$style
androidx.appcompat.app.ActionBarDrawerToggle: void onDrawerOpened(android.view.View)
androidx.core.text.TextDirectionHeuristicCompat: boolean isRtl(java.lang.CharSequence,int,int)
kotlinx.coroutines.DispatchedTask$DefaultImpls: java.lang.Object getSuccessfulResult(kotlinx.coroutines.DispatchedTask,java.lang.Object)
okio.Timeout: okio.Timeout deadline(long,java.util.concurrent.TimeUnit)
io.reactivex.Single: io.reactivex.Single using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer)
androidx.vectordrawable.R$attr: int layout_dodgeInsetEdges
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent)
kotlinx.coroutines.CompletionHandlerKt
androidx.core.view.DragStartHelper: boolean onLongClick(android.view.View)
androidx.customview.R$id: int icon
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map groupBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.appcompat.R$attr: int colorControlHighlight
com.example.revolut.rates.databinding.ActivityMainBindingImpl: boolean hasPendingBindings()
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintTop_toBottomOf
io.reactivex.internal.operators.flowable.FlowableOnErrorReturn: FlowableOnErrorReturn(io.reactivex.Flowable,io.reactivex.functions.Function)
dagger.android.support.R$styleable: int AppCompatTheme_actionModeCutDrawable
androidx.core.transition.TransitionKt$addListener$listener$1: TransitionKt$addListener$listener$1(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$findLast$1: ChannelsKt__Channels_commonKt$findLast$1(kotlin.coroutines.Continuation)
androidx.appcompat.R$style: int Theme_AppCompat_Light_Dialog
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Bundle toBundle()
androidx.legacy.v4.R$styleable: int GradientColor_android_endColor
androidx.media.MediaBrowserProtocol: int SERVICE_VERSION_CURRENT
okhttp3.HttpUrl: int hashCode()
androidx.swiperefreshlayout.R$id: int text
androidx.core.net.TrafficStatsCompat: void untagSocket(java.net.Socket)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLast-r7IrZao(long[],int)
io.reactivex.internal.disposables.SequentialDisposable: boolean replace(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.TintTypedArray: int getType(int)
okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpCodec,long,java.io.IOException)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mHorizontalWrapOptimized
androidx.core.ktx.R$styleable: int GradientColorItem_android_color
dagger.android.support.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(short[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.app.FrameMetricsAggregator: int SWAP_DURATION
io.reactivex.internal.subscribers.QueueDrainSubscriber: void fastPathOrderedEmitMax(java.lang.Object,boolean,io.reactivex.disposables.Disposable)
kotlin.ranges.UIntRange: java.lang.Comparable getStart()
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder validateEagerly(boolean)
io.reactivex.internal.operators.flowable.FlowableRange: FlowableRange(int,int)
kotlin.jvm.internal.PropertyReference0: kotlin.reflect.KProperty$Getter getGetter()
kotlin.jvm.internal.MagicApiIntrinsics: java.lang.Object anyMagicApiCall(int)
dagger.android.support.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setCheckable(boolean)
androidx.core.view.MarginLayoutParamsCompat: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(long[])
androidx.appcompat.widget.ListPopupWindow: boolean isDropDownAlwaysVisible()
io.reactivex.flowables.GroupedFlowable: GroupedFlowable(java.lang.Object)
kotlinx.coroutines.ResumeModeKt: int MODE_DIRECT
io.reactivex.observers.ResourceMaybeObserver: ResourceMaybeObserver()
androidx.core.util.SparseArrayKt: java.lang.Object getOrElse(android.util.SparseArray,int,kotlin.jvm.functions.Function0)
com.google.gson.JsonElement: java.lang.String getAsString()
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_CALL
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: int lastIndexOf(java.lang.Object)
com.jakewharton.rxbinding3.internal.AlwaysTrue
androidx.core.os.BuildCompat: boolean isAtLeastP()
io.reactivex.Maybe: io.reactivex.Maybe delaySubscription(long,java.util.concurrent.TimeUnit)
dagger.android.BroadcastReceiverKey: java.lang.Class value()
dagger.android.support.R$attr: int actionModeCloseButtonStyle
kotlin.collections.DoubleIterator: DoubleIterator()
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle
androidx.appcompat.R$attr: int fontProviderFetchTimeout
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(int[])
dagger.android.support.R$styleable: int TextAppearance_android_shadowDx
com.example.revolut.rates.R$styleable: int DrawerArrowToggle_thickness
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: int getSize()
io.reactivex.internal.operators.flowable.FlowableRange: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
androidx.vectordrawable.R$styleable: int[] GradientColor
com.example.revolut.rates.BR: int _all
io.reactivex.internal.operators.flowable.FlowableMapPublisher
androidx.viewpager.widget.ViewPager: ViewPager(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REQUEST_TOUCH_EXPLORATION_MODE
io.reactivex.internal.util.VolatileSizeArrayList: boolean retainAll(java.util.Collection)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState()
kotlin.jvm.internal.ClassReference: java.lang.String toString()
androidx.appcompat.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
okhttp3.internal.http2.Http2Stream: okhttp3.Headers takeHeaders()
kotlinx.coroutines.DispatchedTask$DefaultImpls
com.example.revolut.rates.R$attr: int actionBarStyle
kotlinx.coroutines.DispatchedContinuation: int getResumeMode()
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean hasAncestor(androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void stop()
dagger.internal.ReferenceReleasingProviderManager: ReferenceReleasingProviderManager(java.lang.Class)
dagger.internal.SetFactory
io.reactivex.subjects.Subject: boolean hasThrowable()
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(boolean[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.Delay: void scheduleResumeAfterDelay(long,java.util.concurrent.TimeUnit,kotlinx.coroutines.CancellableContinuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List windowed$default(java.lang.Iterable,int,int,boolean,int,java.lang.Object)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
androidx.cursoradapter.widget.CursorAdapter: CursorAdapter(android.content.Context,android.database.Cursor)
okhttp3.Response: okhttp3.ResponseBody peekBody(long)
androidx.legacy.v4.R$dimen: int compat_button_inset_vertical_material
androidx.appcompat.R$bool: int abc_allow_stacked_button_bar
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] plus(boolean[],java.util.Collection)
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_ALWAYS
io.reactivex.internal.observers.FutureSingleObserver: boolean isCancelled()
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(float[])
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: void fill-2fe2U9s$default(int[],int,int,int,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending-GBYM_sE(byte[])
android.support.v4.media.MediaMetadataCompat$TextKey
androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,android.content.res.Resources,int)
dagger.android.support.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
com.jakewharton.rxbinding3.widget.SeekBarStopChangeEvent
okio.GzipSource: void close()
androidx.vectordrawable.R$color
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
io.reactivex.Observable: io.reactivex.Observable concatArray(io.reactivex.ObservableSource[])
androidx.databinding.adapters.TextViewBindingAdapter: void setShadowColor(android.widget.TextView,int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean onKeyPreIme(int,android.view.KeyEvent)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintHeight_max
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.Constraints$LayoutParams generateDefaultLayoutParams()
androidx.appcompat.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment BEGIN
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite()
kotlinx.coroutines.scheduling.TaskContext: kotlinx.coroutines.scheduling.TaskMode getTaskMode()
androidx.appcompat.view.ActionMode: void setSubtitle(int)
kotlin.random.PlatformRandomKt: java.util.Random asJavaRandom(kotlin.random.Random)
com.jakewharton.rxbinding3.widget.AdapterViewItemLongClickEvent: AdapterViewItemLongClickEvent(android.widget.AdapterView,android.view.View,int,long)
androidx.legacy.coreui.R$attr: int fontVariationSettings
androidx.constraintlayout.widget.Constraints$LayoutParams: float translationX
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object singleOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()
okhttp3.ConnectionPool: void evictAll()
androidx.appcompat.widget.FitWindowsViewGroup: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext)
androidx.appcompat.view.menu.BaseMenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
com.example.revolut.rates.R$drawable: int icon_zar
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
io.reactivex.internal.schedulers.SchedulerWhen: SchedulerWhen(io.reactivex.functions.Function,io.reactivex.Scheduler)
kotlinx.coroutines.CoroutineExceptionHandlerKt
com.google.gson.InstanceCreator
com.example.revolut.rates.view.adapter.CurrenciesAdapter: java.util.HashMap access$getCurrenciesNameMap$p(com.example.revolut.rates.view.adapter.CurrenciesAdapter)
androidx.core.os.LocaleListCompat: int indexOf(java.util.Locale)
com.example.revolut.rates.R$id: int start
kotlin.sequences.SequencesKt___SequencesJvmKt: SequencesKt___SequencesJvmKt()
androidx.appcompat.view.StandaloneActionMode: void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.appcompat.view.ActionMode: boolean isUiFocusable()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object maxBy(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
io.reactivex.Observable: io.reactivex.Completable switchMapCompletable(io.reactivex.functions.Function)
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: void run()
kotlin.jvm.internal.PropertyReference0: java.lang.Object invoke()
kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,float)
kotlin.jvm.internal.PropertyReference2Impl
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
android.support.v4.media.session.MediaControllerCompat: android.os.Bundle getSessionToken2Bundle()
retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory: retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory createWithScheduler(io.reactivex.Scheduler)
androidx.appcompat.view.menu.MenuItemImpl: boolean isVisible()
androidx.recyclerview.widget.AsyncDifferConfig: androidx.recyclerview.widget.DiffUtil$ItemCallback getDiffCallback()
com.example.revolut.rates.R$styleable: int ConstraintSet_android_alpha
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void setRating(java.lang.Object,java.lang.Object)
io.reactivex.internal.observers.FutureObserver: java.lang.Object get(long,java.util.concurrent.TimeUnit)
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isViewInvalid()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.core.view.ActionProvider$SubUiVisibilityListener: void onSubUiVisibilityChanged(boolean)
com.example.revolut.rates.R$attr: int actionBarTabStyle
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte maxBy(byte[],kotlin.jvm.functions.Function1)
io.reactivex.internal.subscribers.ForEachWhileSubscriber: void onNext(java.lang.Object)
dagger.android.support.R$style: int Widget_AppCompat_ListPopupWindow
androidx.fragment.R$id: int action_divider
kotlinx.coroutines.channels.AbstractSendChannel
io.reactivex.internal.operators.flowable.FlowableLimit$LimitSubscriber: long serialVersionUID
androidx.core.content.ContextCompat: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
androidx.drawerlayout.R$color: int secondary_text_default_material_light
com.example.revolut.rates.R$styleable: int SearchView_layout
kotlinx.coroutines.internal.ScopeOwnerCoroutine
com.jakewharton.rxbinding3.view.ViewAttachDetachedEvent
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: int indexOf(short)
kotlin.KotlinVersion: kotlin.KotlinVersion CURRENT
androidx.viewpager.R$id: int normal
androidx.slidingpanelayout.widget.SlidingPaneLayout: SlidingPaneLayout(android.content.Context,android.util.AttributeSet,int)
dagger.android.support.R$dimen: int abc_dialog_fixed_height_major
androidx.fragment.app.FragmentController: void doLoaderRetain()
kotlin.jvm.internal.ShortSpreadBuilder: void add(short)
okhttp3.internal.http2.PushObserver: void onReset(int,okhttp3.internal.http2.ErrorCode)
dagger.android.support.R$styleable: int AppCompatTheme_actionModeShareDrawable
kotlin.coroutines.experimental.jvm.internal.CoroutineImpl: kotlin.coroutines.experimental.Continuation create(kotlin.coroutines.experimental.Continuation)
okio.Timeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
androidx.lifecycle.ViewModelProvider$NewInstanceFactory
androidx.core.view.ActionProvider: boolean overridesItemVisibility()
dagger.android.DispatchingAndroidInjector_Factory: DispatchingAndroidInjector_Factory(javax.inject.Provider,javax.inject.Provider)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int RIGHT
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4(int[])
androidx.viewpager.widget.PagerTitleStrip: void requestLayout()
okhttp3.MultipartBody$Builder
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte lastOrNull(byte[])
androidx.viewpager.R$attr: int alpha
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[])
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
kotlin.sequences.SequencesKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(short[])
okio.BufferedSink: okio.BufferedSink writeInt(int)
androidx.core.app.NotificationManagerCompat: void cancel(java.lang.String,int)
io.reactivex.Observable: io.reactivex.Observable flatMapIterable(io.reactivex.functions.Function)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(double[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
io.reactivex.Single: java.lang.Object as(io.reactivex.SingleConverter)
com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory: java.lang.reflect.Type access$getParameterUpperBound$s572770538(int,java.lang.reflect.ParameterizedType)
kotlin.ranges.IntProgression$Companion: IntProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Medium_Inverse
androidx.customview.R$styleable: int[] FontFamily
com.example.revolut.rates.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context,android.util.AttributeSet)
androidx.viewpager.R$dimen: int notification_small_icon_background_padding
androidx.versionedparcelable.VersionedParcel: void writeStrongInterface(android.os.IInterface)
kotlin.ParameterName
kotlinx.coroutines.NonCancellable: java.lang.Throwable getCompletionException()
androidx.viewpager.R$attr: int fontStyle
kotlin.collections.CharIterator: void remove()
kotlin.annotation.AnnotationTarget
androidx.core.app.ShareCompat$IntentReader: java.lang.String[] getEmailTo()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)
io.reactivex.internal.observers.SubscriberCompletableObserver: void request(long)
kotlin.ranges.LongProgression: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(float[],float,int,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6(float[])
com.jakewharton.rxbinding3.core.R$id: int time
com.example.revolut.rates.R$styleable: int MenuItem_actionLayout
kotlin.sequences.TakeWhileSequence$iterator$1: boolean hasNext()
kotlinx.coroutines.channels.ArrayBroadcastChannel: long access$getTail$p(kotlinx.coroutines.channels.ArrayBroadcastChannel)
androidx.core.os.CancellationSignal: void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener)
kotlin.collections.UByteIterator: kotlin.UByte next()
androidx.databinding.DataBinderMapper: DataBinderMapper()
dagger.android.support.R$attr: int thickness
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup: int getSpanIndex(int,int)
io.reactivex.internal.operators.flowable.FlowableInterval: FlowableInterval(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int keyline
dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
io.reactivex.observers.TestObserver: io.reactivex.observers.TestObserver assertOf(io.reactivex.functions.Consumer)
androidx.appcompat.view.menu.MenuBuilder: void close()
io.reactivex.MaybeTransformer
androidx.appcompat.R$styleable: int[] StateListDrawable
androidx.customview.widget.ViewDragHelper: void flingCapturedView(int,int,int,int)
okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.SSLSocketFactory)
kotlinx.coroutines.channels.SendChannel$DefaultImpls
kotlin.collections.EmptySet: boolean retainAll(java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5
androidx.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy
androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getContentDescription()
androidx.drawerlayout.R$dimen: int notification_right_icon_size
io.reactivex.internal.operators.flowable.FlowableBuffer: FlowableBuffer(io.reactivex.Flowable,int,int,java.util.concurrent.Callable)
com.jakewharton.rxbinding3.widget.RxAdapterView: io.reactivex.Observable itemLongClickEvents(android.widget.AdapterView)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function getOnObservableAssembly()
androidx.appcompat.R$dimen: int abc_text_size_menu_material
androidx.core.view.ViewGroupKt: void plusAssign(android.view.ViewGroup,android.view.View)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String capitalize(java.lang.String,java.util.Locale)
kotlinx.coroutines.channels.ProducerJob$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.channels.ProducerJob,kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.R$drawable: int abc_btn_colored_material
androidx.media.R$styleable: int FontFamilyFont_android_fontStyle
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintVertical_chainStyle
androidx.appcompat.R$styleable: int AlertDialog_buttonPanelSideLayout
kotlinx.coroutines.DispatchedTask
io.reactivex.internal.functions.Functions
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Display3
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe: void subscribeActual(io.reactivex.Observer)
dagger.android.support.R$styleable: int ActionBar_logo
androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)
okio.Buffer: long indexOf(okio.ByteString)
dagger.android.support.R$dimen: int abc_text_size_subtitle_material_toolbar
com.jakewharton.rxbinding3.widget.AdapterViewSelectionEvent: android.widget.AdapterView getView()
com.example.revolut.rates.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
androidx.fragment.app.Fragment$SavedState: void writeToParcel(android.os.Parcel,int)
com.example.revolut.rates.R$styleable: int AppCompatTextView_fontFamily
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigInteger toBigIntegerOrNull(java.lang.String)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintHeight_percent
kotlin.collections.UArraySortingKt
kotlin.collections.ArraysKt___ArraysKt: float reduce(float[],kotlin.jvm.functions.Function2)
androidx.legacy.coreutils.R$styleable: int GradientColor_android_gradientRadius
kotlin.text.StringsKt__StringsJVMKt: int compareTo$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
io.reactivex.internal.operators.flowable.FlowableAll
kotlin.reflect.KProperty2$Getter
kotlin.collections.ArraysKt___ArraysKt: boolean any(double[])
android.support.v4.media.RatingCompat: int RATING_HEART
kotlinx.coroutines.test.TestCoroutineContext$$special$$inlined$CoroutineExceptionHandler$1: TestCoroutineContext$$special$$inlined$CoroutineExceptionHandler$1(kotlin.coroutines.CoroutineContext$Key,kotlinx.coroutines.test.TestCoroutineContext)
kotlin.io.FilesKt__FileReadWriteKt: void writeText(java.io.File,java.lang.String,java.nio.charset.Charset)
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(short[],kotlin.jvm.functions.Function2)
io.reactivex.internal.operators.flowable.FlowableFilter
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: long serialVersionUID
androidx.core.widget.TintableCompoundButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(long[],java.lang.Iterable)
okhttp3.internal.http2.Http2Stream: okio.Timeout writeTimeout()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType
androidx.media.MediaBrowserProtocol: java.lang.String DATA_MEDIA_SESSION_TOKEN
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
androidx.databinding.ViewDataBinding: boolean updateRegistration(int,androidx.databinding.Observable)
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedFling(android.view.View,float,float,boolean)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintHorizontal_bias
dagger.android.support.R$styleable: int ViewBackgroundHelper_android_background
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
io.reactivex.internal.operators.maybe.MaybeUnsafeCreate: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.single.SingleInternalHelper: io.reactivex.functions.Function toObservable()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int hashCode()
kotlinx.coroutines.EventLoopBase$DelayedTask: void setState(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(float[],int)
androidx.slidingpanelayout.R$dimen: int notification_content_margin_start
androidx.core.app.RemoteInput$Builder: RemoteInput$Builder(java.lang.String)
androidx.legacy.app.ActionBarDrawerToggle: void onDrawerClosed(android.view.View)
androidx.fragment.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.customview.widget.ViewDragHelper: int DIRECTION_ALL
io.reactivex.internal.operators.observable.ObservableReplay: void subscribeActual(io.reactivex.Observer)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setCurrentItemIndex(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLICK
com.google.gson.JsonNull: JsonNull()
io.reactivex.internal.operators.observable.ObservableGroupJoin
androidx.appcompat.widget.ActivityChooserView: void onMeasure(int,int)
androidx.databinding.ViewDataBinding: boolean unregisterFrom(int)
androidx.viewpager.widget.ViewPager: void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
androidx.asynclayoutinflater.R$drawable: int notification_bg_low_pressed
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setDirection(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence)
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)
androidx.core.widget.TintableImageSourceView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
io.reactivex.Observable: io.reactivex.Observable concatMapIterable(io.reactivex.functions.Function,int)
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_TRANSPORT
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY
com.jakewharton.rxbinding3.widget.AdapterViewItemLongClickEvent: java.lang.String toString()
kotlin.sequences.DropWhileSequence$iterator$1: java.lang.Object next()
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfter$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
com.google.gson.FieldAttributes: java.lang.Class getDeclaredClass()
io.reactivex.internal.observers.ResumeSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
kotlin.coroutines.CoroutineContext
io.reactivex.internal.operators.completable.CompletablePeek: void subscribeActual(io.reactivex.CompletableObserver)
androidx.drawerlayout.widget.DrawerLayout: int STATE_SETTLING
dagger.android.support.R$styleable: int AppCompatTheme_dividerVertical
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintAmbientBigPicture(boolean)
androidx.databinding.ObservableMap$OnMapChangedCallback: void onMapChanged(androidx.databinding.ObservableMap,java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: java.lang.Object getTag(android.view.View)
kotlinx.coroutines.CoroutineStart$WhenMappings
androidx.core.view.InputDeviceCompat: int SOURCE_UNKNOWN
androidx.appcompat.R$attr: int dialogPreferredPadding
kotlin.comparisons.UComparisonsKt___UComparisonsKt: short minOf-5PvTz6A(short,short)
io.reactivex.internal.operators.observable.ObservableSampleTimed: void subscribeActual(io.reactivex.Observer)
androidx.fragment.R$styleable: int FontFamily_fontProviderAuthority
kotlinx.coroutines.test.TestCoroutineContextKt: void withTestContext(kotlinx.coroutines.test.TestCoroutineContext,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder setShowsUserInterface(boolean)
androidx.core.provider.FontsContractCompat$FontFamilyResult
okhttp3.internal.Util: okhttp3.Headers toHeaders(java.util.List)
androidx.appcompat.R$attr: int closeIcon
androidx.legacy.coreutils.R$styleable: int FontFamily_fontProviderPackage
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function9)
kotlinx.coroutines.channels.AbstractChannel: void access$removeReceiveOnCancel(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.channels.Receive)
androidx.legacy.v4.R$attr: int alpha
androidx.vectordrawable.R$id: int icon_group
io.reactivex.internal.operators.observable.ObservableGenerate: ObservableGenerate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction,io.reactivex.functions.Consumer)
kotlin.reflect.KProperty1: java.lang.Object getDelegate(java.lang.Object)
okhttp3.Response: boolean isRedirect()
kotlin.text.StringsKt__StringsKt: int indexOfAny$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object single(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt$minus$2
androidx.appcompat.R$styleable: int MenuItem_actionProviderClass
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferCloseObserver: long serialVersionUID
androidx.coordinatorlayout.R$dimen: int notification_large_icon_height
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.String joinToString$default(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$1: void onTransitionPause(android.transition.Transition)
androidx.fragment.app.FragmentTransaction: int TRANSIT_NONE
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(java.lang.Comparable[])
androidx.appcompat.app.AppCompatDialog: boolean supportRequestWindowFeature(int)
kotlin.jvm.internal.ByteSpreadBuilder: ByteSpreadBuilder(int)
org.intellij.lang.annotations.Pattern
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest
io.reactivex.internal.operators.single.SingleObserveOn: void subscribeActual(io.reactivex.SingleObserver)
com.google.gson.internal.LazilyParsedNumber: int intValue()
androidx.core.os.BuildCompat: boolean isAtLeastNMR1()
io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(io.reactivex.ObservableSource[],io.reactivex.functions.Function,int)
okio.BufferedSource: void skip(long)
kotlin.UIntArrayKt
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
io.reactivex.subjects.MaybeSubject: void onSuccess(java.lang.Object)
kotlin.text.MatcherMatchResult$groups$1: java.util.Iterator iterator()
androidx.customview.widget.ViewDragHelper$Callback: void onEdgeDragStarted(int,int)
androidx.appcompat.R$style: int Base_V26_Widget_AppCompat_Toolbar
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,int)
androidx.core.util.TimeUtils
androidx.core.view.MotionEventCompat: int ACTION_POINTER_DOWN
androidx.core.util.RangeKt: android.util.Range rangeTo(java.lang.Comparable,java.lang.Comparable)
androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener: void onChildViewAttachedToWindow(android.view.View)
androidx.collection.SparseArrayCompat: void putAll(androidx.collection.SparseArrayCompat)
io.reactivex.subscribers.SerializedSubscriber: SerializedSubscriber(org.reactivestreams.Subscriber,boolean)
io.reactivex.internal.operators.maybe.MaybeCache: MaybeCache(io.reactivex.MaybeSource)
kotlin.collections.AbstractMutableSet: int getSize()
androidx.legacy.coreui.R$dimen: int notification_action_text_size
io.reactivex.internal.operators.observable.ObservableSkipLastTimed
io.reactivex.disposables.Disposable: void dispose()
kotlin.text.MatcherMatchResult$groups$1
androidx.legacy.v4.R$styleable: int GradientColor_android_endX
dagger.android.support.R$drawable: int abc_btn_switch_to_on_mtrl_00012
io.reactivex.internal.operators.flowable.FlowableOnErrorNext: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.graphics.ColorUtils: int setAlphaComponent(int,int)
io.reactivex.internal.observers.InnerQueuedObserverSupport: void innerNext(io.reactivex.internal.observers.InnerQueuedObserver,java.lang.Object)
androidx.loader.R$id: int time
kotlin.sequences.GeneratorSequence$iterator$1: void setNextState(int)
androidx.core.hardware.display.DisplayManagerCompat: android.view.Display[] getDisplays(java.lang.String)
com.example.revolut.rates.R$id: int progress_circular
kotlin.Triple: java.lang.Object component1()
androidx.viewpager.R$color: int notification_icon_bg_color
dagger.internal.ProviderOfLazy: java.lang.Object get()
androidx.appcompat.R$dimen: int notification_right_side_padding_top
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int[] getState()
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.CompletionHandlerKt: kotlin.jvm.functions.Function1 getAsHandler(kotlinx.coroutines.CancelHandlerBase)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(byte[])
dagger.android.support.R$styleable: int AppCompatTheme_viewInflaterClass
okio.BufferedSink: okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset)
androidx.appcompat.view.menu.MenuBuilder: void removeItemAt(int)
androidx.appcompat.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)
androidx.lifecycle.LiveData: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
com.example.revolut.rates.R$attr: int collapseIcon
dagger.android.ContributesAndroidInjector: java.lang.Class[] modules()
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_NUM_TRACKS
okio.Buffer: void write(okio.Buffer,long)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float getBarThickness()
io.reactivex.processors.ReplayProcessor: io.reactivex.processors.ReplayProcessor createWithTimeAndSize(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)
androidx.cursoradapter.widget.CursorAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()
com.example.revolut.rates.R$id: int submenuarrow
androidx.coordinatorlayout.R$style
kotlinx.coroutines.NonDisposableHandle: void dispose()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
androidx.constraintlayout.widget.R$id: int left
com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.io.Reader)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object reduceIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function3)
okhttp3.internal.cache.DiskLruCache: boolean isClosed()
androidx.fragment.app.FragmentHostCallback: android.view.LayoutInflater onGetLayoutInflater()
androidx.swiperefreshlayout.R$styleable: int GradientColorItem_android_color
androidx.customview.widget.ExploreByTouchHelper: void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent)
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean drawChild(android.graphics.Canvas,android.view.View,long)
androidx.fragment.app.DialogFragment: void onStart()
kotlin.collections.ArraysKt___ArraysKt: boolean contains(byte[],byte)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object mapTo(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.appcompat.R$styleable: int AlertDialog_listItemLayout
com.example.revolut.rates.R$color: int color_grey_200
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.app.Activity)
io.reactivex.Observable: io.reactivex.Observable buffer(int,int,java.util.concurrent.Callable)
dagger.android.support.DaggerFragment: DaggerFragment()
androidx.constraintlayout.widget.R$attr: int layout_constraintHorizontal_bias
io.reactivex.internal.operators.observable.ObservableJust: ObservableJust(java.lang.Object)
androidx.core.animation.AnimatorKt$addListener$1: void invoke(android.animation.Animator)
androidx.fragment.app.FragmentTransitionImpl: java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object)
io.reactivex.MaybeEmitter: void setCancellable(io.reactivex.functions.Cancellable)
io.reactivex.Flowable: io.reactivex.Flowable sample(org.reactivestreams.Publisher,boolean)
androidx.legacy.v4.R$dimen: int notification_small_icon_background_padding
com.example.revolut.rates.R$attr: int ratingBarStyleIndicator
retrofit2.HttpException
androidx.viewpager.R$drawable: int notification_bg_low
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
dagger.android.support.R$styleable: int AppCompatTextView_textAllCaps
dagger.android.support.DaggerAppCompatDialogFragment_MembersInjector: void injectChildFragmentInjector(dagger.android.support.DaggerAppCompatDialogFragment,dagger.android.DispatchingAndroidInjector)
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter getInstance(boolean)
okhttp3.CacheControl$Builder: okhttp3.CacheControl build()
io.reactivex.processors.BehaviorProcessor: void onNext(java.lang.Object)
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.widget.DecorToolbar: int getNavigationMode()
com.example.revolut.rates.R$dimen: int disabled_alpha_material_light
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String)
androidx.databinding.adapters.ViewBindingAdapter: void setOnLayoutChangeListener(android.view.View,android.view.View$OnLayoutChangeListener,android.view.View$OnLayoutChangeListener)
com.example.revolut.rates.R$id: int currencies_layout
dagger.android.support.R$style: int TextAppearance_AppCompat_Inverse
androidx.databinding.ObservableFloat: void set(float)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)
androidx.fragment.R$styleable: int GradientColor_android_startColor
io.reactivex.Single: io.reactivex.Single equals(io.reactivex.SingleSource,io.reactivex.SingleSource)
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1: java.util.Iterator sourceIterator()
com.example.revolut.rates.R$attr: int layout_constraintHeight_min
kotlin.sequences.SequencesKt__SequencesKt: SequencesKt__SequencesKt()
io.reactivex.observers.TestObserver: void dispose()
dagger.android.support.R$id: int end_padder
androidx.appcompat.graphics.drawable.DrawableContainer: int getChangingConfigurations()
io.reactivex.internal.operators.flowable.FlowableCache
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2
io.reactivex.internal.operators.flowable.FlowableBufferTimed
androidx.appcompat.widget.ToolbarWidgetWrapper: void collapseActionView()
androidx.appcompat.app.ActionBarDrawerToggle: void setToolbarNavigationClickListener(android.view.View$OnClickListener)
io.reactivex.internal.operators.flowable.FlowableSkipWhile: FlowableSkipWhile(io.reactivex.Flowable,io.reactivex.functions.Predicate)
androidx.customview.R$id: int tag_unhandled_key_listeners
androidx.databinding.ObservableByte: void writeToParcel(android.os.Parcel,int)
kotlinx.coroutines.channels.LinkedListChannel: boolean isBufferEmpty()
kotlinx.android.parcel.RawValue
androidx.recyclerview.widget.SimpleItemAnimator: void setSupportsChangeAnimations(boolean)
androidx.databinding.PropertyChangeRegistry: void notifyChange(androidx.databinding.Observable,int)
io.reactivex.plugins.RxJavaPlugins: void setInitComputationSchedulerHandler(io.reactivex.functions.Function)
com.example.revolut.rates.R$dimen: int abc_text_size_title_material_toolbar
io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)
dagger.android.support.R$style: int Base_Widget_AppCompat_SeekBar
androidx.annotation.IdRes
androidx.core.util.SparseLongArrayKt: long getOrElse(android.util.SparseLongArray,int,kotlin.jvm.functions.Function0)
androidx.viewpager.widget.ViewPager: int SCROLL_STATE_IDLE
android.support.v4.media.session.IMediaControllerCallback: void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
okhttp3.internal.http2.StreamResetException: StreamResetException(okhttp3.internal.http2.ErrorCode)
androidx.fragment.app.DialogFragment: int STYLE_NO_INPUT
io.reactivex.internal.operators.single.SingleJust: SingleJust(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: int getSize()
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: long serialVersionUID
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.CharSequence getSender()
kotlinx.coroutines.internal.ThreadSafeHeap: void addImpl(kotlinx.coroutines.internal.ThreadSafeHeapNode)
okio.Timeout: long deadlineNanoTime()
kotlin.jvm.internal.CharCompanionObject: char MIN_HIGH_SURROGATE
io.reactivex.internal.disposables.EmptyDisposable: java.lang.Object poll()
io.reactivex.internal.operators.observable.ObservableOnErrorNext: ObservableOnErrorNext(io.reactivex.ObservableSource,io.reactivex.functions.Function,boolean)
io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiPredicate,int)
androidx.core.util.SparseArrayKt: boolean containsValue(android.util.SparseArray,java.lang.Object)
io.reactivex.android.MainThreadDisposable: void verifyMainThread()
androidx.constraintlayout.solver.ArrayRow: void reset()
retrofit2.Invocation: java.util.List arguments()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int)
okhttp3.internal.io.FileSystem: void deleteContents(java.io.File)
androidx.constraintlayout.solver.widgets.WidgetContainer: void removeAllChildren()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.reactivex.internal.subscriptions.EmptySubscription: boolean isEmpty()
kotlin.text.StringsKt___StringsKt: java.lang.String filterIndexed(java.lang.String,kotlin.jvm.functions.Function2)
io.reactivex.internal.operators.maybe.MaybeDelay
io.reactivex.internal.operators.observable.ObservableDistinct: ObservableDistinct(io.reactivex.ObservableSource,io.reactivex.functions.Function,java.util.concurrent.Callable)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_android_minWidth
io.reactivex.FlowableTransformer: org.reactivestreams.Publisher apply(io.reactivex.Flowable)
kotlin.random.Random: double nextDouble()
androidx.databinding.InverseBindingAdapter
android.support.v4.app.INotificationSideChannel$Stub: int TRANSACTION_notify
androidx.slidingpanelayout.R$styleable: int ColorStateListItem_android_color
kotlin.random.Random$Default: void Companion$annotations()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterIndexedTo$3
androidx.legacy.coreui.R$style: int TextAppearance_Compat_Notification_Line2
dagger.android.support.R$styleable: int AppCompatTheme_imageButtonStyle
androidx.appcompat.view.ActionMode$Callback: boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setFrame(int,int,int)
kotlin.text.StringsKt__IndentKt: java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String)
androidx.core.app.SharedElementCallback: void onRejectSharedElements(java.util.List)
com.example.revolut.rates.R$attr: int state_above_anchor
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
kotlinx.coroutines.sync.MutexImpl: java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.view.menu.SubMenuBuilder: boolean isShortcutsVisible()
kotlin.jvm.internal.PropertyReference0Impl: java.lang.String getSignature()
kotlin.Metadata: int k()
kotlinx.coroutines.channels.ConflatedBroadcastChannel: ConflatedBroadcastChannel()
kotlinx.coroutines.AbstractContinuation: void initParentJobInternal$kotlinx_coroutines_core(kotlinx.coroutines.Job)
io.reactivex.subjects.BehaviorSubject: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: void cancel()
androidx.appcompat.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
kotlinx.coroutines.Job: boolean isCancelled()
dagger.android.support.R$drawable: int abc_ic_arrow_drop_right_black_24dp
androidx.asynclayoutinflater.R$style: int TextAppearance_Compat_Notification_Info
com.example.revolut.rates.R$color: int abc_tint_edittext
androidx.media.R$layout: int notification_template_big_media_narrow_custom
dagger.android.DaggerApplication_MembersInjector: dagger.MembersInjector create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)
kotlin.collections.CollectionsKt___CollectionsKt: boolean all(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(char[],kotlin.jvm.functions.Function1)
androidx.appcompat.R$attr: int allowStacking
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
io.reactivex.processors.PublishProcessor: void onError(java.lang.Throwable)
androidx.customview.widget.ExploreByTouchHelper: void onFocusChanged(boolean,int,android.graphics.Rect)
androidx.core.app.NotificationCompat$InboxStyle
com.example.revolut.rates.R$styleable: int[] PopupWindow
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function getOnFlowableAssembly()
androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$1
dagger.android.support.R$style: int TextAppearance_AppCompat_Medium_Inverse
io.reactivex.internal.util.EmptyComponent: void onSuccess(java.lang.Object)
androidx.constraintlayout.solver.widgets.ChainHead: void define()
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7(double[])
androidx.appcompat.view.menu.SubMenuBuilder: boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
dagger.android.support.R$attr: int barLength
io.reactivex.internal.operators.flowable.FlowableIgnoreElements: void subscribeActual(org.reactivestreams.Subscriber)
androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)
androidx.vectordrawable.R$color: int notification_icon_bg_color
androidx.core.app.ShareCompat$IntentReader: java.lang.CharSequence getText()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object maxBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence)
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void playFromSearch(java.lang.Object,java.lang.String,android.os.Bundle)
androidx.appcompat.app.AppCompatDelegate: android.view.View findViewById(int)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object reduce(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.DecorToolbar: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.interpolator.view.animation.FastOutLinearInInterpolator: float getInterpolation(float)
androidx.versionedparcelable.VersionedParcel: android.os.Parcelable readParcelable()
io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber: long serialVersionUID
androidx.core.provider.FontsContractCompat$FontFamilyResult: FontsContractCompat$FontFamilyResult(int,androidx.core.provider.FontsContractCompat$FontInfo[])
io.reactivex.internal.util.AppendOnlyLinkedArrayList: boolean accept(io.reactivex.Observer)
com.example.revolut.rates.R$dimen: int fastscroll_margin
androidx.annotation.LayoutRes
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence takeWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.customview.widget.ViewDragHelper$Callback: void onViewCaptured(android.view.View,int)
io.reactivex.internal.subscribers.LambdaSubscriber: LambdaSubscriber(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer)
androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$1: void onTransitionResume(android.transition.Transition)
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.core.view.ViewCompat: int SCROLL_AXIS_VERTICAL
com.example.revolut.rates.R$drawable: int abc_spinner_mtrl_am_alpha
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintStart_toStartOf
androidx.core.content.res.TypedArrayUtils: java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int)
kotlin.collections.ArraysKt___ArraysKt: char reduce(char[],kotlin.jvm.functions.Function2)
kotlin.ranges.ULongProgression: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: byte first(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.EventLoopBase$DelayedTask: long nanoTime
androidx.fragment.R$styleable: int FontFamilyFont_fontStyle
androidx.loader.content.Loader: void commitContentChanged()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(byte[])
android.support.v4.media.RatingCompat: float getStarRating()
kotlin.collections.UArraysKt: java.lang.String contentToString-GBYM_sE(byte[])
kotlin.ranges.ClosedFloatingPointRange
androidx.core.text.PrecomputedTextCompat$Params: int hashCode()
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableTop
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: long serialVersionUID
androidx.fragment.app.FragmentActivity: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
com.example.revolut.rates.databinding.RatesItemBinding: android.widget.TextView currencyCode
dagger.android.support.R$string: int abc_font_family_body_2_material
androidx.recyclerview.R$attr: int fastScrollHorizontalTrackDrawable
io.reactivex.subjects.UnicastSubject: io.reactivex.subjects.UnicastSubject create(int,java.lang.Runnable)
androidx.databinding.adapters.ZoomControlsBindingAdapter
androidx.legacy.app.ActionBarDrawerToggle: void onConfigurationChanged(android.content.res.Configuration)
androidx.media.R$color: int secondary_text_default_material_light
androidx.lifecycle.extensions.R$styleable: int GradientColorItem_android_offset
androidx.legacy.v4.R$layout: int notification_template_part_time
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle setGroupConversation(boolean)
androidx.appcompat.widget.Toolbar$SavedState: Toolbar$SavedState(android.os.Parcelable)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat
androidx.customview.R$styleable: int GradientColorItem_android_color
com.google.gson.internal.LinkedTreeMap: java.util.Set keySet()
dagger.android.support.R$dimen: int notification_small_icon_background_padding
com.example.revolut.rates.R$layout: int activity_main
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View)
androidx.appcompat.view.StandaloneActionMode: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.annotation.RequiresPermission$Read
org.intellij.lang.annotations.RegExp: java.lang.String suffix()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeDetachedView(android.view.View)
androidx.appcompat.R$attr: int switchMinWidth
io.reactivex.internal.subscribers.BasicFuseableSubscriber: BasicFuseableSubscriber(org.reactivestreams.Subscriber)
com.example.revolut.rates.R$dimen: int abc_edit_text_inset_horizontal_material
androidx.core.graphics.ColorUtils: void blendLAB(double[],double[],double,double[])
dagger.android.support.R$dimen: int notification_large_icon_width
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
com.example.revolut.rates.R$dimen: int highlight_alpha_material_light
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)
io.reactivex.Scheduler: io.reactivex.Scheduler when(io.reactivex.functions.Function)
okhttp3.HttpUrl: java.lang.String queryParameterValue(int)
androidx.legacy.coreui.R$id: int icon
dagger.android.support.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
com.example.revolut.rates.R$style: int Widget_AppCompat_Spinner
androidx.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_light
io.reactivex.Observable: io.reactivex.Observable concatMapSingle(io.reactivex.functions.Function,int)
androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)
androidx.lifecycle.extensions.R$id: int bottom
com.jakewharton.rxbinding3.core.R$drawable: int notification_bg_normal_pressed
androidx.legacy.coreutils.R$color: int ripple_material_light
io.reactivex.internal.operators.single.SingleLift: SingleLift(io.reactivex.SingleSource,io.reactivex.SingleOperator)
kotlin.collections.MapsKt__MapsKt: java.util.Map minus(java.util.Map,java.lang.Object)
androidx.coordinatorlayout.R$attr: int layout_anchorGravity
androidx.appcompat.app.ActionBarDrawerToggle: boolean isDrawerIndicatorEnabled()
androidx.coordinatorlayout.R$integer: int status_bar_notification_info_maxnum
androidx.core.view.ViewCompat: void setNextClusterForwardId(android.view.View,int)
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: int getBottom()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void immediateConnect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,int)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver$BufferOpenObserver: long serialVersionUID
com.example.revolut.rates.R$attr: int layout_constraintVertical_weight
androidx.documentfile.provider.DocumentFile: long length()
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3: ComparisonsKt__ComparisonsKt$compareBy$3(java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float max(float[])
dagger.android.support.R$attr: int actionMenuTextAppearance
androidx.constraintlayout.solver.widgets.ConstraintAnchor: java.lang.String toString()
androidx.core.widget.NestedScrollView: void onOverScrolled(int,int,boolean,boolean)
io.reactivex.internal.subscriptions.BooleanSubscription: java.lang.String toString()
io.reactivex.internal.schedulers.ScheduledRunnable: void dispose()
androidx.core.graphics.CanvasKt: void withMatrix$default(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.google.gson.internal.bind.CollectionTypeAdapterFactory
androidx.constraintlayout.widget.ConstraintSet: void centerHorizontallyRtl(int,int)
kotlin.random.FallbackThreadLocalRandom
io.reactivex.internal.observers.ForEachWhileObserver: void dispose()
androidx.appcompat.R$styleable: int View_theme
com.example.revolut.rates.R$drawable: int abc_ic_go_search_api_material
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany: ObservableWithLatestFromMany(io.reactivex.ObservableSource,java.lang.Iterable,io.reactivex.functions.Function)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object firstOrNull(java.lang.Object[])
androidx.swiperefreshlayout.R$dimen: int notification_small_icon_size_as_large
io.reactivex.internal.operators.completable.CompletableMergeArray$InnerCompletableObserver: long serialVersionUID
org.intellij.lang.annotations.MagicConstant: long[] flags()
androidx.core.provider.FontsContractCompat: java.lang.String PARCEL_FONT_RESULTS
androidx.appcompat.view.menu.MenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
io.reactivex.internal.operators.observable.ObservablePublishClassic
androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError: FlowableOnBackpressureError(io.reactivex.Flowable)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
androidx.media.R$style
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getDrawBottom()
androidx.core.transition.TransitionKt$addListener$listener$1
androidx.appcompat.widget.ShareActionProvider: android.view.View onCreateActionView()
com.example.revolut.rates.R$drawable: int icon_gbp
androidx.core.provider.FontsContractCompat: void resetCache()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()
dagger.android.support.R$dimen: int abc_disabled_alpha_material_light
androidx.core.app.NotificationCompat$Builder
dagger.android.support.R$styleable: int LinearLayoutCompat_divider
io.reactivex.annotations.SchedulerSupport: java.lang.String SINGLE
io.reactivex.internal.observers.InnerQueuedObserver: void dispose()
androidx.appcompat.R$style: int Base_Widget_AppCompat_ListMenuView
androidx.appcompat.widget.ActionMenuView
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: AccessibilityNodeInfoCompat(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableGroupJoin
io.reactivex.annotations.BackpressureKind: io.reactivex.annotations.BackpressureKind PASS_THROUGH
kotlin.jvm.internal.DoubleCompanionObject: kotlin.jvm.internal.DoubleCompanionObject INSTANCE
io.reactivex.internal.operators.flowable.FlowableHide: FlowableHide(io.reactivex.Flowable)
androidx.coordinatorlayout.widget.CoordinatorLayout: void requestDisallowInterceptTouchEvent(boolean)
androidx.core.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)
dagger.internal.MapFactory: javax.inject.Provider emptyMapProvider()
kotlin.collections.UShortIterator: kotlin.UShort next()
dagger.android.support.R$attr: int dividerHorizontal
androidx.loader.app.LoaderManager: LoaderManager()
com.example.revolut.rates.viewmodel.CurrenciesViewModel$fetchCurrencies$1
androidx.appcompat.R$layout: int notification_action_tombstone
kotlin.reflect.KAnnotatedElement: java.util.List getAnnotations()
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
androidx.appcompat.widget.ListPopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatImageView
io.reactivex.Observable: io.reactivex.Observable zipWith(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction,boolean,int)
kotlin.sequences.DropWhileSequence$iterator$1: java.lang.Object getNextItem()
dagger.android.support.R$color: int primary_text_default_material_light
io.reactivex.internal.operators.flowable.FlowableBuffer: void subscribeActual(org.reactivestreams.Subscriber)
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_RATING
io.reactivex.Flowable: io.reactivex.Flowable switchMap(io.reactivex.functions.Function)
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversation()
com.example.revolut.rates.R$id: int progress_horizontal
io.reactivex.internal.operators.completable.CompletableAmb: CompletableAmb(io.reactivex.CompletableSource[],java.lang.Iterable)
androidx.appcompat.app.ActionBar: void setTitle(int)
androidx.core.content.PermissionChecker: int PERMISSION_GRANTED
kotlin.collections.AbstractList$Companion
androidx.constraintlayout.widget.ConstraintSet: void centerVertically(int,int)
okhttp3.MediaType: java.nio.charset.Charset charset()
io.reactivex.Observable: io.reactivex.Observable onTerminateDetach()
androidx.appcompat.R$styleable: int[] SearchView
androidx.lifecycle.ServiceLifecycleDispatcher: void onServicePreSuperOnStart()
androidx.media.VolumeProviderCompat: void onSetVolumeTo(int)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,java.lang.Iterable)
androidx.core.util.Preconditions: void checkState(boolean)
androidx.appcompat.R$anim
androidx.appcompat.R$id: int topPanel
com.example.revolut.rates.R$id: int textWatcher
kotlin.collections.AbstractCollection: java.util.Iterator iterator()
kotlin.ULongArray: boolean add(java.lang.Object)
dagger.android.AndroidInjection
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void fillMetrics(androidx.constraintlayout.solver.Metrics)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(double[],java.lang.Iterable,kotlin.jvm.functions.Function2)
androidx.media.R$id: int tag_unhandled_key_event_manager
kotlinx.coroutines.DisposeOnCompletion
com.example.revolut.rates.R$id: int percent
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory ATOMIC_BOOLEAN_FACTORY
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isSnapCompatibleWith(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.CoroutineDispatcher getDefaultDispatcher()
androidx.legacy.coreui.R$attr: int coordinatorLayoutStyle
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
io.reactivex.exceptions.Exceptions
androidx.cursoradapter.widget.ResourceCursorAdapter: ResourceCursorAdapter(android.content.Context,int,android.database.Cursor,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setAnimationProgress(float)
androidx.appcompat.R$drawable: int abc_btn_switch_to_on_mtrl_00001
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier: void subscribeActual(org.reactivestreams.Subscriber)
androidx.vectordrawable.R$id: int chronometer
io.reactivex.Maybe: io.reactivex.Maybe fromCompletable(io.reactivex.CompletableSource)
io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: int indexOf(java.lang.Object)
androidx.appcompat.R$styleable: int AppCompatTheme_homeAsUpIndicator
kotlinx.coroutines.internal.LockFreeMPMCQueue: kotlinx.coroutines.internal.LockFreeMPMCQueueNode removeFirstOrNullIf(kotlin.jvm.functions.Function1)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isAutoMirrored()
androidx.fragment.app.Fragment$InstantiationException: Fragment$InstantiationException(java.lang.String,java.lang.Exception)
okio.ForwardingSource: okio.Timeout timeout()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void applyTheme(android.content.res.Resources$Theme)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)
androidx.loader.R$color: int ripple_material_light
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(short,long)
androidx.core.view.NestedScrollingChild: boolean dispatchNestedPreScroll(int,int,int[],int[])
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat withLayer()
com.jakewharton.rxbinding3.widget.SeekBarProgressChangeEvent: boolean equals(java.lang.Object)
androidx.recyclerview.widget.AdapterListUpdateCallback: void onChanged(int,int,java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode$describeRemove$1: java.lang.Object onPrepare(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
android.support.v4.media.session.MediaControllerCompat$Callback: void onAudioInfoChanged(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo)
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: long serialVersionUID
com.google.gson.annotations.JsonAdapter: boolean nullSafe()
androidx.core.animation.AnimatorKt$doOnPause$$inlined$addPauseListener$1
androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int)
android.support.v4.media.MediaBrowserCompat$MediaItem: boolean isPlayable()
kotlin.collections.GroupingKt__GroupingKt: java.util.Map fold(kotlin.collections.Grouping,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function3)
androidx.versionedparcelable.VersionedParcelize: boolean allowSerialization()
androidx.vectordrawable.R$drawable: int notification_icon_background
dagger.android.support.R$styleable: int[] LinearLayoutCompat_Layout
androidx.lifecycle.extensions.R$id: int chronometer
io.reactivex.internal.operators.maybe.MaybeContains
org.intellij.lang.annotations.JdkConstants$TabPlacement
io.reactivex.annotations.SchedulerSupport: java.lang.String value()
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt firstOrNull--ajY-9A(int[])
androidx.arch.core.util.Function
io.reactivex.internal.schedulers.SchedulerPoolFactory: boolean PURGE_ENABLED
com.example.revolut.rates.BR: BR()
androidx.swiperefreshlayout.R$dimen: int compat_button_padding_horizontal_material
dagger.android.support.R$attr: int dividerPadding
androidx.appcompat.view.menu.ActionMenuItem: boolean invoke()
androidx.databinding.ObservableInt: ObservableInt()
androidx.appcompat.R$styleable: int MenuGroup_android_orderInCategory
io.reactivex.processors.ReplayProcessor: java.lang.Object getValue()
android.support.v4.media.session.MediaSessionCompat$Callback: MediaSessionCompat$Callback()
com.jakewharton.rxbinding3.core.R$layout: int notification_template_icon_group
androidx.core.view.ScaleGestureDetectorCompat: void setQuickScaleEnabled(android.view.ScaleGestureDetector,boolean)
androidx.appcompat.R$color: int material_blue_grey_800
com.jakewharton.rxbinding3.widget.SearchViewQueryTextEvent: boolean isSubmitted()
com.example.revolut.rates.R$styleable: int AppCompatTextView_textAllCaps
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry newest()
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()
com.example.revolut.rates.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
dagger.android.support.R$styleable: int MenuItem_android_numericShortcut
io.reactivex.internal.operators.observable.ObservableAmb: void subscribeActual(io.reactivex.Observer)
kotlin.reflect.KProperty$Accessor
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int getDx()
androidx.appcompat.R$styleable: int GradientColorItem_android_color
androidx.core.app.NotificationManagerCompat: int getImportance()
kotlin.Result: boolean equals-impl(java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.ListMenuItemView: void setShortcut(boolean,char)
io.reactivex.Observable: io.reactivex.Observable doOnLifecycle(io.reactivex.functions.Consumer,io.reactivex.functions.Action)
androidx.recyclerview.R$attr: int statusBarBackground
androidx.core.view.ViewCompat: boolean isFocusedByDefault(android.view.View)
androidx.interpolator.view.animation.LinearOutSlowInInterpolator
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.single.SingleFromCallable: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int getSelectionMode()
okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.example.revolut.rates.R$attr: int buttonBarPositiveButtonStyle
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context)
io.reactivex.Observable: io.reactivex.Single lastOrError()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode FLOW_CONTROL_ERROR
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(kotlin.sequences.Sequence)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.String toString()
androidx.core.util.PatternsCompat: java.util.regex.Pattern WEB_URL
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int,int)
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$buildContinuationByInvokeCall$continuation$1: void resumeWithException(java.lang.Throwable)
dagger.android.support.R$style: int TextAppearance_AppCompat_Display2
io.reactivex.observers.BaseTestConsumer
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setState(int[])
androidx.media.R$layout: int notification_action_tombstone
androidx.appcompat.R$bool: int abc_action_bar_embed_tabs
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintBottom_toBottomOf
io.reactivex.internal.util.Pow2
dagger.android.support.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setActionView(int)
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable
kotlin.sequences.TakeWhileSequence: java.util.Iterator iterator()
androidx.media.AudioAttributesCompat: int USAGE_NOTIFICATION
com.example.revolut.rates.R$attr: int autoSizeTextType
androidx.core.widget.NestedScrollView: void onSizeChanged(int,int,int,int)
io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function3)
io.reactivex.MaybeTransformer: io.reactivex.MaybeSource apply(io.reactivex.Maybe)
okhttp3.internal.http.StatusLine: int HTTP_CONTINUE
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean showOverflowMenu()
androidx.legacy.coreui.R$id: int start
androidx.appcompat.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
androidx.appcompat.R$styleable: int AppCompatTheme_dialogTheme
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.Object clone()
com.example.revolut.rates.R$attr: int spanCount
com.google.gson.internal.bind.JsonTreeReader: void endObject()
androidx.loader.R$styleable: int[] FontFamilyFont
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable)
androidx.media.R$attr: int fontProviderPackage
io.reactivex.Flowable: io.reactivex.Single all(io.reactivex.functions.Predicate)
androidx.core.internal.view.SupportMenuItem: void setShowAsAction(int)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
kotlin.collections.IndexingIterable: java.util.Iterator iterator()
io.reactivex.subscribers.TestSubscriber: TestSubscriber()
io.reactivex.internal.operators.completable.CompletableAmb: void subscribeActual(io.reactivex.CompletableObserver)
com.example.revolut.rates.R$style: int Platform_ThemeOverlay_AppCompat
okhttp3.Cookie: java.lang.String domain()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)
kotlin.jvm.internal.Ref$DoubleRef: double element
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintHorizontal_bias
io.reactivex.exceptions.MissingBackpressureException: MissingBackpressureException()
androidx.appcompat.widget.PopupMenu: android.view.MenuInflater getMenuInflater()
io.reactivex.internal.operators.observable.ObservableAmb
androidx.constraintlayout.widget.ConstraintSet: int CHAIN_SPREAD_INSIDE
io.reactivex.internal.operators.observable.ObservableSkipLast: void subscribeActual(io.reactivex.Observer)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(char[],char[],kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentStatePagerAdapter
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$all$1
kotlinx.coroutines.channels.TickerChannelsKt: kotlinx.coroutines.channels.ReceiveChannel ticker(long,java.util.concurrent.TimeUnit,long,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.TickerMode)
com.example.revolut.rates.R$styleable: int[] AppCompatImageView
io.reactivex.internal.util.BlockingIgnoringReceiver: void accept(java.lang.Throwable)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)
kotlin.io.FileAlreadyExistsException
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: AppCompatMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
kotlin.collections.AbstractMap$keys$1$iterator$1: java.lang.Object next()
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback: void refresh(int)
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View findContainingItemView(android.view.View)
androidx.appcompat.R$attr: int actionBarTabTextStyle
androidx.versionedparcelable.VersionedParcel: int readInt(int,int)
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: long serialVersionUID
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
dagger.MembersInjector
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getWidth()
dagger.android.support.R$id: int search_close_btn
androidx.versionedparcelable.VersionedParcel: void writeCharArray(char[],int)
androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit)
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_GROUP_SUMMARY
com.example.revolut.rates.R$layout: int notification_template_big_media_narrow
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorPauseListener doOnResume(android.animation.Animator,kotlin.jvm.functions.Function1)
retrofit2.Invocation: retrofit2.Invocation of(java.lang.reflect.Method,java.util.List)
android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder: PlaybackStateCompat$CustomAction$Builder(java.lang.String,java.lang.CharSequence,int)
androidx.fragment.app.DialogFragment: void onActivityCreated(android.os.Bundle)
kotlin.Function
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onRestoreInstanceState(android.os.Parcelable)
androidx.media.MediaBrowserServiceCompat: int RESULT_ERROR
androidx.fragment.app.FragmentController: void dispatchPictureInPictureModeChanged(boolean)
kotlin.text.Typography: char rightGuillemete
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Large
androidx.viewpager.R$layout: int notification_template_part_chronometer
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.app.AppCompatDelegate getDelegate()
com.example.revolut.rates.R$attr: int actionButtonStyle
kotlin.internal.HidesMembers
com.example.revolut.rates.RatesApp$Companion
androidx.fragment.app.FragmentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
androidx.loader.R$drawable: int notification_bg_normal_pressed
androidx.vectordrawable.R$id: int italic
androidx.appcompat.R$color: int material_grey_800
io.reactivex.plugins.RxJavaPlugins: io.reactivex.MaybeObserver onSubscribe(io.reactivex.Maybe,io.reactivex.MaybeObserver)
kotlinx.coroutines.CoroutineId: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.String)
io.reactivex.Single: io.reactivex.disposables.Disposable subscribe()
okio.Buffer$UnsafeCursor: long expandBuffer(int)
com.google.gson.internal.JsonReaderInternalAccess
androidx.annotation.HalfFloat
androidx.core.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)
androidx.appcompat.R$attr: int buttonStyle
androidx.databinding.ViewDataBinding: void setTo(android.util.SparseArray,int,java.lang.Object)
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher: CompletableAndThenPublisher(io.reactivex.CompletableSource,org.reactivestreams.Publisher)
io.reactivex.internal.operators.parallel.ParallelFilterTry: void subscribe(org.reactivestreams.Subscriber[])
io.reactivex.internal.operators.flowable.FlowableTimeInterval: FlowableTimeInterval(io.reactivex.Flowable,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
dagger.android.support.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object elementAt(kotlin.sequences.Sequence,int)
androidx.drawerlayout.R$styleable
androidx.legacy.v4.R$id: int action0
androidx.core.ktx.R$style: int TextAppearance_Compat_Notification_Time
kotlin.text.StringsKt__StringsJVMKt: java.util.Comparator getCASE_INSENSITIVE_ORDER(kotlin.jvm.internal.StringCompanionObject)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler)
com.example.revolut.rates.viewmodel.CurrenciesViewModel: void setBaseCurrency(androidx.lifecycle.MutableLiveData)
dagger.android.support.R$color: int abc_search_url_text_pressed
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int matchConstraintMaxHeight
androidx.core.view.ActionProvider: void onPrepareSubMenu(android.view.SubMenu)
io.reactivex.internal.subscribers.InnerQueuedSubscriber: void cancel()
okhttp3.Interceptor$Chain: int readTimeoutMillis()
okhttp3.internal.connection.RouteSelector$Selection: java.util.List getAll()
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: int component4()
androidx.collection.SparseArrayCompat: void removeAt(int)
androidx.core.util.SparseLongArrayKt$valueIterator$1: void setIndex(int)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$singleOrNull$3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.ToolbarWidgetWrapper: android.content.Context getContext()
androidx.loader.R$dimen: int notification_large_icon_height
com.example.revolut.rates.R$styleable: int[] PopupWindowBackgroundState
androidx.recyclerview.widget.SortedList$Callback
com.example.revolut.rates.R$style: int Widget_AppCompat_ProgressBar_Horizontal
io.reactivex.internal.operators.maybe.MaybeCache: void subscribeActual(io.reactivex.MaybeObserver)
androidx.lifecycle.extensions.R$attr: int fontVariationSettings
androidx.core.util.LongSparseArrayKt: java.lang.Object getOrElse(android.util.LongSparseArray,long,kotlin.jvm.functions.Function0)
okhttp3.Cache: void evictAll()
androidx.slidingpanelayout.R$layout: int notification_action
androidx.appcompat.app.AppCompatDelegate
io.reactivex.ObservableTransformer: io.reactivex.ObservableSource apply(io.reactivex.Observable)
io.reactivex.internal.operators.flowable.FlowableCreate$MissingEmitter: long serialVersionUID
androidx.loader.R$styleable: int GradientColor_android_startX
kotlin.jvm.internal.Ref$ShortRef: short element
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionBarPopupTheme
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setColorFilter(android.graphics.ColorFilter)
androidx.media.R$styleable: int GradientColor_android_centerX
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
io.reactivex.internal.operators.single.SingleAmb
androidx.collection.SimpleArrayMap: boolean containsValue(java.lang.Object)
kotlin.ranges.RangesKt__RangesKt: void checkStepIsPositive(boolean,java.lang.Number)
dagger.android.AndroidInjector$Factory
androidx.appcompat.app.AppCompatActivity: void onStop()
io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber: long serialVersionUID
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory SHORT_FACTORY
com.jakewharton.rxbinding3.widget.AdapterViewItemClickEvent: android.view.View component2()
kotlinx.coroutines.channels.Closed: void completeResumeSend(java.lang.Object)
androidx.appcompat.R$style: int Widget_AppCompat_Light_ListPopupWindow
okio.BufferedSink: okio.BufferedSink writeByte(int)
kotlinx.coroutines.Job$Key: kotlinx.coroutines.Job invoke$default(kotlinx.coroutines.Job$Key,kotlinx.coroutines.Job,int,java.lang.Object)
kotlin.ranges.UIntRange: boolean contains-WZ4Q5Ns(int)
io.reactivex.Observable: io.reactivex.Observable concatWith(io.reactivex.ObservableSource)
androidx.legacy.v4.R$id: int async
dagger.internal.SetBuilder: dagger.internal.SetBuilder newSetBuilder(int)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertValueSet(java.util.Collection)
io.reactivex.schedulers.Schedulers
androidx.appcompat.graphics.drawable.DrawableWrapper: void setChangingConfigurations(int)
androidx.drawerlayout.R$id: int forever
androidx.appcompat.widget.Toolbar$SavedState
androidx.appcompat.R$attr: int textColorAlertDialogListItem
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_layout_behavior
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
androidx.appcompat.R$styleable: int TextAppearance_android_fontFamily
kotlin.ranges.ULongProgression: java.util.Iterator iterator()
androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedPreScroll(android.view.View,int,int,int[])
com.google.gson.JsonElement: java.lang.Number getAsNumber()
okhttp3.Connection: okhttp3.Handshake handshake()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setColorized(boolean)
io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sequentialDelayError(int)
io.reactivex.processors.BehaviorProcessor: void onError(java.lang.Throwable)
dagger.android.support.R$attr: int titleMarginBottom
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getNOT_INITIALIZED$p()
androidx.appcompat.R$attr: int showDividers
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollEnabled
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder allEnabledTlsVersions()
androidx.appcompat.R$attr: int searchHintIcon
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe: FlowableConcatMapMaybe(io.reactivex.Flowable,io.reactivex.functions.Function,io.reactivex.internal.util.ErrorMode,int)
androidx.appcompat.widget.ListPopupWindow: boolean isModal()
android.support.v4.media.session.MediaControllerCompat$TransportControls: void prepareFromMediaId(java.lang.String,android.os.Bundle)
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_tileMode
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
retrofit2.CallAdapter$Factory: java.lang.Class getRawType(java.lang.reflect.Type)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory UUID_FACTORY
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable: void subscribeActual(io.reactivex.Observer)
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_SYSTEM
io.reactivex.internal.util.NotificationLite: boolean isComplete(java.lang.Object)
kotlin.UnsignedKt: long doubleToULong(double)
kotlin.jvm.internal.IntCompanionObject: int MIN_VALUE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SELECT
dagger.android.support.R$id: int scrollView
io.reactivex.Observable: void blockingSubscribe(io.reactivex.Observer)
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_ActionBar_Solid
io.reactivex.observers.DisposableMaybeObserver
io.reactivex.subscribers.ResourceSubscriber: boolean isDisposed()
androidx.core.view.ViewPropertyAnimatorListener
io.reactivex.internal.subscribers.BlockingSubscriber: long serialVersionUID
io.reactivex.ObservableEmitter
com.example.revolut.rates.R$styleable: int ActionMode_height
androidx.legacy.coreutils.R$id: int text
androidx.fragment.app.DialogFragment: boolean getShowsDialog()
androidx.appcompat.R$attr: int collapseContentDescription
kotlinx.coroutines.CompletableDeferred: boolean completeExceptionally(java.lang.Throwable)
kotlin.system.TimingKt: long measureNanoTime(kotlin.jvm.functions.Function0)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent: android.widget.TextView getView()
io.reactivex.Scheduler: long now(java.util.concurrent.TimeUnit)
io.reactivex.processors.MulticastProcessor: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.ActionBar$Tab getSelectedTab()
androidx.core.util.SparseBooleanArrayKt: int getSize(android.util.SparseBooleanArray)
io.reactivex.internal.operators.observable.ObservableRepeatUntil$RepeatUntilObserver: long serialVersionUID
androidx.core.ktx.R$id: int right_side
okhttp3.EventListener: void requestBodyEnd(okhttp3.Call,long)
androidx.core.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: void validate()
dagger.android.support.R$attr: int initialActivityCount
androidx.appcompat.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumWidth()
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver: long serialVersionUID
kotlinx.coroutines.intrinsics.UndispatchedKt: java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.AbstractCoroutine,kotlin.jvm.functions.Function1)
dagger.android.support.R$styleable: int TextAppearance_android_textColor
androidx.core.graphics.ImageDecoderKt
androidx.fragment.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_SET_REPEAT_MODE
io.reactivex.internal.operators.single.SingleCreate: void subscribeActual(io.reactivex.SingleObserver)
kotlin.collections.ByteIterator: java.lang.Byte next()
io.reactivex.internal.operators.flowable.FlowableFlatMap
io.reactivex.internal.util.AppendOnlyLinkedArrayList
androidx.databinding.adapters.TableLayoutBindingAdapter: void setStretchColumns(android.widget.TableLayout,java.lang.CharSequence)
kotlin.collections.ArraysKt__ArraysKt: java.lang.String contentDeepToString(java.lang.Object[])
io.reactivex.internal.subscribers.BoundedSubscriber: void onError(java.lang.Throwable)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_DES_CBC_SHA
androidx.core.app.ShareCompat: java.lang.String EXTRA_CALLING_ACTIVITY_INTEROP
okhttp3.internal.http.RealInterceptorChain: okhttp3.Call call()
kotlinx.coroutines.sync.MutexImpl: boolean isLockedEmptyQueueState$kotlinx_coroutines_core()
androidx.core.app.ActivityManagerCompat: boolean isLowRamDevice(android.app.ActivityManager)
com.jakewharton.rxbinding3.view.ViewScrollChangeEvent: int getOldScrollY()
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.ClosedRange,long)
com.example.revolut.rates.R$drawable: int abc_ic_star_half_black_48dp
org.intellij.lang.annotations.MagicConstant: java.lang.Class flagsFromClass()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object consumeEachIndexed(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.databinding.ViewDataBinding: long safeUnbox(java.lang.Long)
kotlinx.coroutines.AbstractContinuation: kotlin.coroutines.Continuation getDelegate()
dagger.internal.InstanceFactory: dagger.internal.Factory createNullable(java.lang.Object)
io.reactivex.observers.DisposableMaybeObserver: void onStart()
androidx.appcompat.R$style: int Widget_AppCompat_ListPopupWindow
dagger.android.support.DaggerFragment_MembersInjector
io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long)
io.reactivex.internal.operators.flowable.FlowableLastMaybe
androidx.appcompat.R$layout: int select_dialog_item_material
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1,boolean)
okhttp3.FormBody$Builder: FormBody$Builder()
io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver: long serialVersionUID
androidx.core.graphics.RectKt: boolean contains(android.graphics.Rect,android.graphics.Point)
kotlin.collections.ArraysKt___ArraysKt: boolean none(double[])
io.reactivex.internal.operators.parallel.ParallelMapTry: int parallelism()
androidx.core.database.CursorKt: java.lang.Integer getIntOrNull(android.database.Cursor,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(double[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: void onAuthenticationError(int,java.lang.CharSequence)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalMatchStyle(int,int,int,float)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode node
com.example.revolut.rates.R$styleable: int DrawerArrowToggle_gapBetweenBars
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void setRemoveDuration(long)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast: FlowablePublishMulticast(io.reactivex.Flowable,io.reactivex.functions.Function,int,boolean)
androidx.swiperefreshlayout.R$styleable: int[] FontFamilyFont
androidx.core.view.ViewCompat: int resolveSizeAndState(int,int,int)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
androidx.fragment.R$id: int bottom
io.reactivex.parallel.ParallelFlowable: ParallelFlowable()
androidx.appcompat.R$styleable: int FontFamilyFont_ttcIndex
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer getOrNull(int[],int)
dagger.android.support.R$dimen: int notification_content_margin_start
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(int,int)
androidx.core.util.SparseIntArrayKt: void forEach(android.util.SparseIntArray,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.example.revolut.rates.R$id: int fill
okio.ForwardingSource: ForwardingSource(okio.Source)
androidx.appcompat.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback)
androidx.appcompat.app.WindowDecorActionBar: boolean isTitleTruncated()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength STRONG
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel asReceiveChannel$default(java.lang.Iterable,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
androidx.constraintlayout.solver.widgets.ResolutionNode: int RESOLVED
androidx.constraintlayout.solver.widgets.ConstraintWidget: int UNKNOWN
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object getOrNull(java.util.List,int)
android.support.v4.media.session.MediaSessionCompat: MediaSessionCompat(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent)
androidx.coordinatorlayout.R$styleable: int GradientColor_android_centerColor
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)
okhttp3.ConnectionPool
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintHorizontal_chainStyle
dagger.android.support.R$color: int material_blue_grey_900
androidx.core.graphics.ColorKt: float getAlpha(long)
kotlinx.coroutines.scheduling.CoroutineScheduler: int access$decrementCreatedWorkers(kotlinx.coroutines.scheduling.CoroutineScheduler)
androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,java.util.List)
androidx.appcompat.view.menu.MenuBuilder: boolean performShortcut(int,android.view.KeyEvent,int)
androidx.appcompat.R$attr: int spinBars
androidx.databinding.Observable$OnPropertyChangedCallback
io.reactivex.disposables.CompositeDisposable: CompositeDisposable(java.lang.Iterable)
androidx.slidingpanelayout.R$dimen: int notification_top_pad_large_text
androidx.coordinatorlayout.R$styleable: int FontFamily_fontProviderFetchStrategy
kotlinx.coroutines.scheduling.CoroutineScheduler
androidx.customview.widget.FocusStrategy$BoundsAdapter
androidx.drawerlayout.R$style: int TextAppearance_Compat_Notification_Line2
io.reactivex.internal.operators.observable.ObservableRangeLong$RangeDisposable: long serialVersionUID
androidx.appcompat.R$attr: int radioButtonStyle
androidx.asynclayoutinflater.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.lifecycle.extensions.R$layout: int notification_action_tombstone
io.reactivex.internal.util.NotificationLite: io.reactivex.internal.util.NotificationLite[] values()
androidx.appcompat.widget.SearchView$SearchAutoComplete
androidx.lifecycle.ReportFragment: ReportFragment()
okhttp3.ConnectionPool: int idleConnectionCount()
androidx.appcompat.R$drawable: int notification_bg_normal_pressed
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getHeight()
androidx.appcompat.R$attr: int switchTextAppearance
androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollX()
com.example.revolut.rates.R$styleable: int[] View
io.reactivex.internal.util.ObservableQueueDrain: boolean enter()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void usePrivateScheduler$kotlinx_coroutines_core()
kotlin.collections.ArraysKt___ArraysKt: char[] toCharArray(java.lang.Character[])
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,android.view.View)
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker: ExecutorScheduler$ExecutorWorker(java.util.concurrent.Executor,boolean)
androidx.core.R$dimen
io.reactivex.FlowableEmitter: void setDisposable(io.reactivex.disposables.Disposable)
io.reactivex.ObservableTransformer
io.reactivex.Single: io.reactivex.Single delaySubscription(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okhttp3.Interceptor$Chain: int connectTimeoutMillis()
kotlin.collections.ArraysKt___ArraysKt: boolean reduceRight(boolean[],kotlin.jvm.functions.Function2)
kotlin.jvm.internal.PropertyReference0: PropertyReference0()
androidx.viewpager.R$id: int chronometer
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NUMBER
kotlin.text.StringsKt___StringsKt: boolean none(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.SetsKt___SetsKt: java.util.Set minus(java.util.Set,java.lang.Object)
androidx.core.view.ViewCompat: void setAccessibilityLiveRegion(android.view.View,int)
androidx.appcompat.R$layout: int abc_search_view
androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableAmb
io.reactivex.internal.operators.observable.ObservableRepeatWhen
androidx.media.R$layout: int notification_template_lines_media
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View)
androidx.appcompat.view.menu.MenuItemImpl: char getNumericShortcut()
androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getClassName()
androidx.appcompat.app.AppCompatCallback: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
androidx.appcompat.app.AppCompatDelegate: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.media.R$attr: int fontProviderFetchTimeout
androidx.databinding.ObservableChar: int describeContents()
androidx.core.graphics.ColorKt: int getAlpha(int)
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1: LockFreeLinkedListNode$makeCondAddOp$1(kotlin.jvm.functions.Function0,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder)
io.reactivex.Single: io.reactivex.Single takeUntil(io.reactivex.SingleSource)
kotlin.math.MathKt: double E
androidx.legacy.v4.R$styleable: int ColorStateListItem_android_color
com.example.revolut.rates.databinding.RatesItemBindingImpl
com.example.revolut.rates.viewmodel.CurrenciesViewModel: com.example.revolut.rates.data.repository.CurrenciesRepository getRepository()
androidx.recyclerview.R$style: int Widget_Compat_NotificationActionContainer
kotlinx.coroutines.CoroutineScope$DefaultImpls: boolean isActive(kotlinx.coroutines.CoroutineScope)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String toString()
io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(java.lang.Iterable,int)
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver: long serialVersionUID
io.reactivex.android.MainThreadDisposable: void dispose()
io.reactivex.internal.operators.observable.ObservableRepeat: void subscribeActual(io.reactivex.Observer)
androidx.core.view.NestedScrollingParent2: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context)
android.support.v4.media.MediaMetadataCompatApi21$Builder: java.lang.Object build(java.lang.Object)
androidx.core.provider.FontsContractCompat$Columns: FontsContractCompat$Columns()
kotlin.UIntArray: boolean add-WZ4Q5Ns(int)
com.jakewharton.rxbinding3.core.R$attr: int font
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: void onAuthenticationSucceeded(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult)
androidx.constraintlayout.solver.widgets.ResolutionAnchor: int MATCH_CONNECTION
kotlin.jvm.internal.Ref$DoubleRef: Ref$DoubleRef()
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(java.lang.Object[])
androidx.core.widget.NestedScrollView: void onStopNestedScroll(android.view.View,int)
androidx.slidingpanelayout.R$attr: int font
io.reactivex.observers.ResourceObserver: void dispose()
com.google.gson.JsonIOException: JsonIOException(java.lang.String,java.lang.Throwable)
androidx.recyclerview.R$id: int top
io.reactivex.internal.operators.parallel.ParallelMapTry: ParallelMapTry(io.reactivex.parallel.ParallelFlowable,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
androidx.appcompat.R$color: int abc_search_url_text_pressed
dagger.BindsInstance
dagger.android.support.R$attr: int actionBarTabBarStyle
kotlin.collections.BooleanIterator: java.lang.Object next()
androidx.legacy.v4.R$styleable: int CoordinatorLayout_keylines
androidx.appcompat.R$dimen: int abc_config_prefDialogWidth
com.jakewharton.rxbinding3.internal.AlwaysTrue: java.lang.Boolean invoke()
androidx.legacy.v4.R$attr: int layout_insetEdge
androidx.swiperefreshlayout.R$attr: int fontProviderFetchTimeout
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(java.lang.Object[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.Pair: java.lang.Object getFirst()
androidx.customview.widget.ViewDragHelper: int getEdgeSize()
kotlin.text.StringsKt__IndentKt: java.lang.String replaceIndentByMargin$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Byte toByteOrNull(java.lang.String,int)
io.reactivex.internal.operators.mixed.MaterializeSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.schedulers.SchedulerRunnableIntrospection: java.lang.Runnable getWrappedRunnable()
kotlin.Result
androidx.constraintlayout.widget.ConstraintSet: void setTranslationX(int,float)
androidx.coordinatorlayout.R$id: int end
kotlin.collections.CollectionsKt___CollectionsKt: double averageOfFloat(java.lang.Iterable)
com.jakewharton.rxbinding3.widget.SeekBarStartChangeEvent: com.jakewharton.rxbinding3.widget.SeekBarStartChangeEvent copy(android.widget.SeekBar)
kotlin.text.StringsKt___StringsKt: java.lang.String filter(java.lang.String,kotlin.jvm.functions.Function1)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int getColor()
androidx.customview.R$id: int info
androidx.core.location.LocationKt
androidx.fragment.app.FragmentHostCallback: void onSupportInvalidateOptionsMenu()
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateTo$1: ChannelsKt__Channels_commonKt$associateTo$1(kotlin.coroutines.Continuation)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isChecked()
kotlinx.coroutines.ExecutorCoroutineDispatcherBase: java.lang.String toString()
dagger.android.support.R$attr: int listPreferredItemPaddingLeft
kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)
retrofit2.http.OPTIONS
androidx.core.view.DisplayCutoutCompat: DisplayCutoutCompat(android.graphics.Rect,java.util.List)
okhttp3.Call: void cancel()
androidx.appcompat.view.menu.ExpandedMenuView: boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.CollectionsKt__IterablesKt: CollectionsKt__IterablesKt()
android.support.v4.media.session.IMediaSession: void rewind()
retrofit2.Response: retrofit2.Response success(int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(long[],kotlin.ranges.IntRange)
androidx.viewpager.R$dimen
dagger.android.support.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map toSingletonMap(java.util.Map)
androidx.vectordrawable.R$id: int text2
androidx.drawerlayout.widget.DrawerLayout$DrawerListener
kotlin.text.CharCategory: kotlin.text.CharCategory COMBINING_SPACING_MARK
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
kotlin.InitializedLazyImpl
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setMaxHeight(int)
com.example.revolut.rates.R$id: int spread
kotlin.text.StringsKt__StringsKt: boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean)
kotlin.collections.CollectionsKt__CollectionsJVMKt: CollectionsKt__CollectionsJVMKt()
kotlin.Result: java.lang.String toString()
androidx.arch.core.executor.TaskExecutor: boolean isMainThread()
com.example.revolut.rates.R$styleable: int AppCompatTextHelper_android_drawableBottom
androidx.constraintlayout.widget.R$attr: int layout_constraintBaseline_toBaselineOf
androidx.appcompat.widget.LinearLayoutCompat$DividerMode
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(byte[],java.lang.Iterable)
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
dagger.android.support.R$style: int Widget_AppCompat_Light_PopupMenu
kotlin.reflect.KClass: boolean isFinal()
io.reactivex.internal.operators.observable.ObservableElementAtSingle: ObservableElementAtSingle(io.reactivex.ObservableSource,long,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.legacy.coreutils.R$styleable: int[] FontFamily
kotlin.collections.ArraysKt___ArraysKt: float last(float[])
androidx.recyclerview.widget.ListAdapter: void submitList(java.util.List)
androidx.slidingpanelayout.R$dimen: int notification_right_icon_size
androidx.slidingpanelayout.R$id: int italic
kotlin.collections.ArraysKt___ArraysKt: void forEach(byte[],kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT
androidx.constraintlayout.solver.widgets.WidgetContainer: void resetSolverVariables(androidx.constraintlayout.solver.Cache)
okhttp3.Response: okhttp3.ResponseBody body()
kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1: java.util.Iterator iterator()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexedNotNull$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver: long serialVersionUID
androidx.drawerlayout.R$id: int chronometer
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,int)
androidx.core.view.PointerIconCompat: int TYPE_DEFAULT
okhttp3.internal.http2.Http2Connection: void shutdown(okhttp3.internal.http2.ErrorCode)
kotlin.properties.Delegates$vetoable$1
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence)
androidx.core.util.SparseBooleanArrayKt: boolean containsKey(android.util.SparseBooleanArray,int)
kotlin._Assertions: kotlin._Assertions INSTANCE
io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
okio.AsyncTimeout: void enter()
io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged
androidx.databinding.adapters.ImageViewBindingAdapter: void setImageUri(android.widget.ImageView,java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory)
com.example.revolut.rates.R$style: int Theme_AppCompat_Light_Dialog
androidx.legacy.coreui.R$layout: int notification_action_tombstone
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntProgression downTo-Kr8caGY(byte,byte)
kotlin.collections.AbstractMap: java.lang.String access$toString(kotlin.collections.AbstractMap,java.util.Map$Entry)
androidx.core.provider.SelfDestructiveThread: int getGeneration()
androidx.recyclerview.widget.RecyclerView$Adapter
kotlin.random.RandomKt: int takeUpperBits(int,int)
dagger.android.support.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_GCM_SHA384
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Body1
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setAlphabeticShortcut(char)
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(short[],short)
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function)
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String flagToString(int)
androidx.lifecycle.ComputableLiveData: void invalidate()
androidx.core.app.ActivityCompat: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.core.text.BidiFormatter$Builder: BidiFormatter$Builder(boolean)
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_PREPARE
okhttp3.CacheControl: boolean onlyIfCached()
kotlin.collections.EmptyList: int lastIndexOf(java.lang.Object)
kotlin.jvm.JvmDefault
androidx.asynclayoutinflater.R$id: int line1
io.reactivex.Observable: io.reactivex.Observable zip(java.lang.Iterable,io.reactivex.functions.Function)
kotlin.collections.BooleanIterator: boolean nextBoolean()
com.google.gson.internal.LazilyParsedNumber: java.lang.String toString()
okhttp3.MultipartBody
io.reactivex.internal.operators.observable.ObservableEmpty: void subscribeActual(io.reactivex.Observer)
androidx.core.transition.TransitionKt: android.transition.Transition$TransitionListener doOnEnd(android.transition.Transition,kotlin.jvm.functions.Function1)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setFilterBitmap(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalBiasPercent(float)
kotlinx.coroutines.internal.ScopeOwnerCoroutine: ScopeOwnerCoroutine(kotlin.coroutines.CoroutineContext)
androidx.core.content.IntentCompat: java.lang.String EXTRA_HTML_TEXT
androidx.core.app.FrameMetricsAggregator: FrameMetricsAggregator()
kotlin.comparisons.UComparisonsKt___UComparisonsKt: short maxOf-5PvTz6A(short,short)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object)
androidx.core.view.ViewCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
androidx.appcompat.R$attr: int textAppearancePopupMenuHeader
kotlin.ranges.ULongProgression$Companion
androidx.constraintlayout.solver.SolverVariable: SolverVariable(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setEnabled(boolean)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object partition(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
com.example.revolut.rates.R$attr: int backgroundSplit
androidx.appcompat.app.WindowDecorActionBar: void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
androidx.core.graphics.TypefaceCompatUtil: java.io.File getTempFile(android.content.Context)
kotlin.random.Random: double nextDouble(double,double)
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMarkTint
androidx.core.os.BuildCompat: boolean isAtLeastQ()
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY
androidx.appcompat.app.WindowDecorActionBar: int getTabCount()
kotlin.jvm.internal.Lambda: Lambda(int)
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.example.revolut.rates.R$string: int abc_action_menu_overflow_description
kotlinx.coroutines.internal.SystemPropsKt
okhttp3.Interceptor$Chain: okhttp3.Call call()
androidx.appcompat.view.menu.ExpandedMenuView: void onDetachedFromWindow()
io.reactivex.Flowable: io.reactivex.Flowable lift(io.reactivex.FlowableOperator)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterTo$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.properties.Delegates$observable$1: void afterChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object)
dagger.android.support.R$style: int Base_Widget_AppCompat_ProgressBar
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-JGPC0-M(short[],java.lang.Iterable)
kotlin.collections.MapsKt___MapsKt: int count(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.MutablePropertyReference2Impl: MutablePropertyReference2Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
android.support.v4.media.MediaBrowserCompat: android.os.Bundle getExtras()
androidx.customview.widget.ViewDragHelper: boolean checkTouchSlop(int,int)
androidx.collection.LruCache: java.util.Map snapshot()
kotlin.reflect.KCallable$DefaultImpls: void isSuspend$annotations()
androidx.constraintlayout.solver.Metrics: long lastTableSize
androidx.core.graphics.drawable.RoundedBitmapDrawable: boolean hasAntiAlias()
androidx.customview.R$id: int async
io.reactivex.internal.schedulers.RxThreadFactory: RxThreadFactory(java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable switchOnNext(org.reactivestreams.Publisher)
kotlin.jvm.internal.ByteCompanionObject: byte MAX_VALUE
com.jakewharton.rxbinding3.widget.AdapterViewItemSelectionEvent: int hashCode()
androidx.customview.R$styleable: int GradientColor_android_endX
androidx.appcompat.R$dimen: int abc_dropdownitem_text_padding_left
kotlin.ULong: int hashCode()
kotlinx.coroutines.channels.ConflatedBroadcastChannel: boolean isFull()
androidx.core.widget.NestedScrollView: void onLayout(boolean,int,int,int,int)
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany: void subscribeActual(org.reactivestreams.Subscriber)
androidx.viewpager.R$dimen: int notification_top_pad_large_text
androidx.appcompat.widget.AppCompatRatingBar: AppCompatRatingBar(android.content.Context)
dagger.releasablereferences.TypedReleasableReferenceManager: java.lang.annotation.Annotation metadata()
retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory: retrofit2.CallAdapter get(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
androidx.appcompat.view.menu.ActionMenuItem: boolean isActionViewExpanded()
androidx.core.R$layout: int notification_template_part_time
com.example.revolut.rates.R$attr: int layout_constraintCircleRadius
io.reactivex.FlowableOnSubscribe
kotlin.ranges.CharRange: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$minBy$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(short[],java.util.Comparator)
androidx.viewpager.R$integer: int status_bar_notification_info_maxnum
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setContentDescription(java.lang.CharSequence)
androidx.vectordrawable.R$styleable: int FontFamilyFont_ttcIndex
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()
com.example.revolut.rates.DataBinderMapperImpl: androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View[],int)
com.jakewharton.rxbinding3.view.MenuItemActionViewExpandEvent: boolean equals(java.lang.Object)
dagger.android.support.R$styleable: int AppCompatTheme_listDividerAlertDialog
com.example.revolut.rates.R$dimen: int tooltip_corner_radius
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(java.lang.Object[])
kotlinx.coroutines.channels.ReceiveChannel: boolean isClosedForReceive()
io.reactivex.FlowableSubscriber
androidx.core.view.ViewGroupKt: kotlin.sequences.Sequence getChildren(android.view.ViewGroup)
androidx.lifecycle.extensions.R$dimen
android.support.v4.media.MediaMetadataCompat
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
io.reactivex.internal.operators.completable.CompletableTimer: void subscribeActual(io.reactivex.CompletableObserver)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character singleOrNull(char[])
android.support.v4.media.session.ParcelableVolumeInfo: int currentVolume
kotlin.jvm.internal.InlineMarker: void mark(java.lang.String)
androidx.appcompat.widget.SearchView$OnSuggestionListener
io.reactivex.internal.operators.maybe.MaybeFromSingle: MaybeFromSingle(io.reactivex.SingleSource)
io.reactivex.internal.operators.flowable.FlowableToListSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.text.BidiFormatter: boolean getStereoReset()
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(int[],kotlin.jvm.functions.Function1)
io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer)
dagger.android.support.R$dimen: int abc_dialog_fixed_width_minor
io.reactivex.observers.BaseTestConsumer: java.lang.CharSequence tag
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: boolean contains-WZ4Q5Ns(int)
io.reactivex.internal.operators.single.SingleObserveOn
androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)
dagger.android.support.R$id: int line1
androidx.core.util.AtomicFile: byte[] readFully()
com.example.revolut.rates.data.repository.CurrenciesRepository: CurrenciesRepository()
androidx.databinding.ObservableInt: ObservableInt(int)
io.reactivex.Observable: io.reactivex.Observable concatWith(io.reactivex.MaybeSource)
io.reactivex.Completable: io.reactivex.Completable repeatUntil(io.reactivex.functions.BooleanSupplier)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object singleOrNull(java.lang.Object[])
kotlin.ranges.RangesKt___RangesKt: java.lang.Byte toByteExactOrNull(float)
androidx.viewpager.widget.ViewPager: void draw(android.graphics.Canvas)
dagger.android.DaggerActivity_MembersInjector: void injectMembers(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean contains(boolean[],boolean)
androidx.fragment.R$attr: int fontProviderFetchStrategy
androidx.core.R$styleable: int GradientColor_android_startY
androidx.databinding.ObservableArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: java.lang.String DEFAULT_CLOSE_MESSAGE
androidx.recyclerview.widget.RecyclerView$ItemDecoration
io.reactivex.Maybe: io.reactivex.Maybe delay(org.reactivestreams.Publisher)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
kotlin.math.MathKt__MathJVMKt: long roundToLong(double)
io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean,int)
com.google.gson.JsonArray: void add(java.lang.String)
kotlinx.coroutines.channels.SendChannel: boolean close(java.lang.Throwable)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void stop()
androidx.loader.R$dimen: int compat_notification_large_icon_max_height
androidx.appcompat.R$style: int Base_V7_Theme_AppCompat
androidx.legacy.widget.Space: Space(android.content.Context,android.util.AttributeSet,int)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BASELINE
okio.ByteString: int lastIndexOf(byte[])
androidx.cursoradapter.widget.CursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
kotlin.collections.AbstractCollection: boolean retainAll(java.util.Collection)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.BooleanSupplier getOnBeforeBlocking()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setVersion(double)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(int,long)
androidx.customview.R$attr: int fontProviderPackage
io.reactivex.internal.operators.flowable.FlowableSamplePublisher: FlowableSamplePublisher(org.reactivestreams.Publisher,org.reactivestreams.Publisher,boolean)
androidx.annotation.Px
okio.ForwardingSource: void close()
androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromInputStream(java.io.InputStream)
androidx.databinding.ViewStubProxy: android.view.View getRoot()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int MATCH_CONSTRAINT
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Character[] toTypedArray(char[])
androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState PARKING
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context)
androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,boolean)
io.reactivex.observers.BaseTestConsumer: long completions
io.reactivex.Observable: io.reactivex.Observable distinct()
com.jakewharton.rxbinding3.core.R$style: int TextAppearance_Compat_Notification_Line2
androidx.recyclerview.widget.DiffUtil$DiffResult: int convertOldPositionToNew(int)
androidx.core.view.ViewCompat: boolean isImportantForAutofill(android.view.View)
kotlin.sequences.DropWhileSequence
androidx.appcompat.R$id: int actions
kotlin.collections.ArraysKt___ArraysKt: int count(long[],kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.flowable.FlowableCollect: void subscribeActual(org.reactivestreams.Subscriber)
okhttp3.Response: okhttp3.Response priorResponse()
kotlin.ranges.CharRange: kotlin.ranges.CharRange access$getEMPTY$cp()
com.example.revolut.rates.R$attr: int listPreferredItemHeightLarge
io.reactivex.internal.operators.flowable.FlowableTakeLast: void subscribeActual(org.reactivestreams.Subscriber)
kotlinx.coroutines.EventLoop$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.EventLoop,kotlin.coroutines.CoroutineContext$Key)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintGuide_begin
androidx.recyclerview.R$attr: int fontProviderPackage
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.net.Uri getDataUri()
dagger.android.support.R$attr: int colorPrimaryDark
io.reactivex.subjects.SingleSubject: boolean hasThrowable()
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: long serialVersionUID
okio.Utf8
android.support.v4.media.session.IMediaControllerCallback: void onSessionDestroyed()
androidx.appcompat.widget.ShareActionProvider: java.lang.String DEFAULT_SHARE_HISTORY_FILE_NAME
kotlinx.coroutines.scheduling.GlobalQueue: kotlinx.coroutines.scheduling.Task removeFirstBlockingModeOrNull()
dagger.android.support.R$styleable: int Toolbar_titleMarginTop
androidx.fragment.app.Fragment: void setMenuVisibility(boolean)
androidx.appcompat.R$drawable: int abc_btn_radio_to_on_mtrl_015
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.core.content.res.TypedArrayUtils
androidx.databinding.adapters.ViewGroupBindingAdapter: void setAnimateLayoutChanges(android.view.ViewGroup,boolean)
io.reactivex.observers.ResourceMaybeObserver
androidx.appcompat.R$attr: int iconTint
io.reactivex.internal.operators.maybe.MaybeToObservable: MaybeToObservable(io.reactivex.MaybeSource)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapIndexedTo$3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget getParent()
io.reactivex.internal.observers.QueueDrainObserver: void accept(io.reactivex.Observer,java.lang.Object)
androidx.appcompat.app.AlertController$AlertParams: AlertController$AlertParams(android.content.Context)
io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
io.reactivex.internal.operators.maybe.MaybeMaterialize: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.view.ViewCompat: int getMeasuredHeightAndState(android.view.View)
kotlinx.coroutines.JobCancellationException: java.lang.Throwable fillInStackTrace()
androidx.constraintlayout.widget.R$attr: int layout_constraintTop_toTopOf
kotlinx.coroutines.NodeList: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_IDLE
androidx.legacy.v4.R$drawable: int notification_bg_normal
androidx.legacy.coreui.R$drawable: int notification_action_background
kotlin.io.ByteStreamsKt$iterator$1: void setNextPrepared(boolean)
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: java.lang.String toString()
androidx.core.ktx.R$dimen: int compat_button_padding_horizontal_material
kotlin.text.Typography: char dagger
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List drop-r7IrZao(long[],int)
kotlinx.coroutines.CompletionHandlerKt: void invokeIt(kotlin.jvm.functions.Function1,java.lang.Throwable)
androidx.slidingpanelayout.R$drawable: int notification_bg_low_normal
io.reactivex.Single: io.reactivex.Single unsubscribeOn(io.reactivex.Scheduler)
kotlin.collections.IntIterator
com.example.revolut.rates.R$drawable: int abc_scrubber_track_mtrl_alpha
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object)
dagger.android.support.R$styleable: int AppCompatTheme_actionBarSplitStyle
kotlin.UIntArray: boolean contains(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterTo$1: ChannelsKt__Channels_commonKt$filterTo$1(kotlin.coroutines.Continuation)
androidx.core.util.SizeKt: float component1(android.util.SizeF)
kotlinx.coroutines.internal.ArrayCopyKt
com.google.gson.internal.bind.CollectionTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_BT_FOLDER_TYPE
androidx.coordinatorlayout.widget.CoordinatorLayout: void onStopNestedScroll(android.view.View,int)
androidx.databinding.DataBindingUtil
dagger.android.support.R$styleable: int SwitchCompat_android_textOn
io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable: io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable valueOf(java.lang.String)
androidx.recyclerview.R$styleable: int GradientColor_android_startX
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List drop-qFRl0hI(int[],int)
androidx.coordinatorlayout.R$styleable: int[] ColorStateListItem
kotlin.jvm.internal.LongCompanionObject: int SIZE_BYTES
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_DRAGGING
androidx.appcompat.widget.ToolbarWidgetWrapper: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlinx.android.parcel.Parceler: void write(java.lang.Object,android.os.Parcel,int)
kotlin.collections.ArraysKt___ArraysKt: void reverse(float[])
kotlinx.coroutines.scheduling.CoroutineScheduler: void access$requestCpuWorker(kotlinx.coroutines.scheduling.CoroutineScheduler)
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: MediaSessionCompat$ResultReceiverWrapper(android.os.ResultReceiver)
io.reactivex.internal.operators.observable.ObservableInternalHelper: io.reactivex.functions.Function itemDelay(io.reactivex.functions.Function)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintHeight_min
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor getCursor()
com.example.revolut.rates.R$attr: int expandActivityOverflowButtonDrawable
dagger.android.support.DaggerAppCompatDialogFragment_MembersInjector: DaggerAppCompatDialogFragment_MembersInjector(javax.inject.Provider)
com.jakewharton.rxbinding3.widget.RxPopupMenu: io.reactivex.Observable itemClicks(android.widget.PopupMenu)
androidx.customview.R$string: int status_bar_notification_info_overflow
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: long serialVersionUID
com.google.gson.stream.JsonWriter: void flush()
dagger.android.support.R$style: int Base_DialogWindowTitle_AppCompat
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable preDraws(android.view.View,kotlin.jvm.functions.Function0)
kotlin.io.FileAlreadyExistsException: FileAlreadyExistsException(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.WebSocketListener: void onClosing(okhttp3.WebSocket,int,java.lang.String)
androidx.appcompat.app.AlertController$AlertParams: androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: DirectedAcyclicGraph()
androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent()
androidx.appcompat.graphics.drawable.DrawableWrapper: void invalidateDrawable(android.graphics.drawable.Drawable)
dagger.android.support.R$color: int dim_foreground_disabled_material_light
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintRight_toLeftOf
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class)
io.reactivex.internal.operators.flowable.FlowableBufferTimed: void subscribeActual(org.reactivestreams.Subscriber)
androidx.constraintlayout.solver.widgets.ChainHead: int mWidgetsCount
kotlin.sequences.SubSequence$iterator$1: void remove()
kotlinx.coroutines.sync.MutexImpl$lockSuspend$$inlined$suspendAtomicCancellableCoroutine$lambda$1: MutexImpl$lockSuspend$$inlined$suspendAtomicCancellableCoroutine$lambda$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object,kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.sync.MutexImpl$LockCont,kotlinx.coroutines.sync.MutexImpl,java.lang.Object)
com.example.revolut.rates.R$color: int primary_text_disabled_material_dark
kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingSequence)
androidx.appcompat.view.menu.MenuBuilder: MenuBuilder(android.content.Context)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
androidx.core.view.ViewKt$doOnNextLayout$1: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
androidx.appcompat.view.menu.ActionMenuItem
androidx.drawerlayout.R$styleable: int FontFamilyFont_fontWeight
io.reactivex.internal.operators.observable.ObservableToList
androidx.appcompat.app.WindowDecorActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
io.reactivex.internal.operators.maybe.MaybeConcatIterable$ConcatMaybeObserver: long serialVersionUID
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setUri(java.lang.String)
androidx.recyclerview.R$color: int ripple_material_light
androidx.databinding.ViewDataBinding: short safeUnbox(java.lang.Short)
dagger.android.DaggerApplication: dagger.android.DispatchingAndroidInjector activityInjector()
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Flowable onAssembly(io.reactivex.Flowable)
okio.Buffer: okio.Buffer writeDecimalLong(long)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doAfterNext(io.reactivex.functions.Consumer)
kotlin.reflect.KProperty0$Getter
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object sumByDouble(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
com.example.revolut.rates.R$attr: int layout_constraintTop_creator
androidx.appcompat.widget.SearchView: void onLayout(boolean,int,int,int,int)
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout: ConstraintHorizontalLayout(int,int,int,int)
kotlin.collections.UCollectionsKt___UCollectionsKt: int sumOfUByte(java.lang.Iterable)
kotlin.ranges.ClosedFloatingPointRange$DefaultImpls: boolean contains(kotlin.ranges.ClosedFloatingPointRange,java.lang.Comparable)
android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object,android.support.v4.media.session.IMediaSession)
androidx.fragment.app.FragmentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
com.example.revolut.rates.R$dimen: int notification_small_icon_size_as_large
io.reactivex.internal.schedulers.SchedulerMultiWorkerSupport$WorkerCallback: void onWorker(int,io.reactivex.Scheduler$Worker)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: CoordinatorLayout$LayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)
androidx.viewpager.widget.PagerTabStrip: PagerTabStrip(android.content.Context,android.util.AttributeSet)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: float getArrowHeight()
androidx.media.R$styleable: int GradientColorItem_android_color
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mOriginalOffsetTop
androidx.coordinatorlayout.R$id: int info
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
dagger.android.support.R$dimen: int abc_text_size_button_material
kotlin.collections.ArraysKt___ArraysKt: boolean contains(float[],float)
io.reactivex.internal.disposables.ListCompositeDisposable
kotlin.collections.CollectionsKt___CollectionsKt: double averageOfInt(java.lang.Iterable)
io.reactivex.Maybe: void subscribe(io.reactivex.MaybeObserver)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte firstOrNull(byte[])
kotlin.jvm.internal.MutablePropertyReference: MutablePropertyReference(java.lang.Object)
dagger.android.DaggerActivity: DaggerActivity()
kotlin.collections.ArraysKt___ArraysKt: boolean random(boolean[],kotlin.random.Random)
kotlin.ULongArray: long get-impl(long[],int)
io.reactivex.internal.observers.QueueDrainObserver: java.lang.Throwable error()
kotlin.collections.ArraysKt___ArraysKt: boolean reduceRightIndexed(boolean[],kotlin.jvm.functions.Function3)
io.reactivex.observers.ResourceMaybeObserver: void dispose()
androidx.annotation.GuardedBy: java.lang.String value()
kotlin.ExceptionsKt__ExceptionsKt: ExceptionsKt__ExceptionsKt()
io.reactivex.internal.operators.flowable.FlowableConcatWithSingle: FlowableConcatWithSingle(io.reactivex.Flowable,io.reactivex.SingleSource)
io.reactivex.internal.operators.flowable.FlowableCollectSingle: io.reactivex.Flowable fuseToFlowable()
okhttp3.internal.http2.Header: Header(okio.ByteString,okio.ByteString)
androidx.core.ktx.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addDisappearingView(android.view.View)
io.reactivex.internal.observers.EmptyCompletableObserver: void dispose()
io.reactivex.Single: io.reactivex.Single delay(long,java.util.concurrent.TimeUnit,boolean)
androidx.recyclerview.widget.ListUpdateCallback: void onChanged(int,int,java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable timeout(io.reactivex.ObservableSource,io.reactivex.functions.Function,io.reactivex.ObservableSource)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.R$drawable: int abc_btn_check_to_on_mtrl_015
io.reactivex.internal.fuseable.QueueFuseable: int NONE
io.reactivex.internal.subscriptions.BooleanSubscription: boolean isCancelled()
kotlin.jvm.internal.Ref$CharRef: Ref$CharRef()
androidx.databinding.ViewDataBinding$IncludedLayouts
kotlin.collections.CollectionsKt__IteratorsKt: CollectionsKt__IteratorsKt()
androidx.recyclerview.widget.TileList$Tile: int mStartPosition
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean equals(java.lang.Object)
kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation)
androidx.appcompat.R$styleable: int View_paddingStart
androidx.appcompat.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()
kotlin.concurrent.ThreadsKt
kotlin.random.Random$Default: int nextBits(int)
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampUpDuration(int)
androidx.core.ktx.R$dimen: int notification_media_narrow_margin
com.example.revolut.rates.R$styleable: int ConstraintSet_android_elevation
androidx.appcompat.widget.ActionBarOverlayLayout: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
kotlin.sequences.IndexingSequence$iterator$1: int getIndex()
io.reactivex.internal.functions.ObjectHelper: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)
dagger.android.support.R$style: int TextAppearance_AppCompat_Widget_Switch
io.reactivex.internal.operators.flowable.FlowableBlockingSubscribe: void subscribe(org.reactivestreams.Publisher,io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
kotlin.DeprecationLevel: kotlin.DeprecationLevel ERROR
androidx.core.view.MenuKt$iterator$1: boolean hasNext()
io.reactivex.internal.operators.completable.CompletablePeek
androidx.appcompat.R$attr: int windowActionBarOverlay
com.example.revolut.rates.R$dimen: int hint_alpha_material_dark
com.jakewharton.rxbinding3.core.R$dimen: int notification_top_pad
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(byte,int)
okio.Buffer: boolean isOpen()
io.reactivex.subjects.BehaviorSubject: boolean hasComplete()
androidx.databinding.adapters.ViewGroupBindingAdapter$OnChildViewRemoved
io.reactivex.observers.TestObserver: boolean isCancelled()
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(java.lang.Object[],java.lang.Object,java.util.Comparator,int,int,int,java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onLayoutDirectionChanged(int)
androidx.constraintlayout.solver.ArrayLinkedVariables: float remove(androidx.constraintlayout.solver.SolverVariable,boolean)
kotlin.coroutines.ContinuationInterceptor: void releaseInterceptedContinuation(kotlin.coroutines.Continuation)
androidx.recyclerview.widget.RecyclerView$State: void put(int,java.lang.Object)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertValueAt(int,java.lang.Object)
com.example.revolut.rates.R$styleable: int ViewStubCompat_android_id
androidx.core.view.InputDeviceCompat
okio.HashingSource: okio.HashingSource hmacSha256(okio.Source,okio.ByteString)
androidx.recyclerview.R$id
androidx.appcompat.widget.ActionBarContainer: void onMeasure(int,int)
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.ClosedRange,byte)
kotlin.collections.UShortIterator: UShortIterator()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] sliceArray-tAntMlw(int[],kotlin.ranges.IntRange)
com.google.gson.JsonArray: java.lang.Number getAsNumber()
androidx.appcompat.R$attr: int paddingTopNoTitle
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.ShortIterator iterator(short[])
androidx.core.widget.TextViewCompat: void setLineHeight(android.widget.TextView,int)
dagger.releasablereferences.ReleasableReferenceManager: java.lang.Class scope()
com.jakewharton.rxbinding3.widget.AdapterViewItemLongClickEvent: android.widget.AdapterView getView()
kotlin.sequences.SequencesKt___SequencesKt: int count(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_BLOCKQUOTE
io.reactivex.internal.operators.observable.ObservableFromIterable: ObservableFromIterable(java.lang.Iterable)
androidx.databinding.ViewDataBinding: boolean safeUnbox(java.lang.Boolean)
androidx.recyclerview.R$dimen: int compat_button_inset_vertical_material
kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc: boolean validatePrepared(kotlinx.coroutines.channels.ReceiveOrClosed)
androidx.appcompat.R$attr: int paddingStart
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax: io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax valueOf(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: int RANGE_TYPE_FLOAT
androidx.core.view.inputmethod.InputContentInfoCompat: android.content.ClipDescription getDescription()
kotlinx.coroutines.internal.LockFreeLinkedListKt
io.reactivex.internal.operators.maybe.MaybeEmpty
kotlin.jvm.internal.LongSpreadBuilder: long[] toArray()
androidx.lifecycle.extensions.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
dagger.android.support.R$id: int progress_circular
androidx.core.view.ViewCompat: int TYPE_NON_TOUCH
androidx.fragment.app.Fragment: boolean equals(java.lang.Object)
androidx.appcompat.widget.ActionBarContextView: void animateToVisibility(int)
kotlin.jvm.internal.BooleanSpreadBuilder: boolean[] toArray()
com.google.gson.Gson: com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer)
androidx.core.graphics.PointKt: float component1(android.graphics.PointF)
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function4)
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1
okhttp3.internal.http1.Http1Codec: okhttp3.Response$Builder readResponseHeaders(boolean)
com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent: int component4()
dagger.android.ContributesAndroidInjector
androidx.databinding.adapters.CardViewBindingAdapter: void setContentPaddingBottom(androidx.cardview.widget.CardView,int)
io.reactivex.internal.operators.flowable.FlowableBufferBoundary
kotlin.ranges.UIntRange$Companion
io.reactivex.functions.Function5: java.lang.Object apply(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.AbstractCoroutine: void start(kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatButton: void drawableStateChanged()
androidx.databinding.adapters.RadioGroupBindingAdapter: void setListeners(android.widget.RadioGroup,android.widget.RadioGroup$OnCheckedChangeListener,androidx.databinding.InverseBindingListener)
io.reactivex.Observable: io.reactivex.Observable concatMapMaybe(io.reactivex.functions.Function,int)
io.reactivex.internal.operators.completable.CompletableUsing: CompletableUsing(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)
android.support.v4.media.session.ParcelableVolumeInfo: int controlType
androidx.appcompat.view.menu.MenuWrapperFactory: android.view.Menu wrapSupportMenu(android.content.Context,androidx.core.internal.view.SupportMenu)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
kotlin.ranges.RangesKt___RangesKt: double coerceAtMost(double,double)
androidx.recyclerview.widget.RecyclerView$Adapter: boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String repeat(java.lang.CharSequence,int)
com.google.gson.JsonArray: boolean remove(com.google.gson.JsonElement)
okhttp3.internal.http.HttpMethod: boolean redirectsWithBody(java.lang.String)
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment MIDDLE
io.reactivex.Observable: io.reactivex.Single sequenceEqual(io.reactivex.ObservableSource,io.reactivex.ObservableSource,int)
kotlin.jvm.internal.TypeIntrinsics: java.util.Set asMutableSet(java.lang.Object)
kotlin.jvm.internal.TypeReference: boolean isMarkedNullable()
androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewAdapterPosition()
kotlin.jvm.internal.TypeIntrinsics: boolean isFunctionOfArity(java.lang.Object,int)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function getNewThreadSchedulerHandler()
androidx.lifecycle.LiveData: boolean hasObservers()
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorListener doOnStart(android.animation.Animator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ArrayBroadcastChannel: kotlinx.coroutines.channels.SubscriptionReceiveChannel open()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getOpacity()
dagger.android.support.R$styleable: int ActionMode_subtitleTextStyle
dagger.android.support.R$style: int Base_ThemeOverlay_AppCompat_Light
androidx.appcompat.R$styleable: int Spinner_popupTheme
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setVisible(boolean)
androidx.viewpager.R$id: int right_icon
com.google.gson.internal.LazilyParsedNumber
kotlin.collections.ArraysKt___ArraysKt: double[] toDoubleArray(java.lang.Double[])
com.example.revolut.rates.common.NotifyCurrencies: void newBaseNotify(java.lang.String)
dagger.android.support.R$attr: int tickMarkTintMode
androidx.media.AudioAttributesCompat: int USAGE_ALARM
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object fold(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.AbstractSet$Companion: boolean setEquals$kotlin_stdlib(java.util.Set,java.util.Set)
androidx.asynclayoutinflater.R$styleable: int[] FontFamilyFont
androidx.fragment.app.FragmentTransitionImpl: java.lang.Object wrapTransitionInSet(java.lang.Object)
androidx.core.os.BundleKt
io.reactivex.Flowable: io.reactivex.Flowable publish(io.reactivex.functions.Function)
com.google.gson.ExclusionStrategy: boolean shouldSkipClass(java.lang.Class)
io.reactivex.internal.operators.flowable.FlowableHide
kotlin.text.Regex$Companion: Regex$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.R$styleable: int LinearLayoutCompat_measureWithLargestChild
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(long[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.util.SparseArrayKt$keyIterator$1: int nextInt()
io.reactivex.Flowable: io.reactivex.Flowable takeUntil(org.reactivestreams.Publisher)
androidx.fragment.R$dimen: int compat_button_padding_vertical_material
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable filter(io.reactivex.functions.Predicate,io.reactivex.functions.BiFunction)
com.example.revolut.rates.BuildConfig: java.lang.String VERSION_NAME
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(long[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ArrayBroadcastChannel: java.lang.Object offerInternal(java.lang.Object)
androidx.media.R$styleable: int GradientColorItem_android_offset
dagger.android.support.R$color: int bright_foreground_material_light
io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver: long serialVersionUID
kotlin.collections.ArraysKt___ArraysKt: double[] reversedArray(double[])
androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenuPrepared()
androidx.core.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: void setMargin(int)
androidx.annotation.FractionRes
androidx.appcompat.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)
androidx.arch.core.internal.SafeIterableMap: java.lang.String toString()
kotlinx.coroutines.internal.LockFreeMPMCQueue
androidx.appcompat.widget.ListPopupWindow: int INPUT_METHOD_NEEDED
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
okio.Buffer: int read(byte[],int,int)
io.reactivex.Flowable: io.reactivex.Flowable concatDelayError(org.reactivestreams.Publisher,int,boolean)
androidx.appcompat.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
androidx.core.widget.AutoScrollHelper: boolean isEnabled()
dagger.android.support.R$styleable: int View_android_theme
dagger.android.support.R$attr: int dropDownListViewStyle
kotlin.jvm.internal.MutablePropertyReference0: java.lang.Object invoke()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean)
androidx.media.MediaBrowserServiceCompat: void notifyChildrenChanged(java.lang.String,android.os.Bundle)
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: void onSubscribe(org.reactivestreams.Subscription)
com.example.revolut.rates.R$drawable: int icon_cny
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
androidx.appcompat.R$dimen: int tooltip_precise_anchor_threshold
android.support.v4.app.INotificationSideChannel$Stub: int TRANSACTION_cancelAll
io.reactivex.internal.operators.observable.ObservableSampleWithObservable: ObservableSampleWithObservable(io.reactivex.ObservableSource,io.reactivex.ObservableSource,boolean)
kotlinx.coroutines.channels.LinkedListChannel: java.lang.Object offerSelectInternal(java.lang.Object,kotlinx.coroutines.selects.SelectInstance)
androidx.appcompat.R$drawable: int abc_ic_arrow_drop_right_black_24dp
io.reactivex.subscribers.DisposableSubscriber
kotlin.io.FilesKt__FilePathComponentsKt: java.lang.String getRootName(java.io.File)
androidx.core.app.NavUtils: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
io.reactivex.Flowable: java.lang.Iterable blockingIterable(int)
io.reactivex.internal.operators.flowable.FlowableInternalHelper: java.util.concurrent.Callable replayCallable(io.reactivex.Flowable,int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable)
android.support.v4.media.session.PlaybackStateCompat: java.lang.CharSequence getErrorMessage()
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray: CompletableMergeDelayErrorArray(io.reactivex.CompletableSource[])
androidx.slidingpanelayout.R$styleable: int GradientColor_android_startY
androidx.constraintlayout.solver.widgets.ConstraintWidget: void resetAnchors()
io.reactivex.internal.observers.BlockingObserver: boolean isDisposed()
kotlin.annotation.AnnotationRetention: kotlin.annotation.AnnotationRetention RUNTIME
androidx.viewpager.R$id: int time
io.reactivex.Flowable: io.reactivex.Flowable timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.example.revolut.rates.R$attr: int theme
dagger.android.support.R$id: int checkbox
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(int[],kotlin.jvm.functions.Function1)
okhttp3.WebSocket$Factory: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)
io.reactivex.Completable: io.reactivex.Completable wrap(io.reactivex.CompletableSource)
androidx.recyclerview.widget.ItemTouchHelper$Callback: void onSwiped(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.channels.SubscriptionReceiveChannel open()
com.example.revolut.rates.view.MainActivity: MainActivity()
kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1
kotlin.jvm.functions.Function21
io.reactivex.internal.subscriptions.BooleanSubscription: long serialVersionUID
androidx.appcompat.app.AlertDialog
androidx.recyclerview.R$style: int TextAppearance_Compat_Notification_Title
kotlin.collections.SetsKt___SetsKt: java.util.Set plus(java.util.Set,java.lang.Object)
io.reactivex.internal.operators.completable.CompletableConcatIterable
okio.BufferedSource: long readDecimalLong()
kotlin.coroutines.experimental.SafeContinuation$Companion
androidx.appcompat.R$drawable: int abc_edit_text_material
com.example.revolut.rates.R$dimen: int notification_action_icon_size
com.example.revolut.rates.R$styleable: int[] AnimatedStateListDrawableTransition
androidx.appcompat.R$styleable: int ActionMode_height
androidx.collection.ArraySet: ArraySet(java.util.Collection)
com.example.revolut.rates.R$styleable: int ConstraintSet_android_layout_marginEnd
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch$default(java.util.List,java.lang.Object,java.util.Comparator,int,int,int,java.lang.Object)
kotlin.reflect.KFunction$DefaultImpls: void isInfix$annotations()
dagger.android.support.R$style: int Animation_AppCompat_Dialog
androidx.constraintlayout.widget.ConstraintSet: void createVerticalChain(int,int,int,int,int[],float[],int)
kotlin.collections.IntIterator: java.lang.Integer next()
kotlinx.coroutines.internal.ThreadSafeHeapNode: int getIndex()
com.example.revolut.rates.R$string: int status_bar_notification_info_overflow
kotlin.reflect.KCallable: java.lang.Object call(java.lang.Object[])
androidx.collection.LruCache: int putCount()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$partition$1
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory ATOMIC_INTEGER_FACTORY
com.google.gson.internal.bind.JsonTreeReader: void nextNull()
io.reactivex.Maybe: io.reactivex.Flowable concatDelayError(org.reactivestreams.Publisher)
androidx.legacy.v4.R$dimen: int subtitle_shadow_radius
dagger.android.support.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
androidx.core.widget.PopupWindowCompat: boolean getOverlapAnchor(android.widget.PopupWindow)
io.reactivex.Single: io.reactivex.Single doOnEvent(io.reactivex.functions.BiConsumer)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void setValue(java.lang.Object)
com.example.revolut.rates.R$attr: int searchIcon
com.example.revolut.rates.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
androidx.appcompat.widget.ShareActionProvider: boolean hasSubMenu()
androidx.core.content.res.ComplexColorCompat: void setColor(int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.LockFreeLinkedListKt: int SUCCESS
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hasIcon()
kotlin.internal.RequireKotlin: java.lang.String version()
android.support.v4.media.RatingCompat: android.support.v4.media.RatingCompat fromRating(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableAutoConnect: void subscribeActual(io.reactivex.Observer)
com.example.revolut.rates.R$style: int Widget_AppCompat_Button_Borderless
io.reactivex.Flowable: io.reactivex.Flowable hide()
androidx.fragment.app.Fragment: int getId()
com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent: int hashCode()
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doOnError(io.reactivex.functions.Consumer)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object last(java.lang.Object[])
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPopup getPopup()
io.reactivex.internal.observers.BasicFuseableObserver: int transitiveBoundaryFusion(int)
io.reactivex.internal.operators.completable.CompletableMaterialize: CompletableMaterialize(io.reactivex.Completable)
androidx.appcompat.widget.MenuItemHoverListener
androidx.viewpager.R$layout: int notification_template_icon_group
io.reactivex.internal.observers.FutureSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.R$color: int material_blue_grey_900
androidx.appcompat.widget.DecorContentParent: boolean hideOverflowMenu()
kotlin.collections.ArraysKt___ArraysKt: void reverse(char[])
com.example.revolut.rates.R$id: int scrollIndicatorUp
com.example.revolut.rates.R$styleable: int AppCompatSeekBar_tickMark
io.reactivex.Observable: io.reactivex.Observable distinctUntilChanged(io.reactivex.functions.BiPredicate)
android.support.v4.media.RatingCompat: int RATING_3_STARS
kotlinx.coroutines.DispatchedContinuation: kotlin.coroutines.Continuation continuation
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_PAGING
dagger.android.support.R$attr: int progressBarStyle
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean closePane()
io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection: long serialVersionUID
kotlin.UShort: int SIZE_BITS
kotlin.UByte: int hashCode-impl(byte)
androidx.recyclerview.widget.ItemTouchHelper$Callback: void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean)
io.reactivex.processors.AsyncProcessor: boolean hasSubscribers()
androidx.databinding.ViewDataBinding: byte parse(java.lang.String,byte)
io.reactivex.Flowable: io.reactivex.Flowable doOnSubscribe(io.reactivex.functions.Consumer)
androidx.appcompat.R$id: int action_mode_bar_stub
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: void writeToParcel(android.os.Parcel,int)
io.reactivex.internal.operators.maybe.MaybeFromSingle
dagger.android.support.R$attr: int actionMenuTextColor
dagger.android.support.R$style: int Widget_AppCompat_Button_Borderless
androidx.constraintlayout.widget.ConstraintSet: int PARENT_ID
com.example.revolut.rates.R$attr: int initialActivityCount
io.reactivex.Maybe: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function)
androidx.core.view.NestedScrollingChildHelper: void onStopNestedScroll(android.view.View)
dagger.android.support.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INTERNAL_ERROR
com.example.revolut.rates.R$styleable: int[] StateListDrawable
okio.Timeout: okio.Timeout NONE
kotlin.collections.IndexedValue: IndexedValue(int,java.lang.Object)
androidx.fragment.app.Fragment: void setRetainInstance(boolean)
dagger.android.support.R$attr: int overlapAnchor
io.reactivex.internal.operators.flowable.FlowableJust
dagger.android.support.R$color: int button_material_dark
androidx.recyclerview.widget.AsyncDifferConfig: java.util.concurrent.Executor getMainThreadExecutor()
androidx.appcompat.R$styleable: int Toolbar_titleMarginBottom
kotlin.io.ConstantsKt: int DEFAULT_BLOCK_SIZE
com.example.revolut.rates.R$styleable: int FontFamily_fontProviderFetchStrategy
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode REFUSED_STREAM
kotlinx.coroutines.selects.SelectInstance: void resumeSelectCancellableWithException(java.lang.Throwable)
kotlin.jvm.internal.FloatCompanionObject: float getNEGATIVE_INFINITY()
io.reactivex.MaybeObserver
androidx.recyclerview.widget.RecyclerView: void offsetChildrenHorizontal(int)
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence windowedSequence(java.lang.CharSequence,int,int,boolean)
androidx.constraintlayout.widget.Constraints: java.lang.String TAG
com.google.gson.JsonNull: com.google.gson.JsonNull deepCopy()
androidx.appcompat.widget.AppCompatImageHelper: AppCompatImageHelper(android.widget.ImageView)
dagger.android.support.R$string: int abc_font_family_headline_material
retrofit2.http.Streaming
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.List mWidgetGroups
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.View getCustomView()
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence slice(java.lang.CharSequence,kotlin.ranges.IntRange)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
androidx.asynclayoutinflater.R$drawable: int notification_bg_low
io.reactivex.internal.util.QueueDrainHelper: boolean checkTerminated(boolean,boolean,org.reactivestreams.Subscriber,boolean,io.reactivex.internal.fuseable.SimpleQueue,io.reactivex.internal.util.QueueDrain)
kotlin.reflect.KProperty: boolean isLateinit()
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
io.reactivex.internal.util.ListAddBiConsumer: io.reactivex.internal.util.ListAddBiConsumer valueOf(java.lang.String)
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
kotlin.collections.UArraySortingKt: void sortArray-GBYM_sE(byte[])
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionView(android.view.View)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1: ComparisonsKt__ComparisonsKt$thenComparator$1(java.util.Comparator,kotlin.jvm.functions.Function2)
okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)
androidx.lifecycle.extensions.R$drawable: int notification_bg_normal_pressed
androidx.core.content.res.ConfigurationHelper: int getDensityDpi(android.content.res.Resources)
androidx.recyclerview.R$styleable: int ColorStateListItem_alpha
androidx.legacy.coreutils.R$styleable
kotlinx.coroutines.JobCancellationException: int hashCode()
androidx.constraintlayout.widget.ConstraintSet: void setTranslationZ(int,float)
io.reactivex.internal.functions.Functions: java.util.Comparator naturalOrder()
dagger.android.support.R$attr: int windowActionModeOverlay
dagger.android.support.R$layout: int abc_alert_dialog_button_bar_material
dagger.android.support.R$id: int never
io.reactivex.internal.subscribers.StrictSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.single.SingleMap: SingleMap(io.reactivex.SingleSource,io.reactivex.functions.Function)
io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit,org.reactivestreams.Publisher)
io.reactivex.Completable: io.reactivex.Completable mergeWith(io.reactivex.CompletableSource)
androidx.fragment.app.FragmentManager: void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
androidx.localbroadcastmanager.R
androidx.lifecycle.extensions.R$id: int title
dagger.android.support.R$attr: int checkboxStyle
androidx.core.app.ServiceCompat
androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapIndexedNotNullTo$3: ChannelsKt__Channels_commonKt$mapIndexedNotNullTo$3(kotlin.coroutines.Continuation)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
dagger.android.support.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
androidx.appcompat.app.WindowDecorActionBar: void setIcon(android.graphics.drawable.Drawable)
androidx.core.animation.AnimatorKt$doOnEnd$$inlined$addListener$1: void onAnimationEnd(android.animation.Animator)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)
kotlin.text.Regex: Regex(java.lang.String,kotlin.text.RegexOption)
io.reactivex.internal.operators.observable.ObservableSingleSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.fragment.app.Fragment: android.content.res.Resources getResources()
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat build()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$groupBy$2: ChannelsKt__Channels_commonKt$groupBy$2(kotlin.coroutines.Continuation)
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_EXTRAS
io.reactivex.internal.operators.flowable.FlowableFromPublisher: void subscribeActual(org.reactivestreams.Subscriber)
androidx.viewpager.widget.PagerTabStrip: int getTabIndicatorColor()
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn: ObservableUnsubscribeOn(io.reactivex.ObservableSource,io.reactivex.Scheduler)
androidx.versionedparcelable.VersionedParcel: void writeStrongBinder(android.os.IBinder,int)
androidx.versionedparcelable.VersionedParcel: void writeFloatArray(float[],int)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
io.reactivex.subscribers.DisposableSubscriber: boolean isDisposed()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float getGapSize()
com.example.revolut.rates.R$attr: int colorBackgroundFloating
androidx.slidingpanelayout.widget.SlidingPaneLayout: SlidingPaneLayout(android.content.Context,android.util.AttributeSet)
androidx.databinding.DataBindingUtil: androidx.databinding.ViewDataBinding bind(android.view.View,androidx.databinding.DataBindingComponent)
android.support.v4.media.session.MediaControllerCompat
io.reactivex.Flowable: io.reactivex.Flowable delaySubscription(org.reactivestreams.Publisher)
com.example.revolut.rates.R$attr: int contentInsetEndWithActions
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA
io.reactivex.Observable: void subscribe(io.reactivex.Observer)
androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView
androidx.core.view.WindowInsetsCompat: boolean hasSystemWindowInsets()
io.reactivex.internal.functions.Functions: io.reactivex.functions.Function toFunction(io.reactivex.functions.Function3)
dagger.android.support.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
kotlin.collections.SetsKt__SetsJVMKt: SetsKt__SetsJVMKt()
androidx.recyclerview.widget.ItemTouchHelper: int UP
androidx.constraintlayout.widget.Constraints$LayoutParams: float rotation
com.example.revolut.rates.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
androidx.databinding.ObservableArrayList: boolean addAll(int,java.util.Collection)
okhttp3.internal.connection.RealConnection: void cancel()
kotlin.UByte: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(short[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.constraintlayout.solver.widgets.Rectangle: int x
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
kotlinx.coroutines.selects.SelectBuilderImpl$onTimeout$$inlined$Runnable$1: void run()
androidx.collection.ArraySet: boolean add(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(char[],kotlin.jvm.functions.Function1)
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable publish(int)
androidx.media.MediaBrowserServiceCompat: void onCreate()
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory: androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.io.InputStream)
androidx.core.R$color: int secondary_text_default_material_light
kotlinx.coroutines.JobImpl: JobImpl(kotlinx.coroutines.Job,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.reactivex.Observable: io.reactivex.Observable generate(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean canScrollHorizontally()
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)
io.reactivex.internal.util.HashMapSupplier: io.reactivex.internal.util.HashMapSupplier INSTANCE
kotlin.random.URandomKt: long nextULong(kotlin.random.Random,kotlin.ranges.ULongRange)
kotlinx.coroutines.internal.LockFreeLinkedListKt: int UNDECIDED
kotlinx.coroutines.CoroutineName: java.lang.String component1()
androidx.databinding.ObservableBoolean: ObservableBoolean()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: boolean contains(java.lang.Object)
dagger.android.support.R$drawable: int abc_list_longpressed_holo
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_LINE
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_android_fontStyle
androidx.core.util.AtomicFile
androidx.appcompat.R$styleable: int StateListDrawable_android_enterFadeDuration
kotlin.jvm.internal.MutablePropertyReference1Impl: java.lang.Object get(java.lang.Object)
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_font
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.LongIterator iterator(long[])
io.reactivex.internal.operators.flowable.FlowableGenerate$GeneratorSubscription: long serialVersionUID
androidx.asynclayoutinflater.R$styleable: int ColorStateListItem_android_color
com.example.revolut.rates.R$attr: int titleMargins
androidx.appcompat.R$string: int abc_font_family_display_3_material
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(java.lang.Object[],java.lang.Object,int,int)
io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,io.reactivex.Scheduler)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(char[],java.util.Collection,kotlin.jvm.functions.Function1)
android.support.v4.media.session.IMediaSession: android.support.v4.media.MediaMetadataCompat getMetadata()
kotlinx.coroutines.BuildersKt: java.lang.Object withContext$default(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItem: android.content.res.ColorStateList getIconTintList()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setColorFilter(android.graphics.ColorFilter)
androidx.appcompat.R$styleable: int TextAppearance_android_shadowColor
com.example.revolut.rates.R$style: int Theme_AppCompat_Light
com.example.revolut.rates.view.MainActivity: void onCreate(android.os.Bundle)
androidx.core.content.pm.PackageInfoCompat: long getLongVersionCode(android.content.pm.PackageInfo)
io.reactivex.internal.subscribers.FutureSubscriber: void request(long)
com.google.gson.internal.LazilyParsedNumber: double doubleValue()
kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_PUNCTUATION
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.gson.internal.Streams: com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader)
androidx.core.util.SparseIntArrayKt: boolean remove(android.util.SparseIntArray,int,int)
kotlin.collections.FloatIterator
kotlin.collections.ArraysKt___ArraysJvmKt: int[] copyInto(int[],int[],int,int,int)
javax.inject.Provider
io.reactivex.observables.ConnectableObservable: io.reactivex.Observable refCount(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.ktx.R$id: int notification_main_column_container
kotlin.collections.AbstractMap$values$1$iterator$1: void remove()
androidx.appcompat.widget.Toolbar: boolean isOverflowMenuShowPending()
kotlin.jvm.internal.ReflectionFactory: java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase)
com.example.revolut.rates.R$attr: int paddingEnd
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.CharProgression reversed(kotlin.ranges.CharProgression)
io.reactivex.internal.util.HalfSerializer: void onError(org.reactivestreams.Subscriber,java.lang.Throwable,java.util.concurrent.atomic.AtomicInteger,io.reactivex.internal.util.AtomicThrowable)
io.reactivex.internal.operators.completable.CompletableMaterialize
okhttp3.internal.connection.RealConnection: okhttp3.internal.connection.RealConnection testConnection(okhttp3.ConnectionPool,okhttp3.Route,java.net.Socket,long)
io.reactivex.internal.disposables.DisposableHelper: boolean dispose(java.util.concurrent.atomic.AtomicReference)
androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener: void onPanelClosed(android.view.View)
io.reactivex.internal.functions.Functions: java.util.concurrent.Callable nullSupplier()
androidx.databinding.InverseBindingMethod: java.lang.String event()
androidx.appcompat.app.ActionBar: void setDisplayOptions(int)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])
androidx.drawerlayout.R$attr: int fontProviderAuthority
com.jakewharton.rxbinding3.widget.SeekBarStopChangeEvent: android.widget.SeekBar component1()
androidx.appcompat.widget.ShareActionProvider: void setOnShareTargetSelectedListener(androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener)
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(android.content.Context,android.util.AttributeSet)
io.reactivex.Observable: io.reactivex.Observable defaultIfEmpty(java.lang.Object)
io.reactivex.Single: io.reactivex.Flowable concatArrayEager(io.reactivex.SingleSource[])
dagger.internal.SingleCheck
androidx.appcompat.R$styleable: int AppCompatTheme_spinnerStyle
io.reactivex.internal.util.ArrayListSupplier: java.lang.Object call()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean)
kotlin.reflect.KCallable: java.lang.String getName()
kotlin.jvm.internal.IntSpreadBuilder: IntSpreadBuilder(int)
androidx.core.content.PermissionChecker: int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_IS_GROUP_CONVERSATION
android.support.v4.media.session.MediaSessionCompat$QueueItem: MediaSessionCompat$QueueItem(android.support.v4.media.MediaDescriptionCompat,long)
kotlin.collections.ArraysKt___ArraysKt: double[] sortedArray(double[])
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addExtras(android.os.Bundle)
androidx.core.graphics.TypefaceCompatApi28Impl: TypefaceCompatApi28Impl()
dagger.android.support.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
androidx.core.animation.AnimatorKt$addListener$3: androidx.core.animation.AnimatorKt$addListener$3 INSTANCE
io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit)
androidx.appcompat.app.WindowDecorActionBar: boolean onKeyShortcut(int,android.view.KeyEvent)
androidx.constraintlayout.widget.Constraints$LayoutParams: float scaleY
androidx.lifecycle.ServiceLifecycleDispatcher: ServiceLifecycleDispatcher(androidx.lifecycle.LifecycleOwner)
androidx.recyclerview.R$id: int normal
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateByTo$3
androidx.viewpager.widget.PagerTitleStrip: void setGravity(int)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager requireFragmentManager()
androidx.appcompat.R$anim: int abc_tooltip_enter
com.example.revolut.rates.R$styleable: int Toolbar_subtitleTextColor
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_HOVER_EXIT
com.example.revolut.rates.BuildConfig: java.lang.String APPLICATION_ID
kotlinx.coroutines.channels.AbstractChannel
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$firstOrNull$3: ChannelsKt__Channels_commonKt$firstOrNull$3(kotlin.coroutines.Continuation)
androidx.appcompat.app.WindowDecorActionBar: int getSelectedNavigationIndex()
com.example.revolut.rates.R$attr: int controlBackground
androidx.swiperefreshlayout.R$styleable: int[] FontFamily
android.support.v4.media.MediaDescriptionCompat: java.lang.CharSequence getDescription()
io.reactivex.observers.LambdaConsumerIntrospection: boolean hasCustomOnError()
androidx.appcompat.widget.ActivityChooserView$InnerLayout
androidx.lifecycle.ProcessLifecycleOwnerInitializer: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver: long serialVersionUID
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void setState(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState)
io.reactivex.internal.operators.maybe.MaybeContains: io.reactivex.MaybeSource source()
androidx.core.ktx.R$layout
androidx.legacy.v4.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc describeSendConflated(java.lang.Object)
retrofit2.Converter: java.lang.Object convert(java.lang.Object)
com.google.gson.JsonPrimitive: long getAsLong()
kotlin.collections.ArraysKt___ArraysJvmKt: float[] copyInto(float[],float[],int,int,int)
androidx.recyclerview.widget.RecyclerView: int getChildAdapterPosition(android.view.View)
com.jakewharton.rxbinding3.widget.TextViewAfterTextChangeEvent: TextViewAfterTextChangeEvent(android.widget.TextView,android.text.Editable)
okhttp3.Cookie$Builder
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint getPaint()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setGravity(int)
androidx.appcompat.R$attr: int customNavigationLayout
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(char[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2)
io.reactivex.internal.util.ConnectConsumer: io.reactivex.disposables.Disposable disposable
io.reactivex.internal.functions.Functions$HashSetCallable: io.reactivex.internal.functions.Functions$HashSetCallable valueOf(java.lang.String)
io.reactivex.BackpressureOverflowStrategy
okhttp3.FormBody: void writeTo(okio.BufferedSink)
androidx.appcompat.R$attr: int subtitleTextStyle
androidx.appcompat.widget.ActionBarContextView: boolean isOverflowReserved()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
androidx.appcompat.app.WindowDecorActionBar: WindowDecorActionBar(android.view.View)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int goneRightMargin
com.example.revolut.rates.data.model.CurrencyResponse
androidx.core.R$integer: int status_bar_notification_info_maxnum
androidx.core.transition.TransitionKt$addListener$1: java.lang.Object invoke(java.lang.Object)
androidx.lifecycle.extensions.R$styleable: int FontFamilyFont_ttcIndex
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintShowBackgroundOnly()
androidx.constraintlayout.solver.SolverVariable: int strength
android.support.v4.media.session.MediaSessionCompat: java.lang.String getCallingPackage()
io.reactivex.internal.operators.flowable.FlowableAnySingle: FlowableAnySingle(io.reactivex.Flowable,io.reactivex.functions.Predicate)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setSubtitle(java.lang.CharSequence)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String)
com.jakewharton.rxbinding3.core.R$dimen: int compat_button_inset_horizontal_material
com.example.revolut.rates.viewmodel.CurrenciesViewModel_MembersInjector
kotlin.collections.ArraysKt___ArraysKt: double single(double[])
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: CoordinatorLayout$LayoutParams(int,int)
com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent: java.lang.CharSequence component2()
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int)
androidx.appcompat.widget.DecorToolbar: void setWindowTitle(java.lang.CharSequence)
androidx.appcompat.R$styleable: int AppCompatTheme_switchStyle
androidx.loader.content.Loader: boolean cancelLoad()
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function6)
androidx.media.MediaBrowserProtocol: java.lang.String EXTRA_CLIENT_VERSION
io.reactivex.internal.operators.single.SingleFromPublisher: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat: boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)
io.reactivex.subjects.AsyncSubject: boolean hasComplete()
okio.Buffer: okio.ByteString sha512()
com.example.revolut.rates.R$drawable: int abc_ic_arrow_drop_right_black_24dp
com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory$Companion
kotlin.sequences.TakeSequence$iterator$1: int getLeft()
androidx.recyclerview.widget.DefaultItemAnimator: boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.core.view.ViewPropertyAnimatorListenerAdapter
io.reactivex.internal.operators.flowable.FlowableReplay: io.reactivex.Flowable multicastSelector(java.util.concurrent.Callable,io.reactivex.functions.Function)
com.example.revolut.rates.R$id: int search_badge
kotlinx.coroutines.channels.BroadcastKt
kotlin.collections.AbstractMap: java.util.Set keySet()
io.reactivex.Flowable: io.reactivex.Flowable mergeArrayDelayError(int,int,org.reactivestreams.Publisher[])
kotlinx.coroutines.CoroutineId: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.example.revolut.rates.R$styleable: int[] ActionMode
androidx.lifecycle.ViewModelProvider: ViewModelProvider(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)
com.jakewharton.rxbinding3.core.R$attr: int fontProviderFetchTimeout
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
kotlin.io.FileSystemException
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionPool(okhttp3.ConnectionPool)
okhttp3.internal.http.BridgeInterceptor
androidx.cursoradapter.widget.CursorAdapter: boolean mDataValid
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setWindowTitle(java.lang.CharSequence)
kotlinx.coroutines.BlockingEventLoop: void setCompleted(boolean)
androidx.core.os.CancellationSignal
androidx.appcompat.view.StandaloneActionMode: android.view.View getCustomView()
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind INSTANCE
dagger.android.DaggerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)
com.jakewharton.rxbinding3.widget.RxToolbar: io.reactivex.Observable navigationClicks(android.widget.Toolbar)
kotlin.random.RandomKt: kotlin.random.Random Random(long)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List filterIsInstance(java.lang.Object[],java.lang.Class)
okhttp3.internal.http2.Header: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(short[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.provider.FontsContractCompat$Columns: java.lang.String TTC_INDEX
androidx.appcompat.view.ActionMode: void setTitle(int)
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object performAtomicIfNotSelected(kotlinx.coroutines.internal.AtomicDesc)
io.reactivex.internal.operators.parallel.ParallelFromPublisher: void subscribe(org.reactivestreams.Subscriber[])
kotlin.coroutines.ContinuationInterceptor
androidx.core.view.MotionEventCompat: int AXIS_TOOL_MINOR
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_DURATION
kotlin.collections.ArraysKt___ArraysKt: int sumOfByte(java.lang.Byte[])
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget getLastMatchConstraintWidget()
kotlin.text.MatchGroup: java.lang.String getValue()
androidx.core.widget.ListViewCompat
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Title
androidx.loader.R$styleable: int FontFamily_fontProviderPackage
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener: void onAttachedFromWindow()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
kotlin.ranges.URangesKt___URangesKt: boolean contains-uhHAxoY(kotlin.ranges.ULongRange,short)
androidx.appcompat.widget.ForwardingListener: boolean onForwardingStarted()
dagger.android.support.R$attr: int titleMargin
kotlin.collections.CollectionsKt___CollectionsKt: void sortDescending(java.util.List)
androidx.databinding.adapters.TimePickerBindingAdapter: TimePickerBindingAdapter()
dagger.android.support.R$drawable: int abc_btn_switch_to_on_mtrl_00001
com.google.gson.Gson: com.google.gson.FieldNamingStrategy fieldNamingStrategy()
io.reactivex.internal.operators.flowable.FlowableInternalHelper
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable getCurrent()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
kotlinx.coroutines.test.TestCoroutineContext: kotlinx.coroutines.test.TimedRunnable access$postDelayed(kotlinx.coroutines.test.TestCoroutineContext,java.lang.Runnable,long)
kotlin.collections.ArraysKt___ArraysJvmKt: long[] plus(long[],java.util.Collection)
android.support.v4.media.MediaMetadataCompat$BitmapKey
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
dagger.android.support.R$layout: int abc_activity_chooser_view_list_item
androidx.lifecycle.extensions.R$style: int TextAppearance_Compat_Notification_Time
androidx.databinding.adapters.TextViewBindingAdapter: void setDrawableEnd(android.widget.TextView,android.graphics.drawable.Drawable)
io.reactivex.internal.subscriptions.AsyncSubscription: void cancel()
androidx.recyclerview.widget.DividerItemDecoration: void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()
com.example.revolut.rates.R$attr: int dropDownListViewStyle
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$1: void resume(kotlin.Unit)
kotlin.collections.ArraysKt___ArraysKt: int indexOf(long[],long)
androidx.core.graphics.RectKt: android.graphics.Region minus(android.graphics.Rect,android.graphics.Rect)
kotlinx.coroutines.EventLoopBase: boolean isEmpty()
androidx.core.view.ViewCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
io.reactivex.internal.operators.maybe.MaybeIsEmptySingle: io.reactivex.MaybeSource source()
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
dagger.android.support.R$drawable: int abc_btn_radio_to_on_mtrl_015
androidx.core.app.FrameMetricsAggregator: android.util.SparseIntArray[] remove(android.app.Activity)
io.reactivex.internal.observers.BlockingObserver: void onSubscribe(io.reactivex.disposables.Disposable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer maxBy(int[],kotlin.jvm.functions.Function1)
androidx.customview.R$styleable: int FontFamily_fontProviderAuthority
androidx.recyclerview.widget.AsyncListDiffer: java.util.List getCurrentList()
com.example.revolut.rates.R$color: int accent_material_dark
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder minFresh(int,java.util.concurrent.TimeUnit)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-tAntMlw(int[],kotlin.ranges.IntRange)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Integer[] toTypedArray(int[])
io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)
androidx.core.content.res.ComplexColorCompat: int getColor()
androidx.coordinatorlayout.R$styleable: int[] FontFamilyFont
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(boolean[])
io.reactivex.Flowable: io.reactivex.Flowable generate(io.reactivex.functions.Consumer)
io.reactivex.Observable: io.reactivex.Observable delay(long,java.util.concurrent.TimeUnit,boolean)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void access$finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.constraintlayout.solver.LinearSystem: void addEquality(androidx.constraintlayout.solver.SolverVariable,int)
androidx.drawerlayout.R$styleable: int FontFamily_fontProviderPackage
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)
kotlinx.android.extensions.LayoutContainer: android.view.View getContainerView()
dagger.android.support.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
kotlin.internal.PlatformImplementations: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
kotlinx.coroutines.JobNode: kotlinx.coroutines.Job job
androidx.core.app.ShareCompat$IntentReader: androidx.core.app.ShareCompat$IntentReader from(android.app.Activity)
com.example.revolut.rates.R$dimen: int abc_dialog_fixed_width_minor
androidx.fragment.app.Fragment: void registerForContextMenu(android.view.View)
androidx.slidingpanelayout.R$dimen: int notification_right_side_padding_top
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
androidx.versionedparcelable.VersionedParcel: void setSerializationFlags(boolean,boolean)
kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,int)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory STRING_FACTORY
androidx.core.graphics.BitmapKt: android.graphics.Bitmap scale$default(android.graphics.Bitmap,int,int,boolean,int,java.lang.Object)
androidx.lifecycle.extensions.R$attr: int layout_anchorGravity
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(short[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.CoroutineName: java.lang.String toString()
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: int getOldBottom()
kotlinx.coroutines.timeunit.TimeUnitKt
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR
androidx.legacy.coreui.R$styleable: int FontFamily_fontProviderFetchStrategy
kotlin.io.FilesKt__FileTreeWalkKt: kotlin.io.FileTreeWalk walkBottomUp(java.io.File)
androidx.collection.ArrayMap: ArrayMap()
com.example.revolut.rates.R$style: int Widget_AppCompat_SearchView
kotlin.collections.ArraysKt___ArraysKt: boolean none(java.lang.Object[])
kotlin.jvm.internal.DoubleCompanionObject: double getMIN_VALUE()
io.reactivex.internal.subscribers.BlockingSubscriber: void onError(java.lang.Throwable)
kotlin.jvm.internal.InlineMarker: void beforeInlineCall()
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: org.reactivestreams.Subscription upstream
androidx.core.content.res.ConfigurationHelper
android.support.v4.media.session.PlaybackStateCompat: long getActiveQueueItemId()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath
androidx.appcompat.widget.AppCompatSeekBar: void onDraw(android.graphics.Canvas)
androidx.core.ktx.R$dimen: int compat_button_inset_horizontal_material
dagger.android.support.R$style: int Base_Animation_AppCompat_DropDownUp
io.reactivex.internal.subscribers.BasicFuseableSubscriber: io.reactivex.internal.fuseable.QueueSubscription qs
androidx.appcompat.view.menu.MenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.core.view.ViewCompat: void setPivotX(android.view.View,float)
okhttp3.internal.cache.DiskLruCache$Editor: okio.Sink newSink(int)
io.reactivex.internal.operators.flowable.FlowablePublishAlt
androidx.vectordrawable.R$dimen: int notification_top_pad_large_text
io.reactivex.Completable: io.reactivex.Completable amb(java.lang.Iterable)
com.example.revolut.rates.R$drawable: int abc_popup_background_mtrl_mult
io.reactivex.Completable: io.reactivex.Completable complete()
androidx.constraintlayout.solver.SolverVariable: int STRENGTH_MEDIUM
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
androidx.customview.R$id: int action_container
androidx.appcompat.R$style: int TextAppearance_Compat_Notification_Time
kotlinx.coroutines.EventLoopBase: void execute$kotlinx_coroutines_core(java.lang.Runnable)
kotlin.reflect.KCallable$DefaultImpls: void isAbstract$annotations()
android.support.v4.media.session.MediaSessionCompat
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionButton
androidx.constraintlayout.solver.widgets.Guideline: void analyze(int)
dagger.android.support.R$color: int switch_thumb_normal_material_dark
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn$UnsubscribeOnMaybeObserver: long serialVersionUID
androidx.core.content.pm.PermissionInfoCompat$Protection
dagger.android.support.R$drawable: int abc_ic_star_black_36dp
kotlinx.coroutines.scheduling.TaskMode: TaskMode(java.lang.String,int)
kotlin.collections.CollectionsKt__MutableCollectionsKt: void shuffle(java.util.List,kotlin.random.Random)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
androidx.fragment.app.FragmentManager: void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.NodeList: kotlinx.coroutines.NodeList getList()
androidx.appcompat.R$dimen: int abc_action_bar_subtitle_top_margin_material
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_optimizationLevel
androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumHeight()
okio.Buffer$UnsafeCursor: int end
androidx.appcompat.R$attr: int buttonTintMode
com.google.gson.internal.reflect.ReflectionAccessor: com.google.gson.internal.reflect.ReflectionAccessor getInstance()
androidx.media.R$id: int action_divider
kotlinx.coroutines.EventLoopBase: void resetAll()
io.reactivex.internal.operators.completable.CompletableAndThenCompletable: CompletableAndThenCompletable(io.reactivex.CompletableSource,io.reactivex.CompletableSource)
androidx.core.util.LongSparseArrayKt$keyIterator$1: void setIndex(int)
kotlin.text.Regex$fromInt$$inlined$apply$lambda$1: Regex$fromInt$$inlined$apply$lambda$1(int)
io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int,long,java.util.concurrent.TimeUnit)
com.jakewharton.rxbinding3.widget.RxAdapterView: io.reactivex.Observable itemLongClicks(android.widget.AdapterView)
androidx.legacy.coreui.R$styleable: int FontFamily_fontProviderPackage
androidx.core.app.ShareCompat$IntentReader: java.lang.String getSubject()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean isAccessibilityFocused()
kotlin.UShort$Companion
androidx.recyclerview.R$dimen: int item_touch_helper_swipe_escape_max_velocity
androidx.core.R$styleable: int GradientColor_android_endY
androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle: NotificationCompat$DecoratedMediaCustomViewStyle()
kotlin.reflect.TypeOfKt
kotlin.reflect.KMutableProperty2
kotlin.text.RegexOption: kotlin.text.RegexOption MULTILINE
androidx.fragment.app.DialogFragment: void onAttach(android.content.Context)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void jumpToCurrentState()
com.example.revolut.rates.R$attr: int showDividers
dagger.android.support.R$color: int secondary_text_disabled_material_light
kotlin.random.Random: byte[] nextBytes(int)
androidx.legacy.v4.R$layout: int notification_template_icon_group
io.reactivex.subjects.SingleSubject: boolean hasObservers()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation()
io.reactivex.internal.schedulers.ComputationScheduler: ComputationScheduler(java.util.concurrent.ThreadFactory)
android.support.v4.media.session.PlaybackStateCompat: long ACTION_STOP
androidx.appcompat.view.menu.ActionMenuItemView: boolean needsDividerAfter()
kotlinx.coroutines.DispatchedContinuation: java.lang.Object takeState()
kotlinx.coroutines.test.TestCoroutineContext: void assertExceptions$default(kotlinx.coroutines.test.TestCoroutineContext,java.lang.String,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int getFetchStrategy()
androidx.constraintlayout.widget.ConstraintSet: int HORIZONTAL
com.jakewharton.rxbinding3.core.R$styleable: int GradientColor_android_startX
androidx.media.R$dimen: int notification_large_icon_height
androidx.appcompat.view.menu.MenuPopupHelper: void show()
dagger.android.support.R$styleable: int Toolbar_contentInsetEndWithActions
androidx.vectordrawable.R$id: int normal
androidx.constraintlayout.solver.SolverVariable: void setType(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String)
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
okhttp3.internal.connection.RealConnection: boolean supportsUrl(okhttp3.HttpUrl)
androidx.core.widget.AutoSizeableTextView: int getAutoSizeMaxTextSize()
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri)
kotlin.jvm.JvmClassMappingKt: void java$annotations(kotlin.reflect.KClass)
androidx.viewpager.widget.PagerAdapter: PagerAdapter()
io.reactivex.internal.fuseable.HasUpstreamMaybeSource: io.reactivex.MaybeSource source()
dagger.android.support.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
kotlin.text.MatcherMatchResult$groups$1: boolean isEmpty()
androidx.appcompat.R$id: int action_bar_subtitle
androidx.core.view.WindowInsetsCompat
com.jakewharton.rxbinding3.view.ViewAttachDetachedEvent: com.jakewharton.rxbinding3.view.ViewAttachDetachedEvent copy$default(com.jakewharton.rxbinding3.view.ViewAttachDetachedEvent,android.view.View,int,java.lang.Object)
androidx.core.os.HandlerKt$postAtTime$runnable$1
kotlin.collections.EmptySet: boolean remove(java.lang.Object)
androidx.documentfile.provider.DocumentFile: long lastModified()
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.IMediaSession: java.util.List getQueue()
androidx.core.view.ViewCompat: void setOverScrollMode(android.view.View,int)
androidx.coordinatorlayout.widget.ViewGroupUtils
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
kotlinx.coroutines.channels.BroadcastChannelKt: java.lang.Object use(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1)
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: FontResourcesParserCompat$FontFamilyFilesResourceEntry(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[])
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorIterable
io.reactivex.internal.operators.flowable.FlowableSingleSingle: io.reactivex.Flowable fuseToFlowable()
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment LEFT
androidx.appcompat.R$styleable: int Toolbar_maxButtonHeight
dagger.android.support.R$attr: int titleTextStyle
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(boolean[],java.lang.Iterable)
com.google.gson.internal.Excluder: java.lang.Object clone()
kotlin.jvm.internal.MagicApiIntrinsics: java.lang.Object anyMagicApiCall(int,java.lang.Object,java.lang.Object)
kotlin.PreconditionsKt
io.reactivex.Completable: io.reactivex.Completable error(java.util.concurrent.Callable)
okhttp3.MultipartBody: java.lang.String boundary()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(int[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String concatToString$default(char[],int,int,int,java.lang.Object)
dagger.android.support.DaggerApplication: dagger.android.AndroidInjector supportFragmentInjector()
kotlin.collections.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable: ObservableSwitchMapCompletable(io.reactivex.Observable,io.reactivex.functions.Function,boolean)
kotlin.reflect.KClass: boolean isInstance(java.lang.Object)
androidx.recyclerview.widget.GridLayoutManager: void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.core.provider.SelfDestructiveThread: boolean isRunning()
dagger.android.support.R$layout: int abc_search_view
kotlinx.coroutines.channels.ConflatedChannel: boolean isBufferFull()
android.support.v4.media.session.PlaybackStateCompat: long getCurrentPosition(java.lang.Long)
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable clicks(android.view.View)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void finish()
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder from(android.content.Context)
androidx.core.ktx.R$styleable: int GradientColor_android_type
androidx.appcompat.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
io.reactivex.internal.subscriptions.ScalarSubscription: boolean isEmpty()
androidx.viewpager.R$drawable: int notification_icon_background
androidx.legacy.coreui.R$id: int top
androidx.media.R$styleable: int GradientColor_android_type
kotlin.collections.ArraysKt___ArraysKt: int indexOf(boolean[],boolean)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable min(java.lang.Iterable)
com.example.revolut.rates.R$styleable: int AppCompatTheme_colorError
androidx.media.R$attr: int fontVariationSettings
androidx.constraintlayout.widget.Constraints$LayoutParams: float translationZ
dagger.internal.SetBuilder: dagger.internal.SetBuilder add(java.lang.Object)
kotlinx.coroutines.ThreadPoolDispatcher: ThreadPoolDispatcher(int,java.lang.String)
androidx.vectordrawable.R$dimen: int notification_action_text_size
androidx.core.util.SparseLongArrayKt$keyIterator$1: int getIndex()
androidx.core.app.NotificationCompat$MessagingStyle: java.util.List getMessages()
io.reactivex.observables.ConnectableObservable: ConnectableObservable()
io.reactivex.BackpressureOverflowStrategy: io.reactivex.BackpressureOverflowStrategy DROP_OLDEST
com.example.revolut.rates.R$id: int wrap
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void rewind(java.lang.Object)
androidx.core.content.MimeTypeFilter: java.lang.String[] matchesMany(java.lang.String[],java.lang.String)
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowDrawableRight(android.graphics.drawable.Drawable)
androidx.fragment.app.DialogFragment: void setStyle(int,int)
com.example.revolut.rates.R$styleable: int CoordinatorLayout_statusBarBackground
androidx.appcompat.R$drawable: int abc_textfield_default_mtrl_alpha
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1(java.lang.Object[])
androidx.databinding.library.R$id
androidx.legacy.v4.R$styleable: int GradientColorItem_android_color
androidx.appcompat.R$attr: int paddingBottomNoButtons
com.example.revolut.rates.R$styleable: int ConstraintLayout_placeholder_emptyVisibility
androidx.appcompat.R$attr: int titleMarginBottom
com.example.revolut.rates.di.Injector: com.example.revolut.rates.di.AppComponent access$getAppComponent$cp()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)
com.example.revolut.rates.R$layout: int notification_template_big_media_custom
androidx.legacy.app.ActionBarDrawerToggle: ActionBarDrawerToggle(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,int,int,int)
io.reactivex.internal.observers.BasicFuseableObserver
okhttp3.OkHttpClient$Builder
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: kotlin.UShort get(int)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
androidx.media.R$dimen: int notification_big_circle_margin
io.reactivex.internal.operators.observable.ObservableRepeatWhen: void subscribeActual(io.reactivex.Observer)
androidx.fragment.app.FragmentManager$BackStackEntry: int getBreadCrumbShortTitleRes()
androidx.core.widget.PopupWindowCompat: int getWindowLayoutType(android.widget.PopupWindow)
androidx.appcompat.app.ActionBar$Tab: ActionBar$Tab()
com.example.revolut.rates.R$color: int material_grey_300
androidx.core.graphics.RectKt: android.graphics.Rect and(android.graphics.Rect,android.graphics.Rect)
androidx.appcompat.R$id: int right_side
androidx.viewpager.widget.PagerTabStrip: void setTabIndicatorColor(int)
kotlin.collections.EmptyList: boolean retainAll(java.util.Collection)
androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerStateChanged(int)
kotlin.collections.AbstractMap$keys$1$iterator$1
androidx.databinding.ViewDataBinding: void setTo(long[],int,long)
kotlin.UInt: kotlin.UInt box-impl(int)
okio.DeflaterSink: void flush()
okio.ByteString: okio.ByteString of(byte[])
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression step(kotlin.ranges.IntProgression,int)
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable concatMapDelayError(io.reactivex.functions.Function,int,boolean)
android.support.v4.media.session.PlaybackStateCompat: int STATE_STOPPED
androidx.media.AudioAttributesCompat: int CONTENT_TYPE_SONIFICATION
androidx.core.util.SparseLongArrayKt: kotlin.collections.IntIterator keyIterator(android.util.SparseLongArray)
androidx.core.ktx.R$drawable: int notify_panel_notification_icon_bg
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
androidx.appcompat.R$styleable: int ActionMode_backgroundSplit
io.reactivex.Flowable: io.reactivex.Flowable timeout(org.reactivestreams.Publisher,io.reactivex.functions.Function)
io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()
retrofit2.Call: boolean isExecuted()
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_goneMarginLeft
androidx.recyclerview.widget.RecyclerView$Adapter: void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.constraintlayout.solver.widgets.WidgetContainer: WidgetContainer(int,int)
io.reactivex.internal.operators.maybe.MaybeCache: void onSuccess(java.lang.Object)
kotlinx.coroutines.internal.LockFreeMPMCQueue: boolean headCas(kotlinx.coroutines.internal.LockFreeMPMCQueueNode,kotlinx.coroutines.internal.LockFreeMPMCQueueNode)
kotlin.collections.MapsKt___MapsKt: java.util.Map onEach(java.util.Map,kotlin.jvm.functions.Function1)
okhttp3.internal.http2.Http2Stream: okio.Timeout readTimeout()
kotlin.ranges.ULongProgression: long getStep()
kotlin.UIntArray: boolean addAll(java.util.Collection)
kotlinx.coroutines.EventLoopBase: java.lang.Object delay(long,java.util.concurrent.TimeUnit,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ActionBarOverlayLayout: void draw(android.graphics.Canvas)
androidx.databinding.adapters.SearchViewBindingAdapter$OnQueryTextChange: boolean onQueryTextChange(java.lang.String)
okio.HashingSource: okio.HashingSource sha1(okio.Source)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence lineSequence(java.lang.CharSequence)
androidx.fragment.R$attr: int fontProviderPackage
kotlin.collections.CharIterator
androidx.appcompat.widget.DecorToolbar: boolean isTitleTruncated()
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_Toolbar
kotlin.ranges.RangesKt___RangesKt: int coerceIn(int,int,int)
com.example.revolut.rates.R$attr: int listMenuViewStyle
androidx.appcompat.R$style: int Widget_AppCompat_CompoundButton_CheckBox
androidx.constraintlayout.solver.widgets.ResolutionAnchor: int DIRECT_CONNECTION
io.reactivex.subjects.ReplaySubject$Node: long serialVersionUID
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
dagger.android.support.R$style: int Widget_AppCompat_RatingBar_Indicator
io.reactivex.internal.observers.FutureSingleObserver: FutureSingleObserver()
android.support.v4.media.session.MediaSessionCompat$QueueItem
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ProducerJob produce(kotlin.coroutines.CoroutineContext,int,kotlin.jvm.functions.Function2)
io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.Maybe: io.reactivex.Maybe onErrorComplete()
io.reactivex.internal.operators.single.SingleCache: void onSuccess(java.lang.Object)
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(androidx.appcompat.app.ActionBar$LayoutParams)
androidx.core.app.NotificationCompat$Builder: android.os.Bundle getExtras()
io.reactivex.internal.observers.BasicFuseableObserver: boolean isEmpty()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setEnabled(boolean)
androidx.arch.core.internal.SafeIterableMap
kotlin.ULongArray: boolean remove(java.lang.Object)
androidx.fragment.app.FragmentTransitionImpl: void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList)
androidx.media.R$styleable: int GradientColor_android_centerY
io.reactivex.internal.subscribers.BoundedSubscriber: boolean hasCustomOnError()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object reduceIndexed(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
android.support.v4.media.session.MediaSessionCompat: java.lang.String KEY_EXTRA_BINDER
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver: long serialVersionUID
kotlin.text.StringsKt___StringsKt: java.util.List zip(java.lang.CharSequence,java.lang.CharSequence,kotlin.jvm.functions.Function2)
androidx.appcompat.R$styleable: int ViewStubCompat_android_layout
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder addEncoded(java.lang.String,java.lang.String)
kotlin.collections.DoubleIterator
androidx.appcompat.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)
io.reactivex.internal.functions.Functions: io.reactivex.functions.Consumer notificationOnNext(io.reactivex.functions.Consumer)
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()
okio.BufferedSource: boolean rangeEquals(long,okio.ByteString,int,int)
dagger.android.support.R$id: int spacer
io.reactivex.internal.operators.maybe.MaybeJust: MaybeJust(java.lang.Object)
androidx.appcompat.view.ActionMode: void setSubtitle(java.lang.CharSequence)
androidx.recyclerview.R$string: int status_bar_notification_info_overflow
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getBottomDecorationHeight(android.view.View)
io.reactivex.Single: io.reactivex.Flowable concat(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)
com.example.revolut.rates.R$drawable: int abc_list_selector_disabled_holo_dark
androidx.appcompat.widget.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)
androidx.core.util.Pools$SynchronizedPool
io.reactivex.disposables.CompositeDisposable: void dispose()
androidx.fragment.R$style: int Widget_Support_CoordinatorLayout
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_Button_Borderless
io.reactivex.SingleTransformer
androidx.appcompat.widget.AppCompatAutoCompleteTextView
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setText(java.lang.CharSequence)
androidx.appcompat.R$style: int Widget_AppCompat_ListView_DropDown
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintWidth_min
kotlin.UInt: int MIN_VALUE
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isAttachedToWindow()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List take-qFRl0hI(int[],int)
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.ClosedRange,byte)
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
io.reactivex.Maybe: io.reactivex.Maybe doOnSuccess(io.reactivex.functions.Consumer)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: int lastIndexOf(int)
okio.Buffer: okio.ByteString sha1()
androidx.recyclerview.R$attr: int layoutManager
kotlin.jvm.internal.TypeReference: kotlin.reflect.KClassifier getClassifier()
io.reactivex.internal.operators.observable.ObservableDefer
io.reactivex.Flowable: io.reactivex.Flowable join(org.reactivestreams.Publisher,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
io.reactivex.Observable: io.reactivex.Observable doOnEach(io.reactivex.functions.Consumer)
kotlin.jvm.internal.PackageReference
androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent()
android.support.v4.media.session.MediaSessionCompat: int FLAG_HANDLES_QUEUE_COMMANDS
retrofit2.Retrofit$Builder: Retrofit$Builder()
androidx.core.content.pm.PackageInfoCompat
androidx.customview.R$id: int action_divider
androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int)
androidx.constraintlayout.widget.R$attr: int layout_constraintHeight_default
io.reactivex.internal.operators.flowable.FlowableOnErrorReturn: void subscribeActual(org.reactivestreams.Subscriber)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintVertical_weight
androidx.core.database.sqlite.SQLiteCursorCompat
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_ActionBar_TabText
com.example.revolut.rates.R$attr: int listPreferredItemPaddingLeft
com.example.revolut.rates.R$dimen: int abc_edit_text_inset_top_material
androidx.databinding.ViewDataBinding: byte getFromArray(byte[],int)
androidx.core.graphics.ColorKt: android.graphics.Color plus(android.graphics.Color,android.graphics.Color)
androidx.core.widget.NestedScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)
kotlinx.coroutines.TimeSource: void parkNanos(java.lang.Object,long)
androidx.legacy.coreui.R$drawable: int notification_bg_normal_pressed
androidx.appcompat.R$style: int Widget_Compat_NotificationActionContainer
androidx.versionedparcelable.VersionedParcel: long[] readLongArray(long[],int)
androidx.vectordrawable.R$attr: int keylines
okhttp3.internal.http2.Http2Codec: okhttp3.Response$Builder readResponseHeaders(boolean)
androidx.core.ktx.R$attr: int fontStyle
androidx.core.widget.TextViewCompat: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.media.R$style: int TextAppearance_Compat_Notification_Time
kotlin.ranges.LongRange: kotlin.ranges.LongRange$Companion Companion
androidx.core.ktx.R$dimen: int notification_small_icon_background_padding
androidx.core.widget.TextViewCompat: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.databinding.adapters.ViewBindingAdapter: int FADING_EDGE_VERTICAL
okhttp3.internal.cache.DiskLruCache$Editor: okio.Source newSource(int)
io.reactivex.internal.functions.Functions: io.reactivex.functions.Function castFunction(java.lang.Class)
androidx.recyclerview.R$style: int Widget_Compat_NotificationActionText
kotlin.Triple: java.lang.Object component2()
io.reactivex.plugins.RxJavaPlugins: void setOnSingleSubscribe(io.reactivex.functions.BiFunction)
io.reactivex.internal.operators.maybe.MaybeToPublisher: io.reactivex.internal.operators.maybe.MaybeToPublisher[] values()
androidx.slidingpanelayout.R$id: int action_image
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)
kotlin.ranges.URangesKt
androidx.core.R$styleable: int FontFamily_fontProviderFetchTimeout
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.LockFreeLinkedListKt: kotlinx.coroutines.internal.LockFreeLinkedListNode unwrap(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SCROLL_BACKWARD
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_CHACHA20_POLY1305_SHA256
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapIndexedNotNullTo$1
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS
androidx.core.app.NotificationCompat: java.lang.String EXTRA_BIG_TEXT
androidx.core.view.ViewCompat: boolean hasOnClickListeners(android.view.View)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
androidx.media.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.core.util.LongSparseArrayKt: int getSize(android.util.LongSparseArray)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Menu
kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)
io.reactivex.internal.operators.observable.ObservableReplay
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setActionView(int)
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void seekTo(java.lang.Object,long)
androidx.slidingpanelayout.R$dimen: int compat_notification_large_icon_max_width
okhttp3.internal.http.RetryAndFollowUpInterceptor: void setCallStackTrace(java.lang.Object)
androidx.databinding.adapters.TextViewBindingAdapter: int INTEGER
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException(java.lang.String,java.lang.Throwable)
dagger.android.support.R$styleable: int Toolbar_navigationContentDescription
kotlin.jvm.internal.LongCompanionObject: kotlin.jvm.internal.LongCompanionObject INSTANCE
androidx.core.graphics.ColorUtils: void colorToLAB(int,double[])
okhttp3.internal.http.HttpHeaders: boolean hasVaryAll(okhttp3.Response)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object elementAtOrNull(java.lang.Iterable,int)
androidx.asynclayoutinflater.R$style: int TextAppearance_Compat_Notification_Time
android.support.v4.media.session.MediaSessionCompat$Token: void setExtraBinder(android.support.v4.media.session.IMediaSession)
com.google.gson.internal.LazilyParsedNumber: boolean equals(java.lang.Object)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: int indexOf(char)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View)
com.example.revolut.rates.R$dimen: int abc_search_view_preferred_height
androidx.loader.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.vectordrawable.R$attr: int fontWeight
org.intellij.lang.annotations.Flow: java.lang.String THIS_SOURCE
androidx.customview.R$layout
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.Region getTransparentRegion()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(java.lang.Object[],java.lang.Iterable)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)
androidx.core.ktx.R$styleable: int GradientColor_android_startColor
androidx.appcompat.R$styleable: int MenuItem_showAsAction
androidx.appcompat.app.ActionBar: void setIcon(android.graphics.drawable.Drawable)
kotlin.jvm.internal.CharCompanionObject: int SIZE_BYTES
kotlin.ranges.ULongRange: boolean contains-VKZWuLQ(long)
androidx.appcompat.widget.TintContextWrapper: android.content.res.AssetManager getAssets()
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean)
androidx.legacy.v4.R$id: int title
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setVisible(boolean)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(java.lang.Comparable[])
androidx.coordinatorlayout.R$id: int forever
dagger.android.DaggerFragment_MembersInjector: dagger.MembersInjector create(javax.inject.Provider)
androidx.asynclayoutinflater.R$dimen: int notification_right_icon_size
org.jetbrains.annotations.Nullable
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat
io.reactivex.Completable: io.reactivex.Completable doOnTerminate(io.reactivex.functions.Action)
androidx.core.util.SparseBooleanArrayKt: boolean getOrDefault(android.util.SparseBooleanArray,int,boolean)
androidx.core.view.MotionEventCompat: float getAxisValue(android.view.MotionEvent,int,int)
kotlin.jvm.internal.TypeIntrinsics: TypeIntrinsics()
io.reactivex.BackpressureOverflowStrategy: io.reactivex.BackpressureOverflowStrategy DROP_LATEST
androidx.media.AudioAttributesCompat: int hashCode()
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget getFirst()
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int getTimeout()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduceIndexed(java.lang.Object[],kotlin.jvm.functions.Function3)
kotlin.UByteArray: int hashCode-impl(byte[])
androidx.loader.R$id: int line1
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void enableContentAnimations(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isContextClickable()
androidx.recyclerview.widget.SnapHelper: androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()
kotlin.text.StringsKt__StringsKt: kotlin.Pair findLastAnyOf$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object)
io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable: io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable[] values()
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber: long serialVersionUID
io.reactivex.Flowable: io.reactivex.Flowable switchMapDelayError(io.reactivex.functions.Function,int)
okhttp3.Cache: int networkCount()
io.reactivex.internal.operators.parallel.ParallelFromArray
io.reactivex.Flowable: io.reactivex.Flowable concatArrayEager(org.reactivestreams.Publisher[])
androidx.lifecycle.extensions.R$id: int icon_group
android.support.v4.media.session.MediaControllerCompatApi24$TransportControls: void prepareFromSearch(java.lang.Object,java.lang.String,android.os.Bundle)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getLayoutDirection()
com.example.revolut.rates.R$style: int Theme_AppCompat_DialogWhenLarge
com.example.revolut.rates.R$styleable: int SwitchCompat_showText
androidx.core.app.CoreComponentFactory$CompatWrapped: java.lang.Object getWrapper()
kotlin.text.CharCategory: kotlin.text.CharCategory INITIAL_QUOTE_PUNCTUATION
dagger.android.support.R$styleable: int SwitchCompat_android_textOff
androidx.recyclerview.widget.RecyclerView$ItemDecoration: RecyclerView$ItemDecoration()
androidx.core.graphics.drawable.IconCompat
androidx.appcompat.R$styleable: int FontFamily_fontProviderFetchTimeout
kotlin.text.Charsets: java.nio.charset.Charset ISO_8859_1
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany
androidx.databinding.ViewDataBinding: double getFromArray(double[],int)
okhttp3.MultipartBody$Part: okhttp3.RequestBody body()
dagger.android.support.R$style: int Base_Widget_AppCompat_PopupWindow
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget FUNCTION
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong singleOrNull-QwZRm1k(long[])
androidx.appcompat.R$attr: int textAppearanceLargePopupMenu
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult: FingerprintManagerCompat$AuthenticationResult(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)
com.google.gson.stream.JsonReader: void skipValue()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
dagger.android.support.R$attr: int singleChoiceItemLayout
okhttp3.MultipartBody$Builder: MultipartBody$Builder(java.lang.String)
androidx.core.text.BidiFormatter: boolean isRtlContext()
androidx.core.view.ViewConfigurationCompat: boolean hasPermanentMenuKey(android.view.ViewConfiguration)
kotlinx.coroutines.CommonPool: void restore$kotlinx_coroutines_core()
kotlin.collections.MapsKt__MapsKt: java.util.Map mutableMapOf(kotlin.Pair[])
kotlin.text.StringsKt__StringsKt$iterator$1: char nextChar()
com.example.revolut.rates.R$color: int abc_tint_btn_checkable
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object associate(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListKt: void ALREADY_REMOVED$annotations()
androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter$Builder stereoReset(boolean)
io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource,io.reactivex.ObservableSource)
androidx.constraintlayout.solver.LinearSystem: void displayVariablesReadableRows()
kotlin.sequences.MergingSequence$iterator$1: void remove()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
kotlin.jvm.internal.TypeIntrinsics: java.util.Collection asMutableCollection(java.lang.Object)
io.reactivex.ObservableEmitter: boolean isDisposed()
com.example.revolut.rates.R$attr: int alertDialogStyle
androidx.core.util.LongSparseArrayKt$valueIterator$1: void setIndex(int)
androidx.core.app.ShareCompat: void configureMenuItem(android.view.MenuItem,androidx.core.app.ShareCompat$IntentBuilder)
com.example.revolut.rates.R$attr: int listItemLayout
kotlin.jvm.functions.Function11
io.reactivex.internal.disposables.ArrayCompositeDisposable: boolean isDisposed()
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
kotlin.collections.IndexingIterator
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: ComparisonsKt__ComparisonsKt$compareBy$2(kotlin.jvm.functions.Function1)
dagger.android.support.R$styleable: int Spinner_popupTheme
androidx.media.R$style: int TextAppearance_Compat_Notification
androidx.cursoradapter.widget.ResourceCursorAdapter: ResourceCursorAdapter(android.content.Context,int,android.database.Cursor)
kotlin.sequences.FilteringSequence$iterator$1: void remove()
androidx.appcompat.app.WindowDecorActionBar: float getElevation()
androidx.swiperefreshlayout.R$style: int TextAppearance_Compat_Notification_Line2
io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,int)
androidx.collection.CircularArray: java.lang.Object getLast()
androidx.constraintlayout.widget.R$id: int packed
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PREPARE
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(android.content.Context,android.util.AttributeSet)
com.example.revolut.rates.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
okhttp3.FormBody: java.lang.String encodedName(int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getLeft()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getAlpha()
io.reactivex.internal.schedulers.ScheduledDirectTask: long serialVersionUID
io.reactivex.internal.observers.QueueDrainObserver: boolean enter()
androidx.appcompat.R$string: int abc_action_bar_home_description
io.reactivex.Completable: java.lang.Object to(io.reactivex.functions.Function)
io.reactivex.internal.operators.parallel.ParallelPeek: void subscribe(org.reactivestreams.Subscriber[])
okhttp3.ConnectionPool: ConnectionPool()
androidx.lifecycle.LiveData: boolean hasActiveObservers()
androidx.appcompat.view.menu.ListMenuPresenter: void setId(int)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alpha(float)
androidx.appcompat.R$styleable: int CoordinatorLayout_Layout_layout_behavior
androidx.core.graphics.RegionKt
androidx.viewpager.R$dimen: int notification_large_icon_width
androidx.recyclerview.widget.ItemTouchHelper: int ANIMATION_TYPE_SWIPE_CANCEL
androidx.recyclerview.widget.RecyclerView$LayoutManager: void moveView(int,int)
androidx.core.app.NotificationCompat$Action: android.app.PendingIntent getActionIntent()
kotlin.jvm.functions.Function19
kotlin.KotlinNullPointerException: KotlinNullPointerException()
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: long serialVersionUID
kotlin.ranges.RangesKt__RangesJVMKt: RangesKt__RangesJVMKt()
androidx.core.app.NotificationCompat$CarExtender
com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory: com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory create()
kotlin.ranges.CharRange$Companion: kotlin.ranges.CharRange getEMPTY()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.R$id: int search_edit_frame
androidx.appcompat.view.menu.MenuPresenter: void updateMenuView(boolean)
androidx.appcompat.view.menu.ShowableListMenu: void dismiss()
androidx.core.graphics.CanvasKt: void withSave(android.graphics.Canvas,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.Ref$LongRef: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(char[],kotlin.jvm.functions.Function1)
io.reactivex.Flowable: io.reactivex.Single toList()
io.reactivex.internal.operators.single.SingleFlatMapPublisher
androidx.appcompat.widget.Toolbar: boolean hideOverflowMenu()
androidx.lifecycle.extensions.R$dimen: int notification_large_icon_width
okhttp3.internal.http2.StreamResetException
androidx.core.graphics.RectKt: android.graphics.RectF plus(android.graphics.RectF,android.graphics.PointF)
io.reactivex.Scheduler$Worker: io.reactivex.disposables.Disposable schedulePeriodically(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
kotlin.sequences.Sequence
io.reactivex.annotations.SchedulerSupport: java.lang.String NONE
com.example.revolut.rates.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
kotlin.UByte: byte MAX_VALUE
kotlinx.coroutines.JobSupportKt: int ON_CANCEL_MAKE_COMPLETING
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String)
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSink sink
androidx.constraintlayout.widget.ConstraintLayout: void removeView(android.view.View)
io.reactivex.internal.disposables.DisposableHelper: io.reactivex.internal.disposables.DisposableHelper valueOf(java.lang.String)
kotlin.ranges.CharProgression: boolean isEmpty()
okio.Buffer
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: int lastIndexOf(double)
io.reactivex.internal.operators.observable.ObservableIntervalRange: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.single.SingleTimeout: SingleTimeout(io.reactivex.SingleSource,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,io.reactivex.SingleSource)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapIndexedNotNullTo$1: ChannelsKt__Channels_commonKt$mapIndexedNotNullTo$1(kotlin.coroutines.Continuation)
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionModeStyle
kotlin.text.StringsKt__StringsKt: java.lang.String removePrefix(java.lang.String,java.lang.CharSequence)
androidx.loader.R$id: int notification_main_column
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$2: void resumeWithException(java.lang.Throwable)
io.reactivex.Observable: io.reactivex.Observable flatMapMaybe(io.reactivex.functions.Function,boolean)
androidx.fragment.app.FragmentTransaction: int TRANSIT_FRAGMENT_FADE
okhttp3.FormBody: java.lang.String encodedValue(int)
androidx.lifecycle.AndroidViewModel: android.app.Application getApplication()
androidx.core.app.NotificationCompat$InboxStyle: NotificationCompat$InboxStyle()
io.reactivex.Flowable: java.lang.Object blockingLast()
kotlin.io.LinesSequence$iterator$1: void remove()
com.example.revolut.rates.R: R()
androidx.databinding.PropertyChangeRegistry
com.example.revolut.rates.R$id: int none
org.intellij.lang.annotations.MagicConstant
androidx.appcompat.R$style: int Base_DialogWindowTitleBackground_AppCompat
androidx.databinding.InverseBindingAdapter: java.lang.String event()
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable compose(io.reactivex.parallel.ParallelTransformer)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(int[],int,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short random-s5X_as8(short[],kotlin.random.Random)
androidx.databinding.CallbackRegistry: java.util.ArrayList copyCallbacks()
androidx.databinding.ViewDataBinding: short getFromArray(short[],int)
kotlin.sequences.DropSequence$iterator$1: java.lang.Object next()
androidx.appcompat.app.AppCompatDialog: void invalidateOptionsMenu()
io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,org.reactivestreams.Publisher)
kotlin.concurrent.LocksKt
androidx.appcompat.app.ActionBar$LayoutParams: int gravity
kotlinx.coroutines.scheduling.CoroutineScheduler: void access$decrementBlockingWorkers(kotlinx.coroutines.scheduling.CoroutineScheduler)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
io.reactivex.internal.operators.observable.ObservableLastSingle: ObservableLastSingle(io.reactivex.ObservableSource,java.lang.Object)
androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$1: TransitionKt$doOnEnd$$inlined$addListener$1(kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int PopupWindow_android_popupAnimationStyle
androidx.collection.LongSparseArray: boolean isEmpty()
kotlin.text.RegexKt: kotlin.ranges.IntRange access$range(java.util.regex.MatchResult,int)
androidx.appcompat.R$attr: int progressBarStyle
androidx.fragment.app.Fragment$SavedState
dagger.android.support.DaggerAppCompatActivity: DaggerAppCompatActivity()
com.example.revolut.rates.R$styleable: int GradientColor_android_centerX
com.example.revolut.rates.R$string: int abc_prepend_shortcut_label
androidx.swiperefreshlayout.widget.CircularProgressDrawable: boolean isRunning()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(short[],kotlin.jvm.functions.Function1)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float)
androidx.fragment.app.FragmentActivity: void onPostResume()
com.jakewharton.rxbinding3.widget.RxAdapter: com.jakewharton.rxbinding3.InitialValueObservable dataChanges(android.widget.Adapter)
okhttp3.internal.http2.Http2Connection: int maxConcurrentStreams()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String getFileName()
com.example.revolut.rates.R$string: int abc_font_family_headline_material
io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource)
io.reactivex.internal.operators.single.SingleToObservable: void subscribeActual(io.reactivex.Observer)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1(java.lang.Object[])
androidx.core.database.CursorKt: java.lang.String getStringOrNull(android.database.Cursor,int)
io.reactivex.internal.operators.observable.ObservableReplay: io.reactivex.observables.ConnectableObservable observeOn(io.reactivex.observables.ConnectableObservable,io.reactivex.Scheduler)
com.example.revolut.rates.R$string: int abc_activity_chooser_view_see_all
kotlin.coroutines.EmptyCoroutineContext: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableTakeUntil: void subscribeActual(io.reactivex.Observer)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6
androidx.appcompat.R$style: int Platform_ThemeOverlay_AppCompat_Dark
kotlin.collections.ArraysKt___ArraysKt: boolean none(short[])
kotlin.reflect.KTypeParameter
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(double[],kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: long serialVersionUID
dagger.android.support.R$style: int Base_Widget_AppCompat_ListMenuView
androidx.appcompat.view.WindowCallbackWrapper: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)
kotlin.jvm.internal.TypeIntrinsics: java.util.List asMutableList(java.lang.Object,java.lang.String)
io.reactivex.Maybe: io.reactivex.Maybe compose(io.reactivex.MaybeTransformer)
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver$InnerObserver: long serialVersionUID
io.reactivex.disposables.Disposables: io.reactivex.disposables.Disposable fromRunnable(java.lang.Runnable)
kotlin.jvm.internal.MutablePropertyReference1Impl: void set(java.lang.Object,java.lang.Object)
androidx.databinding.ViewDataBinding: void setTo(java.util.Map,java.lang.Object,java.lang.Object)
androidx.fragment.app.Fragment: void unregisterForContextMenu(android.view.View)
okhttp3.CacheControl: int maxAgeSeconds()
kotlin.UInt: int unbox-impl()
io.reactivex.subjects.MaybeSubject: io.reactivex.subjects.MaybeSubject create()
androidx.legacy.coreutils.R$layout: int notification_template_custom_big
kotlin.annotation.Target
androidx.recyclerview.widget.RecyclerView: void invalidateItemDecorations()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setChecked(boolean)
okio.Options: okio.Options of(okio.ByteString[])
okio.BufferedSource: int read(byte[])
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map mapOf(kotlin.Pair)
androidx.appcompat.R$attr: int submitBackground
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable: MaybeDelayWithCompletable(io.reactivex.MaybeSource,io.reactivex.CompletableSource)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addPage(android.app.Notification)
androidx.core.text.LocaleKt: int getLayoutDirection(java.util.Locale)
kotlin.io.AccessDeniedException: AccessDeniedException(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
dagger.android.support.R$id: int image
kotlin.collections.EmptySet: java.util.Iterator iterator()
androidx.appcompat.R$styleable: int GradientColor_android_type
io.reactivex.Observable: io.reactivex.Observable timer(long,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)
dagger.android.support.R$id: int disableHome
androidx.customview.R$dimen: int notification_right_icon_size
androidx.appcompat.widget.DropDownListView: boolean hasWindowFocus()
androidx.recyclerview.widget.LinearLayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()
androidx.core.provider.FontsContractCompat$FontRequestCallback: FontsContractCompat$FontRequestCallback()
okhttp3.internal.connection.RouteSelector$Selection: boolean hasNext()
okio.Buffer: long writeAll(okio.Source)
androidx.core.app.NotificationCompat$Action: java.lang.CharSequence title
androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)
kotlinx.coroutines.JobSupport$HandleExceptionOp
androidx.slidingpanelayout.R$styleable: int GradientColorItem_android_color
kotlinx.coroutines.AbstractContinuationKt
androidx.constraintlayout.solver.widgets.WidgetContainer: androidx.constraintlayout.solver.widgets.Rectangle getBounds(java.util.ArrayList)
androidx.versionedparcelable.VersionedParcel: boolean readBoolean()
androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()
androidx.media.R$style: int TextAppearance_Compat_Notification_Title_Media
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void start()
kotlin.text.StringsKt___StringsKt: java.lang.Character lastOrNull(java.lang.CharSequence)
androidx.viewpager.R$id: int action_divider
androidx.appcompat.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(char[])
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.Person getUser()
okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String)
androidx.core.util.Pair: androidx.core.util.Pair create(java.lang.Object,java.lang.Object)
okhttp3.internal.http.RealResponseBody: long contentLength()
androidx.appcompat.app.ActionBar$Tab: android.graphics.drawable.Drawable getIcon()
okhttp3.Cache: void initialize()
kotlinx.coroutines.sync.Mutex$DefaultImpls
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(int)
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getActionItems()
kotlin.collections.UArraysKt: java.lang.String contentToString-rL5Bavg(short[])
kotlin.text.StringsKt___StringsKt: char single(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte minWith-XMRcp5o(byte[],java.util.Comparator)
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder addCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction)
io.reactivex.Observable: io.reactivex.Observable concatMapSingleDelayError(io.reactivex.functions.Function,boolean)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: long serialVersionUID
androidx.versionedparcelable.VersionedParcel: java.util.Set readSet(java.util.Set,int)
androidx.core.view.ViewCompat: boolean hasAccessibilityDelegate(android.view.View)
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT
androidx.appcompat.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])
androidx.appcompat.widget.DecorToolbar: void setLogo(int)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
androidx.appcompat.widget.ListPopupWindow: int getPromptPosition()
androidx.core.transition.TransitionKt$addListener$listener$1: void onTransitionResume(android.transition.Transition)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_PROGRESS_VALUE
androidx.media.MediaBrowserServiceCompat: void onSubscribe(java.lang.String,android.os.Bundle)
androidx.fragment.R$dimen: int notification_top_pad_large_text
androidx.databinding.adapters.SwitchCompatBindingAdapter: SwitchCompatBindingAdapter()
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(java.lang.Object[],java.lang.Object)
androidx.appcompat.R$styleable: int GradientColor_android_gradientRadius
kotlinx.coroutines.channels.ReceiveChannel
kotlin.io.FilesKt__FileReadWriteKt: java.lang.String readText(java.io.File,java.nio.charset.Charset)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(long[],kotlin.jvm.functions.Function1)
androidx.asynclayoutinflater.R$attr: int fontVariationSettings
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: io.reactivex.observers.BaseTestConsumer$TestWaitStrategy SLEEP_100MS
androidx.fragment.app.FragmentTransaction: int TRANSIT_EXIT_MASK
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
androidx.recyclerview.widget.DividerItemDecoration: DividerItemDecoration(android.content.Context,int)
com.google.gson.internal.LinkedHashTreeMap: LinkedHashTreeMap(java.util.Comparator)
io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer)
io.reactivex.internal.operators.single.SingleEquals: void subscribeActual(io.reactivex.SingleObserver)
com.google.gson.internal.bind.ObjectTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
dagger.android.support.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
io.reactivex.processors.BehaviorProcessor$BehaviorSubscription: long serialVersionUID
io.reactivex.subscribers.ResourceSubscriber: void add(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableFromArray$ArraySubscription: long serialVersionUID
androidx.appcompat.widget.ActionMenuView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
io.reactivex.Flowable: io.reactivex.Flowable distinct()
androidx.core.view.ViewCompat: void setKeyboardNavigationCluster(android.view.View,boolean)
androidx.core.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)
dagger.android.support.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
io.reactivex.internal.operators.flowable.FlowableCombineLatest: FlowableCombineLatest(org.reactivestreams.Publisher[],io.reactivex.functions.Function,int,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable getCurrent()
io.reactivex.disposables.CompositeDisposable: void clear()
com.example.revolut.rates.R$styleable: int ViewBackgroundHelper_backgroundTintMode
io.reactivex.subjects.PublishSubject: boolean hasObservers()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable: io.reactivex.Flowable fuseToFlowable()
androidx.fragment.R$styleable: int[] ColorStateListItem
androidx.recyclerview.widget.SortedList$BatchedCallback: SortedList$BatchedCallback(androidx.recyclerview.widget.SortedList$Callback)
androidx.annotation.StyleableRes
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_PopupWindow
okhttp3.internal.http.RealInterceptorChain: okhttp3.Connection connection()
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setCircular(boolean)
dagger.android.DispatchingAndroidInjector_Factory: dagger.android.DispatchingAndroidInjector get()
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
io.reactivex.internal.operators.flowable.FlowableFromFuture: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.R$attr: int navigationIcon
kotlin.collections.EmptySet: boolean contains(java.lang.Void)
androidx.appcompat.view.WindowCallbackWrapper: void onActionModeFinished(android.view.ActionMode)
dagger.android.support.R$style: int Widget_AppCompat_Spinner_DropDown
io.reactivex.internal.operators.parallel.ParallelFilterTry
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_TITLE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getWindowId()
androidx.appcompat.app.ActionBar: boolean collapseActionView()
io.reactivex.Completable: io.reactivex.Single toSingle(java.util.concurrent.Callable)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
com.google.gson.internal.PreJava9DateFormatProvider
androidx.recyclerview.R$color: int notification_icon_bg_color
io.reactivex.Flowable: io.reactivex.Flowable doAfterTerminate(io.reactivex.functions.Action)
androidx.core.view.ViewKt: boolean isVisible(android.view.View)
kotlinx.coroutines.EventLoop$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.EventLoop,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setAllowFreeFormInput(boolean)
androidx.core.util.HalfKt: android.util.Half toHalf(double)
io.reactivex.Scheduler: io.reactivex.disposables.Disposable schedulePeriodicallyDirect(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
androidx.databinding.adapters.ViewBindingAdapter: void setOnClick(android.view.View,android.view.View$OnClickListener,boolean)
kotlin.jvm.internal.ShortCompanionObject: kotlin.jvm.internal.ShortCompanionObject INSTANCE
com.jakewharton.rxbinding3.core.R$id: int text
androidx.core.graphics.RectKt: android.graphics.Region toRegion(android.graphics.Rect)
androidx.core.app.ShareCompat$IntentReader: android.net.Uri getStream(int)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Iterable withIndex--ajY-9A(int[])
androidx.loader.R$styleable: int GradientColor_android_startColor
dagger.android.support.R$style: int Base_Widget_AppCompat_Spinner_Underlined
androidx.viewpager.R$styleable: int GradientColorItem_android_color
androidx.core.graphics.BitmapKt: android.graphics.Bitmap createBitmap$default(int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace,int,java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(float[])
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_SearchView
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener
kotlinx.coroutines.scheduling.TasksKt: kotlinx.coroutines.scheduling.TimeSource schedulerTimeSource
io.reactivex.internal.operators.observable.ObservableFlatMap
android.support.v4.media.session.PlaybackStateCompat$State
androidx.core.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_NO
androidx.constraintlayout.widget.R$attr: int layout_constraintVertical_weight
io.reactivex.plugins.RxJavaPlugins: boolean onBeforeBlocking()
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])
com.example.revolut.rates.R$mipmap: int ic_launcher
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(char[])
androidx.appcompat.view.menu.MenuAdapter
androidx.appcompat.R$dimen: int abc_search_view_preferred_height
io.reactivex.Maybe: io.reactivex.Single materialize()
kotlin.random.RandomKt: int nextInt(kotlin.random.Random,kotlin.ranges.IntRange)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-c0bezYM(byte[],kotlin.ranges.IntRange)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object associateByTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Map,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent: java.lang.String toString()
com.example.revolut.rates.R$string: int abc_toolbar_collapse_description
kotlin.sequences.TransformingIndexedSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingIndexedSequence)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
androidx.swiperefreshlayout.R$attr: int fontProviderQuery
io.reactivex.internal.operators.single.SingleHide: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.view.menu.MenuItemImpl: boolean shouldShowIcon()
androidx.constraintlayout.widget.R$attr: int chainUseRtl
okio.Buffer: okio.BufferedSink write(okio.Source,long)
kotlinx.coroutines.NotCompleted
com.jakewharton.rxbinding3.view.RxViewGroup: io.reactivex.Observable changeEvents(android.view.ViewGroup)
io.reactivex.internal.operators.parallel.ParallelConcatMap: void subscribe(org.reactivestreams.Subscriber[])
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode valueOf(java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: boolean contains(int)
io.reactivex.internal.operators.single.SingleDoOnEvent: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.Single: io.reactivex.Single doOnSuccess(io.reactivex.functions.Consumer)
androidx.recyclerview.R$attr: int coordinatorLayoutStyle
androidx.customview.R$dimen: int notification_small_icon_background_padding
kotlin.coroutines.experimental.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.experimental.CoroutineContext plus(kotlin.coroutines.experimental.ContinuationInterceptor,kotlin.coroutines.experimental.CoroutineContext)
kotlin.io.SerializableKt: void Serializable$annotations()
kotlin.collections.ArraysKt___ArraysKt: float[] sliceArray(float[],java.util.Collection)
okhttp3.Authenticator
dagger.android.support.R$styleable: int ActionBar_indeterminateProgressStyle
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainNoLast: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableTimeInterval
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KMutableProperty$Setter getSetter()
androidx.recyclerview.widget.RecyclerView: int getScrollState()
androidx.core.app.NotificationCompat$Builder: android.app.Notification build()
com.example.revolut.rates.R$styleable: int TextAppearance_android_shadowDy
androidx.recyclerview.widget.ListUpdateCallback: void onInserted(int,int)
okhttp3.OkHttpClient: java.util.List interceptors()
androidx.databinding.ViewDataBinding: android.content.res.ColorStateList getColorStateListFromResource(android.view.View,int)
io.reactivex.Completable: io.reactivex.Completable merge(org.reactivestreams.Publisher,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double max(double[])
androidx.appcompat.R$style: int Widget_AppCompat_ActionButton
io.reactivex.internal.operators.maybe.MaybeUsing: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.Flowable: io.reactivex.Single toMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)
kotlin.collections.ArraysKt___ArraysKt: double average(double[])
kotlinx.coroutines.Job$Key
io.reactivex.android.MainThreadDisposable: void onDispose()
com.example.revolut.rates.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(org.reactivestreams.Publisher[],io.reactivex.functions.Function)
androidx.fragment.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.ActionProvider getActionProvider()
com.google.gson.JsonParser: JsonParser()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Body2
io.reactivex.Observable: io.reactivex.Observable concatEager(io.reactivex.ObservableSource,int,int)
com.example.revolut.rates.R$attr: int arrowHeadLength
androidx.recyclerview.widget.SortedListAdapterCallback: void onInserted(int,int)
io.reactivex.functions.Function3
kotlinx.coroutines.EventLoopKt: kotlinx.coroutines.CoroutineDispatcher EventLoop$default(java.lang.Thread,kotlinx.coroutines.Job,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(boolean[],kotlin.jvm.functions.Function2)
androidx.appcompat.R$string: int abc_searchview_description_voice
kotlinx.coroutines.CancellableContinuation: boolean isActive()
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(float[])
io.reactivex.internal.util.QueueDrainHelper: io.reactivex.internal.fuseable.SimpleQueue createQueue(int)
androidx.appcompat.view.menu.MenuBuilder: boolean hasVisibleItems()
androidx.appcompat.widget.MenuPopupWindow: void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
kotlin.math.MathKt__MathJVMKt: void absoluteValue$annotations(int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object first(java.util.List)
androidx.core.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[],int)
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarDivider
androidx.core.app.NotificationCompat$Action: int getIcon()
androidx.collection.SimpleArrayMap: boolean isEmpty()
io.reactivex.processors.MulticastProcessor: void onSubscribe(org.reactivestreams.Subscription)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isVerticalAnchor()
com.example.revolut.rates.R$dimen: int hint_alpha_material_light
dagger.android.support.R$styleable: int AppCompatTheme_actionBarPopupTheme
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: java.lang.String toString()
androidx.appcompat.R$style: int TextAppearance_Compat_Notification_Info
com.example.revolut.rates.R$id: int src_over
kotlin.collections.CollectionsKt___CollectionsKt: double averageOfDouble(java.lang.Iterable)
androidx.legacy.coreui.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.loader.R$styleable: int GradientColor_android_type
dagger.android.support.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
dagger.android.support.R$attr: int ratingBarStyleIndicator
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(short[])
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$attr: int colorButtonNormal
com.example.revolut.rates.RatesApp: void setRetrofit(retrofit2.Retrofit)
dagger.android.DaggerApplication_MembersInjector: void injectActivityInjector(dagger.android.DaggerApplication,dagger.android.DispatchingAndroidInjector)
androidx.recyclerview.widget.SortedList: void updateItemAt(int,java.lang.Object)
kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
okio.Utf8: long size(java.lang.String)
com.example.revolut.rates.R$color: int primaryTextColor
io.reactivex.internal.operators.completable.CompletableMergeIterable: CompletableMergeIterable(java.lang.Iterable)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REQUEST_FILTER_KEY_EVENTS
androidx.appcompat.app.AppCompatViewInflater
androidx.appcompat.R$drawable: int abc_seekbar_thumb_material
androidx.core.R$styleable: int FontFamilyFont_android_fontStyle
com.google.gson.internal.ConstructorConstructor: com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken)
io.reactivex.flowables.ConnectableFlowable: ConnectableFlowable()
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport: void innerNext(io.reactivex.internal.subscribers.InnerQueuedSubscriber,java.lang.Object)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
kotlin.jvm.KotlinReflectionNotSupportedError: KotlinReflectionNotSupportedError(java.lang.String)
androidx.core.internal.view.SupportMenu: int SUPPORTED_MODIFIERS_MASK
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setHintLaunchesActivity(boolean)
com.example.revolut.rates.R$attr: int tooltipFrameBackground
androidx.core.view.NestedScrollingParent: void onNestedScroll(android.view.View,int,int,int,int)
io.reactivex.observers.DisposableMaybeObserver: void dispose()
androidx.fragment.app.DialogFragment: void setupDialog(android.app.Dialog,int)
kotlin.text.StringsKt__StringsKt: java.lang.String trimEnd(java.lang.String,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.PopupMenu: android.view.View$OnTouchListener getDragToOpenListener()
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(int)
io.reactivex.internal.operators.flowable.FlowableDoFinally: FlowableDoFinally(io.reactivex.Flowable,io.reactivex.functions.Action)
okio.Source: void close()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void runPendingAnimations()
io.reactivex.internal.subscribers.StrictSubscriber: void onComplete()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)
io.reactivex.internal.operators.completable.CompletableCache: void onComplete()
kotlinx.coroutines.TimeSourceKt: void setTimeSource(kotlinx.coroutines.TimeSource)
androidx.appcompat.view.menu.MenuItemImpl: int getOrder()
androidx.appcompat.widget.DropDownListView: boolean hasFocus()
androidx.recyclerview.R$styleable: int ColorStateListItem_android_color
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: java.lang.Object delay(long,java.util.concurrent.TimeUnit,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object indexOfFirst(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_PopupMenu
androidx.loader.R$attr: int fontProviderFetchStrategy
androidx.recyclerview.R$styleable: int FontFamily_fontProviderQuery
androidx.core.R$layout: int notification_template_custom_big
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY
io.reactivex.internal.subscriptions.EmptySubscription: io.reactivex.internal.subscriptions.EmptySubscription[] values()
kotlin.coroutines.RestrictsSuspension
androidx.core.os.HandlerKt: java.lang.Runnable postAtTime(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0)
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getEmptyLocaleList()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.CharRange until(char,char)
com.example.revolut.rates.R$drawable: int abc_list_selector_background_transition_holo_light
kotlin.ULongArray
com.example.revolut.rates.R$styleable: int ActionBar_indeterminateProgressStyle
io.reactivex.internal.subscriptions.SubscriptionArbiter: long serialVersionUID
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort min-rL5Bavg(short[])
androidx.appcompat.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
androidx.coordinatorlayout.R$styleable: int GradientColor_android_startX
kotlinx.coroutines.channels.ArrayBroadcastChannel: kotlinx.coroutines.channels.ReceiveChannel openSubscription()
androidx.media.R$string: int status_bar_notification_info_overflow
androidx.core.ktx.R$dimen: int notification_action_icon_size
androidx.constraintlayout.widget.ConstraintSet: void constrainPercentHeight(int,float)
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe: ObservableConcatMapMaybe(io.reactivex.Observable,io.reactivex.functions.Function,io.reactivex.internal.util.ErrorMode,int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
io.reactivex.internal.fuseable.ConditionalSubscriber: boolean tryOnNext(java.lang.Object)
androidx.constraintlayout.widget.Constraints$LayoutParams: float elevation
androidx.appcompat.view.WindowCallbackWrapper: android.view.View onCreatePanelView(int)
kotlin.reflect.KCallable: boolean isOpen()
com.jakewharton.rxbinding3.widget.TextViewAfterTextChangeEvent: android.widget.TextView component1()
androidx.annotation.AttrRes
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String)
androidx.appcompat.view.SupportMenuInflater
io.reactivex.Single: io.reactivex.Single fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)
androidx.core.app.NotificationCompat$WearableExtender: int SCREEN_TIMEOUT_LONG
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.R$styleable: int Toolbar_logo
com.jakewharton.rxbinding3.widget.SeekBarStartChangeEvent: boolean equals(java.lang.Object)
com.example.revolut.rates.R$color: int color_grey_300
kotlin.jvm.internal.Ref$IntRef: java.lang.String toString()
io.reactivex.internal.operators.flowable.FlowableObserveOn: FlowableObserveOn(io.reactivex.Flowable,io.reactivex.Scheduler,boolean,int)
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe: FlowableSwitchMapMaybe(io.reactivex.Flowable,io.reactivex.functions.Function,boolean)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object mapIndexedNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Menu
androidx.loader.app.LoaderManager$LoaderCallbacks: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)
androidx.appcompat.app.AlertDialog: void setIcon(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat: int MEASURED_SIZE_MASK
androidx.core.view.ViewCompat: int getMinimumHeight(android.view.View)
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: void releaseInterceptedContinuation(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.Continuation)
dagger.android.support.R$attr: int theme
io.reactivex.internal.operators.flowable.FlowableSingleMaybe: io.reactivex.Flowable fuseToFlowable()
androidx.appcompat.graphics.drawable.DrawableContainer: boolean getPadding(android.graphics.Rect)
io.reactivex.Completable: io.reactivex.Completable timer(long,java.util.concurrent.TimeUnit)
androidx.core.view.MenuItemCompat$OnActionExpandListener: boolean onMenuItemActionExpand(android.view.MenuItem)
androidx.appcompat.widget.ActionBarOverlayLayout: void onConfigurationChanged(android.content.res.Configuration)
dagger.android.support.R$drawable: int abc_scrubber_control_off_mtrl_alpha
com.example.revolut.rates.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context)
androidx.fragment.app.FragmentController: void reportLoaderStart()
retrofit2.Retrofit: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[])
androidx.core.widget.ScrollerCompat: float getCurrVelocity()
androidx.constraintlayout.widget.Constraints$LayoutParams: Constraints$LayoutParams(androidx.constraintlayout.widget.Constraints$LayoutParams)
com.example.revolut.rates.R$styleable: int[] CompoundButton
kotlin.jvm.functions.Function9: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
okhttp3.internal.cache.DiskLruCache: void setMaxSize(long)
androidx.databinding.ObservableLong: ObservableLong()
androidx.constraintlayout.widget.ConstraintLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.loader.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.R$styleable: int TextAppearance_android_shadowDy
androidx.viewpager.R$attr: int ttcIndex
androidx.databinding.ViewDataBinding: void executeBindings()
androidx.customview.R$color: int notification_icon_bg_color
com.example.revolut.rates.R$drawable: int abc_action_bar_item_background_material
androidx.databinding.adapters.AbsListViewBindingAdapter$OnScroll
androidx.slidingpanelayout.R$dimen: int notification_big_circle_margin
kotlin.UIntArray: void set-VXSXFK8(int[],int,int)
com.example.revolut.rates.R$drawable: int icon_isk
io.reactivex.internal.operators.observable.ObservableIntervalRange$IntervalRangeObserver: long serialVersionUID
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
dagger.android.support.R$style: int ThemeOverlay_AppCompat_Light
kotlin.random.Random: int nextBits(int)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$all$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.R$styleable: int[] ColorStateListItem
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionProvider(android.view.ActionProvider)
kotlin.text.DelimitedRangesSequence$iterator$1: int getNextSearchIndex()
androidx.collection.ArraySet: void addAll(androidx.collection.ArraySet)
io.reactivex.internal.subscriptions.DeferredScalarSubscription: org.reactivestreams.Subscriber downstream
androidx.appcompat.R$styleable: int MenuItem_android_title
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorIterable: CompletableMergeDelayErrorIterable(java.lang.Iterable)
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context)
com.example.revolut.rates.R$color: int abc_btn_colored_borderless_text_material
androidx.appcompat.widget.SearchView$OnQueryTextListener: boolean onQueryTextChange(java.lang.String)
androidx.fragment.R
androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()
androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.ListPopupWindow: void setContentWidth(int)
kotlin.collections.ArraysKt___ArraysJvmKt: float[] copyInto$default(float[],float[],int,int,int,int,java.lang.Object)
dagger.android.support.R$drawable: int abc_list_selector_disabled_holo_dark
androidx.core.view.MenuKt: boolean isNotEmpty(android.view.Menu)
io.reactivex.Flowable: io.reactivex.Flowable timestamp()
kotlin.reflect.KClass: boolean isInner()
androidx.legacy.coreutils.R$layout: int notification_template_part_time
androidx.core.ktx.R$id: int tag_transition_group
dagger.android.support.R$id: int customPanel
androidx.core.util.SparseBooleanArrayKt$keyIterator$1: int nextInt()
androidx.appcompat.R$attr: int windowFixedHeightMinor
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(byte[])
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_ARRAY
com.example.revolut.rates.R$attr: int layout_optimizationLevel
androidx.swiperefreshlayout.R$styleable: int FontFamily_fontProviderQuery
io.reactivex.Flowable: io.reactivex.Single toList(java.util.concurrent.Callable)
androidx.core.ktx.R$styleable: int ColorStateListItem_alpha
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setBot(boolean)
kotlin.collections.AbstractMap: boolean containsKey(java.lang.Object)
androidx.customview.R$styleable: int GradientColorItem_android_offset
dagger.internal.SetFactory: dagger.internal.Factory empty()
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(double[])
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: long serialVersionUID
kotlin.sequences.SequencesKt___SequencesKt: int sumOfShort(kotlin.sequences.Sequence)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
io.reactivex.Notification
androidx.media.VolumeProviderCompat$ControlType
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: float getInterpolation(float)
kotlin.jvm.internal.ClassReference: void typeParameters$annotations()
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_REMINDER
androidx.appcompat.widget.LinearLayoutCompat: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
okio.BufferedSource: boolean request(long)
io.reactivex.observers.TestObserver
io.reactivex.internal.functions.Functions: io.reactivex.functions.Consumer emptyConsumer()
io.reactivex.internal.operators.observable.ObservableFromCallable: java.lang.Object call()
kotlinx.coroutines.AwaitKt: java.lang.Object joinAll(kotlinx.coroutines.Job[],kotlin.coroutines.Continuation)
kotlin.jvm.JvmField
kotlinx.coroutines.CoroutineContextKt: java.lang.String DEBUG_PROPERTY_NAME
androidx.appcompat.widget.DecorToolbar: android.content.Context getContext()
androidx.constraintlayout.solver.Metrics: long fullySolved
androidx.vectordrawable.R$id: int info
androidx.appcompat.widget.ViewUtils
io.reactivex.internal.queue.MpscLinkedQueue: boolean offer(java.lang.Object,java.lang.Object)
androidx.core.view.ViewKt: void updatePadding$default(android.view.View,int,int,int,int,int,java.lang.Object)
dagger.android.support.R$styleable: int ActionBar_popupTheme
android.support.v4.media.session.PlaybackStateCompat: long ACTION_SEEK_TO
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: ConstraintLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_Switch
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getTextSelectionEnd()
io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,int)
kotlin.text.StringsKt___StringsKt: char first(java.lang.CharSequence,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$attr: int fontProviderFetchTimeout
kotlin.UIntArray: boolean contains-WZ4Q5Ns(int)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintVertical_weight
androidx.core.view.ViewCompat: void setTranslationZ(android.view.View,float)
androidx.media.R$dimen: int notification_right_side_padding_top
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigDecimal toBigDecimalOrNull(java.lang.String,java.math.MathContext)
androidx.appcompat.R$id: int list_item
com.google.gson.stream.JsonWriter: void setSerializeNulls(boolean)
io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
androidx.appcompat.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
androidx.versionedparcelable.ParcelImpl: int describeContents()
io.reactivex.internal.operators.flowable.FlowableScanSeed: FlowableScanSeed(io.reactivex.Flowable,java.util.concurrent.Callable,io.reactivex.functions.BiFunction)
io.reactivex.plugins.RxJavaPlugins: void setOnMaybeSubscribe(io.reactivex.functions.BiFunction)
androidx.recyclerview.widget.LinearSnapHelper: int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
okhttp3.internal.platform.ConscryptPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
androidx.lifecycle.LifecycleRegistryOwner: androidx.lifecycle.LifecycleRegistry getLifecycle()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapIndexedNotNullTo$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.EventLoopBase$DelayedTask: int getState()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(char[],java.util.Comparator)
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda
io.reactivex.internal.subscriptions.EmptySubscription: boolean offer(java.lang.Object)
io.reactivex.Maybe
androidx.drawerlayout.R$attr: int fontProviderFetchStrategy
androidx.constraintlayout.solver.ArrayRow: void addError(androidx.constraintlayout.solver.SolverVariable)
androidx.viewpager.R$styleable: int FontFamily_fontProviderAuthority
io.reactivex.subjects.ReplaySubject: java.lang.Object[] getValues(java.lang.Object[])
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean supportsPredictiveItemAnimations()
io.reactivex.functions.Action
androidx.appcompat.R$id: int titleDividerNoCustom
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(short[],java.lang.Iterable,kotlin.jvm.functions.Function2)
androidx.viewpager.R$dimen: int compat_button_inset_vertical_material
androidx.appcompat.app.ActionBarDrawerToggle$Delegate: android.content.Context getActionBarThemedContext()
kotlin.text.StringsKt__StringsKt$iterator$1: boolean hasNext()
androidx.fragment.app.FragmentTransaction: void commitNowAllowingStateLoss()
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: FontResourcesParserCompat$ProviderResourceEntry(androidx.core.provider.FontRequest,int,int)
io.reactivex.internal.operators.observable.ObservableTakeLast: void subscribeActual(io.reactivex.Observer)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object receiveOrNull(kotlin.coroutines.Continuation)
com.jakewharton.rxbinding3.core.R$style: int Widget_Compat_NotificationActionText
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable layoutChangeEvents(android.view.View)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry
com.example.revolut.rates.R$styleable: int Toolbar_contentInsetStart
androidx.core.view.ViewCompat: float getTranslationX(android.view.View)
androidx.constraintlayout.widget.ConstraintLayout: void onViewAdded(android.view.View)
okio.BufferedSink: okio.BufferedSink write(okio.Source,long)
io.reactivex.internal.observers.BlockingLastObserver: BlockingLastObserver()
kotlin.collections.MapsKt__MapsKt: java.util.Map filterNot(java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
dagger.android.support.R$color: int bright_foreground_material_dark
dagger.android.support.R$anim: int abc_slide_in_bottom
io.reactivex.internal.operators.observable.ObservableInternalHelper: io.reactivex.functions.Function flatMapIntoIterable(io.reactivex.functions.Function)
kotlin.io.FilesKt__UtilsKt: boolean endsWith(java.io.File,java.lang.String)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[])
kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String[] s()
androidx.appcompat.view.menu.MenuBuilder: int findItemIndex(int)
dagger.android.support.R$style: int ThemeOverlay_AppCompat
io.reactivex.internal.schedulers.ScheduledDirectTask: ScheduledDirectTask(java.lang.Runnable)
dagger.android.support.R$style: int Theme_AppCompat_CompactMenu
androidx.appcompat.R$style
kotlin.UIntArray: int getSize-impl(int[])
kotlin.text.StringsKt___StringsKt: java.lang.String dropLastWhile(java.lang.String,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int RecycleListView_paddingTopNoTitle
io.reactivex.internal.operators.maybe.MaybeDoOnTerminate
androidx.annotation.RequiresPermission: java.lang.String[] allOf()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfUByte(kotlin.UByte[])
io.reactivex.Flowable: io.reactivex.Flowable concatWith(io.reactivex.MaybeSource)
androidx.loader.content.Loader$OnLoadCompleteListener
okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isAutoMirrored()
com.jakewharton.rxbinding3.core.R$styleable: int[] ColorStateListItem
kotlin.sequences.TakeWhileSequence$iterator$1: void remove()
dagger.releasablereferences.TypedReleasableReferenceManager
androidx.appcompat.app.ActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
kotlinx.coroutines.ResumeModeKt: int MODE_UNDISPATCHED
androidx.recyclerview.R$style: int Widget_Support_CoordinatorLayout
androidx.recyclerview.widget.PagerSnapHelper: PagerSnapHelper()
androidx.vectordrawable.R$style: int TextAppearance_Compat_Notification_Title
io.reactivex.internal.operators.parallel.ParallelFlatMap: int parallelism()
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe: FlowableMergeWithMaybe(io.reactivex.Flowable,io.reactivex.MaybeSource)
androidx.loader.app.LoaderManager: androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
dagger.android.support.R$styleable: int SwitchCompat_android_thumb
androidx.core.view.ViewCompat: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.core.util.SparseIntArrayKt: int getOrElse(android.util.SparseIntArray,int,kotlin.jvm.functions.Function0)
androidx.lifecycle.ServiceLifecycleDispatcher: androidx.lifecycle.Lifecycle getLifecycle()
android.support.v4.media.MediaBrowserCompat$MediaItem
androidx.core.util.SparseIntArrayKt: int getOrDefault(android.util.SparseIntArray,int,int)
io.reactivex.internal.operators.flowable.FlowableCache$CacheSubscription: long serialVersionUID
androidx.constraintlayout.widget.Placeholder
androidx.core.app.NotificationCompat$WearableExtender: java.lang.Object clone()
androidx.customview.R$layout: int notification_template_icon_group
androidx.constraintlayout.widget.ConstraintSet: void removeFromVerticalChain(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.AbstractMutableList: java.lang.Object set(int,java.lang.Object)
androidx.databinding.adapters.ViewBindingAdapter$OnViewDetachedFromWindow: void onViewDetachedFromWindow(android.view.View)
com.example.revolut.rates.data.model.Rate: java.lang.String component1()
com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent: TextViewTextChangeEvent(android.widget.TextView,java.lang.CharSequence,int,int,int)
dagger.android.support.R$drawable: int abc_seekbar_track_material
androidx.constraintlayout.solver.widgets.ConstraintWidget: int MATCH_CONSTRAINT_RATIO_RESOLVED
androidx.customview.widget.FocusStrategy$CollectionAdapter: int size(java.lang.Object)
okhttp3.HttpUrl
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult
kotlin.experimental.ExperimentalTypeInference
androidx.constraintlayout.solver.widgets.ConstraintAnchor: void setConnectionType(androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType)
kotlin.io.ExceptionsKt: java.lang.String access$constructMessage(java.io.File,java.io.File,java.lang.String)
androidx.fragment.app.FragmentTransitionImpl: void setEpicenter(java.lang.Object,android.view.View)
kotlinx.coroutines.channels.AbstractSendChannel: void conflatePreviousSendBuffered(kotlinx.coroutines.internal.LockFreeLinkedListNode)
android.support.v4.media.session.MediaControllerCompatApi23$TransportControls
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(int,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)
androidx.constraintlayout.widget.ConstraintSet: void addToVerticalChain(int,int,int)
kotlin.io.FilePathComponents: int hashCode()
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableCompat
androidx.appcompat.app.AppCompatActivity: void onContentChanged()
androidx.appcompat.widget.DecorToolbar: boolean isOverflowMenuShowing()
androidx.fragment.app.Fragment$InstantiationException
androidx.recyclerview.widget.DiffUtil$ItemCallback: boolean areContentsTheSame(java.lang.Object,java.lang.Object)
androidx.appcompat.app.AppCompatActivity: void onDestroy()
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object getALREADY_REMOVED()
androidx.core.internal.view.SupportMenuItem
kotlinx.coroutines.test.TestCoroutineContext: long now(java.util.concurrent.TimeUnit)
kotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,java.lang.Iterable)
com.example.revolut.rates.R$attr: int layout_goneMarginBottom
kotlin.coroutines.ContinuationKt: kotlin.coroutines.Continuation createCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
io.reactivex.Flowable: io.reactivex.Flowable concatMapDelayError(io.reactivex.functions.Function,int,boolean)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(okhttp3.HttpUrl)
androidx.swiperefreshlayout.R$dimen: int notification_right_side_padding_top
androidx.lifecycle.extensions.R$string: int status_bar_notification_info_overflow
dagger.android.support.R$styleable: int LinearLayoutCompat_android_weightSum
androidx.fragment.R$id: int text
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintRight_creator
kotlinx.coroutines.channels.RendezvousChannel
androidx.appcompat.R$drawable: int notification_tile_bg
io.reactivex.internal.schedulers.ScheduledDirectTask: java.lang.Object call()
androidx.recyclerview.R$styleable: int GradientColor_android_type
androidx.core.app.NotificationCompat$BigTextStyle
androidx.loader.content.CursorLoader: void setSelection(java.lang.String)
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence windowedSequence(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1)
io.reactivex.Completable: io.reactivex.Completable fromAction(io.reactivex.functions.Action)
kotlin.text.UStringsKt: kotlin.UByte toUByteOrNull(java.lang.String)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getInternalDrawRight()
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expandable
androidx.recyclerview.widget.RecyclerView$SmoothScroller: int getTargetPosition()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Iterable requireNoNulls(java.lang.Iterable)
androidx.core.app.AlarmManagerCompat: void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent)
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: long serialVersionUID
androidx.constraintlayout.solver.SolverVariable: int id
androidx.legacy.v4.R$color: int primary_text_default_material_dark
dagger.android.support.R$styleable: int SwitchCompat_showText
kotlinx.coroutines.JobSupport: void registerSelectClause0(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function1)
dagger.android.support.DaggerFragment_MembersInjector: void injectChildFragmentInjector(dagger.android.support.DaggerFragment,dagger.android.DispatchingAndroidInjector)
androidx.core.view.MotionEventCompat: int AXIS_HAT_Y
okio.Buffer: okio.Buffer emitCompleteSegments()
io.reactivex.Flowable: io.reactivex.Flowable buffer(int,java.util.concurrent.Callable)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object foldIndexed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int)
androidx.appcompat.R$styleable: int MenuItem_alphabeticModifiers
kotlin.text.MatcherMatchResult$groupValues$1: boolean contains(java.lang.Object)
androidx.loader.R$id: int action_text
androidx.constraintlayout.widget.Constraints: Constraints(android.content.Context,android.util.AttributeSet)
androidx.legacy.v4.R$dimen: int notification_main_column_padding_top
com.google.gson.stream.JsonWriter: void setIndent(java.lang.String)
kotlin.jvm.internal.BooleanSpreadBuilder: int getSize(java.lang.Object)
androidx.databinding.ObservableBoolean: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
androidx.core.view.KeyEventDispatcher$Component: boolean superDispatchKeyEvent(android.view.KeyEvent)
androidx.constraintlayout.solver.widgets.ResolutionAnchor: int UNCONNECTED
dagger.android.HasBroadcastReceiverInjector: dagger.android.AndroidInjector broadcastReceiverInjector()
androidx.appcompat.app.ActionBar: void setLogo(int)
io.reactivex.internal.operators.completable.CompletableError: void subscribeActual(io.reactivex.CompletableObserver)
com.example.revolut.rates.R$styleable: int AppCompatTheme_alertDialogTheme
androidx.fragment.R$id: int tag_unhandled_key_listeners
io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)
androidx.core.ktx.R$attr: int fontProviderQuery
io.reactivex.Completable: void blockingAwait()
kotlin.collections.ArraysKt___ArraysKt: int count(short[],kotlin.jvm.functions.Function1)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: java.util.List getOutgoingEdges(java.lang.Object)
dagger.android.AndroidMemorySensitiveReferenceManager
androidx.arch.core.internal.FastSafeIterableMap: FastSafeIterableMap()
com.example.revolut.rates.R$attr: int title
androidx.cursoradapter.widget.ResourceCursorAdapter: void setDropDownViewResource(int)
okhttp3.internal.http.RealInterceptorChain: int readTimeoutMillis()
io.reactivex.internal.observers.EmptyCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.viewpager.R$drawable: int notification_bg_normal
androidx.appcompat.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
kotlinx.coroutines.InactiveNodeList: kotlinx.coroutines.NodeList getList()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
androidx.drawerlayout.R$style: int TextAppearance_Compat_Notification_Info
okio.DeflaterSink: DeflaterSink(okio.Sink,java.util.zip.Deflater)
kotlinx.coroutines.channels.ActorKt: kotlinx.coroutines.channels.ActorJob actor$default(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,java.lang.Object)
io.reactivex.subjects.PublishSubject$PublishDisposable: long serialVersionUID
com.example.revolut.rates.R$attr: int autoSizeMinTextSize
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String)
androidx.databinding.adapters.ViewBindingAdapter$OnViewAttachedToWindow
com.example.revolut.rates.R$styleable: int DrawerArrowToggle_arrowShaftLength
io.reactivex.disposables.SerialDisposable: void dispose()
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_QUERY
dagger.android.support.R$attr: int itemPadding
io.reactivex.internal.util.VolatileSizeArrayList
androidx.databinding.ObservableFloat: ObservableFloat(float)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayShowCustomEnabled(boolean)
androidx.loader.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteSelector$Selection next()
okio.Buffer: int select(okio.Options)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_SHA
com.example.revolut.rates.R$styleable: int Spinner_android_entries
io.reactivex.Maybe: io.reactivex.Maybe delaySubscription(org.reactivestreams.Publisher)
com.example.revolut.rates.R$attr: int fontProviderQuery
com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent: boolean equals(java.lang.Object)
androidx.loader.R$attr: int fontWeight
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
io.reactivex.internal.operators.flowable.FlowableRepeat
androidx.appcompat.R$layout: int abc_action_menu_item_layout
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState
androidx.appcompat.view.menu.ListMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)
androidx.customview.widget.ViewDragHelper$Callback: boolean onEdgeLock(int)
com.example.revolut.rates.data.repository.CurrenciesRepository
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_Dialog
io.reactivex.internal.util.AppendOnlyLinkedArrayList: boolean accept(org.reactivestreams.Subscriber)
io.reactivex.Flowable: java.lang.Iterable blockingIterable()
com.example.revolut.rates.R$attr: int trackTint
androidx.core.widget.NestedScrollView: void computeScroll()
com.example.revolut.rates.R$color: int ripple_material_light
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore()
com.example.revolut.rates.R$dimen: int abc_text_size_display_3_material
androidx.appcompat.graphics.drawable.DrawableWrapper: void onBoundsChange(android.graphics.Rect)
com.example.revolut.rates.R$attr: int layout_constraintWidth_percent
androidx.coordinatorlayout.R$layout: int notification_action_tombstone
com.example.revolut.rates.R$attr: int checkboxStyle
io.reactivex.Observable: io.reactivex.Observable repeat()
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.ContentFrameLayout: void onMeasure(int,int)
androidx.databinding.adapters.CardViewBindingAdapter
androidx.appcompat.R$attr: int buttonBarPositiveButtonStyle
android.support.v4.media.session.MediaSessionCompat: void setQueueTitle(java.lang.CharSequence)
androidx.appcompat.app.ActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.R$integer: int status_bar_notification_info_maxnum
io.reactivex.Flowable: io.reactivex.Flowable doOnEach(org.reactivestreams.Subscriber)
androidx.viewpager.widget.ViewPager: void endFakeDrag()
okhttp3.Response: long receivedResponseAtMillis()
androidx.databinding.adapters.TextViewBindingAdapter$AfterTextChanged: void afterTextChanged(android.text.Editable)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTimeoutAfter(long)
kotlin.text.StringsKt__StringsJVMKt: boolean equals$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModel create(java.lang.Class)
io.reactivex.Completable: io.reactivex.Completable retry(long,io.reactivex.functions.Predicate)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
kotlin.io.FileTreeWalk: FileTreeWalk(java.io.File,kotlin.io.FileWalkDirection,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat: float getRotation(android.view.View)
androidx.collection.LongSparseArray: void remove(long)
androidx.core.graphics.ColorKt: boolean isWideGamut(long)
androidx.appcompat.widget.DecorToolbar: java.lang.CharSequence getTitle()
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_TOUCH_EXPLORATION_GESTURE_START
io.reactivex.Flowable: io.reactivex.Single toMap(io.reactivex.functions.Function)
androidx.appcompat.view.menu.MenuItemWrapperICS: void setExclusiveCheckable(boolean)
androidx.constraintlayout.widget.ConstraintSet: void setGuidelinePercent(int,float)
androidx.core.graphics.ColorUtils: void blendHSL(float[],float[],float,float[])
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int)
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray
io.reactivex.Flowable: io.reactivex.Maybe firstElement()
io.reactivex.internal.operators.flowable.FlowableReplay: io.reactivex.flowables.ConnectableFlowable observeOn(io.reactivex.flowables.ConnectableFlowable,io.reactivex.Scheduler)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-mazbYpA(short[],short[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String getViewIdResourceName()
androidx.lifecycle.LifecycleService: void onCreate()
androidx.appcompat.R$styleable: int ActionMode_closeItemLayout
androidx.viewpager.R$dimen: int notification_top_pad
kotlinx.coroutines.channels.ProducerScope$DefaultImpls: boolean isActive(kotlinx.coroutines.channels.ProducerScope)
io.reactivex.Completable: io.reactivex.observers.TestObserver test()
androidx.appcompat.R$color: int notification_action_color_filter
okio.BufferedSource: long indexOfElement(okio.ByteString,long)
kotlin.collections.MapsKt__MapsJVMKt: java.util.SortedMap sortedMapOf(kotlin.Pair[])
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet,int)
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
androidx.databinding.ObservableInt: int describeContents()
dagger.android.support.R$style: int Platform_V21_AppCompat_Light
androidx.appcompat.R$style: int Theme_AppCompat_Light_DialogWhenLarge
androidx.core.hardware.display.DisplayManagerCompat: android.view.Display[] getDisplays()
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher: MaybeDelayOtherPublisher(io.reactivex.MaybeSource,org.reactivestreams.Publisher)
androidx.drawerlayout.R$styleable: int[] GradientColorItem
io.reactivex.Observable: io.reactivex.Observable combineLatest(java.lang.Iterable,io.reactivex.functions.Function)
androidx.appcompat.R$dimen: int abc_dropdownitem_text_padding_right
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: void reset()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object elementAtOrElse(java.lang.Iterable,int,kotlin.jvm.functions.Function1)
androidx.appcompat.app.AppCompatDialog: void setTitle(int)
kotlin.ranges.UIntRange: boolean contains(java.lang.Comparable)
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable: io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable valueOf(java.lang.String)
kotlin.reflect.KTypeProjection$Companion
android.support.v4.media.session.MediaSessionCompat$Callback: void onSetShuffleMode(int)
io.reactivex.subscribers.TestSubscriber: boolean isCancelled()
io.reactivex.Maybe: io.reactivex.Maybe lift(io.reactivex.MaybeOperator)
kotlin.jvm.internal.ClassReference: void supertypes$annotations()
androidx.appcompat.widget.SearchView: boolean isSubmitButtonEnabled()
com.example.revolut.rates.R$drawable: int notification_bg
androidx.core.os.LocaleListCompat: int hashCode()
androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
kotlinx.coroutines.internal.ThreadSafeHeapNode
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void updateFromSolver(androidx.constraintlayout.solver.LinearSystem)
androidx.appcompat.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(boolean)
androidx.fragment.R$integer: int status_bar_notification_info_maxnum
androidx.viewpager.R$id: int italic
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
androidx.core.graphics.drawable.TintAwareDrawable: void setTintList(android.content.res.ColorStateList)
androidx.appcompat.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
io.reactivex.Flowable: io.reactivex.Flowable doOnTerminate(io.reactivex.functions.Action)
androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)
androidx.loader.content.Loader: void startLoading()
dagger.android.support.R$styleable: int AppCompatTheme_listMenuViewStyle
androidx.appcompat.R$id: int parentPanel
okhttp3.internal.http2.Settings
kotlinx.coroutines.AbstractContinuation: java.lang.Object takeState()
io.reactivex.internal.schedulers.ScheduledRunnable: ScheduledRunnable(java.lang.Runnable,io.reactivex.internal.disposables.DisposableContainer)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
kotlin.collections.ArraysKt___ArraysKt: double averageOfDouble(java.lang.Double[])
io.reactivex.Observable: io.reactivex.Observable startWith(io.reactivex.ObservableSource)
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_SeekBar
okio.Buffer: okio.ByteString hmacSha1(okio.ByteString)
com.example.revolut.rates.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
io.reactivex.internal.subscribers.InnerQueuedSubscriber: void request(long)
androidx.core.widget.CompoundButtonCompat: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintVertical_chainStyle
androidx.core.app.SharedElementCallback: SharedElementCallback()
kotlin.coroutines.CombinedContext$Serialized$Companion: CombinedContext$Serialized$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.text.UStringsKt: byte toUByte(java.lang.String)
com.jakewharton.rxbinding3.widget.RxAutoCompleteTextView
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void solveGraph()
kotlin.io.FileSystemException: FileSystemException(java.io.File,java.io.File,java.lang.String)
com.jakewharton.rxbinding3.widget.TextViewEditorActionEvent
androidx.core.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View)
androidx.databinding.library.baseAdapters.BR: BR()
kotlin.collections.BooleanIterator: void remove()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationXBy(float)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: boolean close(java.lang.Throwable)
javax.inject.Named: java.lang.String value()
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider)
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void clear()
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
io.reactivex.internal.operators.single.SingleEquals
androidx.databinding.ObservableBoolean: boolean get()
kotlin.io.FilesKt__UtilsKt: java.io.File normalize(java.io.File)
kotlin.collections.MapsKt__MapWithDefaultKt: MapsKt__MapWithDefaultKt()
androidx.appcompat.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
androidx.annotation.LongDef
kotlin.collections.AbstractMutableList: AbstractMutableList()
io.reactivex.subjects.AsyncSubject: java.lang.Object getValue()
androidx.loader.content.Loader: int getId()
androidx.core.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)
androidx.databinding.adapters.CardViewBindingAdapter: void setContentPadding(androidx.cardview.widget.CardView,int)
androidx.databinding.adapters.ChronometerBindingAdapter
kotlinx.coroutines.channels.AbstractChannelKt: java.lang.Object OFFER_FAILED
io.reactivex.internal.operators.single.SingleDoOnEvent: SingleDoOnEvent(io.reactivex.SingleSource,io.reactivex.functions.BiConsumer)
kotlin.collections.ArraysKt___ArraysKt: double last(double[])
kotlin.text.Typography: char doubleDagger
kotlin.text.UStringsKt
com.example.revolut.rates.RatesApp
io.reactivex.internal.operators.observable.ObservableAmb: ObservableAmb(io.reactivex.ObservableSource[],java.lang.Iterable)
org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1
androidx.lifecycle.extensions.R$id: int icon
kotlin.collections.MapsKt__MapsKt: java.util.Map mapKeysTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1)
kotlin.text.TypeAliasesKt: void Appendable$annotations()
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FEEDBACK_ALL_MASK
io.reactivex.internal.operators.maybe.MaybeToPublisher: java.lang.Object apply(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filter$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.core.view.NestedScrollingParentHelper: int getNestedScrollAxes()
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator iterator()
androidx.fragment.app.FragmentController: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
kotlin.coroutines.jvm.internal.DebugProbesKt
androidx.appcompat.R$styleable: int AppCompatTheme_colorControlHighlight
androidx.appcompat.R$styleable: int TextAppearance_fontFamily
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_7
androidx.drawerlayout.widget.DrawerLayout: void requestDisallowInterceptTouchEvent(boolean)
kotlin.coroutines.CoroutineContext$Element: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isInOverlayMode()
com.example.revolut.rates.R$dimen: int abc_action_bar_overflow_padding_end_material
androidx.appcompat.app.ActionBarDrawerToggle: void syncState()
com.jakewharton.rxbinding3.widget.SearchViewQueryTextEvent: android.widget.SearchView component1()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(byte[],java.lang.Iterable)
androidx.appcompat.widget.ActivityChooserView: ActivityChooserView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationEnd(android.view.View)
androidx.recyclerview.widget.AsyncListUtil: java.lang.Object getItem(int)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode queue
androidx.constraintlayout.widget.Constraints$LayoutParams: float transformPivotX
androidx.core.view.ViewKt: void doOnLayout(android.view.View,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: kotlin.UInt get(int)
com.example.revolut.rates.R$style: int Theme_AppCompat_Dialog_Alert
io.reactivex.internal.operators.flowable.FlowableLift
okhttp3.internal.Util: boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit)
io.reactivex.android.plugins.RxAndroidPlugins: io.reactivex.functions.Function getInitMainThreadSchedulerHandler()
androidx.core.view.MarginLayoutParamsCompat: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
androidx.core.app.ComponentActivity: androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
androidx.slidingpanelayout.R$id: int text2
androidx.slidingpanelayout.widget.SlidingPaneLayout: void requestChildFocus(android.view.View,android.view.View)
kotlinx.coroutines.selects.SelectClause2
io.reactivex.internal.operators.observable.ObservableLastSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.view.menu.ActionMenuItem: boolean isEnabled()
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4: java.util.Iterator iterator()
com.google.gson.internal.LinkedHashTreeMap: java.lang.Object remove(java.lang.Object)
androidx.appcompat.view.menu.ListMenuPresenter: int getId()
kotlin.jvm.internal.ClassReference: java.util.Collection getConstructors()
kotlin.concurrent.TimersKt$timerTask$1: TimersKt$timerTask$1(kotlin.jvm.functions.Function1)
androidx.appcompat.R$attr: int windowFixedWidthMajor
androidx.constraintlayout.solver.widgets.Helper: void removeAllIds()
androidx.recyclerview.widget.LinearSmoothScroller: void onStop()
com.google.gson.internal.bind.ObjectTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
kotlin.sequences.SequencesKt___SequencesJvmKt: kotlin.sequences.Sequence filterIsInstance(kotlin.sequences.Sequence,java.lang.Class)
com.example.revolut.rates.databinding.RatesItemBindingImpl: void executeBindings()
androidx.appcompat.R$styleable: int StateListDrawable_android_variablePadding
com.example.revolut.rates.R$drawable: int abc_btn_check_to_on_mtrl_000
dagger.android.support.R$styleable: int ActionBar_height
androidx.constraintlayout.widget.Constraints$LayoutParams: float scaleX
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(short[])
androidx.fragment.app.FragmentContainer
androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
kotlin.jvm.internal.MutableLocalVariableReference: kotlin.reflect.KDeclarationContainer getOwner()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5
io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(io.reactivex.functions.Function,int,io.reactivex.ObservableSource[])
androidx.appcompat.app.AlertController$AlertParams: boolean mViewSpacingSpecified
kotlin.text.MatchResult: java.util.List getGroupValues()
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
io.reactivex.Flowable: io.reactivex.Flowable debounce(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4(int[])
androidx.appcompat.view.menu.SubMenuBuilder: androidx.appcompat.view.menu.MenuBuilder getRootMenu()
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.appcompat.R$style: int Theme_AppCompat_Light_NoActionBar
androidx.legacy.app.ActionBarDrawerToggle$DelegateProvider
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable
androidx.lifecycle.extensions.R$id: int line3
androidx.core.widget.ImageViewCompat: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
com.example.revolut.rates.R$color: int accent_material_light
io.reactivex.internal.operators.flowable.FlowableGenerate
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment)
io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit)
com.example.revolut.rates.R$styleable: int CompoundButton_buttonTint
io.reactivex.internal.operators.observable.ObservableDebounce: ObservableDebounce(io.reactivex.ObservableSource,io.reactivex.functions.Function)
androidx.constraintlayout.solver.widgets.ConstraintWidget: java.lang.String toString()
androidx.core.graphics.drawable.IconCompat: int mType
io.reactivex.internal.operators.flowable.FlowableFromIterable: void subscribeActual(org.reactivestreams.Subscriber)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Inverse
androidx.constraintlayout.widget.ConstraintLayout: boolean shouldDelayChildPressedState()
androidx.loader.R$styleable: int GradientColor_android_tileMode
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(float[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
androidx.legacy.v4.R$styleable: int FontFamilyFont_android_font
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)
androidx.lifecycle.extensions.R$dimen: int notification_action_icon_size
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: void getItemRangeInto(int[])
io.reactivex.internal.util.ListAddBiConsumer: io.reactivex.internal.util.ListAddBiConsumer INSTANCE
okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)
okhttp3.internal.http2.Http2Codec: okhttp3.Response$Builder readHttp2HeadersList(okhttp3.Headers,okhttp3.Protocol)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumWidth()
androidx.legacy.coreui.R$attr: int layout_insetEdge
androidx.appcompat.app.WindowDecorActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab)
androidx.recyclerview.R$styleable: int RecyclerView_spanCount
io.reactivex.internal.subscribers.DeferredScalarSubscriber: long serialVersionUID
androidx.databinding.ListChangeRegistry: void notifyCallbacks(androidx.databinding.ObservableList,int,androidx.databinding.ListChangeRegistry$ListChanges)
dagger.android.support.R$layout: int notification_template_custom_big
androidx.recyclerview.widget.DividerItemDecoration: void setOrientation(int)
com.jakewharton.rxbinding3.widget.RatingBarChangeEvent: java.lang.String toString()
androidx.legacy.v4.R$id: int blocking
androidx.appcompat.R$color: int abc_secondary_text_material_dark
io.reactivex.internal.operators.maybe.MaybeToFlowable
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber$InnerConsumer: long serialVersionUID
androidx.constraintlayout.solver.widgets.ConstraintWidget: int mOffsetY
androidx.appcompat.view.ActionMode: void setCustomView(android.view.View)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence)
io.reactivex.observers.ResourceCompletableObserver
androidx.appcompat.view.menu.BaseMenuPresenter: int getId()
com.example.revolut.rates.R$string: int abc_capital_on
androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)
androidx.fragment.R$id: int time
com.example.revolut.rates.R$drawable: int icon_try
io.reactivex.Observable: io.reactivex.Observable generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction,io.reactivex.functions.Consumer)
kotlin.ranges.UIntProgression: int getLast()
kotlin.text.CharCategory: kotlin.text.CharCategory SPACE_SEPARATOR
androidx.appcompat.R$attr: int buttonBarButtonStyle
androidx.constraintlayout.widget.ConstraintSet: void setTransformPivotY(int,float)
com.jakewharton.rxbinding3.core.R$color
androidx.appcompat.R$color: int abc_color_highlight_material
okhttp3.ConnectionSpec
androidx.appcompat.graphics.drawable.DrawableWrapper: void setWrappedDrawable(android.graphics.drawable.Drawable)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List dropLastWhile(java.util.List,kotlin.jvm.functions.Function1)
androidx.core.app.ComponentActivity: void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
androidx.appcompat.view.menu.ShowableListMenu: android.widget.ListView getListView()
io.reactivex.Maybe: io.reactivex.Flowable concat(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)
androidx.legacy.coreutils.R$dimen: int notification_top_pad
io.reactivex.Observable: io.reactivex.Observable dematerialize(io.reactivex.functions.Function)
okhttp3.Response: void close()
com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class)
androidx.vectordrawable.R$styleable: int FontFamilyFont_fontWeight
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet,int)
io.reactivex.internal.operators.flowable.FlowableIntervalRange: FlowableIntervalRange(long,long,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.view.ViewKt: void updatePaddingRelative$default(android.view.View,int,int,int,int,int,java.lang.Object)
dagger.android.AndroidInjectionKey
androidx.media.VolumeProviderCompat: java.lang.Object getVolumeProvider()
androidx.media.AudioAttributesCompat: int getVolumeControlStream()
androidx.appcompat.R$drawable: int abc_cab_background_top_material
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase get()
kotlin.io.FilesKt__FileReadWriteKt: void forEachBlock(java.io.File,kotlin.jvm.functions.Function2)
androidx.databinding.adapters.TextViewBindingAdapter: void setShadowRadius(android.widget.TextView,float)
io.reactivex.internal.subscriptions.ArrayCompositeSubscription: org.reactivestreams.Subscription replaceResource(int,org.reactivestreams.Subscription)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
androidx.customview.widget.ExploreByTouchHelper: void getVisibleVirtualViews(java.util.List)
io.reactivex.internal.schedulers.NewThreadWorker: NewThreadWorker(java.util.concurrent.ThreadFactory)
dagger.internal.ReferenceReleasingProvider: void restoreStrongReference()
com.example.revolut.rates.R$styleable: int ConstraintSet_android_translationZ
androidx.core.app.FrameMetricsAggregator: android.util.SparseIntArray[] stop()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.Region getTransparentRegion()
okhttp3.internal.http.HttpHeaders: int skipWhitespace(java.lang.String,int)
dagger.internal.MapBuilder: java.util.Map build()
androidx.core.app.NotificationCompat: int BADGE_ICON_LARGE
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_MEDIA_ID
androidx.core.app.NotificationCompat$CarExtender: NotificationCompat$CarExtender(android.app.Notification)
okhttp3.internal.ws.RealWebSocket: long queueSize()
androidx.appcompat.R$anim: int abc_shrink_fade_out_from_bottom
com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent: int component4()
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(short[])
kotlin.ranges.RangesKt___RangesKt: java.lang.Comparable coerceAtLeast(java.lang.Comparable,java.lang.Comparable)
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver: long serialVersionUID
com.example.revolut.rates.R$styleable: int FontFamilyFont_font
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_NONE
okio.ForwardingTimeout: okio.Timeout deadlineNanoTime(long)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.recyclerview.widget.AsyncListDiffer
androidx.media.R$color: int secondary_text_default_material_dark
androidx.appcompat.view.StandaloneActionMode: boolean isTitleOptional()
kotlin.coroutines.CoroutineContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_ALBUM_ART
androidx.appcompat.view.SupportMenuInflater: SupportMenuInflater(android.content.Context)
okio.Buffer: long read(okio.Buffer,long)
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
androidx.loader.R$drawable: int notify_panel_notification_icon_bg
io.reactivex.internal.operators.observable.ObservableRetryWhen: void subscribeActual(io.reactivex.Observer)
com.google.gson.internal.LinkedTreeMap: LinkedTreeMap(java.util.Comparator)
io.reactivex.internal.observers.BlockingBaseObserver
io.reactivex.parallel.ParallelFlowableConverter: java.lang.Object apply(io.reactivex.parallel.ParallelFlowable)
androidx.lifecycle.extensions.R$styleable: int[] CoordinatorLayout_Layout
kotlinx.coroutines.ThreadEventLoop: ThreadEventLoop(java.lang.Thread)
androidx.slidingpanelayout.R$drawable: int notification_bg_low_pressed
androidx.appcompat.app.AppCompatActivity: boolean onMenuOpened(int,android.view.Menu)
dagger.android.support.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_END_OF_QUEUE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA
androidx.databinding.DataBindingUtil: void setDefaultComponent(androidx.databinding.DataBindingComponent)
androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)
dagger.android.support.R$styleable: int CompoundButton_buttonTint
com.example.revolut.rates.RatesApp$Companion: RatesApp$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.app.AppCompatDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
androidx.media.MediaBrowserServiceCompat$Result: void sendResult(java.lang.Object)
io.reactivex.Single: io.reactivex.observers.TestObserver test()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean)
androidx.recyclerview.widget.RecyclerView$Orientation
com.example.revolut.rates.R$drawable: int tooltip_frame_dark
okhttp3.WebSocketListener: WebSocketListener()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] sortedArrayDescending-QwZRm1k(long[])
com.example.revolut.rates.R$attr: int layout_constraintVertical_bias
androidx.core.util.SparseBooleanArrayKt: void set(android.util.SparseBooleanArray,int,boolean)
kotlin.collections.LongIterator
dagger.android.support.R$id: int radio
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory LOCALE_FACTORY
androidx.asynclayoutinflater.R$dimen: int notification_main_column_padding_top
kotlin.text.StringsKt__StringsKt: java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int)
androidx.legacy.coreui.R$id: int right_side
kotlinx.coroutines.CancellableContinuationImpl: void completeResume(java.lang.Object)
io.reactivex.Maybe: io.reactivex.Flowable flatMapPublisher(io.reactivex.functions.Function)
androidx.appcompat.R$style: int Widget_AppCompat_ActionButton_CloseMode
dagger.android.support.R$drawable: int abc_list_focused_holo
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean equals(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(double[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry
io.reactivex.Observable: io.reactivex.Observable timestamp(java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_COMPILATION
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionModeCopyDrawable
io.reactivex.subscribers.SafeSubscriber: void cancel()
com.example.revolut.rates.R
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minBy(float[],kotlin.jvm.functions.Function1)
com.jakewharton.rxbinding3.widget.RxSeekBar: com.jakewharton.rxbinding3.InitialValueObservable changeEvents(android.widget.SeekBar)
androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$1: void onTransitionStart(android.transition.Transition)
androidx.asynclayoutinflater.R$styleable: int[] ColorStateListItem
io.reactivex.internal.operators.flowable.FlowableInternalHelper: io.reactivex.functions.Function replayFunction(io.reactivex.functions.Function,io.reactivex.Scheduler)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setChecked(boolean)
androidx.constraintlayout.widget.Guideline
androidx.appcompat.widget.PopupMenu: android.view.Menu getMenu()
android.support.v4.media.session.IMediaSession: void adjustVolume(int,int,java.lang.String)
androidx.legacy.v4.R$id: int tag_unhandled_key_event_manager
kotlinx.coroutines.sync.MutexImpl: void unlock(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_WORD
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet,int)
androidx.customview.view.AbsSavedState
androidx.core.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
io.reactivex.internal.operators.completable.CompletableLift
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: java.lang.Object prepare(kotlinx.coroutines.internal.AtomicOp)
androidx.collection.LongSparseArray: LongSparseArray()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintGuide_end
io.reactivex.internal.observers.LambdaObserver: void onError(java.lang.Throwable)
com.google.gson.TypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
kotlin.KotlinVersion: int hashCode()
androidx.swiperefreshlayout.R$layout: int notification_template_part_time
io.reactivex.Single: io.reactivex.Single doOnError(io.reactivex.functions.Consumer)
com.example.revolut.rates.data.repository.CurrenciesRepository: io.reactivex.Observable getCurrenciesList(java.lang.String)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object associateTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Map,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.appcompat.R$attr: int actionModeSelectAllDrawable
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()
com.example.revolut.rates.R$id: int action0
androidx.appcompat.app.ActionBar: java.lang.CharSequence getTitle()
kotlinx.coroutines.Job: java.lang.Throwable getCompletionException()
kotlin.text.StringsKt__StringsKt: boolean startsWith$default(java.lang.CharSequence,char,boolean,int,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: boolean none(java.lang.Iterable,kotlin.jvm.functions.Function1)
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] sliceArray-xo_DsdI(byte[],java.util.Collection)
androidx.appcompat.widget.ShareActionProvider: void setShareHistoryFileName(java.lang.String)
androidx.core.util.LongSparseArrayKt: boolean contains(android.util.LongSparseArray,long)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
dagger.android.support.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
kotlin.coroutines.EmptyCoroutineContext: int hashCode()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getRoleDescription()
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
androidx.legacy.coreutils.R$string: int status_bar_notification_info_overflow
android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_ARGUMENT_MEDIA_DESCRIPTION
dagger.android.support.R$id: int icon_group
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_Light
io.reactivex.Maybe: io.reactivex.Maybe create(io.reactivex.MaybeOnSubscribe)
dagger.android.support.R$drawable: int notification_tile_bg
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean isFocused()
androidx.core.widget.ListViewCompat: boolean canScrollList(android.widget.ListView,int)
kotlin.UseExperimental
io.reactivex.Maybe: io.reactivex.observers.TestObserver test()
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedPreScroll(android.view.View,int,int,int[])
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
androidx.fragment.app.ListFragment: void onDestroyView()
io.reactivex.Maybe: io.reactivex.Maybe flatMapSingleElement(io.reactivex.functions.Function)
dagger.multibindings.IntoMap
androidx.swiperefreshlayout.R
retrofit2.Callback: void onFailure(retrofit2.Call,java.lang.Throwable)
kotlin.coroutines.experimental.ContinuationInterceptor: kotlin.coroutines.experimental.ContinuationInterceptor$Key Key
androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType: androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType valueOf(java.lang.String)
androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat)
androidx.appcompat.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
kotlin.collections.ArraysKt___ArraysKt: boolean none(double[],kotlin.jvm.functions.Function1)
dagger.android.DaggerApplication_MembersInjector: void injectServiceInjector(dagger.android.DaggerApplication,dagger.android.DispatchingAndroidInjector)
androidx.core.view.ViewGroupKt$iterator$1
io.reactivex.Maybe: io.reactivex.Single isEmpty()
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isEnabled()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setBadgeIconType(int)
androidx.core.app.NotificationManagerCompat: java.util.Set getEnabledListenerPackages(android.content.Context)
io.reactivex.Observable: io.reactivex.Observable error(java.util.concurrent.Callable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(boolean[],java.lang.Object,kotlin.jvm.functions.Function2)
io.reactivex.internal.operators.maybe.MaybeCache: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String feedbackTypeToString(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(long[])
kotlin.collections.ArraysKt___ArraysKt: int reduceRightIndexed(int[],kotlin.jvm.functions.Function3)
androidx.appcompat.R$drawable: int abc_spinner_textfield_background_material
androidx.media.app.NotificationCompat$MediaStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
io.reactivex.observers.TestObserver: io.reactivex.observers.TestObserver assertSubscribed()
androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMinor
kotlin.collections.ArraysKt___ArraysKt: void sortBy(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_9
io.reactivex.Single: io.reactivex.Flowable concatWith(io.reactivex.SingleSource)
androidx.appcompat.widget.ContentFrameLayout: void setDecorPadding(int,int,int,int)
kotlinx.coroutines.CoroutineId$Key: CoroutineId$Key(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat_Dialog
androidx.core.animation.AnimatorKt$addListener$3: void invoke(android.animation.Animator)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$groupBy$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.io.FileTreeWalk: kotlin.io.FileTreeWalk onLeave(kotlin.jvm.functions.Function1)
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URL)
androidx.recyclerview.widget.AdapterListUpdateCallback: void onRemoved(int,int)
com.example.revolut.rates.R$attr: int actionBarSplitStyle
androidx.core.ktx.R$styleable: int[] GradientColorItem
androidx.customview.widget.ExploreByTouchHelper: void invalidateRoot()
androidx.appcompat.R$attr: int backgroundStacked
com.jakewharton.rxbinding3.widget.AdapterViewItemLongClickEvent: long getId()
kotlinx.coroutines.internal.ThreadContextKt: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
okhttp3.internal.Internal: okhttp3.internal.connection.StreamAllocation streamAllocation(okhttp3.Call)
kotlin.jvm.internal.Intrinsics: void throwNpe(java.lang.String)
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation()
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: long serialVersionUID
android.support.v4.media.session.MediaControllerCompat$TransportControls: void skipToNext()
androidx.recyclerview.R$drawable: int notification_bg_normal
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.R$dimen: int abc_select_dialog_padding_start_material
com.jakewharton.rxbinding3.view.MenuItemActionViewExpandEvent: int hashCode()
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo
kotlinx.coroutines.channels.Send: java.lang.Object getPollResult()
io.reactivex.Observable: io.reactivex.Observable concatMapDelayError(io.reactivex.functions.Function,int,boolean)
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback
kotlin.sequences.SubSequence: int access$getEndIndex$p(kotlin.sequences.SubSequence)
kotlin.internal.UProgressionUtilKt: long getProgressionLastElement-7ftBX0g(long,long,long)
androidx.loader.content.Loader: void stopLoading()
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.CharIterator iterator(char[])
androidx.lifecycle.MutableLiveData: MutableLiveData()
io.reactivex.internal.schedulers.ImmediateThinScheduler: io.reactivex.Scheduler$Worker createWorker()
android.support.v4.media.session.PlaybackStateCompat$CustomAction: java.lang.CharSequence getName()
io.reactivex.Observable: io.reactivex.Observable startWithArray(java.lang.Object[])
com.jakewharton.rxbinding3.widget.TextViewAfterTextChangeEvent: com.jakewharton.rxbinding3.widget.TextViewAfterTextChangeEvent copy$default(com.jakewharton.rxbinding3.widget.TextViewAfterTextChangeEvent,android.widget.TextView,android.text.Editable,int,java.lang.Object)
androidx.appcompat.widget.Toolbar$LayoutParams
okhttp3.ResponseBody: okhttp3.MediaType contentType()
io.reactivex.Completable: io.reactivex.disposables.Disposable subscribe()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean isAutoMirrored()
kotlin.collections.EmptyList: void add(int,java.lang.Object)
androidx.cursoradapter.R
androidx.core.ktx.R$styleable: int GradientColor_android_endY
io.reactivex.internal.functions.Functions: io.reactivex.functions.Predicate alwaysTrue()
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintBaseline_toBaselineOf
kotlin.jvm.internal.Reflection: kotlin.reflect.KType typeOf(java.lang.Class,kotlin.reflect.KTypeProjection[])
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object minBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,java.lang.CharSequence)
com.jakewharton.rxbinding3.widget.SearchViewQueryTextEvent: SearchViewQueryTextEvent(android.widget.SearchView,java.lang.CharSequence,boolean)
io.reactivex.functions.Function4
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
com.google.gson.stream.JsonReader
com.example.revolut.rates.R$id: int FUNCTION
io.reactivex.internal.util.EmptyComponent: void request(long)
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_android_fontStyle
dagger.android.support.R$drawable: int abc_list_selector_holo_dark
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(int,io.reactivex.Scheduler)
kotlin.text.StringsKt__IndentKt: java.lang.String prependIndent(java.lang.String,java.lang.String)
androidx.legacy.coreui.R$id: int async
com.google.gson.internal.bind.DateTypeAdapter: DateTypeAdapter()
dagger.android.DaggerActivity_MembersInjector: DaggerActivity_MembersInjector(javax.inject.Provider)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String)
androidx.databinding.BaseObservable: BaseObservable()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: FontResourcesParserCompat$FontFileResourceEntry(java.lang.String,int,boolean,java.lang.String,int,int)
io.reactivex.Flowable: org.reactivestreams.Subscriber subscribeWith(org.reactivestreams.Subscriber)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short firstOrNull(short[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.TintTypedArray: android.util.TypedValue peekValue(int)
androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_BARRIER
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,java.lang.Object[])
kotlin.collections.CollectionsKt___CollectionsKt: long[] toLongArray(java.util.Collection)
androidx.appcompat.R$styleable: int Toolbar_subtitleTextColor
androidx.appcompat.widget.LinearLayoutCompat: void onMeasure(int,int)
okio.SegmentedByteString
androidx.core.graphics.drawable.IconKt: android.graphics.drawable.Icon toIcon(android.net.Uri)
com.google.gson.internal.bind.DateTypeAdapter
androidx.appcompat.R$string: int abc_font_family_caption_material
androidx.media.R$style: int TextAppearance_Compat_Notification_Time_Media
androidx.constraintlayout.widget.Group: void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout)
androidx.core.provider.FontsContractCompat$FontInfo: FontsContractCompat$FontInfo(android.net.Uri,int,int,boolean,int)
kotlin.sequences.SequencesKt__SequenceBuilderKt: SequencesKt__SequenceBuilderKt()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: java.util.concurrent.Executor getExecutor()
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1: java.util.Iterator iterator()
io.reactivex.Maybe: io.reactivex.Flowable mergeArray(io.reactivex.MaybeSource[])
dagger.android.support.R$style: int Base_Widget_AppCompat_ActionBar_TabText
io.reactivex.internal.schedulers.IoScheduler: IoScheduler()
androidx.recyclerview.widget.AsyncListUtil
dagger.android.support.R$styleable: int SearchView_android_inputType
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence dropWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.app.ActivityManagerCompat
kotlin.collections.UCollectionsKt___UCollectionsKt: int sumOfUInt(java.lang.Iterable)
androidx.core.view.MarginLayoutParamsCompat: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
kotlinx.coroutines.scheduling.CoroutineScheduler: int MIN_SUPPORTED_POOL_SIZE
okio.Timeout: okio.Timeout deadlineNanoTime(long)
androidx.core.util.AtomicFile: void failWrite(java.io.FileOutputStream)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.graphics.drawable.Drawable getIcon()
io.reactivex.Observable: io.reactivex.Completable ignoreElements()
com.example.revolut.rates.R$attr: int dividerHorizontal
com.example.revolut.rates.view.MainActivity: void updateCurrenciesRateItems(java.lang.String,java.util.Map)
androidx.recyclerview.R$dimen: int notification_big_circle_margin
androidx.appcompat.R$string: int abc_action_bar_up_description
kotlin.collections.ArraysKt___ArraysKt: long[] sortedArrayDescending(long[])
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean verifyDrawable(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.observable.ObservableDebounceTimed
androidx.fragment.app.FragmentManager$OnBackStackChangedListener
org.intellij.lang.annotations.JdkConstants$TreeSelectionMode
io.reactivex.internal.subscribers.ForEachWhileSubscriber: void onComplete()
androidx.recyclerview.R$id: int chronometer
io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver: long serialVersionUID
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List distinct(java.lang.Iterable)
kotlin.jvm.internal.DoubleCompanionObject: double getNaN()
androidx.slidingpanelayout.R$styleable: int GradientColor_android_centerY
androidx.core.app.NotificationCompat$Action: int icon
dagger.internal.DoubleCheck: dagger.Lazy lazy(javax.inject.Provider)
androidx.databinding.adapters.SearchViewBindingAdapter$OnQueryTextSubmit
androidx.media.R$attr: int ttcIndex
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_DISPLAY_ICON
androidx.legacy.v4.R$styleable: int GradientColor_android_type
androidx.core.graphics.ImageDecoderKt$decodeBitmap$1: ImageDecoderKt$decodeBitmap$1(kotlin.jvm.functions.Function3)
androidx.appcompat.R$attr: int expandActivityOverflowButtonDrawable
io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(io.reactivex.MaybeSource,io.reactivex.MaybeSource)
androidx.databinding.ObservableArrayMap: void removeOnMapChangedCallback(androidx.databinding.ObservableMap$OnMapChangedCallback)
dagger.android.support.R$styleable: int[] PopupWindow
okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)
kotlin.io.OnErrorAction: kotlin.io.OnErrorAction valueOf(java.lang.String)
io.reactivex.internal.operators.observable.ObservableWindow: void subscribeActual(io.reactivex.Observer)
kotlin.jvm.internal.ReflectionFactory
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle: io.reactivex.MaybeSource source()
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)
dagger.android.support.R$color: int material_grey_600
io.reactivex.Single: io.reactivex.Flowable flatMapPublisher(io.reactivex.functions.Function)
dagger.android.support.R$dimen: int abc_text_size_body_1_material
okio.ForwardingSource
dagger.android.support.R$styleable: int ActionBar_progressBarStyle
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)
io.reactivex.internal.subscribers.QueueDrainSubscriber: boolean cancelled()
kotlin.collections.EmptyList: java.lang.Object readResolve()
io.reactivex.internal.operators.completable.CompletableMaterialize: void subscribeActual(io.reactivex.SingleObserver)
okhttp3.internal.http.HttpHeaders: java.util.List parseChallenges(okhttp3.Headers,java.lang.String)
dagger.android.support.R$style: int Base_V7_Widget_AppCompat_EditText
androidx.appcompat.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
androidx.viewpager.R$styleable: int GradientColor_android_endX
androidx.viewpager.widget.ViewPager: void onDetachedFromWindow()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDrawHeight(int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object singleOrNull(java.lang.Iterable)
androidx.appcompat.widget.ActivityChooserView: void onLayout(boolean,int,int,int,int)
io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.Scheduler$Worker createWorker()
androidx.customview.widget.ViewDragHelper: int DIRECTION_VERTICAL
androidx.appcompat.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
com.example.revolut.rates.di.DaggerAppComponent
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent
kotlin.text.StringsKt__StringsJVMKt: boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess: MaybeDoAfterSuccess(io.reactivex.MaybeSource,io.reactivex.functions.Consumer)
androidx.appcompat.R$styleable: int AppCompatTheme_popupMenuStyle
io.reactivex.internal.util.EmptyComponent: void onComplete()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: int lastIndexOf(java.lang.Object)
androidx.coordinatorlayout.R$attr: int fontProviderFetchTimeout
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$1: void onTransitionResume(android.transition.Transition)
androidx.customview.R$styleable: int FontFamilyFont_android_ttcIndex
io.reactivex.Observable: io.reactivex.Observable retryUntil(io.reactivex.functions.BooleanSupplier)
androidx.asynclayoutinflater.R$dimen: int compat_button_inset_vertical_material
androidx.core.view.ViewCompat: void dispatchFinishTemporaryDetach(android.view.View)
dagger.releasablereferences.CanReleaseReferences
androidx.appcompat.widget.AppCompatCheckBox
io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean,int,io.reactivex.functions.Function)
androidx.core.app.NotificationCompatSideChannelService: void notify(java.lang.String,int,java.lang.String,android.app.Notification)
io.reactivex.internal.operators.flowable.FlowableGroupJoin: void subscribeActual(org.reactivestreams.Subscriber)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
androidx.appcompat.R$id: int wrap_content
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(float[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.appcompat.R$styleable: int MenuItem_android_visible
dagger.android.support.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object lastOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
com.google.gson.internal.bind.JsonTreeWriter: void flush()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_LEFT
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget valueOf(java.lang.String)
androidx.core.util.HalfKt: android.util.Half toHalf(java.lang.String)
androidx.legacy.v4.R$styleable: int[] GradientColorItem
androidx.appcompat.app.WindowDecorActionBar: int getHideOffset()
io.reactivex.Flowable: io.reactivex.Flowable skipWhile(io.reactivex.functions.Predicate)
dagger.android.support.R$attr: int listPreferredItemHeightSmall
io.reactivex.observables.ConnectableObservable: void connect(io.reactivex.functions.Consumer)
io.reactivex.internal.operators.observable.ObservablePublish
androidx.recyclerview.widget.RecyclerView: int INVALID_TYPE
com.jakewharton.rxbinding3.core.R$drawable: int notification_action_background
com.example.revolut.rates.base.BaseNotifier: void showErrorMessage(java.lang.String)
kotlin.sequences.TakeSequence: kotlin.sequences.Sequence take(int)
androidx.databinding.ViewDataBinding$PropertyChangedInverseListener: void onPropertyChanged(androidx.databinding.Observable,int)
androidx.core.view.WindowInsetsCompat: boolean equals(java.lang.Object)
okhttp3.internal.http2.Http2Codec: Http2Codec(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http2.Http2Connection)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)
io.reactivex.observables.ConnectableObservable
io.reactivex.internal.observers.DeferredScalarDisposable: void dispose()
androidx.appcompat.widget.SearchView: boolean isQueryRefinementEnabled()
com.jakewharton.rxbinding3.view.MenuItemActionViewEvent
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxAge(int,java.util.concurrent.TimeUnit)
com.jakewharton.rxbinding3.core.R$dimen: int compat_notification_large_icon_max_height
androidx.core.widget.NestedScrollView: void addView(android.view.View,int)
dagger.android.support.R$styleable: int DrawerArrowToggle_gapBetweenBars
dagger.android.support.R$attr: int listItemLayout
androidx.vectordrawable.R$styleable: int FontFamily_fontProviderQuery
androidx.core.view.NestedScrollingParent: void onNestedPreScroll(android.view.View,int,int,int[])
androidx.databinding.adapters.AutoCompleteTextViewBindingAdapter
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.R$attr: int buttonBarNegativeButtonStyle
androidx.core.app.NotificationCompat$Action$Builder: NotificationCompat$Action$Builder(androidx.core.app.NotificationCompat$Action)
io.reactivex.internal.util.EmptyComponent: void onSubscribe(org.reactivestreams.Subscription)
androidx.slidingpanelayout.R$styleable: int FontFamily_fontProviderPackage
io.reactivex.internal.disposables.DisposableHelper
androidx.fragment.app.Fragment: void setEnterTransition(java.lang.Object)
kotlin.jvm.internal.TypeReference$WhenMappings
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence sortedByDescending(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
retrofit2.Callback: void onResponse(retrofit2.Call,retrofit2.Response)
io.reactivex.internal.operators.flowable.FlowablePublishAlt: int publishBufferSize()
io.reactivex.internal.observers.BlockingMultiObserver: java.lang.Throwable blockingGetError()
androidx.core.util.SparseLongArrayKt$valueIterator$1
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
io.reactivex.internal.subscribers.DeferredScalarSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
android.support.v4.media.session.IMediaControllerCallback: void onQueueTitleChanged(java.lang.CharSequence)
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: int component2()
io.reactivex.Observable: io.reactivex.Maybe reduce(io.reactivex.functions.BiFunction)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character lastOrNull(char[],kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: int DIRECTION_LEFT
androidx.core.view.OnApplyWindowInsetsListener: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
androidx.constraintlayout.widget.Barrier
com.example.revolut.rates.R$styleable: int ActionBar_contentInsetLeft
com.example.revolut.rates.R$attr: int gapBetweenBars
io.reactivex.internal.operators.completable.CompletableFromRunnable: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.MaybeConverter: java.lang.Object apply(io.reactivex.Maybe)
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(long,java.util.concurrent.TimeUnit)
okhttp3.EventListener
dagger.android.support.R$color: int notification_action_color_filter
androidx.legacy.v4.R$attr: int layout_keyline
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLast-r7IrZao(long[],int)
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.constraintlayout.widget.ConstraintHelper: androidx.constraintlayout.solver.widgets.Helper mHelperWidget
kotlin.collections.ArraysKt___ArraysKt: boolean reduce(boolean[],kotlin.jvm.functions.Function2)
com.google.gson.JsonNull
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder password(java.lang.String)
io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection: long serialVersionUID
androidx.core.widget.NestedScrollView: int computeVerticalScrollOffset()
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver$InnerObserver: long serialVersionUID
androidx.core.view.accessibility.AccessibilityRecordCompat: android.os.Parcelable getParcelableData()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String)
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour
com.example.revolut.rates.R$string: int abc_font_family_menu_material
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
dagger.android.support.R$style: int Base_V21_Theme_AppCompat
kotlin.text.Typography: char rightDoubleQuote
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
io.reactivex.internal.observers.DeferredScalarObserver: void onComplete()
okhttp3.internal.Version: java.lang.String userAgent()
kotlin.text.StringsKt__StringsKt: int indexOf(java.lang.CharSequence,java.lang.String,int,boolean)
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.R$attr: int tooltipFrameBackground
dagger.android.support.R$styleable: int ActionBar_backgroundStacked
kotlinx.coroutines.scheduling.Task
androidx.core.view.NestedScrollingParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)
io.reactivex.Single: io.reactivex.Single timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.internal.schedulers.ComputationScheduler: ComputationScheduler()
androidx.databinding.adapters.RadioGroupBindingAdapter
androidx.appcompat.app.AlertController$AlertParams: android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener
androidx.slidingpanelayout.R$styleable: int GradientColor_android_type
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(int[],kotlin.jvm.functions.Function1)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source()
kotlin.UShortArray: boolean contains-xj2QHRw(short[],short)
androidx.core.graphics.drawable.IconCompat: void onPostParceling()
androidx.appcompat.R$styleable: int FontFamilyFont_android_font
androidx.core.view.MotionEventCompat: boolean isFromSource(android.view.MotionEvent,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeChild(android.view.View,int)
androidx.appcompat.R$attr: int spinnerDropDownItemStyle
kotlin.collections.ArraysKt___ArraysJvmKt: char[] plus(char[],char)
dagger.android.support.R$layout: int abc_screen_simple
androidx.constraintlayout.solver.SolverVariable: void setName(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int BOTTOM
androidx.appcompat.R$attr
androidx.vectordrawable.R$dimen
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScroll(android.view.View,int,int,int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler)
dagger.android.support.R$layout: int notification_template_big_media
io.reactivex.internal.operators.flowable.FlowableSampleTimed: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.R$drawable: int abc_tab_indicator_mtrl_alpha
dagger.android.support.R$id: int default_activity_button
androidx.fragment.app.FragmentController: boolean execPendingActions()
com.example.revolut.rates.R$layout: int notification_template_custom_big
io.reactivex.Observable: java.lang.Iterable blockingNext()
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
io.reactivex.Observable: io.reactivex.Observable doOnError(io.reactivex.functions.Consumer)
com.example.revolut.rates.data.model.CurrencyResponse: java.util.Map getRates()
com.example.revolut.rates.R$id: int screen
okhttp3.internal.http1.Http1Codec: okio.Sink createRequestBody(okhttp3.Request,long)
androidx.media.R$dimen: int notification_large_icon_width
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor[] mListAnchors
io.reactivex.internal.operators.flowable.BlockingFlowableLatest: java.util.Iterator iterator()
androidx.core.util.Pair
androidx.appcompat.R$styleable: int PopupWindow_android_popupAnimationStyle
androidx.core.view.PointerIconCompat: int TYPE_ZOOM_IN
kotlin.text.Regex: java.lang.String replace(java.lang.CharSequence,java.lang.String)
com.example.revolut.rates.R$attr: int maxButtonHeight
okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)
org.intellij.lang.annotations.Flow: java.lang.String target()
io.reactivex.internal.operators.observable.ObservableDistinct
androidx.appcompat.R$id: int add
androidx.fragment.R$id: int action_image
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet,int)
io.reactivex.internal.subscribers.BasicFuseableSubscriber: int sourceMode
kotlinx.coroutines.channels.SubscriptionReceiveChannel$DefaultImpls: void close(kotlinx.coroutines.channels.SubscriptionReceiveChannel)
kotlinx.android.extensions.ContainerOptions
dagger.android.support.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
androidx.viewpager.widget.ViewPager: void onPageScrolled(int,float,int)
androidx.fragment.app.DialogFragment: void setCancelable(boolean)
kotlinx.coroutines.channels.AbstractChannelKt: java.lang.Object OFFER_SUCCESS
com.example.revolut.rates.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
com.example.revolut.rates.R$attr: int actionOverflowMenuStyle
androidx.core.util.SparseIntArrayKt$valueIterator$1: boolean hasNext()
androidx.appcompat.R$attr: int textAppearanceListItemSecondary
androidx.vectordrawable.R$dimen: int notification_large_icon_height
androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)
androidx.vectordrawable.R$drawable: int notification_bg_normal
dagger.android.support.R$bool: int abc_allow_stacked_button_bar
androidx.appcompat.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
androidx.appcompat.R$dimen: int abc_edit_text_inset_top_material
com.jakewharton.rxbinding3.widget.SearchViewQueryTextEvent: int hashCode()
androidx.core.content.ContextCompat
dagger.android.support.R$color: int background_material_light
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocused(boolean)
android.support.v4.media.MediaBrowserCompat$SearchCallback: MediaBrowserCompat$SearchCallback()
kotlin.random.URandomKt: byte[] nextUBytes-EVgfTAA(kotlin.random.Random,byte[])
androidx.legacy.v4.R$drawable: int notification_bg_normal_pressed
kotlinx.coroutines.scheduling.Task: kotlinx.coroutines.scheduling.TaskMode getMode()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.R$attr: int ttcIndex
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,boolean)
androidx.lifecycle.extensions.R$dimen: int compat_button_padding_horizontal_material
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean removeAll(java.util.Collection,java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: long reduceRightIndexed(long[],kotlin.jvm.functions.Function3)
io.reactivex.Observable: io.reactivex.Observable interval(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.util.concurrent.TimeUnit,java.lang.Runnable)
io.reactivex.internal.operators.observable.ObservableLastMaybe
androidx.constraintlayout.solver.widgets.Rectangle: int getCenterX()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(long,byte)
io.reactivex.internal.operators.flowable.FlowableSkipLast: FlowableSkipLast(io.reactivex.Flowable,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat create(android.content.Context,int,android.content.res.Resources$Theme)
androidx.annotation.ColorLong
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context)
androidx.constraintlayout.solver.widgets.ResolutionNode: void remove(androidx.constraintlayout.solver.widgets.ResolutionDimension)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintDimensionRatio
io.reactivex.internal.util.AppendOnlyLinkedArrayList: AppendOnlyLinkedArrayList(int)
androidx.core.app.FrameMetricsAggregator: android.util.SparseIntArray[] getMetrics()
io.reactivex.internal.schedulers.NewThreadScheduler: NewThreadScheduler()
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_PROGRESS
kotlin.sequences.SubSequence: kotlin.sequences.Sequence drop(int)
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setIcon(int)
io.reactivex.internal.subscriptions.ScalarSubscription: long serialVersionUID
androidx.vectordrawable.R$drawable: int notification_bg_normal_pressed
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String getVariationSettings()
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.annotation.PluralsRes
kotlin.jvm.Volatile
androidx.appcompat.app.ActionBar: void setSelectedNavigationItem(int)
androidx.loader.content.Loader: void registerListener(int,androidx.loader.content.Loader$OnLoadCompleteListener)
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext getContext()
androidx.recyclerview.widget.DiffUtil$DiffResult
dagger.android.support.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
io.reactivex.Flowable: io.reactivex.Flowable serialize()
androidx.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy: void onLoadItem(java.lang.String,androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper)
androidx.appcompat.widget.ViewStubCompat: void dispatchDraw(android.graphics.Canvas)
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(long[])
kotlin.collections.ArraysKt___ArraysJvmKt: double[] plus(double[],double)
androidx.viewpager.widget.PagerTabStrip: int getMinHeight()
dagger.android.support.R$dimen: int abc_search_view_preferred_height
kotlinx.coroutines.DispatchedTask$DefaultImpls: int getResumeMode(kotlinx.coroutines.DispatchedTask)
androidx.appcompat.R$drawable: int abc_textfield_search_material
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterTo$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.ThreadContextElement
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: java.lang.Object getCOROUTINE_SUSPENDED()
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.vectordrawable.R$dimen: int notification_small_icon_background_padding
com.example.revolut.rates.base.BaseViewModel: void onCleared()
androidx.databinding.ViewDataBinding$OnStartListener
io.reactivex.internal.util.EmptyComponent: void onError(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: boolean none(long[])
kotlin.reflect.KTypeProjection
kotlin.jvm.internal.Intrinsics: void throwUndefinedForReified(java.lang.String)
androidx.appcompat.R$dimen: int notification_media_narrow_margin
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher: MaybeFlatMapPublisher(io.reactivex.MaybeSource,io.reactivex.functions.Function)
okhttp3.HttpUrl: java.net.URI uri()
kotlinx.coroutines.scheduling.TimeSource
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressCircleDiameter()
kotlin.coroutines.experimental.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.experimental.CoroutineContext minusKey(kotlin.coroutines.experimental.ContinuationInterceptor,kotlin.coroutines.experimental.CoroutineContext$Key)
androidx.recyclerview.widget.RecyclerView$State: boolean willRunPredictiveAnimations()
io.reactivex.Flowable: io.reactivex.Flowable buffer(io.reactivex.Flowable,io.reactivex.functions.Function,java.util.concurrent.Callable)
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
io.reactivex.observers.ResourceCompletableObserver: void add(io.reactivex.disposables.Disposable)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void updateChildrenFromSolver(androidx.constraintlayout.solver.LinearSystem,boolean[])
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence)
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextDirectionHeuristic getTextDirection()
androidx.viewpager.R$style: int TextAppearance_Compat_Notification_Info
androidx.core.graphics.drawable.IconCompat: int TYPE_UNKNOWN
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setIcon(androidx.core.graphics.drawable.IconCompat)
io.reactivex.internal.util.OpenHashSet: java.lang.Object[] keys()
kotlinx.coroutines.JobSupport: java.lang.Throwable getCompletionException()
androidx.legacy.coreui.R$id: int action_container
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableLeft
androidx.core.transition.TransitionKt: android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.graphics.ColorKt: float getRed(long)
io.reactivex.internal.operators.maybe.MaybeIsEmpty: MaybeIsEmpty(io.reactivex.MaybeSource)
kotlinx.coroutines.EventLoopBase: void rescheduleAllDelayed()
androidx.core.graphics.RectKt: android.graphics.Region xor(android.graphics.RectF,android.graphics.RectF)
androidx.collection.SparseArrayCompat: java.lang.String toString()
com.jakewharton.rxbinding3.widget.RxAbsListView
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1: ComparisonsKt__ComparisonsKt$thenBy$1(java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.legacy.coreutils.R$id: int time
io.reactivex.observers.DisposableSingleObserver: void onStart()
androidx.vectordrawable.R$layout: int notification_template_part_time
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1
androidx.core.widget.TextViewCompat: int getLastBaselineToBottomHeight(android.widget.TextView)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int MATCH_CONSTRAINT_RATIO
androidx.recyclerview.widget.LinearLayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
dagger.android.support.R$style: int Theme_AppCompat_DayNight_DarkActionBar
androidx.appcompat.R$string: int abc_searchview_description_search
androidx.appcompat.app.AppCompatDelegate: void onPostCreate(android.os.Bundle)
io.reactivex.internal.observers.BasicFuseableObserver: io.reactivex.disposables.Disposable upstream
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet,int)
androidx.customview.R$attr: int alpha
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence)
kotlin.random.Random$Default: double nextDouble()
com.google.gson.stream.JsonWriter: boolean getSerializeNulls()
androidx.appcompat.R$attr: int arrowHeadLength
kotlin.collections.ArraysKt___ArraysKt: boolean any(byte[])
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trim(java.lang.CharSequence,char[])
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setNegativeButtonIcon(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable: io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable[] values()
androidx.appcompat.R$id: int content
androidx.recyclerview.R$id: int info
android.support.v4.media.session.MediaSessionCompat$Callback: void onPlayFromMediaId(java.lang.String,android.os.Bundle)
androidx.core.graphics.PathSegment: float getStartFraction()
dagger.android.support.R$dimen: int abc_list_item_padding_horizontal_material
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] plus(java.lang.Object[],java.util.Collection)
dagger.android.AndroidMemorySensitiveReferenceManager: void onTrimMemory(int)
androidx.appcompat.widget.DecorToolbar: int getDropdownSelectedPosition()
kotlinx.coroutines.channels.ReceiveChannel: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8(boolean[])
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(long,byte)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INADEQUATE_SECURITY
androidx.slidingpanelayout.widget.SlidingPaneLayout: int getParallaxDistance()
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_ListMenuView
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumHeight()
androidx.appcompat.R$styleable: int SwitchCompat_trackTintMode
okio.BufferedSink: okio.BufferedSink writeHexadecimalUnsignedLong(long)
com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.CoroutineDispatcher getIO()
androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)
androidx.media.MediaBrowserServiceCompat: void setSessionToken(android.support.v4.media.session.MediaSessionCompat$Token)
kotlin.collections.MapsKt__MapsKt: java.util.Map emptyMap()
androidx.recyclerview.widget.DiffUtil$Callback: boolean areItemsTheSame(int,int)
androidx.asynclayoutinflater.R$dimen: int compat_notification_large_icon_max_height
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_type
com.jakewharton.rxbinding3.widget.AdapterViewItemLongClickEvent: boolean equals(java.lang.Object)
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_SORT_KEY
okio.Buffer: okio.ByteString snapshot()
androidx.viewpager.widget.ViewPager: boolean dispatchKeyEvent(android.view.KeyEvent)
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.Semaphore access$getCpuPermits$p(kotlinx.coroutines.scheduling.CoroutineScheduler)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int DIRECT
androidx.databinding.CallbackRegistry: boolean isEmpty()
io.reactivex.internal.util.ErrorMode: io.reactivex.internal.util.ErrorMode IMMEDIATE
com.jakewharton.rxbinding3.widget.RatingBarChangeEvent
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActivityChooserView
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable from(org.reactivestreams.Publisher,int,int)
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver: long serialVersionUID
androidx.recyclerview.R
kotlin.io.FileSystemException: java.io.File getOther()
io.reactivex.internal.operators.parallel.ParallelJoin: ParallelJoin(io.reactivex.parallel.ParallelFlowable,int,boolean)
io.reactivex.internal.operators.flowable.FlowableAmb: FlowableAmb(org.reactivestreams.Publisher[],java.lang.Iterable)
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber$OtherObserver: long serialVersionUID
io.reactivex.internal.observers.BlockingObserver: void onError(java.lang.Throwable)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch(kotlin.coroutines.CoroutineContext,boolean,kotlin.jvm.functions.Function2)
kotlin.io.FilesKt__UtilsKt: java.lang.String getInvariantSeparatorsPath(java.io.File)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDetached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.drawerlayout.R$dimen: int notification_right_side_padding_top
kotlin.sequences.GeneratorSequence$iterator$1: boolean hasNext()
androidx.appcompat.view.menu.MenuView$ItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.appcompat.view.menu.ActionMenuItem: boolean isChecked()
androidx.legacy.coreutils.R$drawable: int notification_bg_low
androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)
com.example.revolut.rates.R$attr: int showAsAction
androidx.lifecycle.extensions.R$id: int text
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Double[] toTypedArray(double[])
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog show()
androidx.versionedparcelable.VersionedParcel: byte[] readByteArray(byte[],int)
dagger.android.support.R$styleable: int PopupWindow_overlapAnchor
kotlin.text.RegexOption: kotlin.text.RegexOption CANON_EQ
io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver: long serialVersionUID
androidx.fragment.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
dagger.android.support.R$styleable
androidx.recyclerview.widget.RecyclerView$State: java.lang.Object get(int)
dagger.android.support.R$id: int collapseActionView
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateBy(java.lang.Iterable,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: kotlin.Pair partition(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobCancellationException
io.reactivex.internal.util.ArrayListSupplier: io.reactivex.internal.util.ArrayListSupplier[] values()
kotlin.collections.ArraysKt___ArraysKt: double averageOfByte(java.lang.Byte[])
kotlin.text.StringsKt__StringsKt: java.lang.String substringBeforeLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
kotlin.sequences.TakeWhileSequence: TakeWhileSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
androidx.legacy.v4.R$attr: int statusBarBackground
dagger.android.support.R$attr: int navigationMode
androidx.recyclerview.R$attr: int layout_insetEdge
androidx.appcompat.R$attr: int actionModeCopyDrawable
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(float[])
androidx.appcompat.app.AppCompatDelegate: boolean isCompatVectorFromResourcesEnabled()
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState()
androidx.appcompat.R$style: int Base_Widget_AppCompat_ListView_Menu
kotlin.ULongArray: void set-k8EXiF4(long[],int,long)
kotlin.text.RegexKt$fromInt$$inlined$apply$lambda$1: RegexKt$fromInt$$inlined$apply$lambda$1(int)
kotlin.text.StringsKt__StringsKt: int indexOfAny(java.lang.CharSequence,char[],int,boolean)
io.reactivex.internal.operators.observable.ObservableTimeInterval: ObservableTimeInterval(io.reactivex.ObservableSource,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
dagger.android.support.R$style: int Base_Theme_AppCompat_Dialog
io.reactivex.internal.schedulers.SchedulerWhen: io.reactivex.Scheduler$Worker createWorker()
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(int[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
okhttp3.internal.cache.DiskLruCache$Snapshot
androidx.recyclerview.widget.ItemTouchHelper$Callback: ItemTouchHelper$Callback()
io.reactivex.Maybe: io.reactivex.Flowable merge(java.lang.Iterable)
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()
androidx.slidingpanelayout.R$id: int tag_unhandled_key_event_manager
com.example.revolut.rates.R$style: int TextAppearance_AppCompat
androidx.lifecycle.extensions.R$styleable: int FontFamilyFont_font
androidx.appcompat.R$layout: int abc_screen_simple_overlay_action_mode
kotlinx.coroutines.channels.BroadcastKt: kotlinx.coroutines.channels.BroadcastChannel broadcast(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
io.reactivex.internal.subscribers.BasicFuseableSubscriber: org.reactivestreams.Subscriber downstream
androidx.appcompat.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowResource(int)
io.reactivex.Flowable: io.reactivex.Flowable concatDelayError(java.lang.Iterable)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationYBy(float)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_constraint_referenced_ids
kotlin.jvm.internal.ByteCompanionObject: byte MIN_VALUE
io.reactivex.internal.operators.observable.ObservableTimer
androidx.core.content.res.ComplexColorCompat: android.graphics.Shader getShader()
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(short[])
androidx.databinding.library.BuildConfig
androidx.recyclerview.R$drawable: int notification_bg_normal_pressed
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Float,java.lang.Float)
androidx.core.R$dimen: int compat_button_inset_vertical_material
okhttp3.internal.http1.Http1Codec: okhttp3.Headers readHeaders()
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(char[])
androidx.core.app.NotificationCompat: int FLAG_NO_CLEAR
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence removePrefix(java.lang.CharSequence,java.lang.CharSequence)
androidx.appcompat.view.SupportActionModeWrapper: void invalidate()
kotlinx.coroutines.channels.ReceiveOrClosed: java.lang.Object tryResumeReceive(java.lang.Object,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1: kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1 INSTANCE
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.DoubleIterator iterator(double[])
androidx.asynclayoutinflater.R$id: int tag_unhandled_key_listeners
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintHeight_percent
androidx.legacy.coreui.R$dimen: int notification_media_narrow_margin
androidx.customview.R$id: int notification_background
kotlin.jvm.internal.ShortCompanionObject: int SIZE_BYTES
kotlinx.coroutines.test.TestCoroutineContext: void triggerActions()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setDateFormat(java.lang.String)
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionModeOverlay
kotlinx.coroutines.JobSupport: java.lang.Object join(kotlin.coroutines.Continuation)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintDimensionRatio
okio.AsyncTimeout: java.io.IOException newTimeoutException(java.io.IOException)
androidx.fragment.R$attr: int statusBarBackground
androidx.fragment.app.Fragment: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.appcompat.R$attr: int layout_anchorGravity
kotlin.io.FilesKt__UtilsKt: java.io.File copyTo(java.io.File,java.io.File,boolean,int)
androidx.core.widget.AutoScrollHelper: int EDGE_TYPE_INSIDE
androidx.asynclayoutinflater.R$dimen: int notification_action_icon_size
dagger.android.support.R$drawable: int abc_btn_borderless_material
io.reactivex.internal.observers.ConsumerSingleObserver: boolean isDisposed()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(byte[],java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.collections.UArraysKt: short random-s5X_as8(short[],kotlin.random.Random)
androidx.databinding.CallbackRegistry$NotifierCallback
androidx.core.R$id: int title
androidx.appcompat.app.ActionBar: int getTabCount()
io.reactivex.ObservableOperator: io.reactivex.Observer apply(io.reactivex.Observer)
androidx.customview.R$attr: int fontWeight
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntRange until-5PvTz6A(short,short)
androidx.recyclerview.widget.LinearSmoothScroller: void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
com.example.revolut.rates.R$styleable: int Spinner_android_popupBackground
kotlin.SuccessOrFailureKt: void SuccessOrFailure$annotations()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toMap(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
android.support.v4.media.session.MediaControllerCompat$Callback: void onSessionReady()
androidx.databinding.ObservableShort: ObservableShort(short)
kotlin.reflect.KProperty0: kotlin.reflect.KProperty0$Getter getGetter()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.legacy.v4.R$integer: int status_bar_notification_info_maxnum
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(short[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintStart_toEndOf
androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)
io.reactivex.observables.GroupedObservable: java.lang.Object getKey()
androidx.versionedparcelable.VersionedParcel: float readFloat(float,int)
kotlin.collections.UIntIterator: java.lang.Object next()
io.reactivex.internal.fuseable.QueueFuseable
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode removeFirstOrNull()
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(long[])
kotlin.jvm.internal.CharSpreadBuilder: int getSize(char[])
android.support.v4.media.RatingCompat: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener: void onRequestDisallowInterceptTouchEvent(boolean)
androidx.drawerlayout.R$id: int notification_main_column_container
io.reactivex.internal.subscriptions.EmptySubscription: io.reactivex.internal.subscriptions.EmptySubscription valueOf(java.lang.String)
io.reactivex.Observable: io.reactivex.Observable takeLast(long,long,java.util.concurrent.TimeUnit)
com.example.revolut.rates.R$style: int Animation_AppCompat_Tooltip
android.support.v4.media.session.PlaybackStateCompat: int toKeyCode(long)
com.example.revolut.rates.R$styleable: int[] AppCompatTextView
androidx.appcompat.widget.ToolbarWidgetWrapper: ToolbarWidgetWrapper(androidx.appcompat.widget.Toolbar,boolean,int,int)
com.example.revolut.rates.R$attr: int checkedTextViewStyle
org.intellij.lang.annotations.JdkConstants$PatternFlags
com.example.revolut.rates.R$string: int abc_capital_off
dagger.android.support.R$style: int Widget_AppCompat_Light_ActivityChooserView
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending--ajY-9A(int[])
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.legacy.coreutils.R$id: int text2
kotlin.collections.CollectionsKt___CollectionsKt: boolean contains(java.lang.Iterable,java.lang.Object)
com.example.revolut.rates.R$dimen: int abc_list_item_padding_horizontal_material
androidx.appcompat.widget.ActivityChooserView: ActivityChooserView(android.content.Context)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Display3
androidx.appcompat.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_GCM_SHA256
kotlinx.coroutines.sync.MutexImpl: void registerSelectClause2(kotlinx.coroutines.selects.SelectInstance,java.lang.Object,kotlin.jvm.functions.Function2)
com.example.revolut.rates.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
okhttp3.CacheControl: okhttp3.CacheControl FORCE_CACHE
io.reactivex.Single: io.reactivex.Single delaySubscription(io.reactivex.CompletableSource)
androidx.databinding.adapters.TextViewBindingAdapter: void setImeActionLabel(android.widget.TextView,int)
android.support.v4.media.session.MediaSessionCompat: int FLAG_HANDLES_TRANSPORT_CONTROLS
androidx.recyclerview.widget.GridLayoutManager: int DEFAULT_SPAN_COUNT
androidx.fragment.app.FragmentManager: int getBackStackEntryCount()
androidx.drawerlayout.R$styleable: int FontFamily_fontProviderAuthority
kotlinx.android.extensions.CacheImplementation
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence getSubtitle()
androidx.lifecycle.extensions.R$dimen: int notification_content_margin_start
com.jakewharton.rxbinding3.view.ViewAttachAttachedEvent
androidx.core.app.ActivityOptionsCompat: android.os.Bundle toBundle()
androidx.core.widget.ScrollerCompat: int getCurrY()
androidx.constraintlayout.solver.LinearSystem: void addLowerBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,boolean)
kotlin.UShortArray: short[] unbox-impl()
kotlinx.coroutines.Deferred: boolean isComputing()
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void optimizeReset()
androidx.recyclerview.widget.GridLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$1: void onTransitionStart(android.transition.Transition)
io.reactivex.internal.disposables.DisposableHelper: boolean set(java.util.concurrent.atomic.AtomicReference,io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber: long serialVersionUID
androidx.coordinatorlayout.widget.CoordinatorLayout: void onDraw(android.graphics.Canvas)
androidx.media.session.MediaButtonReceiver: MediaButtonReceiver()
androidx.appcompat.widget.AppCompatButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
kotlin.collections.MapsKt___MapsKt: kotlin.sequences.Sequence asSequence(java.util.Map)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Subhead
androidx.recyclerview.R$styleable: int CoordinatorLayout_Layout_layout_keyline
com.jakewharton.rxbinding3.InitialValueObservable: java.lang.Object getInitialValue()
io.reactivex.internal.operators.flowable.FlowableToListSingle: FlowableToListSingle(io.reactivex.Flowable)
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
io.reactivex.internal.operators.observable.ObservableLastMaybe: ObservableLastMaybe(io.reactivex.ObservableSource)
androidx.constraintlayout.widget.ConstraintSet: void setHorizontalChainStyle(int,int)
dagger.MembersInjector: void injectMembers(java.lang.Object)
okhttp3.internal.ws.RealWebSocket: void onReadMessage(java.lang.String)
androidx.drawerlayout.R$attr
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor getMainThreadExecutor()
io.reactivex.internal.observers.BasicFuseableObserver: int sourceMode
retrofit2.Response: okhttp3.Response raw()
okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setAddedCount(int)
com.example.revolut.rates.R$dimen: int abc_action_bar_elevation_material
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$find$1
dagger.android.internal.AndroidInjectionKeys: java.lang.String of(java.lang.String)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence mapIndexedNotNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
okhttp3.OkHttpClient: okhttp3.Cache cache()
io.reactivex.internal.disposables.DisposableHelper: boolean setOnce(java.util.concurrent.atomic.AtomicReference,io.reactivex.disposables.Disposable)
androidx.constraintlayout.widget.ConstraintSet: int HORIZONTAL_GUIDELINE
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setGravity(int)
kotlin.ULong: kotlin.ULong box-impl(long)
androidx.appcompat.widget.DecorToolbar: void initProgress()
androidx.core.view.MenuItemCompat: void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
io.reactivex.processors.BehaviorProcessor: java.lang.Object getValue()
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
io.reactivex.internal.operators.observable.ObservableMaterialize: void subscribeActual(io.reactivex.Observer)
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback: void onAnimationEnd(android.graphics.drawable.Drawable)
io.reactivex.plugins.RxJavaPlugins: void setInitIoSchedulerHandler(io.reactivex.functions.Function)
androidx.databinding.OnRebindCallback: boolean onPreBind(androidx.databinding.ViewDataBinding)
io.reactivex.internal.operators.parallel.ParallelReduce$ParallelReduceSubscriber: long serialVersionUID
androidx.core.text.TextUtilsCompat: java.lang.String htmlEncode(java.lang.String)
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver: long serialVersionUID
dagger.android.DaggerIntentService: void onCreate()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.constraintlayout.widget.ConstraintHelper: android.content.Context myContext
io.reactivex.internal.operators.flowable.FlowableElementAt: FlowableElementAt(io.reactivex.Flowable,long,java.lang.Object,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean hasLogo()
kotlin.collections.TypeAliasesKt
io.reactivex.processors.ReplayProcessor: void cleanupBuffer()
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type ERROR
androidx.appcompat.R$style: int Platform_ThemeOverlay_AppCompat
androidx.appcompat.R$style: int Widget_AppCompat_ImageButton
dagger.android.support.R$attr: int paddingEnd
kotlin.jvm.internal.Ref$ByteRef: java.lang.String toString()
androidx.databinding.ListChangeRegistry: void notifyChanged(androidx.databinding.ObservableList,int,int)
androidx.constraintlayout.solver.Metrics: long iterations
com.google.gson.Gson: Gson()
io.reactivex.internal.operators.observable.ObservableMergeWithSingle
androidx.core.content.pm.ActivityInfoCompat: int CONFIG_UI_MODE
com.example.revolut.rates.R$style: int Widget_AppCompat_ProgressBar
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(boolean[])
io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,long,java.util.concurrent.TimeUnit)
androidx.appcompat.view.menu.MenuPresenter
android.support.v4.media.session.MediaControllerCompat$TransportControls: void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle)
io.reactivex.internal.operators.maybe.MaybeError: void subscribeActual(io.reactivex.MaybeObserver)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSelected(boolean)
com.jakewharton.rxbinding3.widget.RatingBarChangeEvent: android.widget.RatingBar getView()
androidx.constraintlayout.widget.ConstraintSet: int TOP
io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)
androidx.lifecycle.extensions.R$id: int start
androidx.legacy.v4.R$dimen: int compat_button_padding_horizontal_material
com.example.revolut.rates.R$style: int Theme_AppCompat_Dialog
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintBottom_toTopOf
okhttp3.CacheControl: boolean mustRevalidate()
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int)
kotlin.text.CharCategory: kotlin.text.CharCategory UNASSIGNED
androidx.core.ktx.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean getPadding(android.graphics.Rect)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)
kotlinx.coroutines.EventLoop$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.EventLoop,kotlin.coroutines.CoroutineContext)
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionModeFindDrawable
androidx.core.graphics.TypefaceCompat
com.example.revolut.rates.R$id: int action_bar_container
androidx.core.widget.NestedScrollView: void scrollTo(int,int)
io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function7)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setActionView(int)
androidx.recyclerview.widget.PagerSnapHelper
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4: java.util.Iterator iterator()
com.example.revolut.rates.R$attr: int actionBarItemBackground
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: void COROUTINE_SUSPENDED$annotations()
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_startColor
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithData(byte[],int,int)
retrofit2.converter.gson.GsonConverterFactory: retrofit2.converter.gson.GsonConverterFactory create(com.google.gson.Gson)
okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)
kotlin.jvm.internal.InlineMarker: void afterInlineCall()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder from(android.app.Activity)
androidx.appcompat.R$dimen: int abc_dialog_fixed_height_major
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence getCancelLabel()
androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)
androidx.swiperefreshlayout.R$styleable: int ColorStateListItem_android_color
androidx.databinding.ObservableBoolean: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableStart
androidx.appcompat.widget.ToolbarWidgetWrapper: void setLogo(android.graphics.drawable.Drawable)
androidx.viewpager.widget.PagerAdapter: int POSITION_NONE
com.example.revolut.rates.R$attr: int alphabeticModifiers
kotlin.text.StringsKt___StringsKt: java.util.List toList(java.lang.CharSequence)
androidx.core.content.ContextCompat: boolean isDeviceProtectedStorage(android.content.Context)
androidx.core.view.PointerIconCompat: int TYPE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(short[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
com.example.revolut.rates.R$drawable: int abc_ic_star_black_36dp
androidx.fragment.app.FragmentActivity: boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)
androidx.customview.widget.ViewDragHelper: int EDGE_ALL
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
androidx.core.app.NotificationCompat$Action: boolean getAllowGeneratedReplies()
kotlinx.coroutines.JobSupport: java.lang.String toString()
androidx.constraintlayout.widget.R$attr: int layout_goneMarginLeft
androidx.core.util.SparseLongArrayKt: boolean containsValue(android.util.SparseLongArray,long)
androidx.collection.ArraySet: java.lang.Object removeAt(int)
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void showForSystem()
com.example.revolut.rates.R$dimen: int abc_cascading_menus_min_smallest_width
kotlin.ExperimentalMultiplatform
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings: int[] $EnumSwitchMapping$0
androidx.constraintlayout.solver.widgets.Rectangle: int getCenterY()
okhttp3.internal.http2.Header: Header(java.lang.String,java.lang.String)
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable
androidx.core.transition.TransitionKt$addListener$4: void invoke(android.transition.Transition)
androidx.constraintlayout.solver.widgets.Guideline: boolean allowedInBarrier()
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Caption
androidx.core.app.FrameMetricsAggregator: int COMMAND_DURATION
androidx.lifecycle.ViewModel
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: RecyclerView$EdgeEffectFactory()
androidx.customview.R$dimen: int notification_large_icon_height
io.reactivex.internal.disposables.CancellableDisposable: boolean isDisposed()
kotlin.jvm.functions.Function17
androidx.annotation.RequiresFeature: java.lang.String name()
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl
kotlin.text.MatchGroup: kotlin.ranges.IntRange component2()
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setFilterBitmap(boolean)
kotlin.jvm.internal.Ref$ObjectRef: Ref$ObjectRef()
androidx.core.graphics.PathKt: android.graphics.Path or(android.graphics.Path,android.graphics.Path)
kotlin.UByteArray: int getSize()
io.reactivex.internal.operators.observable.ObservableDefer: void subscribeActual(io.reactivex.Observer)
okio.BufferedSink: okio.BufferedSink writeLong(long)
androidx.appcompat.R$styleable: int[] CoordinatorLayout_Layout
io.reactivex.Observable: io.reactivex.Observable concatMapEagerDelayError(io.reactivex.functions.Function,boolean)
com.jakewharton.rxbinding3.widget.RxTextView: com.jakewharton.rxbinding3.InitialValueObservable textChangeEvents(android.widget.TextView)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View)
io.reactivex.subjects.ReplaySubject: void onNext(java.lang.Object)
androidx.core.content.res.TypedArrayKt
okhttp3.MediaType: int hashCode()
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintWidth_default
androidx.core.net.TrafficStatsCompat: void untagDatagramSocket(java.net.DatagramSocket)
okio.Buffer: okio.Buffer writeIntLe(int)
androidx.core.view.ViewGroupKt$iterator$1: boolean hasNext()
kotlin.reflect.KTypeProjection$Companion: kotlin.reflect.KTypeProjection invariant(kotlin.reflect.KType)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionView(int)
io.reactivex.internal.operators.observable.ObservableScan
androidx.appcompat.widget.ScrollingTabContainerView: void removeAllTabs()
androidx.core.animation.AnimatorKt$doOnPause$$inlined$addPauseListener$1: AnimatorKt$doOnPause$$inlined$addPauseListener$1(kotlin.jvm.functions.Function1)
androidx.core.view.MarginLayoutParamsCompat: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
io.reactivex.Flowable: io.reactivex.Single firstOrError()
androidx.core.widget.EdgeEffectCompat: boolean onRelease()
com.example.revolut.rates.R$color: int switch_thumb_normal_material_dark
kotlin.jvm.internal.TypeIntrinsics: java.util.Iterator asMutableIterator(java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable delaySubscription(io.reactivex.ObservableSource)
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.google.gson.JsonPrimitive: java.lang.String getAsString()
androidx.slidingpanelayout.R$dimen
kotlin.Triple: java.lang.Object getThird()
io.reactivex.internal.operators.observable.ObservableBuffer
com.example.revolut.rates.R$styleable: int AlertDialog_listLayout
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt lastOrNull--ajY-9A(int[])
com.example.revolut.rates.R$drawable: int icon_jpy
androidx.databinding.ViewDataBinding: void executeBindingsOn(androidx.databinding.ViewDataBinding)
io.reactivex.exceptions.OnErrorNotImplementedException: OnErrorNotImplementedException(java.lang.String,java.lang.Throwable)
androidx.loader.app.LoaderManager$LoaderCallbacks: void onLoaderReset(androidx.loader.content.Loader)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int getLastIndex-rL5Bavg(short[])
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)
androidx.core.graphics.PointKt: android.graphics.PointF minus(android.graphics.PointF,android.graphics.PointF)
kotlin.sequences.USequencesKt___USequencesKt: long sumOfULong(kotlin.sequences.Sequence)
kotlin.UnsignedKt: int ulongCompare(long,long)
com.google.gson.ExclusionStrategy
androidx.core.content.res.ResourcesCompat: void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler)
androidx.core.util.Consumer: void accept(java.lang.Object)
com.jakewharton.rxbinding3.core.R$styleable: int GradientColor_android_startColor
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object random(java.util.Collection,kotlin.random.Random)
com.example.revolut.rates.R$dimen: int abc_disabled_alpha_material_dark
androidx.core.graphics.drawable.TintAwareDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
kotlin.jvm.functions.Function1
androidx.media.MediaSessionManager$RemoteUserInfo: MediaSessionManager$RemoteUserInfo(android.media.session.MediaSessionManager$RemoteUserInfo)
io.reactivex.subscribers.ResourceSubscriber: void request(long)
io.reactivex.processors.AsyncProcessor: void onComplete()
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay()
androidx.core.graphics.ColorKt: android.graphics.Color toColor(int)
com.example.revolut.rates.R$attr: int customNavigationLayout
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable
dagger.android.support.R$id: int search_bar
okhttp3.internal.http1.Http1Codec: void flushRequest()
dagger.android.support.R$styleable: int MenuItem_android_visible
androidx.recyclerview.widget.RecyclerView$Recycler: void bindViewToPosition(android.view.View,int)
androidx.databinding.ObservableChar: void writeToParcel(android.os.Parcel,int)
android.support.v4.media.session.MediaSessionCompat: java.lang.String KEY_SESSION_TOKEN2_BUNDLE
kotlinx.coroutines.scheduling.CoroutineScheduler: long access$getIdleWorkerKeepAliveNs$p(kotlinx.coroutines.scheduling.CoroutineScheduler)
androidx.constraintlayout.solver.Metrics: long variables
io.reactivex.subjects.CompletableSubject: void subscribeActual(io.reactivex.CompletableObserver)
kotlinx.coroutines.selects.SelectBuilderImpl
androidx.core.view.GestureDetectorCompat: GestureDetectorCompat(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)
androidx.lifecycle.extensions.R$styleable: int FontFamilyFont_android_fontStyle
dagger.android.support.R$styleable: int AppCompatTheme_borderlessButtonStyle
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
androidx.appcompat.widget.ForwardingListener: androidx.appcompat.view.menu.ShowableListMenu getPopup()
com.example.revolut.rates.di.AppComponent
androidx.core.graphics.RectKt: android.graphics.RectF and(android.graphics.RectF,android.graphics.RectF)
kotlin.properties.ReadWriteProperty
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object getProvider()
androidx.appcompat.widget.VectorEnabledTintResources: VectorEnabledTintResources(android.content.Context,android.content.res.Resources)
kotlin.random.URandomKt: long nextULong-V1Xi4fY(kotlin.random.Random,long)
androidx.fragment.app.DialogFragment: void onDetach()
androidx.recyclerview.R$drawable: int notification_bg_low_pressed
androidx.viewpager.widget.PagerTitleStrip: void onMeasure(int,int)
io.reactivex.internal.operators.maybe.MaybeCreate: void subscribeActual(io.reactivex.MaybeObserver)
androidx.core.animation.AnimatorKt$doOnStart$$inlined$addListener$1
kotlin.jvm.internal.PropertyReference1: kotlin.reflect.KProperty1$Getter getGetter()
androidx.viewpager.widget.PagerAdapter: void startUpdate(android.view.View)
androidx.core.view.ViewKt$doOnPreDraw$1: boolean onPreDraw()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean equals(java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListKt: void SUCCESS$annotations()
androidx.databinding.CallbackRegistry: androidx.databinding.CallbackRegistry clone()
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int)
androidx.appcompat.widget.VectorEnabledTintResources: int MAX_SDK_WHERE_REQUIRED
dagger.android.support.R$color: int material_grey_300
dagger.android.support.R$color: int switch_thumb_disabled_material_light
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertTimeout()
androidx.databinding.adapters.AbsSeekBarBindingAdapter: AbsSeekBarBindingAdapter()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte[] toTypedArray-GBYM_sE(byte[])
androidx.core.widget.NestedScrollView: int computeVerticalScrollExtent()
kotlinx.coroutines.channels.ActorKt: kotlinx.coroutines.channels.SendChannel actor(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlinx.coroutines.Job,kotlin.jvm.functions.Function2)
com.example.revolut.rates.R$drawable: int abc_textfield_default_mtrl_alpha
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyDataSetChanged()
androidx.recyclerview.R$styleable: int GradientColor_android_endX
kotlin.collections.EmptyList: java.lang.String toString()
dagger.android.support.R$styleable: int View_theme
androidx.vectordrawable.R$layout: int notification_template_part_chronometer
io.reactivex.internal.subscriptions.BasicIntQueueSubscription
androidx.recyclerview.R$attr: int layout_anchor
androidx.customview.R$id: int forever
androidx.viewpager.R$id: int notification_main_column
androidx.versionedparcelable.VersionedParcel: java.util.List readList(java.util.List,int)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,int)
androidx.vectordrawable.R$styleable: int[] CoordinatorLayout_Layout
com.example.revolut.rates.R$styleable: int[] ActionMenuItemView
com.example.revolut.rates.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
androidx.appcompat.view.ActionMode: android.view.View getCustomView()
kotlin.jvm.internal.TypeIntrinsics: void throwCce(java.lang.String)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(byte,long)
androidx.collection.SimpleArrayMap: boolean containsKey(java.lang.Object)
kotlin.contracts.InvocationKind
androidx.recyclerview.widget.LinearLayoutManager: int INVALID_OFFSET
androidx.databinding.DataBindingUtil: androidx.databinding.ViewDataBinding setContentView(android.app.Activity,int,androidx.databinding.DataBindingComponent)
io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver: long serialVersionUID
kotlin.text.StringsKt___StringsKt: java.util.List mapNotNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.view.ViewConfigurationCompat: int getScaledHoverSlop(android.view.ViewConfiguration)
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableAll: void subscribeActual(org.reactivestreams.Subscriber)
androidx.recyclerview.widget.RecyclerView: void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
com.example.revolut.rates.R$attr: int spinnerDropDownItemStyle
androidx.lifecycle.ViewModelStore
androidx.recyclerview.R$dimen: int notification_right_icon_size
io.reactivex.internal.operators.maybe.MaybeLift
kotlinx.coroutines.internal.LockFreeMPSCQueueCore$Companion: long access$updateHead(kotlinx.coroutines.internal.LockFreeMPSCQueueCore$Companion,long,int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void addToSolver(androidx.constraintlayout.solver.LinearSystem)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void optimizeForDimensions(int,int)
androidx.core.app.NotificationCompatSideChannelService: android.os.IBinder onBind(android.content.Intent)
androidx.legacy.v4.R$styleable: int CoordinatorLayout_statusBarBackground
kotlin.ranges.RangesKt___RangesKt: long coerceIn(long,kotlin.ranges.ClosedRange)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$reduce$1
com.example.revolut.rates.R$styleable: int SearchView_searchIcon
dagger.android.support.R$styleable: int AppCompatTheme_popupMenuStyle
com.jakewharton.rxbinding3.view.MenuItemActionViewEvent: MenuItemActionViewEvent(kotlin.jvm.internal.DefaultConstructorMarker)
com.jakewharton.rxbinding3.widget.RxTextView: com.jakewharton.rxbinding3.InitialValueObservable beforeTextChangeEvents(android.widget.TextView)
dagger.android.support.DaggerAppCompatActivity_MembersInjector: void injectFrameworkFragmentInjector(dagger.android.support.DaggerAppCompatActivity,dagger.android.DispatchingAndroidInjector)
androidx.collection.ArraySet: ArraySet()
okhttp3.CipherSuite
kotlin.text.MatchResult: kotlin.text.MatchResult next()
androidx.media.VolumeProviderCompat: int VOLUME_CONTROL_FIXED
io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function8)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo
dagger.android.support.R$drawable: int abc_ic_voice_search_api_material
androidx.core.transition.TransitionKt$addListener$2: androidx.core.transition.TransitionKt$addListener$2 INSTANCE
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View onInterceptFocusSearch(android.view.View,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(char[],java.lang.Object[],kotlin.jvm.functions.Function2)
androidx.recyclerview.widget.RecyclerView: void requestDisallowInterceptTouchEvent(boolean)
kotlin.ExceptionsKt__ExceptionsKt: void stackTrace$annotations(java.lang.Throwable)
androidx.media.MediaBrowserServiceCompatApi26$ServiceCompatProxy: void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper,android.os.Bundle)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,java.lang.Iterable)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateTo$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.InputDeviceCompat: int SOURCE_MOUSE
kotlin.reflect.KTypeProjection: boolean equals(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: int RANGE_TYPE_INT
kotlinx.coroutines.CoroutineId: java.lang.String toString()
io.reactivex.internal.disposables.EmptyDisposable: void error(java.lang.Throwable,io.reactivex.Observer)
androidx.customview.R$dimen: int notification_content_margin_start
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintHeight_default
io.reactivex.internal.operators.observable.ObservableDebounce: void subscribeActual(io.reactivex.Observer)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: FingerprintManagerCompat$CryptoObject(java.security.Signature)
androidx.recyclerview.R$attr: int reverseLayout
dagger.android.support.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
androidx.core.content.pm.ShortcutInfoCompat
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isActionViewExpanded()
io.reactivex.internal.operators.observable.ObservableZipIterable: ObservableZipIterable(io.reactivex.Observable,java.lang.Iterable,io.reactivex.functions.BiFunction)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constraintBottom_toBottomOf
com.example.revolut.rates.R$drawable: int icon_nok
kotlin.reflect.KMutableProperty0$Setter
com.example.revolut.rates.R$attr: int layout_constraintGuide_percent
io.reactivex.CompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(float[])
androidx.media.R$attr: int fontStyle
kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.jvm.internal.TypeIntrinsics: java.util.List castToList(java.lang.Object)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintVertical_chainStyle
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Menu
kotlinx.coroutines.Job: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,kotlin.jvm.functions.Function1)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setView(android.view.View,int,int,int,int)
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer awaitCount(int,java.lang.Runnable)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void disconnectWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget)
kotlin.UInt: boolean equals-impl0(int,int)
androidx.media.R$id: int text
androidx.core.app.NotificationCompat: java.lang.CharSequence getContentTitle(android.app.Notification)
dagger.android.support.R$dimen: int notification_large_icon_height
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List zipWithNext(java.lang.Iterable)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
kotlin.reflect.KClass: int hashCode()
io.reactivex.internal.operators.single.SingleJust: void subscribeActual(io.reactivex.SingleObserver)
androidx.constraintlayout.widget.R$attr: int layout_constraintWidth_max
io.reactivex.Flowable: io.reactivex.Flowable concatArrayEagerDelayError(org.reactivestreams.Publisher[])
androidx.legacy.coreutils.R$color: int notification_icon_bg_color
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Display1
androidx.media.MediaBrowserProtocol: int CLIENT_MSG_REMOVE_SUBSCRIPTION
kotlinx.coroutines.internal.LockFreeLinkedListHead: java.lang.Void describeRemove()
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.IntIterator iterator(int[])
androidx.core.util.PatternsCompat: java.util.regex.Pattern EMAIL_ADDRESS
androidx.recyclerview.widget.SortedList: void addAll(java.lang.Object[])
retrofit2.KotlinExtensions$awaitResponse$2$2: void onFailure(retrofit2.Call,java.lang.Throwable)
okio.GzipSink: java.util.zip.Deflater deflater()
androidx.appcompat.widget.ActionBarContextView: void onMeasure(int,int)
androidx.slidingpanelayout.R$id: int action_text
androidx.media.R$styleable: int FontFamilyFont_font
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int baselineToBaseline
io.reactivex.internal.operators.maybe.MaybeTimer
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence,boolean)
com.example.revolut.rates.R$styleable: int AppCompatTheme_textColorSearchUrl
androidx.appcompat.R$styleable: int DrawerArrowToggle_color
kotlinx.coroutines.DispatchedKt
io.reactivex.internal.operators.observable.ObservableTimeoutTimed: ObservableTimeoutTimed(io.reactivex.Observable,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,io.reactivex.ObservableSource)
androidx.appcompat.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
kotlin.collections.EmptySet: boolean addAll(java.util.Collection)
androidx.appcompat.widget.ActionBarOverlayLayout: void onLayout(boolean,int,int,int,int)
com.example.revolut.rates.R$color: int abc_input_method_navigation_guard
kotlinx.coroutines.internal.LockFreeMPSCQueueCore: int ADD_SUCCESS
androidx.appcompat.R$dimen: int highlight_alpha_material_dark
com.example.revolut.rates.R$attr: int barLength
androidx.customview.R$style: int Widget_Compat_NotificationActionContainer
androidx.constraintlayout.widget.R$styleable: int[] ConstraintSet
kotlin.jvm.internal.MutablePropertyReference0Impl: void set(java.lang.Object)
kotlinx.coroutines.channels.AbstractSendChannel: void onClosed(kotlinx.coroutines.channels.Closed)
com.example.revolut.rates.R$dimen: int subtitle_corner_radius
androidx.databinding.adapters.TextViewBindingAdapter: int DECIMAL
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean onLevelChange(int)
androidx.core.content.pm.PermissionInfoCompat$ProtectionFlags
androidx.appcompat.R$id: int alertTitle
kotlin.sequences.SequencesKt___SequencesKt: double averageOfLong(kotlin.sequences.Sequence)
com.example.revolut.rates.R$attr: int textAppearancePopupMenuHeader
androidx.core.view.inputmethod.InputConnectionCompat: InputConnectionCompat()
io.reactivex.internal.functions.Functions: java.util.concurrent.Callable justCallable(java.lang.Object)
androidx.fragment.app.FragmentManager: boolean popBackStackImmediate(int,int)
com.example.revolut.rates.R$id: int spacer
androidx.appcompat.graphics.drawable.DrawableContainer: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
io.reactivex.internal.util.ObservableQueueDrain: java.lang.Throwable error()
androidx.recyclerview.widget.SortedListAdapterCallback: void onMoved(int,int)
com.example.revolut.rates.R$styleable: int ActionBar_progressBarPadding
io.reactivex.internal.subscriptions.EmptySubscription
androidx.slidingpanelayout.R$styleable
io.reactivex.internal.operators.single.SingleError: void subscribeActual(io.reactivex.SingleObserver)
kotlin.internal.jdk7.JDK7PlatformImplementations: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
androidx.databinding.ObservableDouble: void set(double)
io.reactivex.internal.operators.maybe.MaybeToObservable: io.reactivex.MaybeObserver create(io.reactivex.Observer)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context)
com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextName()
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement: void subscribeActual(io.reactivex.MaybeObserver)
com.jakewharton.rxbinding3.widget.AdapterViewNothingSelectionEvent: android.widget.AdapterView getView()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.content.res.ColorStateList getIconTintList()
androidx.constraintlayout.widget.ConstraintSet: void setTransformPivotX(int,float)
dagger.android.AndroidInjector$Factory: dagger.android.AndroidInjector create(java.lang.Object)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_layout_marginTop
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
okhttp3.FormBody$Builder: FormBody$Builder(java.nio.charset.Charset)
androidx.viewpager.widget.ViewPager: void fakeDragBy(float)
androidx.appcompat.widget.ListPopupWindow: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
kotlinx.coroutines.channels.AbstractChannel: void cleanupSendQueueOnCancel()
kotlinx.coroutines.sync.MutexImpl$lockSuspend$$inlined$suspendAtomicCancellableCoroutine$lambda$1
androidx.core.app.NotificationCompat: java.lang.String EXTRA_MEDIA_SESSION
androidx.core.view.MotionEventCompat: int AXIS_RY
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$groupByTo$3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocusable()
io.reactivex.BackpressureOverflowStrategy: io.reactivex.BackpressureOverflowStrategy valueOf(java.lang.String)
io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.BiFunction)
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KMutableProperty0$Setter getSetter()
androidx.collection.LongSparseArray: LongSparseArray(int)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Button
io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future,io.reactivex.Scheduler)
io.reactivex.Observable: io.reactivex.Observable groupJoin(io.reactivex.ObservableSource,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
androidx.viewpager.widget.ViewPager$LayoutParams: ViewPager$LayoutParams()
io.reactivex.internal.util.AtomicThrowable: boolean isTerminated()
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
com.example.revolut.rates.R$attr: int tooltipText
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: int compareTo(androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo)
androidx.databinding.adapters.RatingBarBindingAdapter: void setListeners(android.widget.RatingBar,android.widget.RatingBar$OnRatingBarChangeListener,androidx.databinding.InverseBindingListener)
kotlinx.android.extensions.CacheImplementation: kotlinx.android.extensions.CacheImplementation NO_CACHE
com.example.revolut.rates.R$attr: int goIcon
androidx.appcompat.widget.AppCompatImageButton
androidx.appcompat.R$style: int Base_V26_Theme_AppCompat
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
io.reactivex.subscribers.TestSubscriber: void dispose()
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_CONTEXT_CLICKED
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int CHAIN_SPREAD
kotlin.reflect.KCallable: kotlin.reflect.KType getReturnType()
androidx.appcompat.R$bool: int abc_config_actionMenuItemAllCaps
kotlin.ranges.UIntRange: boolean isEmpty()
androidx.coordinatorlayout.R$id: int text
android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder
androidx.constraintlayout.widget.Constraints
kotlinx.coroutines.RunnableKt$Runnable$1: void run()
androidx.appcompat.view.menu.MenuWrapperFactory: android.view.MenuItem wrapSupportMenuItem(android.content.Context,androidx.core.internal.view.SupportMenuItem)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int TOP
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(boolean[],java.util.Collection)
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams: SlidingPaneLayout$LayoutParams()
okhttp3.WebSocket
io.reactivex.Observable: io.reactivex.Observable retry()
androidx.fragment.R$styleable: int GradientColor_android_endX
com.example.revolut.rates.R$dimen: int item_touch_helper_max_drag_scroll_per_frame
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setIconAttribute(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte max-GBYM_sE(byte[])
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(int,java.lang.CharSequence)
androidx.coordinatorlayout.widget.CoordinatorLayout$DispatchChangeEvent
kotlin.reflect.KType: kotlin.reflect.KClassifier getClassifier()
okhttp3.internal.Util: java.util.TimeZone UTC
androidx.appcompat.app.ActionBar: boolean openOptionsMenu()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationXBy(float)
io.reactivex.internal.subscriptions.AsyncSubscription: long serialVersionUID
androidx.constraintlayout.solver.Metrics: long chainConnectionResolved
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.constraintlayout.widget.R$id: int start
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterIndexedTo$1: ChannelsKt__Channels_commonKt$filterIndexedTo$1(kotlin.coroutines.Continuation)
kotlin.reflect.KClassifier
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasuredDimension(int,int)
io.reactivex.internal.util.VolatileSizeArrayList: int lastIndexOf(java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replace(java.lang.String,char,char,boolean)
androidx.core.widget.PopupWindowCompat: void setOverlapAnchor(android.widget.PopupWindow,boolean)
io.reactivex.internal.fuseable.SimpleQueue: boolean offer(java.lang.Object,java.lang.Object)
androidx.databinding.ObservableList: void addOnListChangedCallback(androidx.databinding.ObservableList$OnListChangedCallback)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(float[])
dagger.android.DaggerFragment: dagger.android.AndroidInjector fragmentInjector()
io.reactivex.internal.operators.single.SingleInternalHelper
kotlin.jvm.internal.Intrinsics: int compare(int,int)
androidx.core.view.DragStartHelper$OnDragStartListener: boolean onDragStart(android.view.View,androidx.core.view.DragStartHelper)
okio.DeflaterSink: okio.Timeout timeout()
com.example.revolut.rates.R$style: int Animation_AppCompat_Dialog
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable: void subscribeActual(io.reactivex.CompletableObserver)
androidx.core.app.TaskStackBuilder: java.util.Iterator iterator()
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int INVALID_SPAN_ID
kotlin.jvm.internal.CharSpreadBuilder
kotlinx.coroutines.JobSupport: void onCompletionInternal$kotlinx_coroutines_core(java.lang.Object,int)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchTrackballEvent(android.view.MotionEvent)
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable keys(android.view.View,kotlin.jvm.functions.Function1)
androidx.core.widget.NestedScrollView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
io.reactivex.internal.operators.mixed.SingleFlatMapObservable
com.example.revolut.rates.R$integer
androidx.annotation.ColorInt
androidx.core.view.ViewParentCompat: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
androidx.recyclerview.widget.ItemTouchHelper$Callback: int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isCheckable()
androidx.media.R$drawable: int notification_bg_normal_pressed
io.reactivex.Completable: io.reactivex.Flowable startWith(org.reactivestreams.Publisher)
kotlin.io.FilesKt__FileTreeWalkKt: kotlin.io.FileTreeWalk walk(java.io.File,kotlin.io.FileWalkDirection)
androidx.core.animation.AnimatorKt$addListener$2: AnimatorKt$addListener$2()
androidx.core.graphics.CanvasKt: void withRotation$default(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
androidx.core.graphics.drawable.IconKt: android.graphics.drawable.Icon toIcon(byte[])
androidx.appcompat.R$color: int switch_thumb_material_light
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull()
androidx.asynclayoutinflater.R$styleable: int ColorStateListItem_alpha
kotlinx.coroutines.channels.ArrayChannel: java.lang.String getBufferDebugString()
com.example.revolut.rates.R$style: int Base_V26_Theme_AppCompat_Light
androidx.databinding.ViewDataBinding: void setTo(android.util.SparseBooleanArray,int,boolean)
androidx.core.view.MotionEventCompat: int AXIS_ORIENTATION
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector: ObservableWindowBoundarySelector(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function,int)
androidx.legacy.v4.R$styleable: int GradientColor_android_tileMode
androidx.core.app.NotificationCompat$MessagingStyle: NotificationCompat$MessagingStyle(androidx.core.app.Person)
com.jakewharton.rxbinding3.widget.SearchViewQueryTextEvent: android.widget.SearchView getView()
com.example.revolut.rates.R$styleable: int StateListDrawable_android_constantSize
dagger.android.support.R$dimen: int notification_media_narrow_margin
android.support.v4.media.session.MediaSessionCompat$Callback: void onCustomAction(java.lang.String,android.os.Bundle)
com.example.revolut.rates.R$attr: int measureWithLargestChild
androidx.core.graphics.RegionKt$iterator$1
androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)
androidx.recyclerview.R$dimen: int compat_button_padding_horizontal_material
io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver: long serialVersionUID
dagger.android.support.R$attr: int actionBarSize
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setTag(java.lang.Object)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
kotlin.jvm.internal.markers.KMutableSet
io.reactivex.internal.operators.flowable.FlowableDebounce: FlowableDebounce(io.reactivex.Flowable,io.reactivex.functions.Function)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
kotlin.UByteArray: byte[] unbox-impl()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE
androidx.core.animation.AnimatorKt$addPauseListener$2: AnimatorKt$addPauseListener$2()
dagger.android.support.R$style: int Widget_AppCompat_Button
androidx.recyclerview.widget.RecyclerView: boolean hasNestedScrollingParent()
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_centerY
androidx.core.R$style: int TextAppearance_Compat_Notification_Line2
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,boolean)
androidx.recyclerview.widget.ItemTouchHelper$Callback: long getAnimationDuration(androidx.recyclerview.widget.RecyclerView,int,float,float)
dagger.android.DaggerApplication_MembersInjector: void injectBroadcastReceiverInjector(dagger.android.DaggerApplication,dagger.android.DispatchingAndroidInjector)
androidx.appcompat.widget.DecorContentParent: void setWindowCallback(android.view.Window$Callback)
androidx.appcompat.app.AppCompatActivity: boolean onSupportNavigateUp()
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
androidx.core.graphics.BitmapKt: int get(android.graphics.Bitmap,int,int)
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMarkTintMode
androidx.annotation.Dimension: int SP
io.reactivex.internal.subscriptions.SubscriptionArbiter: boolean isCancelled()
androidx.appcompat.widget.TintTypedArray: int getLayoutDimension(int,java.lang.String)
androidx.lifecycle.extensions.R
androidx.core.provider.FontsContractCompat: android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int)
io.reactivex.internal.operators.observable.BlockingObservableMostRecent: java.util.Iterator iterator()
io.reactivex.internal.operators.completable.CompletableFromRunnable
androidx.fragment.R$id: int title
io.reactivex.internal.operators.maybe.MaybeToPublisher: org.reactivestreams.Publisher apply(io.reactivex.MaybeSource)
io.reactivex.Single: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.BiConsumer)
androidx.recyclerview.widget.RecyclerView$OnScrollListener: RecyclerView$OnScrollListener()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(byte[],java.util.Comparator)
kotlin.collections.EmptyList: java.lang.Object remove(int)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: java.lang.Object get(int)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KProperty2 property2(kotlin.jvm.internal.PropertyReference2)
androidx.legacy.v4.R$integer
androidx.core.internal.view.SupportMenu: int FLAG_KEEP_OPEN_ON_SUBMENU_OPENED
androidx.legacy.coreui.R$layout: int notification_template_custom_big
io.reactivex.Single: io.reactivex.Observable toObservable()
androidx.appcompat.R$styleable: int MenuView_android_itemIconDisabledAlpha
androidx.appcompat.widget.ToolbarWidgetWrapper: void setLogo(int)
androidx.customview.R$dimen: int compat_button_inset_vertical_material
kotlin.ranges.RangesKt___RangesKt: short coerceAtLeast(short,short)
androidx.core.util.SparseBooleanArrayKt$keyIterator$1: void setIndex(int)
io.reactivex.Flowable: io.reactivex.Flowable flatMapSingle(io.reactivex.functions.Function,boolean,int)
com.example.revolut.rates.R$attr: int alertDialogCenterButtons
io.reactivex.internal.schedulers.ScheduledDirectPeriodicTask: long serialVersionUID
kotlinx.coroutines.JobKt: boolean cancel(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.jakewharton.rxbinding3.widget.RxSearchView: com.jakewharton.rxbinding3.InitialValueObservable queryTextChanges(android.widget.SearchView)
com.example.revolut.rates.R$styleable: int GradientColor_android_startX
com.example.revolut.rates.R$drawable: int abc_dialog_material_background
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_ttcIndex
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Iterable withIndex(java.lang.Iterable)
dagger.android.support.R$string: int abc_searchview_description_clear
androidx.appcompat.R$styleable: int[] ActionMenuView
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAbortCreation
kotlin.UIntArray: int get-impl(int[],int)
androidx.constraintlayout.widget.ConstraintLayout: void dispatchDraw(android.graphics.Canvas)
androidx.appcompat.R$style: int Base_Animation_AppCompat_DropDownUp
io.reactivex.subscribers.SerializedSubscriber: void request(long)
io.reactivex.Flowable: io.reactivex.Flowable buffer(org.reactivestreams.Publisher)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher limited(int)
io.reactivex.annotations.BackpressureKind: io.reactivex.annotations.BackpressureKind ERROR
androidx.asynclayoutinflater.R$styleable: int GradientColorItem_android_color
io.reactivex.Single: io.reactivex.Single fromFuture(java.util.concurrent.Future)
androidx.swiperefreshlayout.R$attr: int fontProviderCerts
okhttp3.internal.cache.DiskLruCache$Editor: void commit()
kotlin.DeprecationLevel: kotlin.DeprecationLevel WARNING
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence generateSequence(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
androidx.appcompat.R$id: int src_in
androidx.lifecycle.Observer
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_ALBUM_ARTIST
io.reactivex.internal.operators.flowable.FlowableCount
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context)
androidx.appcompat.view.menu.MenuPresenter$Callback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
dagger.android.support.R$color: int primary_material_dark
kotlin.sequences.IndexingSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.IndexingSequence)
com.example.revolut.rates.R$id: int fill_vertical
android.support.v4.media.session.MediaSessionCompat$Callback: void onPrepareFromSearch(java.lang.String,android.os.Bundle)
kotlin.collections.ArraysKt__ArraysKt: ArraysKt__ArraysKt()
androidx.fragment.R$id: int top
dagger.android.support.R$styleable: int TextAppearance_android_shadowDy
dagger.android.support.DaggerFragment_MembersInjector: void injectMembers(dagger.android.support.DaggerFragment)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.content.Intent getIntent()
kotlin.coroutines.experimental.CombinedContext: kotlin.coroutines.experimental.CoroutineContext getLeft()
okhttp3.MultipartBody: okhttp3.MediaType PARALLEL
kotlin.sequences.TransformingIndexedSequence$iterator$1: boolean hasNext()
androidx.appcompat.app.AppCompatDelegate: void onDestroy()
kotlin.jvm.internal.PropertyReference: boolean equals(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableSkipUntil: void subscribeActual(io.reactivex.Observer)
io.reactivex.Maybe: io.reactivex.Maybe retryWhen(io.reactivex.functions.Function)
androidx.core.app.ComponentActivity$ExtraData: ComponentActivity$ExtraData()
androidx.drawerlayout.R$id: int icon
io.reactivex.processors.BehaviorProcessor: java.lang.Throwable getThrowable()
io.reactivex.exceptions.CompositeException: void printStackTrace(java.io.PrintWriter)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.appcompat.view.menu.ActionMenuItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.Bitmap getBitmap()
androidx.cursoradapter.widget.CursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean lastOrNull(boolean[])
androidx.viewpager.widget.ViewPager: void addFocusables(java.util.ArrayList,int,int)
com.example.revolut.rates.R$attr: int searchHintIcon
com.example.revolut.rates.data.model.CurrencyResponse: com.example.revolut.rates.data.model.CurrencyResponse copy(java.lang.String,java.lang.String,java.util.Map)
androidx.appcompat.app.ActionBar: void dispatchMenuVisibilityChanged(boolean)
androidx.databinding.BaseObservable: void removeOnPropertyChangedCallback(androidx.databinding.Observable$OnPropertyChangedCallback)
androidx.core.view.MenuItemCompat: int getNumericModifiers(android.view.MenuItem)
com.example.revolut.rates.R$styleable: int RecyclerView_fastScrollVerticalThumbDrawable
kotlin.text.StringsKt__StringsKt: boolean contains(java.lang.CharSequence,char,boolean)
androidx.appcompat.R$styleable: int Toolbar_collapseContentDescription
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator: long serialVersionUID
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener)
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle: MaybeSwitchIfEmptySingle(io.reactivex.MaybeSource,io.reactivex.SingleSource)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.internal.view.SupportMenuItem: androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence)
com.example.revolut.rates.databinding.RatesItemBinding: android.widget.RelativeLayout currenciesLayout
kotlinx.coroutines.EventLoopBase$DelayedTask: int compareTo(kotlinx.coroutines.EventLoopBase$DelayedTask)
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.widget.WithHint
androidx.media.R$dimen: int compat_button_inset_vertical_material
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: ItemTouchHelper$SimpleCallback(int,int)
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_SHUFFLE_MODE
kotlin.jvm.functions.Function17: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.Job$DefaultImpls: void cancelChildren$default(kotlinx.coroutines.Job,java.lang.Throwable,int,java.lang.Object)
androidx.core.util.SparseIntArrayKt: boolean contains(android.util.SparseIntArray,int)
io.reactivex.internal.subscriptions.AsyncSubscription: boolean setResource(io.reactivex.disposables.Disposable)
io.reactivex.observers.ResourceSingleObserver: ResourceSingleObserver()
kotlin.random.Random: float nextFloat()
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntProgression downTo-5PvTz6A(short,short)
kotlin.jvm.internal.ClassReference: boolean equals(java.lang.Object)
kotlin.ranges.UIntProgression$Companion
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(long[],java.util.Map,kotlin.jvm.functions.Function1)
okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[])
io.reactivex.CompletableEmitter
androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior
io.reactivex.internal.util.SorterFunction: SorterFunction(java.util.Comparator)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.ReceiveOrClosed sendConflated(java.lang.Object)
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_LIST
com.example.revolut.rates.R$color: int abc_background_cache_hint_selector_material_light
androidx.slidingpanelayout.R$styleable: int[] ColorStateListItem
androidx.core.view.accessibility.AccessibilityRecordCompat: void setParcelableData(android.os.Parcelable)
androidx.fragment.app.DialogFragment: void onStop()
kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1: CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext$Key)
kotlin.UShort: java.lang.String toString-impl(short)
io.reactivex.internal.util.HalfSerializer
androidx.cursoradapter.widget.CursorAdapter: androidx.cursoradapter.widget.CursorAdapter$ChangeObserver mChangeObserver
io.reactivex.Flowable: io.reactivex.Flowable cacheWithInitialCapacity(int)
androidx.loader.R$id: int action_divider
com.example.revolut.rates.R$id: int textSpacerNoTitle
androidx.fragment.app.FragmentActivity: FragmentActivity()
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int)
com.example.revolut.rates.R$dimen: int abc_dialog_min_width_minor
okhttp3.Response$Builder: okhttp3.Response$Builder receivedResponseAtMillis(long)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean showOverflowMenu()
androidx.coordinatorlayout.R$styleable: int GradientColor_android_tileMode
kotlinx.coroutines.CompletionHandlerException
android.support.v4.media.session.IMediaSession: void next()
android.support.v4.os.IResultReceiver$Stub: android.os.IBinder asBinder()
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void setAnchorId(int)
com.google.gson.JsonPrimitive: char getAsCharacter()
androidx.slidingpanelayout.R$layout: int notification_template_part_time
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)
androidx.appcompat.app.ActionBarDrawerToggle: void setDrawerSlideAnimationEnabled(boolean)
io.reactivex.internal.operators.single.SingleAmb: SingleAmb(io.reactivex.SingleSource[],java.lang.Iterable)
androidx.core.view.ViewCompat: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int)
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void skipToNext(java.lang.Object)
kotlin.io.ByteStreamsKt$iterator$1: boolean hasNext()
androidx.appcompat.app.WindowDecorActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)
androidx.databinding.ObservableDouble
androidx.slidingpanelayout.R$layout
kotlinx.coroutines.EventLoopBase$DelayedTask: boolean timeToExecute(long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-HwE9HBo(int[],java.lang.Iterable)
androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setImportantForAccessibility(boolean)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
com.example.revolut.rates.R$styleable: int AppCompatTheme_colorControlActivated
kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
io.reactivex.Observable: io.reactivex.Observable take(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.text.Typography: char tm
androidx.constraintlayout.widget.R$attr: int layout_constraintGuide_percent
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
androidx.fragment.app.FragmentTransitionImpl: void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
androidx.constraintlayout.solver.widgets.Guideline: void setOrientation(int)
androidx.arch.core.internal.SafeIterableMap: int size()
io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource,io.reactivex.ObservableSource)
androidx.appcompat.R$styleable: int SearchView_searchIcon
androidx.databinding.adapters.ViewGroupBindingAdapter$OnChildViewAdded
io.reactivex.processors.UnicastProcessor: io.reactivex.processors.UnicastProcessor create(int)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable: ObservableFlatMapCompletable(io.reactivex.ObservableSource,io.reactivex.functions.Function,boolean)
androidx.slidingpanelayout.R$styleable: int GradientColor_android_endY
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PEOPLE
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Mac getMac()
androidx.core.view.LayoutInflaterFactory
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(byte[])
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind VALUE
io.reactivex.observers.ResourceObserver: boolean isDisposed()
io.reactivex.internal.operators.completable.CompletableAndThenCompletable$SourceObserver: long serialVersionUID
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addOneIfEmpty(kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.reactivex.Observable: io.reactivex.Observable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,io.reactivex.ObservableSource)
io.reactivex.observables.ConnectableObservable: io.reactivex.disposables.Disposable connect()
kotlin.text.MatcherMatchResult$groups$1: kotlin.text.MatchGroup get(int)
io.reactivex.internal.operators.parallel.ParallelMapTry: void subscribe(org.reactivestreams.Subscriber[])
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.Menu getMenu()
androidx.viewpager.R$dimen: int compat_button_inset_horizontal_material
androidx.cursoradapter.widget.CursorAdapter: android.database.DataSetObserver mDataSetObserver
androidx.appcompat.R$dimen: int abc_text_size_display_1_material
androidx.media.R$style: int Widget_Compat_NotificationActionContainer
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionView(android.view.View)
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_11
io.reactivex.internal.util.HashMapSupplier: io.reactivex.internal.util.HashMapSupplier valueOf(java.lang.String)
kotlin.collections.ByteIterator: void remove()
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_constrainedHeight
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CONNECT_ERROR
okhttp3.Request
androidx.databinding.ObservableField: ObservableField(java.lang.Object)
androidx.lifecycle.LifecycleRegistryOwner
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintTop_toTopOf
androidx.media.app.NotificationCompat$MediaStyle: android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
com.example.revolut.rates.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_constraintSet
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(double[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(short[],kotlin.jvm.functions.Function1)
androidx.appcompat.view.menu.MenuAdapter: boolean getForceShowIcon()
androidx.loader.content.CursorLoader: java.lang.String[] getProjection()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationX(float)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toChannel(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedBottom(android.view.View)
androidx.appcompat.R$styleable: int AppCompatTheme_colorBackgroundFloating
androidx.core.provider.FontsContractCompat$Columns: java.lang.String ITALIC
kotlinx.coroutines.internal.LockFreeLinkedListNode: void addLast(kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.reactivex.Observable: io.reactivex.Observable concatMapEager(io.reactivex.functions.Function)
androidx.viewpager.R$color: int notification_action_color_filter
dagger.android.support.R$drawable: int notification_bg_normal
androidx.vectordrawable.R$integer: int status_bar_notification_info_maxnum
kotlin.UByteArray: boolean isEmpty()
com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)
io.reactivex.processors.MulticastProcessor: boolean hasComplete()
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: LinearOutSlowInInterpolator()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(long[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.appcompat.R$attr: int selectableItemBackgroundBorderless
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable: FlowableMergeWithCompletable(io.reactivex.Flowable,io.reactivex.CompletableSource)
io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
android.support.v4.media.session.MediaSessionCompat: void setMetadata(android.support.v4.media.MediaMetadataCompat)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencies(android.view.View)
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void skipToQueueItem(java.lang.Object,long)
androidx.databinding.adapters.SeekBarBindingAdapter$OnStopTrackingTouch: void onStopTrackingTouch(android.widget.SeekBar)
dagger.android.support.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
kotlin.UnsignedKt: int doubleToUInt(double)
androidx.appcompat.widget.DropDownListView: int lookForSelectablePosition(int,boolean)
kotlin.collections.ArraysKt___ArraysKt: char[] sliceArray(char[],java.util.Collection)
androidx.cursoradapter.widget.CursorAdapter: int FLAG_REGISTER_CONTENT_OBSERVER
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createExtraVariable()
androidx.core.view.ViewCompat: boolean hasNestedScrollingParent(android.view.View)
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle: FlowableReduceSeedSingle(org.reactivestreams.Publisher,java.lang.Object,io.reactivex.functions.BiFunction)
androidx.fragment.R$string
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe: void subscribeActual(io.reactivex.MaybeObserver)
kotlin.ULongArray: java.util.Iterator iterator()
androidx.appcompat.widget.ViewStubCompat: android.view.View inflate()
com.example.revolut.rates.R$styleable: int LinearLayoutCompat_android_orientation
io.reactivex.Observable: io.reactivex.Observable mergeArrayDelayError(int,int,io.reactivex.ObservableSource[])
com.example.revolut.rates.R$layout: int abc_screen_toolbar
androidx.recyclerview.widget.AsyncDifferConfig
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)
com.example.revolut.rates.R$attr: int colorPrimary
okio.Buffer: okio.ByteString md5()
androidx.recyclerview.widget.LinearSmoothScroller: int calculateDxToMakeVisible(android.view.View,int)
retrofit2.http.HTTP
io.reactivex.internal.operators.completable.CompletableToFlowable: CompletableToFlowable(io.reactivex.CompletableSource)
androidx.appcompat.R$styleable: int MenuGroup_android_id
androidx.appcompat.R$string: int abc_font_family_display_4_material
androidx.recyclerview.R$styleable: int FontFamilyFont_android_fontStyle
androidx.constraintlayout.solver.LinearSystem: LinearSystem()
dagger.android.support.R$styleable: int MenuItem_actionProviderClass
com.example.revolut.rates.R$styleable: int AppCompatTheme_checkedTextViewStyle
androidx.core.animation.AnimatorKt$doOnRepeat$$inlined$addListener$1
dagger.android.support.R$styleable: int LinearLayoutCompat_measureWithLargestChild
com.example.revolut.rates.R$styleable: int[] LinearLayoutCompat
dagger.android.support.R$styleable: int AppCompatTheme_textAppearanceListItem
androidx.core.graphics.drawable.DrawableKt: void updateBounds(android.graphics.drawable.Drawable,int,int,int,int)
androidx.core.view.MotionEventCompat: int AXIS_GAS
androidx.lifecycle.extensions.R$styleable: int CoordinatorLayout_statusBarBackground
kotlin.collections.CollectionsKt___CollectionsKt: void forEach(java.lang.Iterable,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.parallel.ParallelPeek: ParallelPeek(io.reactivex.parallel.ParallelFlowable,io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Action,io.reactivex.functions.Consumer,io.reactivex.functions.LongConsumer,io.reactivex.functions.Action)
androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)
androidx.constraintlayout.widget.ConstraintHelper: void setTag(int,java.lang.Object)
kotlin.coroutines.experimental.CoroutineContext$Element$DefaultImpls
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalWeight(float)
kotlin.jvm.functions.Function10: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.LockFreeMPMCQueue: kotlinx.coroutines.internal.LockFreeMPMCQueueNode removeFirstOrNull()
com.example.revolut.rates.R$color: int material_deep_teal_500
io.reactivex.internal.disposables.DisposableHelper: void dispose()
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
kotlin.jvm.internal.FunctionImpl: java.lang.Object invokeVararg(java.lang.Object[])
androidx.constraintlayout.solver.SolverVariable: int STRENGTH_EQUALITY
com.google.gson.internal.bind.TypeAdapters
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightSubscriber: long serialVersionUID
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object singleOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_256_CCM_8_SHA256
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence take(java.lang.CharSequence,int)
com.jakewharton.rxbinding3.core.R$styleable: int GradientColor_android_centerColor
kotlin.ranges.LongRange: java.lang.Comparable getStart()
androidx.coordinatorlayout.R$drawable: int notification_icon_background
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: boolean isEmpty()
androidx.fragment.R$attr: int fontProviderAuthority
io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable toSortedList(java.util.Comparator)
androidx.appcompat.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)
io.reactivex.observers.TestObserver: void onNext(java.lang.Object)
dagger.android.support.R$style: int Widget_AppCompat_ActionMode
io.reactivex.internal.fuseable.HasUpstreamMaybeSource
androidx.core.app.ActivityOptionsCompat: void update(androidx.core.app.ActivityOptionsCompat)
androidx.drawerlayout.R$attr: int fontProviderCerts
kotlin.io.ByteStreamsKt$iterator$1
androidx.appcompat.R$style: int Base_V28_Theme_AppCompat
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: long serialVersionUID
kotlin.ranges.RangesKt__RangesJVMKt: kotlin.ranges.ClosedFloatingPointRange rangeTo(float,float)
androidx.viewpager.widget.ViewPager: boolean executeKeyEvent(android.view.KeyEvent)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setOffset(int,int)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory
androidx.appcompat.view.SupportActionModeWrapper: android.view.View getCustomView()
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_NOT_SUPPORTED
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
kotlin.jvm.internal.IntSpreadBuilder
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()
com.jakewharton.rxbinding3.widget.RxCompoundButton
kotlin.reflect.KClass
androidx.appcompat.R$id: int notification_background
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(float[],kotlin.ranges.IntRange)
io.reactivex.Flowable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function)
io.reactivex.Flowable: io.reactivex.Flowable concatMapDelayError(io.reactivex.functions.Function)
com.example.revolut.rates.R$style: int Animation_AppCompat_DropDownUp
io.reactivex.internal.operators.single.SingleCache: SingleCache(io.reactivex.SingleSource)
androidx.viewpager.R$dimen: int notification_right_icon_size
io.reactivex.internal.operators.completable.CompletableNever
com.google.gson.internal.UnsafeAllocator: com.google.gson.internal.UnsafeAllocator create()
com.example.revolut.rates.R$style: int TextAppearance_Compat_Notification_Line2
kotlin.text.RegexKt
androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType: androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType STRICT
androidx.core.ktx.R$id
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
androidx.core.text.BidiFormatter: boolean isRtl(java.lang.String)
androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener: void onPrepareListView(android.widget.ListView)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_editor_absoluteX
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void setIndexInArray(int)
androidx.core.app.ActivityCompat
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: java.util.ArrayList getClauses()
dagger.android.support.R$color: int button_material_light
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class)
androidx.versionedparcelable.VersionedParcel: void setOutputField(int)
kotlin.collections.CollectionsKt__IterablesKt: java.util.Collection convertToSetForSetOperationWith(java.lang.Iterable,java.lang.Iterable)
androidx.media.MediaBrowserProtocol: java.lang.String DATA_MEDIA_ITEM_ID
androidx.core.util.SparseBooleanArrayKt: boolean isEmpty(android.util.SparseBooleanArray)
androidx.fragment.app.Fragment: java.lang.String getString(int)
retrofit2.adapter.rxjava2.Result: java.lang.Throwable error()
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable globalLayouts(android.view.View)
androidx.constraintlayout.solver.Metrics: long slackvariables
com.google.gson.JsonDeserializationContext: java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)
androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)
kotlinx.coroutines.PoolThread: PoolThread(kotlinx.coroutines.ThreadPoolDispatcher,java.lang.Runnable,java.lang.String)
androidx.appcompat.R$styleable: int AppCompatTheme_dialogPreferredPadding
dagger.android.support.R$color: int abc_color_highlight_material
io.reactivex.internal.util.ExceptionHelper$Termination: long serialVersionUID
androidx.legacy.v4.R$styleable: int GradientColor_android_startY
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setTransition(int)
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_tileMode
dagger.android.support.R$layout: int abc_screen_simple_overlay_action_mode
com.example.revolut.rates.R$styleable: int TextAppearance_android_fontFamily
androidx.customview.R$id: int text2
dagger.android.support.R$attr: int subtitleTextStyle
com.example.revolut.rates.R$id: int search_voice_btn
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlinx.coroutines.selects.SelectKt: java.lang.Object access$getRESUMED$p()
com.example.revolut.rates.R$styleable: int SearchView_suggestionRowLayout
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: java.lang.Comparable minOf(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable)
io.reactivex.CompletableObserver: void onComplete()
kotlin.Triple
kotlinx.coroutines.scheduling.WorkQueueKt: int MASK
androidx.fragment.app.FragmentManager: void popBackStack()
androidx.appcompat.view.menu.MenuItemImpl: int getNumericModifiers()
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable: FlowableSwitchMapCompletable(io.reactivex.Flowable,io.reactivex.functions.Function,boolean)
kotlinx.coroutines.InactiveNodeList
androidx.appcompat.widget.DecorToolbar: void setWindowCallback(android.view.Window$Callback)
androidx.viewpager.R$id: int text
androidx.drawerlayout.widget.DrawerLayout: void onLayout(boolean,int,int,int,int)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object)
androidx.core.hardware.display.DisplayManagerCompat
androidx.core.ktx.R$style: int TextAppearance_Compat_Notification_Line2
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object invokeSuspend(java.lang.Object)
io.reactivex.internal.operators.single.SingleAmb: void subscribeActual(io.reactivex.SingleObserver)
okio.BufferedSource: java.lang.String readUtf8LineStrict(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.reactivex.internal.observers.BasicQueueDisposable: boolean offer(java.lang.Object)
com.example.revolut.rates.R$styleable: int ConstraintSet_layout_editor_absoluteY
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.lang.String getColumnAlignmentRepresentation(int)
kotlin.text.Typography
dagger.android.support.R$styleable: int DrawerArrowToggle_color
com.example.revolut.rates.R$drawable: int abc_ic_ab_back_material
androidx.fragment.app.FragmentTransitionImpl: java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate: void subscribeActual(io.reactivex.Observer)
com.example.revolut.rates.R$styleable: int FontFamily_fontProviderPackage
androidx.core.content.SharedPreferencesKt: void edit(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1)
kotlin.coroutines.experimental.EmptyCoroutineContext: kotlin.coroutines.experimental.CoroutineContext minusKey(kotlin.coroutines.experimental.CoroutineContext$Key)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int getSpanIndex()
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: long serialVersionUID
dagger.android.support.R$attr: int switchPadding
io.reactivex.internal.operators.maybe.MaybeFromRunnable
okio.Buffer: okio.Buffer buffer()
com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent: int getCount()
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc: void finishOnSuccess(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.jvm.internal.FloatCompanionObject: float getMIN_VALUE()
androidx.core.view.inputmethod.EditorInfoCompat: EditorInfoCompat()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isContentInvalid()
androidx.print.PrintHelper: void printBitmap(java.lang.String,android.net.Uri,androidx.print.PrintHelper$OnPrintFinishCallback)
androidx.core.content.FileProvider: android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File)
androidx.appcompat.widget.DecorToolbar: boolean hasIcon()
io.reactivex.Notification: boolean equals(java.lang.Object)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintHorizontal_chainStyle
io.reactivex.internal.subscriptions.ArrayCompositeSubscription: void dispose()
io.reactivex.Observable: io.reactivex.Observable distinctUntilChanged()
androidx.versionedparcelable.VersionedParcel: java.lang.Object[] readArray(java.lang.Object[])
io.reactivex.internal.operators.flowable.FlowableScalarXMap: boolean tryScalarXMapSubscribe(org.reactivestreams.Publisher,org.reactivestreams.Subscriber,io.reactivex.functions.Function)
kotlinx.coroutines.channels.AbstractChannel: java.lang.Object poll()
io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean hasSubMenu()
dagger.android.support.R$styleable: int ActionBar_itemPadding
androidx.appcompat.R$attr: int fontVariationSettings
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.CharSequence getTitle()
androidx.media.R$styleable: int ColorStateListItem_android_color
com.example.revolut.rates.R$styleable: int PopupWindowBackgroundState_state_above_anchor
com.example.revolut.rates.common.DoubleToStringKt
okhttp3.internal.io.FileSystem: boolean exists(java.io.File)
kotlin.collections.ArraysKt___ArraysKt: short[] reversedArray(short[])
androidx.appcompat.R$dimen: int abc_text_size_button_material
androidx.appcompat.R$attr: int navigationMode
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void indices$annotations(short[])
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int matchConstraintMaxWidth
kotlin.jvm.internal.TypeIntrinsics: java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int)
io.reactivex.Single: io.reactivex.Flowable mergeDelayError(io.reactivex.SingleSource,io.reactivex.SingleSource)
androidx.recyclerview.widget.OrientationHelper: void offsetChildren(int)
com.example.revolut.rates.R$color: int secondary_text_disabled_material_dark
androidx.databinding.ViewDataBinding: float parse(java.lang.String,float)
kotlinx.coroutines.JobCancellationNode: JobCancellationNode(kotlinx.coroutines.Job)
okhttp3.Protocol: okhttp3.Protocol HTTP_2
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setNumRows(int)
androidx.recyclerview.widget.SortedList: void recalculatePositionOfItemAt(int)
androidx.slidingpanelayout.R$drawable
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(short[],int)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber: long serialVersionUID
dagger.android.support.R$styleable: int AppCompatTheme_actionButtonStyle
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(java.lang.Object[],kotlin.ranges.IntRange)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void onBoundsChange(android.graphics.Rect)
io.reactivex.internal.operators.observable.ObservableWindowTimed: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.widget.ActionMenuView$LayoutParams: int extraPixels
androidx.versionedparcelable.NonParcelField
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(int[])
com.jakewharton.rxbinding3.core.R$id: int right_icon
androidx.recyclerview.widget.LinearLayoutManager: boolean isAutoMeasureEnabled()
androidx.drawerlayout.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
android.support.v4.app.INotificationSideChannel$Stub
com.example.revolut.rates.R$layout: int abc_alert_dialog_title_material
androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintHeight_min
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry
com.jakewharton.rxbinding3.widget.TextViewAfterTextChangeEvent
androidx.core.view.ViewKt: void setGone(android.view.View,boolean)
androidx.appcompat.R$styleable: int GradientColor_android_tileMode
com.example.revolut.rates.R$styleable: int AppCompatTextView_android_textAppearance
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_URI
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment RIGHT
androidx.swiperefreshlayout.R$attr: int fontProviderAuthority
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator naturalOrder()
androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)
androidx.lifecycle.extensions.R$drawable: int notification_bg
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
io.reactivex.internal.operators.observable.ObservableMap: ObservableMap(io.reactivex.ObservableSource,io.reactivex.functions.Function)
androidx.appcompat.R$style: int Base_V28_Theme_AppCompat_Light
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: CoroutineScheduler$Worker(kotlinx.coroutines.scheduling.CoroutineScheduler,int)
com.example.revolut.rates.R$styleable: int AppCompatTheme_buttonBarButtonStyle
androidx.recyclerview.widget.RecyclerView$LayoutManager: void assertInLayoutOrScroll(java.lang.String)
androidx.appcompat.widget.ListPopupWindow: void setAdapter(android.widget.ListAdapter)
io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer)
io.reactivex.internal.operators.observable.ObservableTakeLastOne
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.GlobalQueue access$getGlobalQueue$p(kotlinx.coroutines.scheduling.CoroutineScheduler)
kotlin.ULongArray: kotlin.collections.ULongIterator iterator-impl(long[])
androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.appcompat.R$bool
android.support.v4.media.session.IMediaSession: void stop()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation
androidx.core.app.JobIntentService: void onHandleWork(android.content.Intent)
androidx.print.PrintHelper: void setScaleMode(int)
kotlin.text.MatcherMatchResult$groupValues$1: int getSize()
androidx.constraintlayout.solver.widgets.ResolutionDimension: void remove()
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeChanged(int,int,java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.Character singleOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$dimen: int abc_floating_window_z
kotlinx.coroutines.ResumeModeKt
com.jakewharton.rxbinding3.view.ViewScrollChangeEvent: int getOldScrollX()
androidx.core.view.WindowInsetsCompat: int getStableInsetTop()
androidx.core.view.AccessibilityDelegateCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
io.reactivex.subjects.PublishSubject: void subscribeActual(io.reactivex.Observer)
androidx.core.util.SparseArrayKt: kotlin.collections.IntIterator keyIterator(android.util.SparseArray)
androidx.core.app.NotificationCompat: int DEFAULT_SOUND
okhttp3.internal.http2.Http2Connection: void start()
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory CHARACTER_FACTORY
androidx.core.view.ViewCompat: int MEASURED_STATE_TOO_SMALL
androidx.core.app.RemoteInput: java.lang.String EXTRA_RESULTS_DATA
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintRight_toLeftOf
kotlin.collections.ArraysKt___ArraysKt: boolean any(short[])
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: java.lang.Object get(int)
okhttp3.Connection
io.reactivex.internal.observers.BasicFuseableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: long serialVersionUID
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-EtDCXyQ$default(short[],short,int,int,int,java.lang.Object)
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification_Info_Media
androidx.viewpager.widget.ViewPager: void onRestoreInstanceState(android.os.Parcelable)
kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1: java.util.Iterator iterator()
androidx.core.view.inputmethod.EditorInfoCompat: void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[])
androidx.constraintlayout.widget.ConstraintSet: int LEFT
okio.ForwardingSink
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart ATOMIC
kotlin.sequences.TransformingSequence: kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.TransformingSequence)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS
androidx.databinding.ObservableInt: ObservableInt(androidx.databinding.Observable[])
androidx.appcompat.app.ActionBarDrawerToggle: void onDrawerSlide(android.view.View,float)
com.example.revolut.rates.R$color: int button_material_light
kotlin.collections.FloatIterator: java.lang.Object next()
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_MARK_AS_UNREAD
kotlin.DeprecationLevel: kotlin.DeprecationLevel[] values()
io.reactivex.subscribers.TestSubscriber
androidx.appcompat.view.menu.MenuView$ItemView: void setIcon(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeOnMaybeObserver: long serialVersionUID
androidx.core.os.EnvironmentCompat
io.reactivex.subscribers.DisposableSubscriber: void onStart()
androidx.recyclerview.R$drawable: int notification_action_background
android.support.v4.media.MediaBrowserCompat$MediaItem: int FLAG_BROWSABLE
io.reactivex.Observable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer)
kotlinx.coroutines.DisposeOnCompletion: java.lang.Object invoke(java.lang.Object)
androidx.customview.R$styleable: int GradientColor_android_centerX
androidx.appcompat.view.ActionMode: void setTitleOptionalHint(boolean)
io.reactivex.internal.util.AtomicThrowable: boolean addThrowable(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableTake
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setInverseBackgroundForced(boolean)
androidx.recyclerview.R$dimen: int notification_small_icon_background_padding
androidx.recyclerview.widget.RecyclerView: boolean isNestedScrollingEnabled()
androidx.databinding.adapters.ViewBindingAdapter: void setPaddingLeft(android.view.View,float)
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe: void subscribeActual(io.reactivex.MaybeObserver)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String decapitalize(java.lang.String,java.util.Locale)
dagger.android.support.R$styleable: int AppCompatTheme_windowActionModeOverlay
com.google.gson.internal.LazilyParsedNumber: float floatValue()
dagger.internal.DoubleCheck: javax.inject.Provider provider(javax.inject.Provider)
io.reactivex.Maybe: io.reactivex.Maybe delaySubscription(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.R$attr: int colorSwitchThumbNormal
androidx.appcompat.R$styleable: int ActionBar_divider
androidx.core.R$dimen: int compat_button_inset_horizontal_material
com.jakewharton.rxbinding3.widget.AdapterViewItemClickEvent: android.widget.AdapterView getView()
androidx.legacy.coreui.R$styleable: int FontFamilyFont_android_font
androidx.core.os.LocaleListCompat: java.lang.String toString()
androidx.core.app.FrameMetricsAggregator: int INPUT_INDEX
okhttp3.EventListener: EventListener()
androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
androidx.swiperefreshlayout.R$drawable
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function getOnSingleAssembly()
kotlin.collections.AbstractCollection
com.example.revolut.rates.R$color: int primary_text_default_material_dark
androidx.viewpager.R$string: int status_bar_notification_info_overflow
okhttp3.Dispatcher: void setMaxRequests(int)
io.reactivex.internal.operators.observable.ObservableScan: ObservableScan(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable: ObservableMergeWithCompletable(io.reactivex.Observable,io.reactivex.CompletableSource)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter SHORT
io.reactivex.internal.operators.flowable.FlowableToList: void subscribeActual(org.reactivestreams.Subscriber)
dagger.android.DaggerContentProvider
dagger.android.support.R$dimen: int abc_text_size_title_material
androidx.coordinatorlayout.R$styleable: int FontFamily_fontProviderCerts
kotlin.collections.ArraysKt___ArraysKt: void forEach(short[],kotlin.jvm.functions.Function1)
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality WHITESPACE
io.reactivex.Observer: void onError(java.lang.Throwable)
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void sendCustomAction(java.lang.Object,java.lang.String,android.os.Bundle)
androidx.constraintlayout.widget.Constraints$LayoutParams: float rotationX
com.example.revolut.rates.R$style: int TextAppearance_Compat_Notification_Time_Media
androidx.fragment.app.FragmentController: int getActiveFragmentsCount()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabeledBy(android.view.View,int)
io.reactivex.internal.operators.flowable.FlowableTakePublisher: void subscribeActual(org.reactivestreams.Subscriber)
androidx.customview.widget.ExploreByTouchHelper: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
kotlin.collections.EmptyList: java.lang.Object get(int)
io.reactivex.Flowable: io.reactivex.Flowable switchMapMaybeDelayError(io.reactivex.functions.Function)
kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Maybe onAssembly(io.reactivex.Maybe)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(float[])
retrofit2.adapter.rxjava2.Result: retrofit2.Response response()
androidx.documentfile.provider.DocumentFile: java.lang.String getType()
androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_STANDARD
io.reactivex.subscribers.DisposableSubscriber: void dispose()
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_1
com.jakewharton.rxbinding3.core.RxNestedScrollView
io.reactivex.ObservableSource: void subscribe(io.reactivex.Observer)
kotlin.collections.ArraysKt___ArraysKt: boolean[] reversedArray(boolean[])
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_optimizationLevel
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder eventListenerFactory(okhttp3.EventListener$Factory)
androidx.appcompat.view.menu.MenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean isFocused()
kotlin.collections.CollectionsKt___CollectionsKt: int indexOfLast(java.lang.Iterable,kotlin.jvm.functions.Function1)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory BIT_SET_FACTORY
com.example.revolut.rates.data.model.Rate: com.example.revolut.rates.data.model.Rate copy(java.lang.String,java.lang.Double)
io.reactivex.internal.operators.single.SingleInternalHelper: java.lang.Iterable iterableToFlowable(java.lang.Iterable)
android.support.v4.os.IResultReceiver: void send(int,android.os.Bundle)
kotlin.sequences.DropTakeSequence: kotlin.sequences.Sequence drop(int)
kotlin.internal.AccessibleLateinitPropertyLiteral
okhttp3.internal.tls.BasicCertificateChainCleaner: BasicCertificateChainCleaner(okhttp3.internal.tls.TrustRootIndex)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3
kotlinx.coroutines.ScheduledKt: java.lang.Object withTimeoutOrNull(int,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: float first(float[])
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void draw(android.graphics.Canvas)
io.reactivex.internal.operators.completable.CompletableToObservable
io.reactivex.Maybe: io.reactivex.Single toSingle()
androidx.viewpager.R$drawable: int notification_bg_normal_pressed
kotlin.collections.ArraysKt___ArraysKt: boolean all(java.lang.Object[],kotlin.jvm.functions.Function1)
dagger.android.support.R$styleable: int AppCompatTextHelper_android_drawableLeft
android.support.v4.media.session.PlaybackStateCompat: long ACTION_SET_SHUFFLE_MODE_ENABLED
kotlinx.coroutines.AbstractCoroutine: void onCancellationInternal$kotlinx_coroutines_core(kotlinx.coroutines.CompletedExceptionally)
kotlin.collections.ArraysKt___ArraysKt: double average(short[])
androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
androidx.coordinatorlayout.R$styleable: int GradientColorItem_android_offset
androidx.legacy.v4.R$drawable: int notification_template_icon_bg
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: java.lang.Object poll()
dagger.android.support.R$id: int info
androidx.core.animation.AnimatorKt$addListener$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(float[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
com.example.revolut.rates.data.model.CurrencyResponse: java.lang.String component2()
androidx.recyclerview.widget.GridLayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
kotlin.coroutines.CombinedContext$Serialized: long serialVersionUID
androidx.appcompat.widget.DecorToolbar: boolean showOverflowMenu()
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(byte[])
kotlin.UnsignedKt: int uintCompare(int,int)
dagger.android.support.R$drawable: int abc_ic_star_black_16dp
androidx.core.ktx.R$attr: int fontProviderFetchStrategy
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(boolean[],kotlin.jvm.functions.Function1)
androidx.databinding.ViewStubProxy: androidx.databinding.ViewDataBinding getBinding()
androidx.databinding.adapters.AdapterViewBindingAdapter: void setSelectedItemPosition(android.widget.AdapterView,int)
androidx.core.app.ShareCompat$IntentBuilder: void startChooser()
kotlin.jvm.JvmName
io.reactivex.internal.operators.single.SingleResumeNext
androidx.constraintlayout.solver.widgets.Guideline: float mRelativePercent
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Byte[] toTypedArray(byte[])
androidx.coordinatorlayout.R$dimen: int notification_action_icon_size
androidx.legacy.coreui.R$layout: int notification_template_icon_group
io.reactivex.internal.operators.completable.CompletableSubscribeOn: void subscribeActual(io.reactivex.CompletableObserver)
kotlin.sequences.SequencesKt___SequencesKt: int indexOf(kotlin.sequences.Sequence,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties
androidx.legacy.coreui.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.recyclerview.R$styleable: int GradientColor_android_centerColor
kotlinx.coroutines.channels.AbstractChannel: boolean isEmpty()
android.support.v4.media.RatingCompat: android.support.v4.media.RatingCompat newUnratedRating(int)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle: void subscribeActual(io.reactivex.SingleObserver)
okhttp3.internal.cache.CacheStrategy: okhttp3.Request networkRequest
androidx.core.content.res.TypedArrayKt: int getIntegerOrThrow(android.content.res.TypedArray,int)
kotlin.io.OnErrorAction: kotlin.io.OnErrorAction[] values()
io.reactivex.observers.TestObserver: TestObserver(io.reactivex.Observer)
com.example.revolut.rates.R$styleable: int LinearLayoutCompat_android_baselineAligned
io.reactivex.internal.observers.DeferredScalarDisposable: boolean isDisposed()
androidx.appcompat.widget.DecorToolbar: void setCustomView(android.view.View)
androidx.appcompat.app.ActionBar: void removeAllTabs()
com.example.revolut.rates.RatesApp: retrofit2.Retrofit retrofit
androidx.appcompat.widget.AppCompatImageButton: void drawableStateChanged()
androidx.annotation.IntDef: boolean flag()
io.reactivex.functions.Function7: java.lang.Object apply(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent: com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent copy$default(com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent,android.widget.AbsListView,int,int,int,int,int,java.lang.Object)
io.reactivex.processors.BehaviorProcessor: boolean hasThrowable()
kotlin.jvm.internal.TypeReference: java.lang.String access$asString(kotlin.jvm.internal.TypeReference,kotlin.reflect.KTypeProjection)
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_SET_RATING
com.example.revolut.rates.R$style: int Widget_AppCompat_ActionButton_Overflow
io.reactivex.internal.operators.observable.ObservableCreate
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(short[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
io.reactivex.internal.subscriptions.SubscriptionHelper: boolean deferredSetOnce(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicLong,org.reactivestreams.Subscription)
com.example.revolut.rates.R$attr: int hideOnContentScroll
androidx.lifecycle.ViewModelStoreOwner
androidx.loader.R$dimen: int notification_large_icon_width
androidx.legacy.coreutils.R$attr: int fontProviderAuthority
okhttp3.Request$Builder: okhttp3.Request$Builder cacheControl(okhttp3.CacheControl)
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
androidx.core.view.accessibility.AccessibilityRecordCompat: void setRemovedCount(int)
androidx.lifecycle.extensions.R$id: int none
io.reactivex.internal.operators.single.SingleNever: io.reactivex.Single INSTANCE
com.example.revolut.rates.R$id: int standard
kotlin.sequences.SubSequence$iterator$1: boolean hasNext()
androidx.appcompat.view.menu.ExpandedMenuView
dagger.android.support.R$style: int Widget_AppCompat_ActionBar_TabBar
com.google.gson.stream.JsonReader: void beginArray()
androidx.core.app.NotificationCompat$Action: boolean getShowsUserInterface()
okio.Buffer: void flush()
androidx.legacy.v4.R$layout: int notification_template_big_media
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(short[])
kotlin.io.ByteStreamsKt$iterator$1: void setFinished(boolean)
kotlin.text.StringsKt__StringsKt: java.lang.String commonPrefixWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getX()
kotlinx.coroutines.channels.AbstractChannel$onReceiveOrNull$1: void registerSelectClause1(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2)
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizePresetSizes
kotlin.ranges.URangesKt___URangesKt: int coerceAtLeast-J1ME1BU(int,int)
androidx.core.view.ViewCompat: boolean isOpaque(android.view.View)
okio.Buffer: okio.Buffer write(byte[],int,int)
com.jakewharton.rxbinding3.view.MenuItemActionViewCollapseEvent: com.jakewharton.rxbinding3.view.MenuItemActionViewCollapseEvent copy$default(com.jakewharton.rxbinding3.view.MenuItemActionViewCollapseEvent,android.view.MenuItem,int,java.lang.Object)
kotlin.UByteArray: boolean removeAll(java.util.Collection)
androidx.customview.R$layout: int notification_action
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: void afterDownstream()
androidx.drawerlayout.R$styleable: int[] GradientColor
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
androidx.legacy.coreui.R$attr: int keylines
dagger.android.support.R$styleable: int ActionBar_title
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object filterIndexedTo(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.drawerlayout.R$styleable: int[] ColorStateListItem
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(long[],java.util.Collection,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.flowable.FlowableRetryPredicate$RetrySubscriber: long serialVersionUID
androidx.asynclayoutinflater.view.AsyncLayoutInflater: void inflate(int,android.view.ViewGroup,androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener)
androidx.appcompat.view.ActionMode: java.lang.CharSequence getTitle()
androidx.core.net.ConnectivityManagerCompat
com.google.gson.JsonElement: boolean isJsonNull()
okhttp3.internal.http2.Header: boolean equals(java.lang.Object)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet)
okio.Buffer: okio.BufferedSink writeShortLe(int)
io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource,int)
androidx.appcompat.app.ActionBar$DisplayOptions
androidx.customview.R$dimen: int compat_notification_large_icon_max_height
androidx.fragment.app.FragmentPagerAdapter: void startUpdate(android.view.ViewGroup)
androidx.appcompat.view.menu.ActionMenuItem: android.view.View getActionView()
androidx.databinding.adapters.SeekBarBindingAdapter$OnStartTrackingTouch
dagger.android.AndroidInjection: void inject(android.content.ContentProvider)
kotlin.text.StringsKt__StringsKt: boolean contains$default(java.lang.CharSequence,char,boolean,int,java.lang.Object)
androidx.fragment.app.Fragment: boolean isInLayout()
androidx.core.view.ViewParentCompat
io.reactivex.internal.subscribers.DeferredScalarSubscriber: void onComplete()
androidx.core.view.MenuKt: boolean contains(android.view.Menu,android.view.MenuItem)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterNot(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2)
kotlinx.coroutines.selects.SelectClause0
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: int lastIndexOf-7apg3OU(byte)
com.example.revolut.rates.R$styleable: int MenuItem_android_checkable
kotlin.collections.ArraysKt___ArraysKt: boolean none(byte[],kotlin.jvm.functions.Function1)
com.google.gson.annotations.Expose: boolean deserialize()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.jakewharton.rxbinding3.widget.TextViewBeforeTextChangeEvent: int component5()
kotlin.jvm.functions.FunctionN
kotlin.Suppress: java.lang.String[] names()
io.reactivex.internal.schedulers.AbstractDirectTask: java.util.concurrent.FutureTask FINISHED
androidx.legacy.v4.R$id: int tag_unhandled_key_listeners
androidx.constraintlayout.widget.Placeholder: void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout)
androidx.appcompat.widget.SwitchCompat: void onMeasure(int,int)
com.google.gson.TypeAdapter: java.lang.String toJson(java.lang.Object)
io.reactivex.internal.subscriptions.BooleanSubscription: void cancel()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setVisible(boolean)
androidx.appcompat.view.ActionMode$Callback
kotlin.collections.SetsKt__SetsKt: java.util.Set setOf(java.lang.Object[])
androidx.recyclerview.widget.RecyclerView: void smoothScrollToPosition(int)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_rotation
dagger.android.support.R$attr: int actionViewClass
kotlin.collections.IndexedValue: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(byte[],kotlin.jvm.functions.Function1)
androidx.vectordrawable.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setParallaxDistance(int)
dagger.android.support.R$drawable: int abc_list_selector_background_transition_holo_light
com.example.revolut.rates.di.AppModule_ProvideRatesApiFactory: com.example.revolut.rates.data.RatesApi get()
androidx.core.view.accessibility.AccessibilityRecordCompat: int hashCode()
retrofit2.Retrofit: java.util.concurrent.Executor callbackExecutor()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setSpinEnabled(boolean)
io.reactivex.internal.util.NotificationLite: io.reactivex.internal.util.NotificationLite valueOf(java.lang.String)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence distinctBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
kotlin.ULongArray: java.lang.String toString()
dagger.android.HasServiceInjector: dagger.android.AndroidInjector serviceInjector()
com.example.revolut.rates.R$styleable: int StateListDrawable_android_dither
kotlin.contracts.ContractBuilder$DefaultImpls: kotlin.contracts.CallsInPlace callsInPlace$default(kotlin.contracts.ContractBuilder,kotlin.Function,kotlin.contracts.InvocationKind,int,java.lang.Object)
androidx.fragment.app.FragmentTransaction: int TRANSIT_ENTER_MASK
androidx.constraintlayout.widget.Barrier: int getType()
androidx.core.widget.AutoScrollHelper: int EDGE_TYPE_INSIDE_EXTEND
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(byte[])
io.reactivex.Single: io.reactivex.Flowable concatEager(java.lang.Iterable)
androidx.loader.R$dimen: int compat_button_padding_vertical_material
androidx.databinding.adapters.AdapterViewBindingAdapter$OnNothingSelected
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.core.view.ViewGroupKt: int getSize(android.view.ViewGroup)
androidx.fragment.app.FragmentManager: boolean isDestroyed()
androidx.appcompat.R$styleable: int AppCompatTheme_searchViewStyle
kotlin.sequences.TakeSequence$iterator$1: java.lang.Object next()
okhttp3.CertificatePinner: boolean equals(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo()
com.google.gson.JsonPrimitive: double getAsDouble()
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void cancel()
kotlinx.coroutines.JobSupport: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.legacy.coreutils.R$drawable: int notification_action_background
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(boolean[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(boolean[],java.lang.Iterable)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[],int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.ByteSpreadBuilder: byte[] toArray()
androidx.appcompat.R$drawable: int abc_textfield_activated_mtrl_alpha
okio.ByteString: boolean startsWith(byte[])
androidx.core.app.ServiceCompat: int STOP_FOREGROUND_DETACH
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_Light_ActionBar
android.support.v4.media.MediaDescriptionCompat: java.lang.Object getMediaDescription()
androidx.appcompat.view.menu.MenuBuilder: boolean isGroupDividerEnabled()
kotlin.text.StringsKt__StringsKt: java.lang.String trimStart(java.lang.String,kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.ClosedRange,double)
kotlin.io.FilesKt__UtilsKt: java.io.File relativeTo(java.io.File,java.io.File)
androidx.core.ktx.R$id: int normal
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setDuration(long)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: ConstraintTableLayout()
dagger.android.support.R$layout: int abc_list_menu_item_radio
androidx.swiperefreshlayout.R$layout: int notification_action
com.example.revolut.rates.R$drawable: int abc_item_background_holo_dark
androidx.appcompat.R$id: int scrollIndicatorUp
androidx.core.graphics.PointKt: android.graphics.Point unaryMinus(android.graphics.Point)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintLeft_creator
androidx.appcompat.widget.ToolbarWidgetWrapper: void initProgress()
android.support.v4.media.session.MediaSessionCompat: void addOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)
kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,short)
okhttp3.Response$Builder: okhttp3.Response$Builder code(int)
androidx.coordinatorlayout.R$id: int tag_transition_group
androidx.databinding.adapters.ViewGroupBindingAdapter$OnAnimationStart
dagger.Component: java.lang.Class[] dependencies()
androidx.appcompat.R$styleable: int SearchView_android_focusable
kotlin.jvm.JvmSynthetic
kotlin.text.StringsKt__StringsJVMKt: java.lang.String decodeToString(byte[])
androidx.appcompat.widget.ToolbarWidgetWrapper: int getDisplayOptions()
androidx.databinding.ViewDataBinding: java.lang.Object[] mapBindings(androidx.databinding.DataBindingComponent,android.view.View,int,androidx.databinding.ViewDataBinding$IncludedLayouts,android.util.SparseIntArray)
kotlin.collections.ArraysKt___ArraysKt: byte[] sortedArrayDescending(byte[])
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstMatchConstraintWidget()
io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher: FlowableConcatMapPublisher(org.reactivestreams.Publisher,io.reactivex.functions.Function,int,io.reactivex.internal.util.ErrorMode)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.asynclayoutinflater.R$id: int blocking
io.reactivex.internal.observers.BiConsumerSingleObserver: long serialVersionUID
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object last(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
okio.Buffer: okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTintList(android.content.res.ColorStateList)
androidx.documentfile.provider.DocumentFile: androidx.documentfile.provider.DocumentFile createFile(java.lang.String,java.lang.String)
androidx.core.util.RangeKt: android.util.Range plus(android.util.Range,android.util.Range)
io.reactivex.internal.operators.observable.ObservableReplay: io.reactivex.ObservableSource source()
androidx.recyclerview.widget.DefaultItemAnimator: boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(long[])
androidx.appcompat.view.menu.MenuView$ItemView: boolean showsIcon()
androidx.core.util.SparseArrayKt$keyIterator$1: int getIndex()
dagger.android.support.R$attr: int listPopupWindowStyle
com.jakewharton.rxbinding3.widget.TextViewEditorActionEvent: android.view.KeyEvent component3()
kotlinx.coroutines.RunnableKt$Runnable$1
kotlin.jvm.internal.PropertyReference0Impl: PropertyReference0Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
androidx.slidingpanelayout.R$style: int Widget_Compat_NotificationActionText
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHeight(int)
androidx.core.util.Pools$SynchronizedPool: boolean release(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List sortedBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int ConstraintSet_android_minWidth
io.reactivex.MaybeEmitter: void onError(java.lang.Throwable)
androidx.drawerlayout.R$color
okio.Buffer: okio.Buffer clone()
io.reactivex.Single: io.reactivex.Single onErrorReturn(io.reactivex.functions.Function)
androidx.appcompat.view.WindowCallbackWrapper: void onPanelClosed(int,android.view.Menu)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isConnectionAllowed(androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.core.view.MenuKt: void forEach(android.view.Menu,kotlin.jvm.functions.Function1)
dagger.android.DaggerBroadcastReceiver: DaggerBroadcastReceiver()
kotlinx.coroutines.internal.SynchronizedKt: java.lang.Object synchronized(java.lang.Object,kotlin.jvm.functions.Function0)
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory
org.reactivestreams.Subscription: void request(long)
androidx.legacy.coreui.R$styleable: int[] ColorStateListItem
kotlinx.coroutines.channels.AbstractSendChannel: void access$helpClose(kotlinx.coroutines.channels.AbstractSendChannel,kotlinx.coroutines.channels.Closed)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: java.lang.Object get(int)
androidx.drawerlayout.R$drawable: int notification_icon_background
androidx.core.app.BundleCompat: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
androidx.appcompat.app.AppCompatActivity: void closeOptionsMenu()
androidx.appcompat.widget.SearchView: void onDetachedFromWindow()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
com.example.revolut.rates.R$styleable: int GradientColor_android_centerColor
androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
okio.BufferedSource: long indexOf(byte,long,long)
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.Job,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
okio.Buffer: java.lang.String readUtf8Line()
kotlinx.coroutines.channels.ChannelCoroutine: ChannelCoroutine(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.Channel,boolean)
com.example.revolut.rates.R$drawable: int abc_text_select_handle_left_mtrl_dark
kotlin.properties.ReadOnlyProperty
kotlinx.coroutines.JobNode
androidx.appcompat.app.AppCompatDelegate: int getDefaultNightMode()
io.reactivex.internal.operators.observable.BlockingObservableIterable: java.util.Iterator iterator()
android.support.v4.os.IResultReceiver
com.google.gson.internal.UnsafeAllocator
kotlin.jvm.internal.Reflection: kotlin.reflect.KType nullableTypeOf(java.lang.Class,kotlin.reflect.KTypeProjection)
dagger.android.support.R$styleable: int Toolbar_titleTextColor
androidx.media.R$id: int right_icon
com.jakewharton.rxbinding3.widget.RatingBarChangeEvent: boolean getFromUser()
com.example.revolut.rates.R$integer: int status_bar_notification_info_maxnum
kotlin.reflect.KClass: java.lang.String getSimpleName()
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] sliceArray-Q6IL4kU(short[],kotlin.ranges.IntRange)
com.example.revolut.rates.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
kotlin.collections.EmptyList: boolean contains(java.lang.Object)
kotlinx.coroutines.DispatchedKt: void dispatch(kotlinx.coroutines.DispatchedTask,int)
dagger.android.support.R$styleable: int AppCompatTextView_fontFamily
androidx.viewpager.R$dimen: int notification_large_icon_height
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Unconfined
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(char[],kotlin.jvm.functions.Function1)
kotlin.reflect.KProperty1$Getter
com.example.revolut.rates.R$styleable: int MenuItem_iconTintMode
io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection: long serialVersionUID
com.example.revolut.rates.R$attr: int windowActionBar
kotlinx.coroutines.channels.ActorKt: kotlinx.coroutines.channels.SendChannel actor$default(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlinx.coroutines.Job,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(float[],java.lang.Object,kotlin.jvm.functions.Function2)
io.reactivex.internal.functions.ObjectHelper: long requireNonNull(long,java.lang.String)
com.example.revolut.rates.R$color: int abc_primary_text_disable_only_material_light
kotlin.UIntArray: java.lang.String toString()
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getTop()
androidx.databinding.ViewDataBinding: java.lang.Object getFrom(java.util.Map,java.lang.Object)
androidx.collection.LongSparseArray: void setValueAt(int,java.lang.Object)
okio.BufferedSink: okio.BufferedSink writeDecimalLong(long)
androidx.appcompat.R$color: int secondary_text_default_material_dark
io.reactivex.internal.operators.observable.ObservableSkipLast$SkipLastObserver: long serialVersionUID
okhttp3.RequestBody: okhttp3.MediaType contentType()
okio.Buffer: okio.BufferedSink write(byte[],int,int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
kotlinx.coroutines.scheduling.CoroutineScheduler: void shutdown(long)
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: java.lang.Object updatedNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence chunked(kotlin.sequences.Sequence,int)
com.example.revolut.rates.R$styleable: int MenuView_android_itemBackground
com.jakewharton.rxbinding3.core.R$drawable: int notification_template_icon_bg
kotlin.io.LinesSequence$iterator$1: boolean hasNext()
kotlin.internal.InlineOnly
kotlin.collections.ArraysKt___ArraysJvmKt: void sortWith(java.lang.Object[],java.util.Comparator,int,int)
com.example.revolut.rates.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
androidx.customview.widget.ViewDragHelper: int EDGE_TOP
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable keys$default(android.view.View,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getMinHeight()
com.jakewharton.rxbinding3.view.RxView: io.reactivex.functions.Consumer visibility$default(android.view.View,int,int,java.lang.Object)
kotlin.collections.IndexingIterator: void remove()
io.reactivex.Maybe: io.reactivex.Maybe switchIfEmpty(io.reactivex.MaybeSource)
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$1
kotlin.collections.ArraysKt___ArraysKt: int indexOf(int[],int)
com.example.revolut.rates.R$attr: int buttonBarStyle
retrofit2.http.OPTIONS: java.lang.String value()
androidx.swiperefreshlayout.R$id: int title
androidx.core.os.PersistableBundleKt
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(int)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
androidx.viewpager.R$id: int async
kotlin.collections.ByteIterator
kotlinx.coroutines.internal.ThreadLocalElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.core.graphics.drawable.IconCompat: int getType()
androidx.appcompat.R$attr: int hideOnContentScroll
androidx.media.MediaSessionManager$RemoteUserInfo: java.lang.String LEGACY_CONTROLLER
kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1,boolean)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()
dagger.android.support.R$drawable: int abc_list_divider_mtrl_alpha
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemMoved(int,int)
com.google.gson.internal.$Gson$Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: PathInterpolatorCompat(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean getOrNull(boolean[],int)
kotlin.collections.ArraysKt___ArraysJvmKt: short[] plus(short[],short)
androidx.constraintlayout.widget.ConstraintSet: void constrainMinWidth(int,int)
androidx.loader.R$attr: int fontVariationSettings
com.example.revolut.rates.R$styleable: int AppCompatTheme_colorPrimaryDark
androidx.core.animation.AnimatorKt$doOnEnd$$inlined$addListener$1: AnimatorKt$doOnEnd$$inlined$addListener$1(kotlin.jvm.functions.Function1)
androidx.core.R$attr: int fontProviderFetchStrategy
kotlin.annotation.AnnotationRetention: kotlin.annotation.AnnotationRetention SOURCE
android.support.v4.app.INotificationSideChannel$Stub$Proxy: void cancelAll(java.lang.String)
androidx.viewpager.widget.ViewPager$OnAdapterChangeListener
kotlin.collections.ArraysKt___ArraysKt: boolean any(long[])
io.reactivex.Flowable: io.reactivex.Single count()
androidx.core.ktx.R$styleable: int GradientColor_android_centerX
androidx.drawerlayout.widget.DrawerLayout$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.R$styleable: int ActionBar_homeLayout
androidx.appcompat.widget.ToolbarWidgetWrapper
androidx.lifecycle.LiveData: void setValue(java.lang.Object)
kotlinx.coroutines.Deferred$DefaultImpls: java.lang.Throwable getCompletionException(kotlinx.coroutines.Deferred)
io.reactivex.Single: io.reactivex.Single zip(java.lang.Iterable,io.reactivex.functions.Function)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanGroupIndex(int,int)
androidx.viewpager.widget.PagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)
android.support.v4.media.session.PlaybackStateCompat: int SHUFFLE_MODE_ALL
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setContentDescription(java.lang.CharSequence)
androidx.versionedparcelable.VersionedParcel: long[] readLongArray()
androidx.appcompat.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
androidx.appcompat.widget.DecorContentParent: void setIcon(android.graphics.drawable.Drawable)
okio.ByteString: void writeObject(java.io.ObjectOutputStream)
io.reactivex.Flowable: io.reactivex.Flowable skip(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.animation.AnimatorKt$addPauseListener$1: java.lang.Object invoke(java.lang.Object)
com.google.gson.internal.bind.JsonTreeReader: void skipValue()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Appendable joinTo(kotlin.sequences.Sequence,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.swiperefreshlayout.R$dimen: int compat_notification_large_icon_max_height
androidx.core.graphics.RectKt: float component2(android.graphics.RectF)
kotlin.sequences.SequencesKt___SequencesKt: boolean any(kotlin.sequences.Sequence)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_goneMarginEnd
androidx.databinding.ViewDataBinding: void setTo(android.util.SparseIntArray,int,int)
androidx.legacy.coreui.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
com.jakewharton.rxbinding3.widget.RxAdapterView: com.jakewharton.rxbinding3.InitialValueObservable selectionEvents(android.widget.AdapterView)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment[] values()
androidx.appcompat.R$layout: int abc_list_menu_item_radio
kotlin.collections.ArraysKt___ArraysKt: short[] sortedArray(short[])
io.reactivex.internal.observers.BlockingMultiObserver: void onError(java.lang.Throwable)
androidx.drawerlayout.R$styleable: int FontFamilyFont_font
kotlin.coroutines.experimental.ContinuationInterceptor: kotlin.coroutines.experimental.Continuation interceptContinuation(kotlin.coroutines.experimental.Continuation)
androidx.core.app.NotificationCompat$WearableExtender: boolean getContentIntentAvailableOffline()
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.app.ShareCompat$IntentReader: java.lang.String getCallingPackage()
androidx.appcompat.view.menu.MenuBuilder: void setQwertyMode(boolean)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
com.example.revolut.rates.R$color: int switch_thumb_disabled_material_dark
androidx.databinding.ObservableInt: void writeToParcel(android.os.Parcel,int)
io.reactivex.processors.ReplayProcessor: void onNext(java.lang.Object)
kotlin.text.Regex: kotlin.text.MatchResult matchEntire(java.lang.CharSequence)
androidx.swiperefreshlayout.R$drawable: int notification_template_icon_low_bg
androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.recyclerview.R$styleable: int GradientColor_android_centerX
okhttp3.TlsVersion
com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent: int getFirstVisibleItem()
io.reactivex.internal.util.BlockingIgnoringReceiver: void run()
androidx.slidingpanelayout.R$id: int line1
androidx.constraintlayout.solver.widgets.WidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget findWidget(float,float)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
okio.Buffer: okio.BufferedSink emit()
kotlin.sequences.FilteringSequence$iterator$1
androidx.core.view.ViewCompat: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
io.reactivex.internal.operators.flowable.FlowableFlattenIterable: FlowableFlattenIterable(io.reactivex.Flowable,io.reactivex.functions.Function,int)
okhttp3.internal.http.HttpCodec
kotlin.jvm.internal.CharCompanionObject: char MAX_LOW_SURROGATE
okhttp3.Response: java.lang.String toString()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void cancel()
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int PLAYBACK_TYPE_LOCAL
io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription: long serialVersionUID
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COLLAPSE
androidx.core.app.NotificationCompat$InboxStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_minWidth
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(byte[],kotlin.jvm.functions.Function1)
androidx.appcompat.view.menu.MenuView$ItemView: void setTitle(java.lang.CharSequence)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter URI
androidx.databinding.ObservableBoolean
kotlin.jvm.internal.CharCompanionObject: char MIN_VALUE
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
io.reactivex.internal.operators.flowable.FlowableIntervalRange$IntervalRangeSubscriber: long serialVersionUID
androidx.recyclerview.widget.RecyclerView$ItemAnimator
kotlin.jvm.KotlinReflectionNotSupportedError: KotlinReflectionNotSupportedError()
okio.ByteString: int lastIndexOf(byte[],int)
io.reactivex.internal.operators.observable.ObservableFromCallable: void subscribeActual(io.reactivex.Observer)
dagger.android.support.R$style: int Widget_AppCompat_DrawerArrowToggle
com.jakewharton.rxbinding3.widget.AdapterViewItemClickEvent: java.lang.String toString()
androidx.core.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int)
io.reactivex.internal.operators.single.SingleDetach: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.Single: io.reactivex.Single subscribeOn(io.reactivex.Scheduler)
io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int)
com.example.revolut.rates.R$attr: int textAppearanceListItemSecondary
io.reactivex.internal.observers.CallbackCompletableObserver: boolean hasCustomOnError()
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
kotlin.ranges.RangesKt___RangesKt: RangesKt___RangesKt()
androidx.core.graphics.BitmapKt: void set(android.graphics.Bitmap,int,int,int)
androidx.constraintlayout.solver.widgets.Guideline: void setPositionRelaxed(boolean)
io.reactivex.subjects.UnicastSubject: void subscribeActual(io.reactivex.Observer)
androidx.drawerlayout.R$id: int line3
android.support.v4.app.INotificationSideChannel$Stub: android.os.IBinder asBinder()
com.jakewharton.rxbinding3.core.R$attr: int fontWeight
androidx.core.view.ViewCompat: void setFocusedByDefault(android.view.View,boolean)
kotlinx.coroutines.NonCancellable: java.util.concurrent.CancellationException getCancellationException()
androidx.collection.ArraySet: boolean equals(java.lang.Object)
androidx.core.graphics.CanvasKt: void withTranslation(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1)
androidx.coordinatorlayout.R$attr: int ttcIndex
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[],int,int)
kotlinx.coroutines.channels.ArrayBroadcastChannel: java.lang.Object offerSelectInternal(java.lang.Object,kotlinx.coroutines.selects.SelectInstance)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character firstOrNull(char[],kotlin.jvm.functions.Function1)
dagger.android.support.R$styleable: int SearchView_layout
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: long serialVersionUID
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
androidx.legacy.coreui.R$drawable: int notification_template_icon_low_bg
androidx.fragment.app.FragmentManager$BackStackEntry
kotlinx.coroutines.AbstractContinuation: void completeStateUpdate(kotlinx.coroutines.NotCompleted,java.lang.Object,int)
kotlin.jvm.JvmWildcard
kotlinx.coroutines.Job: kotlinx.coroutines.DisposableHandle attachChild(kotlinx.coroutines.Job)
androidx.recyclerview.widget.RecyclerView: int HORIZONTAL
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertNotSubscribed()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState
com.google.gson.GsonBuilder: GsonBuilder()
androidx.coordinatorlayout.R$dimen: int notification_subtext_size
androidx.appcompat.widget.MenuPopupWindow: void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
dagger.android.support.R$id: int title_template
androidx.collection.LruCache: int hitCount()
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(short[],short,int,int,int,java.lang.Object)
io.reactivex.internal.observers.BlockingLastObserver: void onNext(java.lang.Object)
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_GESTURE_DETECTION_START
io.reactivex.functions.BiPredicate
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.example.revolut.rates.R$color: int material_grey_100
androidx.appcompat.R$string: int abc_menu_sym_shortcut_label
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
com.example.revolut.rates.di.DaggerAppComponent$Builder: com.example.revolut.rates.di.AppComponent build()
kotlin.collections.IntIterator: int nextInt()
io.reactivex.Completable: io.reactivex.Maybe andThen(io.reactivex.MaybeSource)
kotlin.text.StringsKt___StringsKt: java.util.Map associateWithTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.observable.ObservableBuffer: void subscribeActual(io.reactivex.Observer)
kotlin.text.MatchGroup: MatchGroup(java.lang.String,kotlin.ranges.IntRange)
androidx.databinding.ObservableField: ObservableField(androidx.databinding.Observable[])
androidx.constraintlayout.solver.SolverVariable: float computedValue
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent)
dagger.internal.SetFactory: java.lang.Object get()
kotlin.collections.ArraysKt___ArraysKt: double reduceIndexed(double[],kotlin.jvm.functions.Function3)
androidx.databinding.adapters.SwitchBindingAdapter
io.reactivex.Flowable: void safeSubscribe(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable: io.reactivex.Observable fuseToObservable()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.util.List asList-GBYM_sE(byte[])
io.reactivex.Flowable: void subscribe(org.reactivestreams.Subscriber)
com.jakewharton.rxbinding3.widget.AdapterViewSelectionEvent: AdapterViewSelectionEvent(kotlin.jvm.internal.DefaultConstructorMarker)
io.reactivex.internal.operators.single.SingleTimer: SingleTimer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setWrapHeight(int)
io.reactivex.internal.operators.flowable.FlowableThrottleLatest: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.view.menu.CascadingMenuPopup$HorizPosition
androidx.databinding.ObservableArrayList: boolean remove(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableConcatMapEager: ObservableConcatMapEager(io.reactivex.ObservableSource,io.reactivex.functions.Function,io.reactivex.internal.util.ErrorMode,int,int)
dagger.android.support.R$styleable: int ColorStateListItem_alpha
kotlin.collections.ArraysKt___ArraysKt: boolean any(float[])
kotlin.coroutines.experimental.migration.CoroutinesMigrationKt: kotlin.coroutines.experimental.CoroutineContext toExperimentalCoroutineContext(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.ThreadEventLoop: void unpark()
okio.InflaterSource: void close()
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setDebugSolverName(androidx.constraintlayout.solver.LinearSystem,java.lang.String)
androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)
androidx.fragment.app.ListFragment
androidx.appcompat.R$drawable: int abc_btn_default_mtrl_shape
okhttp3.internal.http2.Http2Codec: java.util.List http2HeadersList(okhttp3.Request)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(char[])
androidx.viewpager.widget.ViewPager: void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener)
kotlinx.coroutines.sync.Mutex$DefaultImpls: boolean tryLock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,int,java.lang.Object)
io.reactivex.internal.operators.single.SingleDoFinally: SingleDoFinally(io.reactivex.SingleSource,io.reactivex.functions.Action)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet,int)
kotlin.UShortArray: boolean isEmpty-impl(short[])
androidx.core.ktx.R
androidx.databinding.ViewDataBinding: androidx.lifecycle.LifecycleOwner getLifecycleOwner()
androidx.appcompat.R$attr: int numericModifiers
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
androidx.appcompat.widget.AppCompatTextView: void onTextChanged(java.lang.CharSequence,int,int,int)
androidx.legacy.coreutils.R$attr: int fontStyle
kotlinx.coroutines.internal.OpDescriptor
androidx.core.view.TintableBackgroundView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.reactivex.internal.observers.CallbackCompletableObserver: CallbackCompletableObserver(io.reactivex.functions.Action)
androidx.constraintlayout.solver.widgets.Guideline: int mRelativeEnd
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getOptimizerWrapWidth()
androidx.appcompat.app.AppCompatCallback
androidx.legacy.content.WakefulBroadcastReceiver: boolean completeWakefulIntent(android.content.Intent)
androidx.core.widget.NestedScrollView: void requestLayout()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable touches(android.view.View,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintAvoidBackgroundClipping()
androidx.core.R$drawable: int notification_bg
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort getOrNull-nggk6HY(short[],int)
androidx.recyclerview.widget.SortedList: void replaceAll(java.lang.Object[])
io.reactivex.internal.operators.flowable.FlowableFromIterable
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.ColorFilter getColorFilter()
androidx.appcompat.R$attr: int title
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.R$style: int Base_V26_Theme_AppCompat_Light
io.reactivex.internal.operators.observable.ObservableTake: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.R$styleable: int FontFamily_fontProviderAuthority
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object maxWith(kotlinx.coroutines.channels.ReceiveChannel,java.util.Comparator,kotlin.coroutines.Continuation)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener)
androidx.recyclerview.widget.AsyncListUtil: AsyncListUtil(java.lang.Class,int,androidx.recyclerview.widget.AsyncListUtil$DataCallback,androidx.recyclerview.widget.AsyncListUtil$ViewCallback)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationIcon(android.graphics.drawable.Drawable)
dagger.android.support.R$color: int primary_dark_material_light
kotlin.ranges.LongRange: java.lang.Long getStart()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,long,java.util.concurrent.TimeUnit)
androidx.recyclerview.widget.ItemTouchHelper
dagger.android.support.R$attr: int submitBackground
androidx.constraintlayout.widget.ConstraintHelper: ConstraintHelper(android.content.Context,android.util.AttributeSet)
androidx.legacy.coreui.R$attr: int fontProviderCerts
androidx.appcompat.R$attr: int splitTrack
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$InterruptibleRunnable: long serialVersionUID
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake()
kotlinx.coroutines.AbstractContinuation: boolean isCancelled()
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List take-nggk6HY(short[],int)
com.example.revolut.rates.R$attr: int firstBaselineToTopHeight
com.example.revolut.rates.R$styleable: int AppCompatTheme_dividerVertical
android.support.v4.media.session.MediaControllerCompat$TransportControls: void seekTo(long)
androidx.appcompat.R$styleable: int RecycleListView_paddingTopNoTitle
android.support.v4.media.session.MediaSessionCompat$Callback: void onPrepare()
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
com.example.revolut.rates.R$styleable: int ViewBackgroundHelper_android_background
io.reactivex.internal.operators.single.SingleToObservable$SingleToObservableObserver: long serialVersionUID
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintList(android.content.res.ColorStateList)
dagger.android.support.R$string: int abc_action_menu_overflow_description
kotlinx.coroutines.ThreadContextElement: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
androidx.constraintlayout.widget.ConstraintSet: boolean getApplyElevation(int)
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1: SequencesKt___SequencesKt$filterIsInstance$1()
com.example.revolut.rates.R$styleable: int AlertDialog_buttonIconDimen
androidx.databinding.ObservableBoolean: ObservableBoolean(androidx.databinding.Observable[])
io.reactivex.internal.operators.flowable.FlowableFlattenIterable
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(double)
kotlin.collections.CollectionsKt__IterablesKt: kotlin.Pair unzip(java.lang.Iterable)
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_fontVariationSettings
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void shutdown$kotlinx_coroutines_core(long)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.HashSet toHashSet(java.lang.Iterable)
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.core.widget.NestedScrollView: int computeHorizontalScrollRange()
androidx.databinding.adapters.TabHostBindingAdapter: void setListeners(android.widget.TabHost,android.widget.TabHost$OnTabChangeListener,androidx.databinding.InverseBindingListener)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate
kotlin.collections.AbstractMap$keys$1: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysJvmKt: ArraysKt___ArraysJvmKt()
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type UNRESTRICTED
com.example.revolut.rates.R$id: int center
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder
androidx.constraintlayout.solver.widgets.ConstraintWidget: void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)
kotlin.UShortArray: short[] constructor-impl(short[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.legacy.app.ActionBarDrawerToggle$Delegate
io.reactivex.internal.subscriptions.EmptySubscription: void clear()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.io.FilesKt__UtilsKt: java.io.File createTempDir(java.lang.String,java.lang.String,java.io.File)
io.reactivex.subscribers.DisposableSubscriber: void cancel()
com.example.revolut.rates.R$drawable: int icon_chf
kotlin.collections.EmptyList: java.util.ListIterator listIterator(int)
kotlin.collections.UArraysKt: int contentHashCode-QwZRm1k(long[])
kotlinx.coroutines.channels.AbstractSendChannel: boolean close(java.lang.Throwable)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter beginObject()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$first$3
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DOTS
io.reactivex.Flowable: io.reactivex.Flowable throttleWithTimeout(long,java.util.concurrent.TimeUnit)
androidx.core.content.IntentCompat: java.lang.String CATEGORY_LEANBACK_LAUNCHER
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLocalOnly(boolean)
androidx.annotation.IntRange: long from()
com.example.revolut.rates.R$styleable: int AppCompatTheme_buttonStyleSmall
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Iterable withIndex-GBYM_sE(byte[])
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfter(java.lang.String,char,java.lang.String,java.lang.String)
com.example.revolut.rates.R$dimen: int compat_button_inset_vertical_material
kotlinx.coroutines.internal.ConcurrentKt: java.lang.Object withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0)
kotlin.reflect.KTypeProjection: kotlin.reflect.KVariance component1()
androidx.core.app.FrameMetricsAggregator: int DRAW_INDEX
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setEnabled(boolean)
io.reactivex.internal.operators.observable.ObservablePublishSelector
dagger.android.support.R$style: int TextAppearance_AppCompat_Title_Inverse
androidx.appcompat.R$style: int Platform_V21_AppCompat_Light
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addView(android.view.View)
kotlin.collections.Grouping: java.util.Iterator sourceIterator()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(byte[])
io.reactivex.internal.operators.parallel.ParallelConcatMap: int parallelism()
dagger.internal.ReferenceReleasingProviderManager: java.lang.Class scope()
androidx.appcompat.R$attr: int defaultQueryHint
com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent: com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent copy$default(com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent,android.widget.TextView,java.lang.CharSequence,int,int,int,int,java.lang.Object)
io.reactivex.internal.observers.FutureSingleObserver: boolean cancel(boolean)
retrofit2.http.GET: java.lang.String value()
dagger.internal.MembersInjectors: dagger.MembersInjector noOp()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] copyOfRange(boolean[],int,int)
androidx.appcompat.app.WindowDecorActionBar: void show()
com.example.revolut.rates.R$style: int Widget_Support_CoordinatorLayout
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(java.lang.Object[],java.lang.Iterable)
io.reactivex.internal.observers.BasicFuseableObserver: void onError(java.lang.Throwable)
android.support.v4.media.MediaDescriptionCompat: long STATUS_DOWNLOADED
okio.Okio: okio.Sink sink(java.io.File)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hasEmbeddedTabs()
io.reactivex.internal.observers.DeferredScalarDisposable: void complete(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,byte)
com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory$ResponseCallAdapter$adapt$2
androidx.constraintlayout.widget.ConstraintSet: void setHorizontalBias(int,float)
androidx.core.graphics.ColorUtils: double calculateContrast(int,int)
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: void onSubscribe(io.reactivex.disposables.Disposable)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Small
com.jakewharton.rxbinding3.core.R$integer
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_FONT_LOAD_ERROR
io.reactivex.internal.observers.DeferredScalarObserver: long serialVersionUID
io.reactivex.Observable: io.reactivex.Single toSortedList()
androidx.vectordrawable.R$drawable: int notification_bg_low
androidx.recyclerview.widget.ItemTouchHelper: int START
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.app.WindowDecorActionBar: void setNavigationMode(int)
androidx.appcompat.widget.DecorContentParent: java.lang.CharSequence getTitle()
io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long random-JzugnMA(long[],kotlin.random.Random)
com.example.revolut.rates.R$color: int switch_thumb_normal_material_light
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory NUMBER_FACTORY
io.reactivex.internal.functions.Functions: io.reactivex.functions.Function toFunction(io.reactivex.functions.Function5)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setArrowShaftLength(float)
io.reactivex.internal.operators.observable.ObservableDelay: void subscribeActual(io.reactivex.Observer)
dagger.android.support.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
androidx.appcompat.widget.AppCompatRatingBar: void onMeasure(int,int)
androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)
androidx.appcompat.R$attr: int icon
androidx.constraintlayout.widget.ConstraintHelper: boolean mUseViewMeasure
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.util.List filterIsInstance(java.lang.Iterable,java.lang.Class)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)
androidx.lifecycle.extensions.R$drawable: int notification_action_background
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort maxWith-eOHTfZs(short[],java.util.Comparator)
androidx.swiperefreshlayout.R$dimen: int notification_large_icon_width
io.reactivex.Flowable: io.reactivex.Flowable zipIterable(java.lang.Iterable,io.reactivex.functions.Function,boolean,int)
kotlin.ranges.IntProgression: IntProgression(int,int,int)
kotlin.ranges.CharProgression: kotlin.collections.CharIterator iterator()
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3: java.util.Iterator iterator()
io.reactivex.internal.util.BlockingHelper: void awaitForComplete(java.util.concurrent.CountDownLatch,io.reactivex.disposables.Disposable)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1)
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowResourceRight(int)
io.reactivex.observers.ResourceSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerOpened(android.view.View)
io.reactivex.internal.observers.DeferredScalarObserver: io.reactivex.disposables.Disposable upstream
com.example.revolut.rates.R$styleable: int Toolbar_navigationIcon
io.reactivex.internal.operators.observable.ObservableSequenceEqual: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe
android.support.v4.media.MediaBrowserCompat$ConnectionCallback: void onConnected()
io.reactivex.Single: io.reactivex.Single zipArray(io.reactivex.functions.Function,io.reactivex.SingleSource[])
kotlinx.coroutines.DeferredKt: kotlinx.coroutines.Deferred async(kotlin.coroutines.CoroutineContext,boolean,kotlin.jvm.functions.Function2)
io.reactivex.internal.operators.flowable.FlowableRangeLong$BaseRangeSubscription: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableRepeatWhen: FlowableRepeatWhen(io.reactivex.Flowable,io.reactivex.functions.Function)
kotlin.math.MathKt__MathJVMKt: void absoluteValue$annotations(float)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getOpacity()
okhttp3.internal.ws.RealWebSocket: void failWebSocket(java.lang.Exception,okhttp3.Response)
androidx.appcompat.app.WindowDecorActionBar: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void clear()
io.reactivex.Observable: io.reactivex.Observable window(io.reactivex.ObservableSource,io.reactivex.functions.Function)
kotlinx.coroutines.CoroutineStart: boolean isLazy()
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
androidx.appcompat.view.ActionMode: android.view.MenuInflater getMenuInflater()
com.example.revolut.rates.databinding.RatesItemBinding: com.example.revolut.rates.databinding.RatesItemBinding bind(android.view.View)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(java.lang.Object[],java.lang.Object[])
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateBy$1
io.reactivex.internal.subscribers.FutureSubscriber: void cancel()
io.reactivex.schedulers.Timed: java.util.concurrent.TimeUnit unit()
androidx.core.util.RangeKt$toClosedRange$1: java.lang.Comparable getStart()
kotlin.jvm.internal.MutablePropertyReference2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentPagerAdapter
androidx.legacy.coreutils.R$drawable: int notify_panel_notification_icon_bg
com.example.revolut.rates.R$styleable: int ActionBar_backgroundStacked
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.util.SparseIntArrayKt$keyIterator$1
androidx.core.app.AlarmManagerCompat: void setAlarmClock(android.app.AlarmManager,long,android.app.PendingIntent,android.app.PendingIntent)
dagger.android.support.R$drawable: int abc_text_select_handle_middle_mtrl_light
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: java.lang.Object failure(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object)
android.support.v4.media.MediaBrowserCompat$MediaItem: boolean isBrowsable()
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews getBigContentView()
kotlin.jvm.internal.TypeReference: java.lang.String toString()
androidx.appcompat.app.WindowDecorActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)
dagger.android.support.R$styleable: int AppCompatTheme_actionBarTabBarStyle
android.support.v4.media.RatingCompat: boolean hasHeart()
androidx.databinding.ViewDataBinding: androidx.databinding.DataBindingComponent mBindingComponent
com.jakewharton.rxbinding3.widget.AdapterViewItemLongClickEvent: long component4()
io.reactivex.Completable: io.reactivex.Completable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer)
androidx.core.view.NestedScrollingChildHelper: void stopNestedScroll()
androidx.appcompat.R$styleable: int Toolbar_contentInsetStartWithNavigation
androidx.annotation.CheckResult
androidx.appcompat.R$style: int Base_Theme_AppCompat_DialogWhenLarge
com.example.revolut.rates.R$drawable: int icon_bgn
dagger.android.support.R$color: int abc_hint_foreground_material_dark
androidx.versionedparcelable.CustomVersionedParcelable: void onPostParceling()
dagger.android.support.R$styleable: int Spinner_android_dropDownWidth
androidx.appcompat.R$string: int abc_prepend_shortcut_label
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
androidx.legacy.v4.R$id: int cancel_action
dagger.android.support.R$id: int screen
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(long)
androidx.customview.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)
dagger.android.support.R$styleable: int Toolbar_popupTheme
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean isActive()
androidx.recyclerview.widget.LinearLayoutManager: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.core.widget.AutoScrollHelper: void scrollTargetBy(int,int)
kotlin.sequences.TakeSequence: kotlin.sequences.Sequence drop(int)
kotlinx.coroutines.DebugKt: java.lang.String toSafeString(java.lang.Object)
androidx.drawerlayout.R$id: int text
com.jakewharton.rxbinding3.widget.RxTextView: io.reactivex.Observable editorActionEvents(android.widget.TextView,kotlin.jvm.functions.Function1)
androidx.constraintlayout.solver.LinearSystem: void addEquality(androidx.constraintlayout.solver.SolverVariable,int,int)
androidx.swiperefreshlayout.R$integer
dagger.android.support.R$id: int decor_content_parent
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_ttcIndex
kotlinx.coroutines.CompletableDeferred: boolean complete(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List findAccessibilityNodeInfosByText(java.lang.String)
androidx.media.R$attr: int fontProviderCerts
androidx.databinding.adapters.TabHostBindingAdapter: int getCurrentTab(android.widget.TabHost)
kotlin.collections.ByteIterator: byte nextByte()
androidx.legacy.v4.R$styleable: int FontFamilyFont_android_fontWeight
com.example.revolut.rates.R$dimen: int abc_text_size_caption_material
okio.Buffer$UnsafeCursor: void close()
kotlinx.coroutines.channels.AbstractChannel: boolean cancel(java.lang.Throwable)
androidx.asynclayoutinflater.R$dimen: int compat_button_padding_vertical_material
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintRight_toRightOf
kotlin.reflect.KClass: java.util.List getSealedSubclasses()
io.reactivex.internal.operators.flowable.FlowableFromFuture: FlowableFromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)
dagger.android.support.R$drawable: int abc_textfield_search_activated_mtrl_alpha
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint getTextPaint()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean)
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder()
com.example.revolut.rates.R$styleable: int RecyclerView_reverseLayout
io.reactivex.disposables.Disposable
androidx.recyclerview.widget.DiffUtil$DiffResult: int NO_POSITION
androidx.appcompat.view.menu.MenuPresenter$Callback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle: android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
kotlin.io.FilesKt__FileReadWriteKt: java.util.List readLines$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object)
androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
io.reactivex.subscribers.SafeSubscriber: void onError(java.lang.Throwable)
org.intellij.lang.annotations.JdkConstants$CalendarMonth
androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
io.reactivex.internal.operators.observable.ObservableConcatMapEager
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FEEDBACK_BRAILLE
io.reactivex.Observable: io.reactivex.disposables.Disposable forEach(io.reactivex.functions.Consumer)
androidx.slidingpanelayout.widget.SlidingPaneLayout: void onDetachedFromWindow()
androidx.appcompat.R$styleable: int FontFamily_fontProviderPackage
com.example.revolut.rates.di.DaggerAppComponent$Builder
kotlinx.coroutines.scheduling.CoroutineScheduler: void access$incrementBlockingWorkers(kotlinx.coroutines.scheduling.CoroutineScheduler)
com.jakewharton.rxbinding3.core.R$id: int notification_background
io.reactivex.subjects.AsyncSubject: void onNext(java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListKt: void CONDITION_FALSE$annotations()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)
androidx.core.R$attr: int fontProviderFetchTimeout
androidx.loader.R$style: int Widget_Compat_NotificationActionText
io.reactivex.subjects.ReplaySubject: void onSubscribe(io.reactivex.disposables.Disposable)
kotlin.ULongArray: boolean equals-impl0(long[],long[])
com.example.revolut.rates.R$styleable: int FontFamilyFont_android_fontStyle
dagger.android.support.R$layout: int abc_action_menu_layout
androidx.core.view.ViewCompat$NestedScrollType
kotlin.collections.ArraysKt___ArraysKt: void reverse(byte[])
androidx.fragment.app.FragmentManager: boolean executePendingTransactions()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(double[],java.lang.Object[],kotlin.jvm.functions.Function2)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
io.reactivex.internal.operators.completable.CompletableOnErrorComplete
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLEAR_ACCESSIBILITY_FOCUS
androidx.fragment.R$id: int right_side
androidx.databinding.ObservableArrayList: void removeOnListChangedCallback(androidx.databinding.ObservableList$OnListChangedCallback)
androidx.core.view.ViewCompat: int getLayerType(android.view.View)
io.reactivex.internal.operators.single.SingleZipArray$ZipCoordinator: long serialVersionUID
androidx.appcompat.R$attr: int activityChooserViewStyle
androidx.constraintlayout.widget.R$attr: int layout_constraintDimensionRatio
com.example.revolut.rates.R$styleable: int MenuGroup_android_id
dagger.android.support.R$attr: int actionBarWidgetTheme
androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)
kotlinx.coroutines.CompletionHandlerKt: kotlin.jvm.functions.Function1 getAsHandler(kotlinx.coroutines.CompletionHandlerBase)
kotlinx.coroutines.ThreadPoolDispatcherKt: kotlin.coroutines.CoroutineContext newFixedThreadPoolContext(int,java.lang.String,kotlinx.coroutines.Job)
kotlinx.coroutines.selects.SelectBuilderImpl$disposeOnSelect$$inlined$addLastIf$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
okhttp3.Headers: okhttp3.Headers of(java.lang.String[])
androidx.recyclerview.widget.SortedList: boolean remove(java.lang.Object)
kotlin.jvm.internal.FunctionImpl: FunctionImpl()
androidx.appcompat.view.menu.ListMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
android.support.v4.media.MediaBrowserCompat$ConnectionCallback: void onConnectionFailed()
dagger.android.support.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
okhttp3.EventListener: void callFailed(okhttp3.Call,java.io.IOException)
io.reactivex.internal.queue.MpscLinkedQueue
androidx.recyclerview.widget.LinearLayoutManager: void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
androidx.databinding.ObservableChar: ObservableChar(char)
androidx.fragment.app.FragmentTransitionImpl: void getBoundsOnScreen(android.view.View,android.graphics.Rect)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class)
kotlin.sequences.TransformingIndexedSequence: kotlin.jvm.functions.Function2 access$getTransformer$p(kotlin.sequences.TransformingIndexedSequence)
androidx.appcompat.app.ActionBarDrawerToggle: ActionBarDrawerToggle(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,int,int)
kotlin.jvm.internal.Intrinsics: void needClassReification(java.lang.String)
androidx.appcompat.widget.DecorToolbar: void setHomeButtonEnabled(boolean)
androidx.appcompat.R$styleable: int SwitchCompat_switchPadding
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(double[])
com.example.revolut.rates.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)
androidx.fragment.app.ListFragment: android.widget.ListView getListView()
androidx.core.net.TrafficStatsCompat: void incrementOperationCount(int)
kotlinx.coroutines.test.TestCoroutineContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.databinding.adapters.TabWidgetBindingAdapter: TabWidgetBindingAdapter()
android.support.v4.media.MediaMetadataCompatApi21$Builder: void putRating(java.lang.Object,java.lang.String,java.lang.Object)
androidx.fragment.app.FragmentStatePagerAdapter: void startUpdate(android.view.ViewGroup)
kotlin.coroutines.CoroutineContext$DefaultImpls
io.reactivex.internal.observers.InnerQueuedObserverSupport: void drain()
androidx.core.util.ObjectsCompat: int hash(java.lang.Object[])
io.reactivex.Single: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher)
kotlin.coroutines.experimental.AbstractCoroutineContextElement: kotlin.coroutines.experimental.CoroutineContext plus(kotlin.coroutines.experimental.CoroutineContext)
dagger.internal.MapFactory$Builder: dagger.internal.MapFactory build()
io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(java.lang.Object[],java.lang.Object,java.util.Comparator,int,int)
kotlin.random.Random$Default: byte[] nextBytes(byte[],int,int)
androidx.constraintlayout.solver.widgets.Barrier: int LEFT
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(double[],double,int,int,int,java.lang.Object)
androidx.databinding.adapters.AbsSpinnerBindingAdapter: void setEntries(android.widget.AbsSpinner,java.lang.CharSequence[])
com.example.revolut.rates.R$styleable: int[] AppCompatTextHelper
io.reactivex.internal.operators.flowable.FlowableTakeWhile
com.example.revolut.rates.R$layout: int abc_action_mode_bar
androidx.core.view.MarginLayoutParamsCompat: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
android.support.v4.media.MediaBrowserCompat$ConnectionCallback
kotlin.ranges.IntProgression: int getFirst()
androidx.slidingpanelayout.R$id
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression reversed(kotlin.ranges.LongProgression)
androidx.appcompat.R$attr: int autoSizeMaxTextSize
dagger.android.support.R$attr: int listChoiceBackgroundIndicator
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()
kotlin.internal.RequireKotlin: java.lang.String message()
kotlin.collections.ArraysKt___ArraysKt: byte single(byte[],kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle: FlowableSwitchMapSingle(io.reactivex.Flowable,io.reactivex.functions.Function,boolean)
androidx.annotation.StringDef: java.lang.String[] value()
androidx.appcompat.R$id: int action_context_bar
io.reactivex.subjects.CompletableSubject: void onError(java.lang.Throwable)
io.reactivex.processors.MulticastProcessor: boolean offer(java.lang.Object)
kotlin.ranges.LongRange: java.lang.String toString()
androidx.fragment.R$styleable: int CoordinatorLayout_Layout_layout_anchor
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)
kotlin.reflect.KFunction$DefaultImpls: void isSuspend$annotations()
io.reactivex.internal.observers.BlockingObserver: long serialVersionUID
okhttp3.internal.connection.RealConnection: RealConnection(okhttp3.ConnectionPool,okhttp3.Route)
io.reactivex.functions.Consumer
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ResolutionDimension getResolutionWidth()
androidx.appcompat.app.AppCompatActivity: void supportNavigateUpTo(android.content.Intent)
com.example.revolut.rates.R$id: int submit_area
io.reactivex.internal.subscribers.SubscriberResourceWrapper: void onComplete()
androidx.databinding.adapters.TextViewBindingAdapter: void setDigits(android.widget.TextView,java.lang.CharSequence)
com.jakewharton.rxbinding3.view.RxView: io.reactivex.Observable hovers(android.view.View)
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildCount()
androidx.customview.R$styleable: int FontFamilyFont_fontWeight
kotlin.ULongArray: kotlin.ULongArray box-impl(long[])
kotlin.collections.MapsKt__MapsKt: int mapCapacity(int)
dagger.android.support.R$styleable: int ActivityChooserView_initialActivityCount
dagger.android.support.R$styleable: int SwitchCompat_thumbTint
kotlin.collections.ArraysKt___ArraysKt: double sum(double[])
dagger.android.support.R$styleable: int SwitchCompat_switchTextAppearance
dagger.android.support.R$style: int Base_Widget_AppCompat_ActionBar
kotlin.coroutines.experimental.jvm.internal.CoroutineIntrinsics: kotlin.coroutines.experimental.Continuation interceptContinuationIfNeeded(kotlin.coroutines.experimental.CoroutineContext,kotlin.coroutines.experimental.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(byte[],byte,int,int)
okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1: java.lang.Object invoke(java.lang.Object)
androidx.collection.SparseArrayCompat: int indexOfKey(int)
kotlin.collections.GroupingKt__GroupingKt: java.util.Map aggregate(kotlin.collections.Grouping,kotlin.jvm.functions.Function4)
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
io.reactivex.internal.observers.DeferredScalarDisposable: java.lang.Object poll()
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Short[] toTypedArray(short[])
kotlin.io.FilesKt__FileReadWriteKt: FilesKt__FileReadWriteKt()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-2fe2U9s$default(int[],int,int,int,int,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableInternalHelper: io.reactivex.functions.BiFunction simpleGenerator(io.reactivex.functions.Consumer)
io.reactivex.Flowable: io.reactivex.Flowable concatMap(io.reactivex.functions.Function,int)
io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable autoConnect()
kotlin.jvm.internal.Reflection: kotlin.reflect.KType typeOf(java.lang.Class,kotlin.reflect.KTypeProjection)
kotlin.jvm.internal.MutablePropertyReference2: kotlin.reflect.KCallable computeReflected()
kotlinx.coroutines.channels.ChannelCoroutine: boolean close(java.lang.Throwable)
androidx.core.text.HtmlCompat: int FROM_HTML_OPTION_USE_CSS_COLORS
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getPosition()
okio.Buffer: okio.Buffer$UnsafeCursor readUnsafe()
io.reactivex.Flowable: io.reactivex.Flowable flatMapMaybe(io.reactivex.functions.Function)
androidx.appcompat.R$attr: int gapBetweenBars
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isSpreadHeight()
androidx.legacy.coreutils.R$dimen: int notification_content_margin_start
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()
kotlin.sequences.TakeSequence: int access$getCount$p(kotlin.sequences.TakeSequence)
com.jakewharton.rxbinding3.view.ViewLayoutChangeEvent: boolean equals(java.lang.Object)
androidx.databinding.MergedDataBinderMapper: int getLayoutId(java.lang.String)
androidx.asynclayoutinflater.R$attr: int fontProviderQuery
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.core.ktx.R$id: int tag_unhandled_key_listeners
androidx.constraintlayout.widget.R$attr: int layout_goneMarginStart
kotlin.text.Typography: char lessOrEqual
androidx.appcompat.R$style: int Base_V22_Theme_AppCompat_Light
kotlin.KotlinVersion: int compareTo(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5(long[])
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionBarStyle
androidx.appcompat.view.menu.ListMenuItemView: void adjustListItemSelectionBounds(android.graphics.Rect)
androidx.core.view.ViewCompat: void setPaddingRelative(android.view.View,int,int,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-JGPC0-M(short[],java.lang.Iterable)
androidx.legacy.coreui.R$id: int action_divider
androidx.core.app.NotificationCompat: int getBadgeIconType(android.app.Notification)
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isItemRemoved()
androidx.constraintlayout.widget.ConstraintSet: int GONE
androidx.databinding.CallbackRegistry: void clear()
dagger.android.support.R$styleable: int DrawerArrowToggle_barLength
kotlin.jvm.internal.ClassReference: boolean isInstance(java.lang.Object)
kotlinx.coroutines.sync.MutexKt: java.lang.Object withLock(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
com.example.revolut.rates.R$drawable: int icon_brl
kotlin.collections.ArraysKt___ArraysKt: short first(short[])
androidx.core.graphics.ColorKt: float component2(android.graphics.Color)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.properties.ObservableProperty: void afterChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object)
com.jakewharton.rxbinding3.widget.AbsListViewScrollEvent: int component5()
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax: io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax INSTANCE
androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)
com.jakewharton.rxbinding3.widget.RxPopupMenu
io.reactivex.internal.operators.single.SingleTimer: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.maybe.MaybeSubscribeOn: MaybeSubscribeOn(io.reactivex.MaybeSource,io.reactivex.Scheduler)
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection,java.lang.Object[])
androidx.swiperefreshlayout.R$id: int time
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
kotlin.jvm.internal.Ref$FloatRef: java.lang.String toString()
okhttp3.Cookie: boolean secure()
kotlin.ranges.IntRange: boolean contains(java.lang.Comparable)
kotlin.text.StringsKt___StringsKt: java.lang.Object fold(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.vectordrawable.graphics.drawable.Animatable2Compat: void clearAnimationCallbacks()
okio.HashingSource: okio.ByteString hash()
org.reactivestreams.Subscriber: void onNext(java.lang.Object)
androidx.appcompat.R$attr: int listMenuViewStyle
androidx.legacy.coreui.R$attr: int alpha
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.observable.ObservableNever: io.reactivex.Observable INSTANCE
androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup: java.util.List mConstrainedGroup
androidx.core.app.NotificationCompat$CarExtender: NotificationCompat$CarExtender()
androidx.collection.ArraySet: boolean retainAll(java.util.Collection)
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: java.util.Iterator iterator()
androidx.appcompat.R$id: int search_badge
androidx.swiperefreshlayout.R$id: int action_text
androidx.annotation.Size: long max()
androidx.loader.content.Loader: android.content.Context getContext()
io.reactivex.internal.util.VolatileSizeArrayList: boolean isEmpty()
androidx.constraintlayout.solver.LinearSystem: void addGreaterThan(androidx.constraintlayout.solver.SolverVariable,int)
dagger.android.support.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
kotlinx.coroutines.JobSupport$HandleExceptionOp: JobSupport$HandleExceptionOp(kotlinx.coroutines.CompletedExceptionally)
androidx.appcompat.R$dimen: int abc_text_size_body_2_material
com.google.gson.Gson: boolean serializeNulls()
io.reactivex.android.plugins.RxAndroidPlugins: void setInitMainThreadSchedulerHandler(io.reactivex.functions.Function)
kotlinx.coroutines.channels.RendezvousChannel: boolean isBufferAlwaysEmpty()
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-GBYM_sE(byte[])
io.reactivex.Completable: io.reactivex.Maybe toMaybe()
androidx.asynclayoutinflater.R$dimen: int notification_right_side_padding_top
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(short,long)
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9: java.util.Iterator iterator()
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KClass createKotlinClass(java.lang.Class,java.lang.String)
kotlin.collections.AbstractList: int indexOf(java.lang.Object)
androidx.media.MediaBrowserServiceCompat: android.os.IBinder onBind(android.content.Intent)
io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)
androidx.appcompat.R$dimen: int abc_action_bar_stacked_tab_max_width
io.reactivex.Single: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)
io.reactivex.processors.BehaviorProcessor: java.lang.Object[] getValues(java.lang.Object[])
dagger.android.support.R$drawable: int abc_list_pressed_holo_light
dagger.android.support.R$attr: int icon
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_CONTENT_ALREADY_PLAYING
dagger.android.support.R$drawable: int abc_ic_menu_overflow_material
androidx.media.R$id: int async
androidx.vectordrawable.R$id: int async
io.reactivex.Completable: io.reactivex.Completable mergeDelayError(org.reactivestreams.Publisher)
io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit)
kotlin.jvm.internal.TypeReference: TypeReference(kotlin.reflect.KClassifier,java.util.List,boolean)
androidx.core.content.res.TypedArrayUtils: int getInt(android.content.res.TypedArray,int,int,int)
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle: void subscribeActual(io.reactivex.SingleObserver)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_android_maxHeight
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt maxWith-YmdZ_VM(int[],java.util.Comparator)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int MATCH_CONSTRAINT_WRAP
com.example.revolut.rates.R$drawable: int abc_btn_switch_to_on_mtrl_00001
io.reactivex.Flowable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function,boolean,int)
androidx.legacy.coreui.R$styleable: int FontFamily_fontProviderAuthority
android.support.v4.media.RatingCompat: int getRatingStyle()
kotlin.jvm.internal.Ref$ByteRef: Ref$ByteRef()
com.google.gson.JsonIOException: long serialVersionUID
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintLeft_toRightOf
androidx.fragment.app.FragmentHostCallback: void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.google.gson.JsonElement: com.google.gson.JsonNull getAsJsonNull()
dagger.android.support.DaggerAppCompatDialogFragment: dagger.android.AndroidInjector supportFragmentInjector()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
androidx.fragment.app.Fragment: void requestPermissions(java.lang.String[],int)
kotlin.io.FilesKt__FileReadWriteKt: java.lang.Object useLines$default(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(java.lang.Long[])
com.jakewharton.rxbinding3.core.R$drawable: int notification_bg_normal
kotlin.SafePublicationLazyImpl$Companion: SafePublicationLazyImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)
androidx.lifecycle.extensions.R$attr: int fontProviderAuthority
androidx.recyclerview.R$layout: int notification_template_custom_big
kotlin.text.StringsKt__StringsKt: int indexOf(java.lang.CharSequence,char,int,boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAlpha(int)
androidx.appcompat.R$style: int Widget_AppCompat_EditText
kotlin.text.StringsKt__StringBuilderKt: StringsKt__StringBuilderKt()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.String)
android.support.v4.media.session.IMediaSession: void setCaptioningEnabled(boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: void setFullSpan(boolean)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory CURRENCY_FACTORY
io.reactivex.MaybeConverter
androidx.appcompat.R$drawable: int abc_btn_borderless_material
androidx.core.net.TrafficStatsCompat
androidx.appcompat.R$dimen: int abc_dialog_min_width_minor
kotlinx.coroutines.CoroutineId: int hashCode()
dagger.android.support.R$id: int normal
okio.ForwardingTimeout: okio.Timeout clearTimeout()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List dropWhile(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.LongIterator: LongIterator()
androidx.appcompat.view.menu.ActionMenuItem: int getGroupId()
androidx.appcompat.app.ActionBar: void setTitle(java.lang.CharSequence)
androidx.drawerlayout.R$dimen
androidx.core.util.SparseIntArrayKt: void set(android.util.SparseIntArray,int,int)
androidx.core.view.ViewCompat: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
com.example.revolut.rates.R$id: int alertTitle
androidx.versionedparcelable.VersionedParcel: boolean isStream()
androidx.appcompat.R$string: int abc_activity_chooser_view_see_all
androidx.swiperefreshlayout.R$drawable: int notification_action_background
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache create(okhttp3.internal.io.FileSystem,java.io.File,int,int,long)
okhttp3.internal.http1.Http1Codec: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
androidx.media.R$styleable: int GradientColor_android_tileMode
androidx.fragment.R$styleable: int[] FontFamily
androidx.fragment.R$styleable: int FontFamily_fontProviderQuery
kotlin.ranges.IntProgression: java.util.Iterator iterator()
com.example.revolut.rates.R$attr: int tickMarkTintMode
androidx.core.database.DatabaseUtilsCompat: java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[])
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(java.lang.Double[])
kotlin.random.XorWowRandom: XorWowRandom(int,int,int,int,int,int)
androidx.appcompat.widget.ViewStubCompat
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier
okio.Timeout
kotlinx.coroutines.AbstractCoroutine: java.lang.String nameString$kotlinx_coroutines_core()
androidx.databinding.adapters.AbsListViewBindingAdapter$OnScroll: void onScroll(android.widget.AbsListView,int,int,int)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
androidx.annotation.Size: long value()
kotlinx.coroutines.BuildersKt: java.lang.Object runBlocking$default(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1: SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1(kotlin.jvm.functions.Function2)
kotlin.collections.EmptyList: java.lang.Object set(int,java.lang.Object)
kotlin.jvm.internal.CharCompanionObject: char MIN_LOW_SURROGATE
io.reactivex.Single: io.reactivex.Single just(java.lang.Object)
androidx.appcompat.R$color: int dim_foreground_material_light
okhttp3.internal.http2.Http2Stream: int getId()
androidx.collection.SparseArrayCompat: SparseArrayCompat()
androidx.core.R$styleable: int GradientColor_android_type
io.reactivex.Maybe: io.reactivex.Maybe subscribeOn(io.reactivex.Scheduler)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(double[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.R$styleable: int FontFamily_fontProviderCerts
androidx.legacy.app.ActionBarDrawerToggle: void onDrawerStateChanged(int)
androidx.recyclerview.R$styleable: int CoordinatorLayout_keylines
android.support.v4.media.RatingCompat: int RATING_THUMB_UP_DOWN
io.reactivex.internal.util.EmptyComponent: void cancel()
io.reactivex.internal.util.ExceptionHelper: java.lang.RuntimeException wrapOrThrow(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableAmb$AmbInnerObserver: long serialVersionUID
retrofit2.Converter$Factory: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
com.example.revolut.rates.R$attr: int queryHint
kotlin.ULong: int SIZE_BITS
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.fragment.R$integer
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void playFromMediaId(java.lang.Object,java.lang.String,android.os.Bundle)
com.example.revolut.rates.R$attr: int panelMenuListTheme
io.reactivex.internal.operators.flowable.FlowableMapNotification
io.reactivex.internal.operators.maybe.MaybeZipIterable: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher,int)
dagger.android.support.R$dimen: int abc_button_padding_horizontal_material
okhttp3.internal.http.HttpHeaders: boolean hasVaryAll(okhttp3.Headers)
kotlin.collections.ArraysKt___ArraysJvmKt: float[] copyOfRange(float[],int,int)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength getStrength()
androidx.appcompat.app.AppCompatDelegate: void setHandleNativeActionModesEnabled(boolean)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int topToTop
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertNever(java.lang.Object)
androidx.coordinatorlayout.R$string
androidx.media.MediaBrowserServiceCompat: void onLoadItem(java.lang.String,androidx.media.MediaBrowserServiceCompat$Result)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: int lastIndexOf(short)
io.reactivex.internal.util.HashMapSupplier: java.lang.Object call()
androidx.core.app.NotificationCompat$BigTextStyle: NotificationCompat$BigTextStyle()
io.reactivex.internal.operators.maybe.MaybeHide
androidx.recyclerview.widget.SortedList$Callback: void onChanged(int,int)
dagger.android.support.R$attr: int checkedTextViewStyle
io.reactivex.internal.schedulers.TrampolineScheduler
androidx.appcompat.view.menu.MenuWrapperFactory
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec COMPATIBLE_TLS
io.reactivex.internal.observers.BlockingMultiObserver: void onSubscribe(io.reactivex.disposables.Disposable)
kotlin.text.Typography: char section
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable max(java.lang.Comparable[])
android.support.v4.media.session.MediaSessionCompat: int MEDIA_ATTRIBUTE_PLAYLIST
kotlin.text.UStringsKt: short toUShort(java.lang.String,int)
androidx.vectordrawable.R$drawable
kotlinx.coroutines.internal.LockFreeMPSCQueue
dagger.android.support.R$layout: int abc_alert_dialog_material
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener: boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
androidx.customview.widget.ViewDragHelper$Callback: int getOrderedChildIndex(int)
kotlinx.coroutines.GlobalScope: void isActive$annotations()
androidx.core.graphics.PorterDuffKt
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector: void subscribeActual(io.reactivex.Observer)
androidx.fragment.app.FragmentTabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)
androidx.lifecycle.ViewModelStore: void clear()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog create()
androidx.collection.ArraySet: java.lang.String toString()
io.reactivex.Observable: io.reactivex.Observable concatDelayError(io.reactivex.ObservableSource)
androidx.legacy.coreui.R$id: int right_icon
kotlin.reflect.KMutableProperty2: kotlin.reflect.KMutableProperty2$Setter getSetter()
androidx.fragment.app.FragmentTransitionImpl: java.lang.Object cloneTransition(java.lang.Object)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.legacy.coreutils.R$dimen: int notification_main_column_padding_top
com.google.gson.Gson: void toJson(com.google.gson.JsonElement,java.lang.Appendable)
kotlinx.coroutines.JobKt: kotlinx.coroutines.Job Job(kotlinx.coroutines.Job)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
kotlinx.coroutines.channels.Closed: java.lang.Object getPollResult()
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int PLAYBACK_TYPE_REMOTE
com.example.revolut.rates.R$style: int TextAppearance_AppCompat_Small
kotlin.sequences.FilteringSequence$iterator$1: void setNextState(int)
io.reactivex.functions.Function: java.lang.Object apply(java.lang.Object)
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KCallable getReflected()
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void resolve()
dagger.android.AndroidInjector$Builder: dagger.android.AndroidInjector create(java.lang.Object)
androidx.constraintlayout.widget.R$id: int invisible
dagger.android.support.R$styleable: int SearchView_searchHintIcon
com.example.revolut.rates.R$styleable: int AppCompatTheme_windowFixedWidthMinor
androidx.core.app.AppComponentFactory: android.app.Activity instantiateActivityCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent)
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_MD5
dagger.android.support.R$attr: int actionBarPopupTheme
dagger.internal.MapProviderFactory$Builder: dagger.internal.MapProviderFactory$Builder put(java.lang.Object,javax.inject.Provider)
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function7)
android.support.v4.media.session.PlaybackStateCompat: long getLastPositionUpdateTime()
dagger.android.support.R$styleable: int AppCompatTheme_panelBackground
kotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaObjectType(kotlin.reflect.KClass)
okhttp3.internal.http.HttpHeaders: okhttp3.Headers varyHeaders(okhttp3.Headers,okhttp3.Headers)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setFullScreen(boolean)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setCustomContentHeight(int)
androidx.core.graphics.drawable.IconKt
com.example.revolut.rates.data.repository.CurrenciesRepository_MembersInjector
dagger.android.support.R$style: int Base_Widget_AppCompat_ActionButton
androidx.appcompat.view.menu.MenuItemImpl: android.view.SubMenu getSubMenu()
kotlinx.coroutines.channels.SendElement: java.lang.Object tryResumeSend(java.lang.Object)
kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()
androidx.media.R$styleable: int GradientColor_android_startX
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintLeft_toRightOf
dagger.android.support.R$dimen: int abc_action_bar_subtitle_top_margin_material
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuPresenter$Callback getCallback()
androidx.core.app.RemoteInput: java.lang.String getResultKey()
kotlinx.coroutines.ExecutorCoroutineDispatcherBase: boolean equals(java.lang.Object)
dagger.android.support.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
kotlin.random.Random: Random()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: int indexOf(byte)
androidx.lifecycle.extensions.R$layout: int notification_template_custom_big
io.reactivex.internal.operators.maybe.MaybeConcatIterable: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.R$styleable: int TextAppearance_android_textColorHint
io.reactivex.internal.operators.maybe.MaybeToPublisher: io.reactivex.functions.Function instance()
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.core.content.res.TypedArrayKt: java.lang.String getStringOrThrow(android.content.res.TypedArray,int)
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarSplitStyle
kotlinx.coroutines.Unconfined: java.lang.String toString()
androidx.appcompat.R$styleable: int DrawerArrowToggle_drawableSize
androidx.appcompat.R$color: int material_grey_300
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(boolean[])
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: long serialVersionUID
kotlin.collections.UArraysKt: int contentHashCode-GBYM_sE(byte[])
androidx.appcompat.view.menu.MenuItemImpl: boolean hasCollapsibleActionView()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
kotlin.collections.AbstractList
androidx.appcompat.app.AppCompatDialog
androidx.legacy.v4.R$dimen: int notification_content_margin_start
kotlin.text.StringsKt___StringsKt: java.util.Collection mapNotNullTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.PropertyReference: java.lang.String toString()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1)
okhttp3.internal.Util: java.nio.charset.Charset UTF_8
com.example.revolut.rates.R$styleable: int AppCompatTheme_switchStyle
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
com.example.revolut.rates.R$integer: int abc_config_activityDefaultDur
com.jakewharton.rxbinding3.widget.RxRadioGroup: io.reactivex.functions.Consumer checked(android.widget.RadioGroup)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int START
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int matchConstraintMinWidth
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type CENTER_Y
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver: long serialVersionUID
kotlin.contracts.ContractBuilder
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator
io.reactivex.Flowable: io.reactivex.Flowable combineLatest(java.lang.Iterable,io.reactivex.functions.Function,int)
androidx.appcompat.R$attr: int windowActionBar
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender setColor(int)
io.reactivex.subscribers.TestSubscriber: void request(long)
kotlin.collections.ArraysKt___ArraysKt: byte first(byte[])
io.reactivex.Single: io.reactivex.Single timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,io.reactivex.SingleSource)
androidx.core.text.util.LinkifyCompat$LinkifyMask
com.example.revolut.rates.R$attr: int autoSizeMaxTextSize
io.reactivex.internal.operators.completable.CompletableDoOnEvent: CompletableDoOnEvent(io.reactivex.CompletableSource,io.reactivex.functions.Consumer)
com.example.revolut.rates.R$attr: int actionDropDownStyle
androidx.constraintlayout.solver.widgets.ResolutionNode: int UNRESOLVED
io.reactivex.flowables.GroupedFlowable
kotlin.coroutines.experimental.SafeContinuation$Companion: SafeContinuation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void setInterpolator(android.view.animation.Interpolator)
io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function6)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(double[],kotlin.jvm.functions.Function1)
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewAddEvent: android.view.ViewGroup component1()
kotlin.UByteArray: void clear()
com.jakewharton.rxbinding3.view.ViewGroupHierarchyChildViewRemoveEvent: java.lang.String toString()
androidx.core.os.ConfigurationCompat
io.reactivex.internal.disposables.ArrayCompositeDisposable: io.reactivex.disposables.Disposable replaceResource(int,io.reactivex.disposables.Disposable)
androidx.core.view.DragStartHelper
com.example.revolut.rates.R$id: int top
kotlin.comparisons.ComparisonsKt___ComparisonsKt: java.lang.Object maxOf(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Comparator)
com.example.revolut.rates.R$color: int highlighted_text_material_light
androidx.loader.R$dimen: int notification_main_column_padding_top
androidx.core.view.InputDeviceCompat: int SOURCE_HDMI
androidx.appcompat.widget.AppCompatSpinner: boolean performClick()
com.example.revolut.rates.R$styleable: int ActionBar_titleTextStyle
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$sumByDouble$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.recyclerview.widget.AsyncListDiffer: void submitList(java.util.List)
io.reactivex.annotations.BackpressureKind: io.reactivex.annotations.BackpressureKind[] values()
com.jakewharton.rxbinding3.widget.SeekBarProgressChangeEvent: android.widget.SeekBar component1()
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable
androidx.appcompat.R$attr: int editTextBackground
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: AppCompatMultiAutoCompleteTextView(android.content.Context)
io.reactivex.Single: io.reactivex.Single takeUntil(io.reactivex.CompletableSource)
androidx.constraintlayout.solver.SolverVariable$Type
dagger.android.support.DaggerAppCompatActivity
dagger.android.support.R$styleable: int AppCompatTheme_dialogCornerRadius
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: android.app.PendingIntent getReadPendingIntent()
kotlinx.coroutines.selects.SelectBuilderImpl: kotlin.coroutines.Continuation getCompletion()
kotlinx.coroutines.TimeoutCancellationException: kotlinx.coroutines.Job coroutine
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()
androidx.core.view.DisplayCutoutCompat: java.lang.String toString()
androidx.fragment.app.ListFragment: long getSelectedItemId()
kotlin.collections.AbstractCollection: int getSize()
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.legacy.v4.R$layout: int notification_template_media_custom
io.reactivex.Flowable: io.reactivex.Flowable zipArray(io.reactivex.functions.Function,boolean,int,org.reactivestreams.Publisher[])
io.reactivex.Flowable: io.reactivex.Flowable startWith(java.lang.Object)
kotlin.jdk7.AutoCloseableKt
androidx.core.view.MenuKt: kotlin.sequences.Sequence getChildren(android.view.Menu)
retrofit2.Retrofit: java.util.List converterFactories()
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(short[],java.util.Map,kotlin.jvm.functions.Function1)
okio.Pipe
io.reactivex.internal.operators.observable.ObservableAnySingle: io.reactivex.Observable fuseToObservable()
androidx.appcompat.view.menu.MenuAdapter: void setForceShowIcon(boolean)
androidx.recyclerview.R$styleable: int FontFamilyFont_font
androidx.legacy.coreui.R$styleable: int[] FontFamily
androidx.appcompat.R$attr: int srcCompat
androidx.recyclerview.widget.DiffUtil$ItemCallback: boolean areItemsTheSame(java.lang.Object,java.lang.Object)
androidx.lifecycle.LifecycleService: int onStartCommand(android.content.Intent,int,int)
androidx.viewpager.R$id: int tag_unhandled_key_event_manager
kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc
android.support.v4.media.session.MediaControllerCompat: void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem getSystem()
androidx.appcompat.R$style: int Theme_AppCompat_DayNight_DarkActionBar
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[])
kotlinx.coroutines.ThreadEventLoop: void shutdown()
kotlin.internal.PlatformImplementationsKt: boolean apiVersionIsAtLeast(int,int,int)
okio.ByteString: int indexOf(okio.ByteString,int)
androidx.appcompat.view.menu.ExpandedMenuView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
androidx.core.os.HandlerKt$postDelayed$runnable$1: HandlerKt$postDelayed$runnable$1(kotlin.jvm.functions.Function0)
com.example.revolut.rates.R$id: int info
io.reactivex.internal.operators.parallel.ParallelMapTry
okhttp3.Call
io.reactivex.Completable: io.reactivex.Completable fromRunnable(java.lang.Runnable)
androidx.core.content.res.TypedArrayUtils: android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
androidx.core.util.SparseArrayKt$valueIterator$1: void remove()
androidx.lifecycle.ViewModelStore: ViewModelStore()
dagger.android.support.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(byte[],kotlin.jvm.functions.Function1)
dagger.android.support.R$styleable: int[] AlertDialog
androidx.recyclerview.widget.GridLayoutManager: void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int)
io.reactivex.internal.operators.single.SingleDoOnDispose: void subscribeActual(io.reactivex.SingleObserver)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_translationX
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat setTint(int)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence removeRange(java.lang.CharSequence,int,int)
androidx.appcompat.R$id: int customPanel
okhttp3.EventListener: void callEnd(okhttp3.Call)
com.example.revolut.rates.databinding.RatesItemBinding: android.widget.TextView currencyName
com.jakewharton.rxbinding3.core.R$styleable: int[] GradientColorItem
io.reactivex.exceptions.CompositeException
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.recyclerview.R$color: int secondary_text_default_material_light
kotlin.jvm.functions.Function16
androidx.recyclerview.R$dimen: int notification_top_pad
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet,int)
io.reactivex.Single: io.reactivex.Flowable concat(org.reactivestreams.Publisher,int)
kotlin.text.UStringsKt: short toUShort(java.lang.String)
androidx.core.R$styleable: int GradientColor_android_gradientRadius
io.reactivex.internal.operators.observable.ObservableBlockingSubscribe: void subscribe(io.reactivex.ObservableSource)
com.jakewharton.rxbinding3.widget.SeekBarStartChangeEvent: com.jakewharton.rxbinding3.widget.SeekBarStartChangeEvent copy$default(com.jakewharton.rxbinding3.widget.SeekBarStartChangeEvent,android.widget.SeekBar,int,java.lang.Object)
androidx.appcompat.view.WindowCallbackWrapper: boolean onCreatePanelMenu(int,android.view.Menu)
androidx.appcompat.R$styleable: int ActionBar_subtitle
io.reactivex.observers.DefaultObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.vectordrawable.R$dimen: int notification_action_icon_size
kotlin.reflect.KMutableProperty0
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle: FlowableConcatMapSingle(io.reactivex.Flowable,io.reactivex.functions.Function,io.reactivex.internal.util.ErrorMode,int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
androidx.recyclerview.R$id: int tag_transition_group
io.reactivex.internal.observers.DeferredScalarDisposable: java.lang.Object value
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(float[],java.lang.Object,kotlin.jvm.functions.Function3)
io.reactivex.internal.operators.single.SingleDelayWithObservable: SingleDelayWithObservable(io.reactivex.SingleSource,io.reactivex.ObservableSource)
io.reactivex.internal.subscribers.InnerQueuedSubscriber: io.reactivex.internal.fuseable.SimpleQueue queue()
dagger.android.support.R$dimen: int highlight_alpha_material_dark
com.example.revolut.rates.R$style: int Widget_AppCompat_SeekBar_Discrete
kotlin.reflect.KParameter$DefaultImpls: void isVararg$annotations()
dagger.android.support.R$attr: int contentInsetEnd
kotlinx.coroutines.CoroutineId: long getId()
okhttp3.internal.connection.RealConnection: java.lang.String toString()
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1: boolean hasNext()
kotlin.collections.AbstractList: int lastIndexOf(java.lang.Object)
dagger.android.DaggerDialogFragment: DaggerDialogFragment()
dagger.android.support.R$style: int Widget_AppCompat_Spinner_Underlined
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: boolean isEmpty()
com.jakewharton.rxbinding3.widget.TextViewTextChangeEvent
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_chainUseRtl
androidx.core.util.HalfKt: android.util.Half toHalf(short)
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-rL5Bavg(short[])
androidx.coordinatorlayout.widget.CoordinatorLayout: void onDetachedFromWindow()
androidx.appcompat.R$styleable: int[] SwitchCompat
okhttp3.MultipartBody: okhttp3.MediaType contentType()
kotlinx.coroutines.channels.BroadcastKt: kotlinx.coroutines.channels.BroadcastChannel broadcast$default(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlinx.coroutines.Job,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setText(java.lang.CharSequence)
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: kotlinx.coroutines.internal.LockFreeLinkedListNode queue
kotlinx.coroutines.internal.LockFreeLinkedListKt: void FAILURE$annotations()
kotlin.collections.AbstractMutableSet
kotlinx.coroutines.CommonPool: java.lang.String DEFAULT_PARALLELISM_PROPERTY_NAME
io.reactivex.internal.operators.maybe.MaybeJust: void subscribeActual(io.reactivex.MaybeObserver)
androidx.recyclerview.widget.RecyclerView$OnFlingListener: boolean onFling(int,int)
kotlin.UByteArray: java.lang.String toString-impl(byte[])
androidx.appcompat.R$color: int primary_dark_material_light
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable filter(io.reactivex.functions.Predicate)
androidx.databinding.ObservableShort: void set(short)
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable)
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)
kotlin.collections.CollectionsKt___CollectionsKt: int indexOfFirst(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.LinearLayoutManager: boolean isSmoothScrollbarEnabled()
androidx.core.widget.PopupWindowCompat: void setWindowLayoutType(android.widget.PopupWindow,int)
androidx.core.ktx.R$styleable: int GradientColor_android_centerY
kotlin.sequences.SubSequence
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_maxWidth
androidx.customview.R$layout: int notification_template_part_chronometer
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getOptimizationLevel()
com.google.gson.Gson: com.google.gson.JsonElement toJsonTree(java.lang.Object)
androidx.core.view.MenuKt$iterator$1
android.support.v4.media.session.IMediaSession: void skipToQueueItem(long)
io.reactivex.Maybe: io.reactivex.Maybe doAfterTerminate(io.reactivex.functions.Action)
com.google.gson.internal.bind.TreeTypeAdapter: TreeTypeAdapter(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory)
kotlin.UShort: short constructor-impl(short)
androidx.slidingpanelayout.R$id: int notification_main_column_container
androidx.appcompat.R$attr: int keylines
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength[] values()
io.reactivex.exceptions.UndeliverableException: long serialVersionUID
androidx.appcompat.R$dimen: int abc_text_size_title_material
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment TOP
io.reactivex.internal.operators.observable.ObservableCache: void onComplete()
androidx.core.app.ShareCompat: java.lang.String EXTRA_CALLING_PACKAGE_INTEROP
io.reactivex.Observable: io.reactivex.Observable fromFuture(java.util.concurrent.Future)
android.support.v4.media.session.PlaybackStateCompat: long ACTION_SKIP_TO_PREVIOUS
androidx.coordinatorlayout.R$string: int status_bar_notification_info_overflow
androidx.core.animation.AnimatorKt$doOnCancel$$inlined$addListener$1: void onAnimationCancel(android.animation.Animator)
io.reactivex.internal.operators.flowable.FlowableTimeInterval: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.sequences.MergingSequence: kotlin.jvm.functions.Function2 access$getTransform$p(kotlin.sequences.MergingSequence)
androidx.core.ktx.R$style: int Widget_Compat_NotificationActionContainer
dagger.android.support.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe: void subscribeActual(io.reactivex.Observer)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TITLE
androidx.slidingpanelayout.R$id: int async
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
kotlinx.coroutines.DefaultExecutor: kotlinx.coroutines.DefaultExecutor INSTANCE
io.reactivex.internal.subscriptions.BasicQueueSubscription
androidx.appcompat.widget.AppCompatImageView: boolean hasOverlappingRendering()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitle(java.lang.CharSequence)
kotlin.properties.Delegates$vetoable$1: Delegates$vetoable$1(kotlin.jvm.functions.Function3,java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener
io.reactivex.Maybe: void subscribeActual(io.reactivex.MaybeObserver)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(int)
kotlin.math.MathKt__MathJVMKt: void sign$annotations(double)
kotlinx.coroutines.internal.LockFreeMPSCQueueCore$Companion: long access$updateTail(kotlinx.coroutines.internal.LockFreeMPSCQueueCore$Companion,long,int)
io.reactivex.internal.fuseable.SimpleQueue: java.lang.Object poll()
androidx.appcompat.app.AlertController$AlertParams: int mViewLayoutResId
kotlin.coroutines.experimental.jvm.internal.CoroutineImpl: kotlin.coroutines.experimental.Continuation getFacade()
androidx.core.graphics.drawable.DrawableCompat: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1
okhttp3.internal.Util: boolean isAndroidGetsocknameError(java.lang.AssertionError)
kotlin.collections.ArraysKt___ArraysKt: short single(short[],kotlin.jvm.functions.Function1)
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()
com.example.revolut.rates.R$attr: int layout_constraintCircleAngle
io.reactivex.internal.operators.flowable.FlowableJoin: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$1: void onTransitionResume(android.transition.Transition)
io.reactivex.internal.operators.flowable.FlowableSequenceEqual: FlowableSequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiPredicate,int)
okhttp3.internal.io.FileSystem: okio.Source source(java.io.File)
androidx.recyclerview.widget.LinearLayoutManager: void setInitialPrefetchItemCount(int)
io.reactivex.Maybe: io.reactivex.Observable flattenAsObservable(io.reactivex.functions.Function)
kotlinx.coroutines.channels.ArrayChannel: boolean isBufferEmpty()
kotlin.ranges.LongProgression: boolean equals(java.lang.Object)
androidx.slidingpanelayout.R$layout: int notification_template_custom_big
androidx.core.os.LocaleListCompat
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.view.ViewCompat: void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.example.revolut.rates.R$attr: int fastScrollVerticalTrackDrawable
kotlinx.coroutines.DisposeOnCompletion: void invoke(java.lang.Throwable)
kotlin.collections.ULongIterator: java.lang.Object next()
androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)
okhttp3.internal.http.HttpHeaders: boolean varyMatches(okhttp3.Response,okhttp3.Headers,okhttp3.Request)
com.google.gson.internal.Excluder: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
androidx.core.view.ViewCompat: android.graphics.Matrix getMatrix(android.view.View)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)
com.example.revolut.rates.R$attr: int contentInsetRight
androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)
androidx.core.view.ViewPropertyAnimatorListener: void onAnimationCancel(android.view.View)
kotlin.collections.SetsKt__SetsKt: java.util.Set mutableSetOf(java.lang.Object[])
androidx.core.math.MathUtils: float clamp(float,float,float)
dagger.android.support.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
androidx.core.provider.FontsContractCompat$FontRequestCallback: int RESULT_OK
androidx.appcompat.R$styleable: int AppCompatTextView_android_textAppearance
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
dagger.android.support.R$styleable: int SwitchCompat_splitTrack
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.drawerlayout.widget.DrawerLayout: void addFocusables(java.util.ArrayList,int,int)
androidx.appcompat.R$styleable: int SearchView_iconifiedByDefault
com.jakewharton.rxbinding3.widget.RxAdapterView: io.reactivex.Observable itemClickEvents(android.widget.AdapterView)
io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit)
androidx.legacy.v4.R$styleable: int FontFamily_fontProviderCerts
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_YEAR
kotlin.sequences.SequenceScope: java.lang.Object yieldAll(java.util.Iterator,kotlin.coroutines.Continuation)
com.example.revolut.rates.R$attr: int keylines
android.support.v4.media.session.MediaControllerCompat: void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int)
androidx.appcompat.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.R$attr: int alpha
io.reactivex.internal.operators.single.SingleUsing: void subscribeActual(io.reactivex.SingleObserver)
dagger.android.support.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(int[])
androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)
androidx.lifecycle.ComputableLiveData
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapTo$1: ChannelsKt__Channels_commonKt$mapTo$1(kotlin.coroutines.Continuation)
kotlin.UIntArray: int size()
io.reactivex.internal.operators.observable.ObservableSampleWithObservable: void subscribeActual(io.reactivex.Observer)
com.jakewharton.rxbinding3.core.R$styleable: int GradientColor_android_gradientRadius
io.reactivex.internal.util.HashMapSupplier: java.util.concurrent.Callable asCallable()
io.reactivex.internal.util.EmptyComponent: org.reactivestreams.Subscriber asSubscriber()
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintHorizontal_weight
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte getOrNull(byte[],int)
kotlin.Unit: java.lang.String toString()
androidx.legacy.v4.R$styleable: int CoordinatorLayout_Layout_layout_anchor
dagger.android.support.R$attr: int windowFixedWidthMinor
com.example.revolut.rates.R$styleable: int SearchView_queryBackground
androidx.core.app.NotificationCompat$Style: void restoreFromCompatExtras(android.os.Bundle)
kotlinx.coroutines.DefaultTimeSource: kotlinx.coroutines.DefaultTimeSource INSTANCE
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(char[],java.lang.Iterable,kotlin.jvm.functions.Function2)
androidx.appcompat.R$style: int Widget_AppCompat_ActionBar_TabBar
androidx.core.view.ViewCompat: int OVER_SCROLL_ALWAYS
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(java.lang.Object[])
androidx.recyclerview.widget.SortedList: void clear()
com.example.revolut.rates.databinding.ActivityMainBinding: com.example.revolut.rates.databinding.ActivityMainBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_FULL_SCREEN
androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)
com.example.revolut.rates.R$style: int Base_V7_Theme_AppCompat
okhttp3.Route: boolean requiresTunnel()
androidx.databinding.Untaggable: java.lang.String[] value()
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function6)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_256_CBC_SHA
kotlin.sequences.SequencesKt
com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactory: CoroutineCallAdapterFactory(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)
androidx.recyclerview.widget.LinearLayoutManager: int getInitialPrefetchItemCount()
androidx.appcompat.R$styleable: int ActionBar_backgroundSplit
com.example.revolut.rates.R$color: int abc_primary_text_disable_only_material_dark
okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(float[],java.util.Map,kotlin.jvm.functions.Function1)
okio.BufferedSource: long indexOf(okio.ByteString,long)
com.example.revolut.rates.R$drawable: int abc_textfield_search_default_mtrl_alpha
androidx.core.transition.TransitionKt$addListener$listener$1: void onTransitionCancel(android.transition.Transition)
kotlin.jvm.internal.PackageReference: java.lang.Class getJClass()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel zip(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_FALLBACK_SCSV
dagger.android.support.R$drawable: int abc_ic_star_black_48dp
kotlin.text.MatchResult$Destructured: java.util.List toList()
kotlin.collections.AbstractMap: AbstractMap()
androidx.appcompat.R$id: int action_menu_presenter
androidx.recyclerview.widget.ItemTouchHelper$Callback: boolean isItemViewSwipeEnabled()
io.reactivex.internal.operators.single.SingleTakeUntil: SingleTakeUntil(io.reactivex.SingleSource,org.reactivestreams.Publisher)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getOpacity()
kotlin.collections.CollectionsKt__ReversedViewsKt: java.util.List asReversedMutable(java.util.List)
kotlin.io.FilesKt__FilePathComponentsKt: java.io.File subPath(java.io.File,int,int)
androidx.drawerlayout.widget.DrawerLayout: DrawerLayout(android.content.Context)
androidx.core.graphics.ColorKt: float getLuminance(long)
androidx.lifecycle.extensions.R$styleable: int FontFamilyFont_fontVariationSettings
io.reactivex.functions.Function9
io.reactivex.Observable: io.reactivex.Single toSortedList(java.util.Comparator)
io.reactivex.processors.ReplayProcessor: boolean hasSubscribers()
kotlin.text.Regex: java.lang.String replaceFirst(java.lang.CharSequence,java.lang.String)
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
io.reactivex.Flowable: io.reactivex.Flowable sample(org.reactivestreams.Publisher)
androidx.core.view.NestedScrollingChild2
androidx.fragment.R$drawable: int notification_icon_background
androidx.annotation.MenuRes
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
io.reactivex.internal.operators.maybe.MaybeDetach: void subscribeActual(io.reactivex.MaybeObserver)
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_SHA
androidx.lifecycle.extensions.R$attr: int layout_keyline
io.reactivex.Flowable: io.reactivex.Flowable buffer(io.reactivex.Flowable,io.reactivex.functions.Function)
kotlinx.coroutines.test.TestCoroutineContext: void assertExceptions(java.lang.String,kotlin.jvm.functions.Function1)
androidx.appcompat.R$anim: int abc_popup_exit
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function4)
kotlin.collections.UByteIterator
dagger.android.support.R$attr: int buttonBarStyle
io.reactivex.internal.operators.single.SingleDelay
com.example.revolut.rates.R$layout: int abc_list_menu_item_icon
io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function5)
androidx.collection.CircularIntArray: int popFirst()
kotlin.text.DelimitedRangesSequence$iterator$1: boolean hasNext()
io.reactivex.Flowable: io.reactivex.Flowable fromCallable(java.util.concurrent.Callable)
androidx.core.app.NotificationCompat$Builder: android.content.Context mContext
kotlin.collections.UArraysKt: int contentHashCode-rL5Bavg(short[])
androidx.core.view.ViewCompat: int generateViewId()
androidx.customview.R$id: int line3
kotlin.reflect.KClass: boolean isSealed()
io.reactivex.Observable: io.reactivex.Observable interval(long,java.util.concurrent.TimeUnit)
kotlin.ranges.LongProgression: kotlin.collections.LongIterator iterator()
androidx.recyclerview.widget.AdapterListUpdateCallback
androidx.drawerlayout.widget.DrawerLayout: int STATE_DRAGGING
androidx.drawerlayout.R$attr: int ttcIndex
kotlin.jvm.Strictfp
androidx.appcompat.R$id: int submenuarrow
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler onIoScheduler(io.reactivex.Scheduler)
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
com.jakewharton.rxbinding3.core.R$styleable: int FontFamily_fontProviderFetchTimeout
com.example.revolut.rates.R$attr: int arrowShaftLength
kotlin.collections.CollectionsKt___CollectionsKt: boolean[] toBooleanArray(java.util.Collection)
androidx.loader.app.LoaderManager$LoaderCallbacks
com.example.revolut.rates.R$styleable: int CoordinatorLayout_Layout_layout_anchor
okhttp3.Response$Builder: okhttp3.Response$Builder removeHeader(java.lang.String)
androidx.core.widget.ScrollerCompat: void notifyVerticalEdgeReached(int,int,int)
io.reactivex.internal.operators.observable.ObservableFilter: void subscribeActual(io.reactivex.Observer)
dagger.android.support.HasSupportFragmentInjector
kotlin.collections.ArraysKt___ArraysKt: void forEach(int[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int[] GradientColorItem
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
androidx.core.view.DisplayCutoutCompat: java.util.List getBoundingRects()
android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
io.reactivex.Observable: io.reactivex.Observable fromPublisher(org.reactivestreams.Publisher)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] plus-ojwP5H8(short[],java.util.Collection)
io.reactivex.internal.operators.observable.ObservableUsing$UsingObserver: long serialVersionUID
io.reactivex.Flowable: io.reactivex.disposables.Disposable forEach(io.reactivex.functions.Consumer)
androidx.recyclerview.R$attr: int fontProviderCerts
androidx.core.view.ViewGroupKt: boolean contains(android.view.ViewGroup,android.view.View)
androidx.collection.CircularIntArray: void removeFromStart(int)
androidx.lifecycle.extensions.R$id: int action_container
dagger.android.support.R$styleable: int AppCompatTextView_autoSizeStepGranularity
kotlin.jvm.internal.TypeIntrinsics: java.lang.Iterable asMutableIterable(java.lang.Object,java.lang.String)
dagger.android.support.R$style: int Platform_ThemeOverlay_AppCompat
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory)
io.reactivex.Flowable: io.reactivex.Flowable debounce(long,java.util.concurrent.TimeUnit)
androidx.legacy.coreui.R$dimen: int compat_control_corner_material
androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)
com.example.revolut.rates.R$drawable: int abc_text_select_handle_right_mtrl_dark
com.example.revolut.rates.R$styleable: int AppCompatTheme_colorBackgroundFloating
androidx.fragment.R$id: int notification_main_column
kotlin.coroutines.experimental.Continuation: void resume(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.os.Parcelable onSaveInstanceState()
kotlinx.coroutines.test.TestCoroutineContext: void cancelAllActions()
okio.BufferedSource: int readInt()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(long[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int VERTICAL
dagger.android.support.R$id: int list_item
io.reactivex.internal.operators.observable.ObservableFromUnsafeSource: ObservableFromUnsafeSource(io.reactivex.ObservableSource)
androidx.appcompat.app.WindowDecorActionBar: void animateToMode(boolean)
dagger.android.support.R$attr: int actionBarItemBackground
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int)
kotlin.io.FileTreeWalk: java.io.File access$getStart$p(kotlin.io.FileTreeWalk)
io.reactivex.FlowableConverter: java.lang.Object apply(io.reactivex.Flowable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLast-nggk6HY(short[],int)
androidx.viewpager.widget.ViewPager: void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
io.reactivex.internal.operators.maybe.MaybeDefer
androidx.constraintlayout.widget.Placeholder: void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder addMessage(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float circleAngle
androidx.appcompat.R$styleable: int ActionBar_titleTextStyle
io.reactivex.internal.schedulers.AbstractDirectTask: boolean isDisposed()
io.reactivex.Flowable: io.reactivex.Flowable timeInterval()
kotlinx.coroutines.internal.AtomicOp: boolean isDecided()
com.example.revolut.rates.R$anim: int abc_fade_out
kotlin.UShort: int hashCode-impl(short)
kotlin.coroutines.jvm.internal.CompletedContinuation
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(double[],double,int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
io.reactivex.internal.operators.maybe.MaybeFromFuture: MaybeFromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)
androidx.slidingpanelayout.R$color: int secondary_text_default_material_light
android.support.v4.media.session.MediaControllerCompat: long getFlags()
okio.Buffer: okio.Buffer writeByte(int)
com.example.revolut.rates.di.DaggerAppComponent: void inject(com.example.revolut.rates.viewmodel.CurrenciesViewModel)
dagger.android.support.R$styleable: int[] View
androidx.slidingpanelayout.R$styleable: int[] FontFamily
androidx.appcompat.R$styleable: int MenuItem_tooltipText
androidx.recyclerview.widget.RecyclerView$State: int getItemCount()
kotlin.collections.CollectionsKt__IterablesKt$Iterable$1
com.example.revolut.rates.R$color: int color_grey_400
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit)
androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)
androidx.constraintlayout.widget.ConstraintLayout: void setDesignInformation(int,java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeToObservable
androidx.core.graphics.PointKt: android.graphics.Point minus(android.graphics.Point,int)
androidx.databinding.adapters.SearchViewBindingAdapter: SearchViewBindingAdapter()
dagger.android.support.R$attr: int actionBarDivider
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderView(android.view.View)
androidx.core.view.ViewCompat$FocusRealDirection
dagger.android.support.R$dimen: int notification_subtext_size
androidx.legacy.coreui.R$styleable: int CoordinatorLayout_Layout_layout_anchor
kotlinx.coroutines.ExecutorCoroutineDispatcher: ExecutorCoroutineDispatcher()
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget getLastVisibleWidget()
androidx.fragment.R$styleable: int FontFamilyFont_android_font
kotlin.Metadata: int xi()
androidx.constraintlayout.widget.R
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContentDescription(java.lang.CharSequence)
androidx.customview.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List dropLast(java.util.List,int)
kotlin.collections.CollectionsKt___CollectionsKt: int indexOf(java.lang.Iterable,java.lang.Object)
androidx.customview.R$style: int TextAppearance_Compat_Notification
com.example.revolut.rates.R$attr: int reverseLayout
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle: ObservableConcatMapSingle(io.reactivex.Observable,io.reactivex.functions.Function,io.reactivex.internal.util.ErrorMode,int)
kotlin.io.FilesKt__FileReadWriteKt: void appendBytes(java.io.File,byte[])
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast(java.lang.String,char,java.lang.String)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintWidth_max
io.reactivex.Flowable: io.reactivex.Flowable buffer(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,java.util.concurrent.Callable)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode NO_ERROR
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double random(double[],kotlin.random.Random)
io.reactivex.processors.AsyncProcessor: void onNext(java.lang.Object)
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void offsetChildrenHorizontal(int)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder callbackExecutor(java.util.concurrent.Executor)
dagger.android.support.R$drawable: int abc_textfield_activated_mtrl_alpha
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.example.revolut.rates.data.model.CurrencyResponse: com.example.revolut.rates.data.model.CurrencyResponse copy$default(com.example.revolut.rates.data.model.CurrencyResponse,java.lang.String,java.lang.String,java.util.Map,int,java.lang.Object)
androidx.appcompat.R$styleable: int AppCompatTheme_editTextColor
androidx.appcompat.view.menu.ListMenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
android.support.v4.media.session.MediaSessionCompat$Token: int hashCode()
kotlin.reflect.KCallable$DefaultImpls: void isFinal$annotations()
io.reactivex.internal.operators.maybe.MaybeFlatten: MaybeFlatten(io.reactivex.MaybeSource,io.reactivex.functions.Function)
dagger.android.support.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isSimilarDimensionConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
io.reactivex.internal.operators.flowable.FlowableReduceWithSingle: FlowableReduceWithSingle(org.reactivestreams.Publisher,java.util.concurrent.Callable,io.reactivex.functions.BiFunction)
io.reactivex.internal.functions.Functions: io.reactivex.functions.Predicate isInstanceOf(java.lang.Class)
kotlin.sequences.SequencesKt___SequencesKt: long sumOfLong(kotlin.sequences.Sequence)
io.reactivex.internal.schedulers.ScheduledDirectPeriodicTask: ScheduledDirectPeriodicTask(java.lang.Runnable)
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.fragment.R$styleable: int GradientColor_android_centerColor
kotlin.coroutines.experimental.CombinedContext: boolean equals(java.lang.Object)
kotlinx.coroutines.ChildContinuation: ChildContinuation(kotlinx.coroutines.Job,kotlinx.coroutines.AbstractContinuation)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BOOLEAN
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.example.revolut.rates.R$styleable: int FontFamily_fontProviderAuthority
retrofit2.Call: retrofit2.Response execute()
androidx.customview.R$dimen: int notification_top_pad
dagger.android.support.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
io.reactivex.internal.fuseable.HasUpstreamPublisher
androidx.core.app.NotificationCompat: java.lang.String EXTRA_HIDDEN_CONVERSATION_TITLE
io.reactivex.internal.util.HalfSerializer: void onComplete(org.reactivestreams.Subscriber,java.util.concurrent.atomic.AtomicInteger,io.reactivex.internal.util.AtomicThrowable)
androidx.core.view.WindowInsetsCompat: int getStableInsetLeft()
retrofit2.Retrofit: java.lang.Object create(java.lang.Class)
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver$ConcatMapMaybeObserver: long serialVersionUID
okio.Timeout: okio.Timeout clearDeadline()
io.reactivex.internal.util.VolatileSizeArrayList: boolean remove(java.lang.Object)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
io.reactivex.internal.operators.observable.ObservableDetach
io.reactivex.internal.util.LinkedArrayList: void add(java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItem: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
androidx.core.view.ViewCompat: int ACCESSIBILITY_LIVE_REGION_ASSERTIVE
com.google.gson.internal.bind.JsonTreeReader: long nextLong()
androidx.appcompat.R$styleable: int AppCompatTheme_listDividerAlertDialog
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
dagger.internal.ReferenceReleasingProvider: void releaseStrongReference()
android.support.v4.media.MediaBrowserCompat: void subscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)
androidx.lifecycle.extensions.R$id: int notification_main_column_container
io.reactivex.internal.operators.maybe.MaybeCache: void onError(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: float[] sortedArray(float[])
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)
com.example.revolut.rates.R$styleable: int AppCompatTheme_actionBarSize
androidx.fragment.app.FragmentTransitionImpl: void addTargets(java.lang.Object,java.util.ArrayList)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
dagger.android.support.R$style: int Widget_AppCompat_ActionButton_Overflow
kotlin.jvm.JvmClassMappingKt
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(int[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.appcompat.R$attr: int track
io.reactivex.internal.util.NotificationLite: java.lang.String toString()
kotlinx.coroutines.DeferredKt: kotlinx.coroutines.Deferred async(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
kotlin.reflect.KClass$DefaultImpls: void visibility$annotations()
kotlin.jvm.functions.Function8
androidx.vectordrawable.R$styleable: int GradientColor_android_tileMode
androidx.recyclerview.widget.RecyclerView$SmoothScroller: int getChildCount()
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.graphics.PaintCompat: boolean hasGlyph(android.graphics.Paint,java.lang.String)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()
dagger.android.support.R$styleable: int TextAppearance_android_shadowColor
io.reactivex.observers.ResourceSingleObserver: boolean isDisposed()
io.reactivex.Single: io.reactivex.Single contains(java.lang.Object)
androidx.collection.ArrayMap: void putAll(java.util.Map)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object singleOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.IconCompat: IconCompat()
kotlinx.coroutines.DefaultTimeSource: void unregisterTimeLoopThread()
androidx.slidingpanelayout.R$dimen: int notification_main_column_padding_top
androidx.appcompat.app.ActionBar: boolean isShowing()
com.google.gson.internal.ObjectConstructor: java.lang.Object construct()
io.reactivex.internal.subscriptions.SubscriptionHelper
io.reactivex.internal.subscribers.BasicFuseableSubscriber: boolean done
androidx.drawerlayout.R$id
androidx.core.view.ViewKt: void setInvisible(android.view.View,boolean)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PUBLIC
androidx.recyclerview.widget.RecyclerView$State: boolean didStructureChange()
androidx.core.os.ParcelableCompatCreatorCallbacks
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
androidx.databinding.adapters.TextViewBindingAdapter: void setInputMethod(android.widget.TextView,java.lang.CharSequence)
androidx.core.view.ActionProvider: ActionProvider(android.content.Context)
io.reactivex.internal.observers.LambdaObserver: LambdaObserver(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer)
com.example.revolut.rates.data.model.Rate$Companion: Rate$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.SpreadBuilder: void addSpread(java.lang.Object)
io.reactivex.Flowable: io.reactivex.Flowable throttleLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.R$id: int multiply
kotlin.ULongArray: boolean containsAll-impl(long[],java.util.Collection)
kotlinx.coroutines.AwaitKt: java.lang.Object awaitAll(kotlinx.coroutines.Deferred[],kotlin.coroutines.Continuation)
com.example.revolut.rates.R$string: int abc_font_family_display_2_material
androidx.viewpager.R$dimen: int compat_button_padding_vertical_material
androidx.appcompat.R$dimen: int abc_text_size_large_material
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity requireActivity()
com.jakewharton.rxbinding3.view.ViewAttachEvent
androidx.fragment.app.FragmentHostCallback: int onGetWindowAnimations()
androidx.recyclerview.widget.LinearLayoutManager: void prepareForDrop(android.view.View,android.view.View,int,int)
io.reactivex.internal.schedulers.SchedulerWhen
dagger.android.support.R$style: int Platform_ThemeOverlay_AppCompat_Light
okhttp3.WebSocketListener: void onClosed(okhttp3.WebSocket,int,java.lang.String)
com.example.revolut.rates.di.Injector
io.reactivex.internal.functions.Functions: io.reactivex.functions.Consumer ON_ERROR_MISSING
okio.ForwardingSink: okio.Sink delegate()
kotlinx.coroutines.CoroutineContextKt: boolean getUseCoroutinesScheduler()
io.reactivex.internal.functions.ObjectHelper: io.reactivex.functions.BiPredicate equalsPredicate()
androidx.appcompat.widget.AppCompatImageHelper: void loadFromAttributes(android.util.AttributeSet,int)
retrofit2.Response: retrofit2.Response error(int,okhttp3.ResponseBody)
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int)
androidx.appcompat.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
androidx.appcompat.view.menu.MenuItemImpl: int getAlphabeticModifiers()
androidx.asynclayoutinflater.view.AsyncLayoutInflater: AsyncLayoutInflater(android.content.Context)
kotlin.KotlinVersion: KotlinVersion(int,int,int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void helpDelete()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence)
kotlinx.coroutines.CancellableContinuation: boolean isCancelled()
androidx.media.R$integer
androidx.appcompat.R$styleable: int AppCompatTheme_dropDownListViewStyle
io.reactivex.Observable: io.reactivex.Observable fromIterable(java.lang.Iterable)
com.example.revolut.rates.R$id: int showTitle
com.example.revolut.rates.R$attr: int actionBarTheme
dagger.android.support.R$drawable: int abc_btn_radio_material
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(char[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
android.support.v4.media.session.PlaybackStateCompat: int STATE_SKIPPING_TO_NEXT
androidx.media.R$layout: int notification_template_icon_group
dagger.android.support.R$attr: int colorPrimary
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintRight_toLeftOf
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
io.reactivex.Flowable: io.reactivex.subscribers.TestSubscriber test(long,boolean)
kotlinx.coroutines.CompletionHandlerBase: CompletionHandlerBase()
kotlin.math.MathKt__MathJVMKt: long roundToLong(float)
androidx.appcompat.R$styleable: int RecycleListView_paddingBottomNoButtons
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: boolean isFullSpan()
androidx.viewpager.widget.PagerAdapter: android.os.Parcelable saveState()
androidx.databinding.ObservableArrayList: java.lang.Object remove(int)
androidx.appcompat.R$drawable: int abc_dialog_material_background
kotlinx.coroutines.scheduling.WorkQueue: boolean addLast(kotlinx.coroutines.scheduling.Task,kotlinx.coroutines.scheduling.GlobalQueue)
io.reactivex.plugins.RxJavaPlugins: void lockdown()
okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()
kotlin.math.MathKt__MathJVMKt: double asinh(double)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.channels.ConflatedChannel: void onClosed(kotlinx.coroutines.channels.Closed)
androidx.databinding.MergedDataBinderMapper: java.lang.String convertBrIdToString(int)
androidx.collection.SimpleArrayMap: void putAll(androidx.collection.SimpleArrayMap)
dagger.Module
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification: void subscribeActual(io.reactivex.MaybeObserver)
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls
io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit)
androidx.core.database.sqlite.SQLiteDatabaseKt: java.lang.Object transaction$default(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.cursoradapter.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)
kotlinx.coroutines.selects.SelectBuilder$DefaultImpls
io.reactivex.internal.operators.observable.ObservableFlatMap: void subscribeActual(io.reactivex.Observer)
androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry: void addPosition(int,int)
androidx.collection.LongSparseArray: java.lang.Object valueAt(int)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()
kotlin.KotlinVersion
kotlin.random.Random: boolean nextBoolean()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence sortedBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.appcompat.R$id: int end
com.example.revolut.rates.R$color: int color_grey_100
com.example.revolut.rates.R$dimen: int highlight_alpha_material_colored
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: int getSize()
kotlin.internal.Exact
kotlin.io.FilePathComponents
androidx.constraintlayout.widget.R$attr: int layout_constraintStart_toEndOf
com.example.revolut.rates.R$string: int abc_searchview_description_search
com.example.revolut.rates.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
dagger.android.support.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
kotlin.coroutines.SafeContinuation: java.lang.String toString()
kotlinx.coroutines.internal.LockFreeLinkedListNode$describeRemove$1: kotlinx.coroutines.internal.LockFreeLinkedListNode getOriginalNext()
androidx.legacy.coreui.R$dimen: int notification_right_side_padding_top
kotlin.text.Typography: char paragraph
androidx.constraintlayout.widget.ConstraintSet: void setGoneMargin(int,int,int)
io.reactivex.internal.operators.observable.ObservableConcatWithSingle: ObservableConcatWithSingle(io.reactivex.Observable,io.reactivex.SingleSource)
androidx.core.content.res.ColorStateListInflaterCompat
androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(int,int)
io.reactivex.internal.operators.single.SingleToFlowable: SingleToFlowable(io.reactivex.SingleSource)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void helpRemove()
androidx.core.view.MenuKt: void forEachIndexed(android.view.Menu,kotlin.jvm.functions.Function2)
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap)
androidx.appcompat.R$color: int abc_tint_default
com.example.revolut.rates.R$string: int abc_menu_sym_shortcut_label
kotlinx.coroutines.NonCancellable: boolean isActive()
androidx.constraintlayout.widget.ConstraintSet: void constrainHeight(int,int)
okio.ByteString: boolean endsWith(okio.ByteString)
kotlin.ranges.ULongRange: java.lang.Comparable getEndInclusive()
com.example.revolut.rates.R$styleable: int ConstraintLayout_Layout_layout_constraintHeight_percent
androidx.core.app.TaskStackBuilder: void startActivities(android.os.Bundle)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet,int)
kotlinx.coroutines.CoroutineDispatcher: CoroutineDispatcher()
io.reactivex.Observable: io.reactivex.Observable compose(io.reactivex.ObservableTransformer)
io.reactivex.internal.operators.observable.ObservableJust: java.lang.Object call()
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean remove()
io.reactivex.Observable: io.reactivex.Observable scan(io.reactivex.functions.BiFunction)
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig()
kotlin.collections.ArraysKt___ArraysKt: boolean any(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobCancellationException: java.lang.String toString()
androidx.core.util.SparseIntArrayKt$keyIterator$1: boolean hasNext()
com.example.revolut.rates.R$id: int icon_group
androidx.core.os.TraceCompat: void endSection()
androidx.customview.R$id: int icon_group
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo()
io.reactivex.Observable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function,boolean)
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_WITH_TEXT
kotlin.collections.AbstractMap$values$1$iterator$1: boolean hasNext()
androidx.loader.app.LoaderManager$LoaderCallbacks: androidx.loader.content.Loader onCreateLoader(int,android.os.Bundle)
androidx.fragment.app.FragmentPagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)
androidx.lifecycle.ServiceLifecycleDispatcher: void onServicePreSuperOnCreate()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int)
io.reactivex.Single: io.reactivex.Single error(java.lang.Throwable)
android.support.v4.media.session.IMediaSession: boolean isTransportControlEnabled()
androidx.asynclayoutinflater.R$id: int action_text
kotlin.jvm.internal.LocalVariableReferencesKt
androidx.core.content.SharedPreferencesCompat$EditorCompat
androidx.asynclayoutinflater.R$id: int right_icon
androidx.constraintlayout.solver.widgets.ConstraintAnchor: ConstraintAnchor(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)
com.example.revolut.rates.R$id: int shortcut
androidx.appcompat.widget.ForwardingListener: void onViewAttachedToWindow(android.view.View)
androidx.legacy.v4.R$dimen: int compat_notification_large_icon_max_width
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable)
com.example.revolut.rates.R$styleable: int TextAppearance_fontFamily
androidx.vectordrawable.R$styleable: int FontFamily_fontProviderPackage
androidx.legacy.v4.R$dimen: int notification_media_narrow_margin
androidx.loader.R$id: int tag_unhandled_key_event_manager
androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$1: void onTransitionResume(android.transition.Transition)
kotlin.jvm.internal.FunctionReference: boolean isInline()
androidx.appcompat.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
androidx.core.internal.view.SupportMenu: int CATEGORY_MASK
dagger.android.support.R$style: int Widget_AppCompat_Button_Small
dagger.android.support.R$id: int wrap_content
androidx.core.widget.TextViewCompat: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
kotlin.ranges.IntRange: java.lang.Comparable getStart()
io.reactivex.Observable: java.lang.Object blockingSingle(java.lang.Object)
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[])
kotlinx.coroutines.DispatchedContinuation: void setResumeMode(int)
kotlin.text.CharCategory: kotlin.text.CharCategory START_PUNCTUATION
androidx.appcompat.view.menu.ListMenuPresenter: void onRestoreInstanceState(android.os.Parcelable)
io.reactivex.internal.operators.completable.CompletableToFlowable
dagger.android.support.R$color: int abc_btn_colored_borderless_text_material
kotlin.io.ByteStreamsKt: long copyTo(java.io.InputStream,java.io.OutputStream,int)
io.reactivex.internal.operators.flowable.FlowableRange$BaseRangeSubscription: long serialVersionUID
kotlin.collections.IndexedValue: kotlin.collections.IndexedValue copy(int,java.lang.Object)
io.reactivex.FlowableEmitter: boolean tryOnError(java.lang.Throwable)
androidx.databinding.ViewDataBinding$PropertyChangedInverseListener
androidx.versionedparcelable.VersionedParcel: void writeLongArray(long[],int)
androidx.core.view.MotionEventCompat: int ACTION_MASK
com.example.revolut.rates.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
io.reactivex.internal.functions.ObjectHelper: boolean equals(java.lang.Object,java.lang.Object)
dagger.android.support.R$attr: int dialogPreferredPadding
androidx.fragment.app.Fragment: void onDestroyOptionsMenu()
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] copyInto(byte[],byte[],int,int,int)
io.reactivex.Observable: io.reactivex.Observable sample(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
okhttp3.internal.cache.DiskLruCache: void flush()
androidx.appcompat.widget.Toolbar: int getPopupTheme()
io.reactivex.internal.subscribers.DeferredScalarSubscriber: void cancel()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(short,short)
kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.lang.Object initialValue()
androidx.slidingpanelayout.widget.SlidingPaneLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
io.reactivex.internal.operators.flowable.FlowableReduceMaybe: FlowableReduceMaybe(io.reactivex.Flowable,io.reactivex.functions.BiFunction)
androidx.core.graphics.ColorUtils: void RGBToLAB(int,int,int,double[])
dagger.android.support.R$attr: int commitIcon
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedEmitLast: long serialVersionUID
androidx.core.R$attr
androidx.core.view.GestureDetectorCompat: boolean onTouchEvent(android.view.MotionEvent)
androidx.asynclayoutinflater.R$dimen: int notification_content_margin_start
androidx.databinding.ObservableDouble: ObservableDouble(double)
dagger.android.DispatchingAndroidInjector: boolean maybeInject(java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function8)
com.example.revolut.rates.R$styleable: int ConstraintSet_barrierDirection
androidx.databinding.adapters.ViewStubBindingAdapter: void setOnInflateListener(androidx.databinding.ViewStubProxy,android.view.ViewStub$OnInflateListener)
com.google.gson.JsonElement: java.lang.String toString()
androidx.core.view.ViewGroupCompat: void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addNetworkInterceptor(okhttp3.Interceptor)
androidx.databinding.adapters.TextViewBindingAdapter: void setDrawableBottom(android.widget.TextView,android.graphics.drawable.Drawable)
io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher,int)
io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doOnNext(io.reactivex.functions.Consumer,io.reactivex.parallel.ParallelFailureHandling)
androidx.appcompat.R$styleable: int ActionBar_itemPadding
androidx.appcompat.widget.ActionMenuView: boolean hideOverflowMenu()
androidx.appcompat.widget.ListPopupWindow: boolean onKeyUp(int,android.view.KeyEvent)
kotlin.collections.ArraysKt___ArraysKt: boolean last(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.TasksKt: java.lang.String DEFAULT_SCHEDULER_NAME
io.reactivex.internal.operators.observable.ObservableReplay: void resetIf(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.ListPopupWindow: boolean isInputMethodNotNeeded()
io.reactivex.observers.BaseTestConsumer: io.reactivex.observers.BaseTestConsumer assertNoErrors()
androidx.appcompat.widget.ActionBarContainer: void drawableStateChanged()
okio.GzipSource
androidx.fragment.R$styleable: int FontFamilyFont_ttcIndex
dagger.android.support.R$style: int TextAppearance_AppCompat_Menu
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isInVerticalChain()
io.reactivex.Flowable: io.reactivex.Flowable timer(long,java.util.concurrent.TimeUnit)
com.google.gson.internal.LazilyParsedNumber: long longValue()
androidx.appcompat.widget.SwitchCompat: boolean onTouchEvent(android.view.MotionEvent)
kotlinx.coroutines.JobKt: java.lang.Object join(kotlinx.coroutines.Job,kotlin.coroutines.Continuation)
androidx.lifecycle.ViewModel: void onCleared()
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable
androidx.recyclerview.widget.RecyclerView$LayoutManager: void requestSimpleAnimationsInNextLayout()
androidx.customview.widget.FocusStrategy$BoundsAdapter: void obtainBounds(java.lang.Object,android.graphics.Rect)
androidx.appcompat.R$dimen: int abc_dialog_padding_material
androidx.recyclerview.widget.LinearLayoutManager: int findFirstVisibleItemPosition()
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget mLastVisibleWidget
androidx.print.PrintHelper: PrintHelper(android.content.Context)
androidx.media.AudioAttributesCompat: int USAGE_NOTIFICATION_RINGTONE
androidx.databinding.ObservableShort: int describeContents()
kotlinx.coroutines.CompletableDeferred
androidx.appcompat.R$layout: int abc_alert_dialog_material
kotlin.collections.ArraysKt___ArraysKt: byte single(byte[])
androidx.legacy.app.ActionBarDrawerToggle: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
io.reactivex.Maybe: io.reactivex.Flowable concat(java.lang.Iterable)
androidx.legacy.v4.R$style: int Widget_Compat_NotificationActionContainer
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] plus(boolean[],boolean)
androidx.legacy.coreui.R$dimen: int notification_small_icon_size_as_large
kotlin.sequences.SequencesKt___SequencesKt: java.util.List toList(kotlin.sequences.Sequence)
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: long serialVersionUID
android.support.v4.media.session.MediaControllerCompat$TransportControls: void skipToQueueItem(long)
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getCurrent()
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_THUMBS_DOWN
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(char[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int MenuItem_android_numericShortcut
androidx.core.provider.FontsContractCompat$Columns: java.lang.String VARIATION_SETTINGS
com.jakewharton.rxbinding3.widget.RxTextView: io.reactivex.Observable editorActions(android.widget.TextView)
androidx.slidingpanelayout.R$attr: int fontProviderPackage
androidx.annotation.RequiresApi: int value()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(long[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.vectordrawable.R$attr: int layout_anchorGravity
androidx.appcompat.widget.ActivityChooserView: void onDetachedFromWindow()
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onStart()
androidx.appcompat.app.AppCompatDialog: void setContentView(int)
androidx.fragment.app.FragmentManager
androidx.constraintlayout.widget.ConstraintSet: void removeFromHorizontalChain(int)
io.reactivex.plugins.RxJavaPlugins: void setOnMaybeAssembly(io.reactivex.functions.Function)
kotlinx.coroutines.CompletableDeferred$DefaultImpls: java.lang.Throwable getCompletionException(kotlinx.coroutines.CompletableDeferred)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
io.reactivex.Observable: io.reactivex.Single first(java.lang.Object)
androidx.vectordrawable.R$id: int bottom
androidx.core.view.ViewKt: int getMarginLeft(android.view.View)
io.reactivex.disposables.SubscriptionDisposable: long serialVersionUID
androidx.core.os.ParcelableCompat: android.os.Parcelable$Creator newCreator(androidx.core.os.ParcelableCompatCreatorCallbacks)
androidx.appcompat.view.menu.MenuPopupHelper: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget getVerticalChainControlWidget()
androidx.lifecycle.ReportFragment: void onStart()
androidx.legacy.coreutils.R$dimen: int compat_notification_large_icon_max_height
androidx.appcompat.app.AppCompatActivity: android.view.MenuInflater getMenuInflater()
androidx.constraintlayout.solver.widgets.ResolutionNode: void resolve()
io.reactivex.parallel.ParallelFailureHandling: io.reactivex.parallel.ParallelFailureHandling[] values()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: void fill-WpHrYlw$default(byte[],byte,int,int,int,java.lang.Object)
io.reactivex.observers.ResourceMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1: java.lang.Object prepare(java.lang.Object)
androidx.core.view.inputmethod.InputConnectionCompat
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$indexOfLast$1: ChannelsKt__Channels_commonKt$indexOfLast$1(kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat: float getRotationX(android.view.View)
androidx.swiperefreshlayout.R$layout: int notification_template_part_chronometer
com.example.revolut.rates.R$styleable: int ColorStateListItem_alpha
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeInserted(int,int)
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
androidx.coordinatorlayout.R$id: int blocking
com.example.revolut.rates.R$style: int Base_V21_Theme_AppCompat_Dialog
androidx.appcompat.R$layout: int abc_tooltip
androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState: android.graphics.drawable.Drawable newDrawable()
androidx.slidingpanelayout.R$style: int TextAppearance_Compat_Notification_Info
com.example.revolut.rates.R$attr: int layout_constraintHeight_percent
io.reactivex.Single: io.reactivex.SingleObserver subscribeWith(io.reactivex.SingleObserver)
androidx.constraintlayout.solver.GoalRow
kotlin.collections.SetsKt__SetsKt: java.util.LinkedHashSet linkedSetOf(java.lang.Object[])
io.reactivex.internal.operators.flowable.BlockingFlowableNext: BlockingFlowableNext(org.reactivestreams.Publisher)
androidx.swiperefreshlayout.R$styleable: int[] GradientColorItem
kotlin.jvm.internal.SpreadBuilder
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Large
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function getOnConnectableFlowableAssembly()
androidx.core.content.PermissionChecker: int checkCallingOrSelfPermission(android.content.Context,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: long serialVersionUID
kotlin.coroutines.CoroutineContext$Element$DefaultImpls
io.reactivex.Observable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function,boolean,int)
androidx.core.ktx.R$attr: int fontVariationSettings
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1
android.support.v4.media.session.MediaSessionCompat: void setCaptioningEnabled(boolean)
androidx.core.view.WindowCompat
kotlinx.coroutines.Unconfined
androidx.databinding.library.BuildConfig: int VERSION_CODE
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int matchConstraintDefaultHeight
io.reactivex.Observable: io.reactivex.Observable skip(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
kotlin.coroutines.experimental.SequenceBuilder: java.lang.Object yieldAll(java.lang.Iterable,kotlin.coroutines.experimental.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sortedDescending-QwZRm1k(long[])
dagger.internal.MapBuilder: dagger.internal.MapBuilder put(java.lang.Object,java.lang.Object)
io.reactivex.internal.observers.BlockingObserver: void onNext(java.lang.Object)
android.support.v4.media.session.MediaSessionCompat: void setPlaybackToRemote(androidx.media.VolumeProviderCompat)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(java.lang.Object[],kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.observable.BlockingObservableIterable: BlockingObservableIterable(io.reactivex.ObservableSource,int)
io.reactivex.internal.operators.observable.ObservableGroupBy$State: long serialVersionUID
io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function5)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short maxWith(short[],java.util.Comparator)
com.example.revolut.rates.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_EVENT
androidx.appcompat.R$dimen: int abc_disabled_alpha_material_light
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
kotlinx.coroutines.CommonPool: void shutdown$kotlinx_coroutines_core(long)
com.example.revolut.rates.R$styleable: int ConstraintSet_android_layout_marginBottom
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN
androidx.core.view.WindowInsetsCompat: WindowInsetsCompat(androidx.core.view.WindowInsetsCompat)
com.jakewharton.rxbinding3.core.R$dimen: int compat_button_padding_vertical_material
io.reactivex.internal.fuseable.SimpleQueue
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
kotlin.collections.MapsKt___MapsKt: boolean none(java.util.Map,kotlin.jvm.functions.Function1)
com.example.revolut.rates.view.adapter.CurrenciesAdapter: void access$setCurrentBase$p(com.example.revolut.rates.view.adapter.CurrenciesAdapter,androidx.lifecycle.MutableLiveData)
okhttp3.Cookie: java.lang.String name()
kotlin.sequences.DropTakeSequence
io.reactivex.internal.operators.flowable.FlowableScanSeed: void subscribeActual(org.reactivestreams.Subscriber)
com.example.revolut.rates.R$attr: int backgroundTint
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener
io.reactivex.internal.operators.observable.ObservableGroupJoin: void subscribeActual(io.reactivex.Observer)
androidx.collection.ArrayMap: boolean containsAll(java.util.Collection)
androidx.core.view.NestedScrollingChild2: boolean dispatchNestedScroll(int,int,int,int,int[],int)
com.example.revolut.rates.R$style: int Base_Widget_AppCompat_Button
android.support.v4.media.MediaBrowserCompat$MediaItem: int FLAG_PLAYABLE
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(short,int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA
kotlin.reflect.KClass$DefaultImpls: void typeParameters$annotations()
kotlinx.coroutines.channels.AbstractChannel$TryPollDesc: AbstractChannel$TryPollDesc(kotlinx.coroutines.internal.LockFreeLinkedListHead)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)
android.support.v4.media.session.IMediaControllerCallback: void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
com.example.revolut.rates.databinding.RatesItemBinding: androidx.appcompat.widget.AppCompatImageView currencyImage
com.example.revolut.rates.R$styleable: int AppCompatTheme_colorAccent
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestInnerSubscriber: long serialVersionUID
androidx.databinding.ViewStubProxy: void setOnInflateListener(android.view.ViewStub$OnInflateListener)
androidx.core.view.ViewGroupKt$iterator$1: java.lang.Object next()
kotlinx.coroutines.CompletedExceptionallyKt
androidx.appcompat.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,int)
com.example.revolut.rates.R$layout: int abc_search_view
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver$OtherObserver: long serialVersionUID
com.example.revolut.rates.R$id: int action_image
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onContentScrollStarted()
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean drawChild(android.graphics.Canvas,android.view.View,long)
dagger.android.support.R$style: int Widget_AppCompat_Light_ActionBar_Solid
androidx.core.view.MotionEventCompat: int AXIS_PRESSURE
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] sliceArray-c0bezYM(byte[],kotlin.ranges.IntRange)
androidx.appcompat.view.ActionBarPolicy: int getTabContainerHeight()
androidx.vectordrawable.R$styleable: int[] GradientColorItem
dagger.android.support.R$styleable: int MenuView_subMenuArrow
io.reactivex.internal.operators.completable.CompletableCreate: CompletableCreate(io.reactivex.CompletableOnSubscribe)
io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher)
retrofit2.http.Part
com.jakewharton.rxbinding3.core.R$styleable: int GradientColor_android_type
okhttp3.internal.connection.RouteSelector$Selection: okhttp3.Route next()
io.reactivex.internal.observers.BlockingMultiObserver: java.lang.Object blockingGet()
androidx.fragment.app.FragmentTabHost: void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle)
androidx.databinding.adapters.ToolbarBindingAdapter
kotlin.ReplaceWith
androidx.appcompat.app.WindowDecorActionBar: void enableContentAnimations(boolean)
androidx.databinding.ObservableMap$OnMapChangedCallback
io.reactivex.disposables.CompositeDisposable: int size()
okhttp3.EventListener$Factory
kotlin.reflect.KClass$DefaultImpls: void isAbstract$annotations()
androidx.core.app.RemoteInput: boolean isDataOnly()
kotlin.text.StringsKt___StringsKt: java.lang.Object foldIndexed(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function3)
androidx.loader.R$drawable: int notification_bg_low
androidx.recyclerview.widget.LinearSnapHelper
com.example.revolut.rates.databinding.ActivityMainBinding: com.example.revolut.rates.databinding.ActivityMainBinding bind(android.view.View)
androidx.appcompat.widget.ListPopupWindow: boolean isShowing()
androidx.fragment.app.Fragment: boolean isRemoving()
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter CLASS
androidx.drawerlayout.R$styleable: int GradientColor_android_startY
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sumOfULong(kotlin.ULong[])
com.google.gson.JsonPrimitive: short getAsShort()
kotlinx.coroutines.CoroutineDispatcher: void releaseInterceptedContinuation(kotlin.coroutines.Continuation)
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind valueOf(java.lang.String)
io.reactivex.internal.operators.parallel.ParallelFromArray: ParallelFromArray(org.reactivestreams.Publisher[])
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle
io.reactivex.MaybeEmitter: void onComplete()
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_ALWAYS
kotlin.coroutines.experimental.CombinedContext: java.lang.String toString()
io.reactivex.internal.operators.maybe.MaybeNever: void subscribeActual(io.reactivex.MaybeObserver)
androidx.asynclayoutinflater.R$id: int right_side
androidx.constraintlayout.solver.widgets.Optimizer: Optimizer()
androidx.appcompat.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PAUSE
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()
io.reactivex.internal.subscribers.InnerQueuedSubscriber: void onNext(java.lang.Object)
androidx.appcompat.R$id: int uniform
kotlin.reflect.KCallable
androidx.core.view.ViewPropertyAnimatorUpdateListener: void onAnimationUpdate(android.view.View)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.databinding.adapters.LinearLayoutBindingAdapter: LinearLayoutBindingAdapter()
kotlin.text.CharCategory: kotlin.text.CharCategory$Companion Companion
androidx.appcompat.app.AppCompatDelegate: void setTitle(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(boolean[],java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysJvmKt: double[] copyInto(double[],double[],int,int,int)
androidx.appcompat.R$id: int listMode
io.reactivex.internal.operators.flowable.FlowableScan
androidx.core.widget.ListViewAutoScrollHelper: void scrollTargetBy(int,int)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder setType(okhttp3.MediaType)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
io.reactivex.observers.SafeObserver: void onComplete()
androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
io.reactivex.CompletableTransformer
com.jakewharton.rxbinding3.core.R$attr: int fontProviderFetchStrategy
com.jakewharton.rxbinding3.widget.RxAdapterView: io.reactivex.Observable itemLongClicks(android.widget.AdapterView,kotlin.jvm.functions.Function0)
androidx.core.app.NotificationCompat$BigPictureStyle
androidx.core.R$dimen: int compat_control_corner_material
androidx.core.view.ActionProvider: void reset()
androidx.databinding.CallbackRegistry: void remove(java.lang.Object)
io.reactivex.internal.schedulers.AbstractDirectTask: void setFuture(java.util.concurrent.Future)
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo
androidx.print.PrintHelper: int SCALE_MODE_FIT
kotlin.collections.ArraysKt___ArraysKt: int first(int[])
io.reactivex.Maybe: io.reactivex.Maybe retry(long)
kotlin.Result$Failure: boolean equals(java.lang.Object)
com.example.revolut.rates.R$color: int color_grey_500
io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit)
androidx.appcompat.R$dimen: int highlight_alpha_material_colored
com.example.revolut.rates.R$string: int abc_font_family_display_4_material
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int CHAIN_PACKED
io.reactivex.internal.operators.completable.CompletableMergeArray
io.reactivex.internal.util.EndConsumerHelper: void reportDoubleSubscription(java.lang.Class)
androidx.loader.R$style: int Widget_Compat_NotificationActionContainer
kotlinx.coroutines.JobSupport: boolean isCancelled()
io.reactivex.plugins.RxJavaPlugins: void setIoSchedulerHandler(io.reactivex.functions.Function)
io.reactivex.internal.operators.maybe.MaybeNever
androidx.collection.SparseArrayCompat: SparseArrayCompat(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(int[],kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver$OtherObserver: long serialVersionUID
androidx.core.app.NotificationCompat$Action: NotificationCompat$Action(int,java.lang.CharSequence,android.app.PendingIntent)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte firstOrNull(byte[],kotlin.jvm.functions.Function1)
io.reactivex.internal.operators.parallel.ParallelSortedJoin: ParallelSortedJoin(io.reactivex.parallel.ParallelFlowable,java.util.Comparator)
io.reactivex.internal.operators.flowable.FlowableReduce: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.ToolbarWidgetWrapper: void restoreHierarchyState(android.util.SparseArray)
androidx.coordinatorlayout.R$attr: int statusBarBackground
kotlin.ranges.UIntProgression: int getFirst()
androidx.cursoradapter.widget.SimpleCursorAdapter: androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter()
androidx.appcompat.R$style: int Widget_AppCompat_RatingBar_Small
retrofit2.http.POST
com.google.gson.stream.JsonReader: void endArray()
io.reactivex.internal.operators.observable.ObservablePublish: io.reactivex.ObservableSource publishSource()
androidx.core.util.AtomicFileKt: byte[] readBytes(android.util.AtomicFile)
io.reactivex.subjects.PublishSubject: java.lang.Throwable getThrowable()
io.reactivex.internal.subscriptions.BasicIntQueueSubscription: long serialVersionUID
androidx.appcompat.app.AppCompatDelegate: void setContentView(int)
okhttp3.HttpUrl: int port()
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function getSingleSchedulerHandler()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(long[],java.lang.Iterable)
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: ArgbEvaluator()
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
androidx.appcompat.graphics.drawable.StateListDrawable: boolean onStateChange(int[])
androidx.fragment.R$id: int info
androidx.appcompat.app.WindowDecorActionBar: void setLogo(android.graphics.drawable.Drawable)
androidx.core.widget.AutoSizeableTextView: boolean PLATFORM_SUPPORTS_AUTOSIZE
kotlin.ranges.RangesKt___RangesKt: java.lang.Short toShortExactOrNull(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onMeasure(int,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List slice(java.util.List,java.lang.Iterable)
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBarOverlay
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_CALL
kotlin.sequences.SequencesKt___SequencesKt: java.lang.String joinToString(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.EmptySet: java.lang.String toString()
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback
androidx.appcompat.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
androidx.appcompat.view.SupportActionModeWrapper: boolean isTitleOptional()
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect)
okhttp3.EventListener: void requestHeadersStart(okhttp3.Call)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onTouchEvent(android.view.MotionEvent)
androidx.core.view.MenuItemCompat: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
com.google.gson.internal.GsonBuildConfig: java.lang.String VERSION
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isShowingHintText()
io.reactivex.functions.Function6
com.example.revolut.rates.R$styleable: int AppCompatTheme_dropDownListViewStyle
io.reactivex.internal.operators.single.SingleOnErrorReturn
androidx.constraintlayout.solver.Metrics: long constraints
kotlinx.coroutines.channels.ActorKt: kotlinx.coroutines.channels.SendChannel actor(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
androidx.documentfile.provider.DocumentFile: boolean canRead()
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PLAY
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context)
androidx.versionedparcelable.VersionedParcel: void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel)
io.reactivex.internal.schedulers.ScheduledDirectPeriodicTask: void run()
kotlin.text.StringsKt__StringsJVMKt: java.util.List split$default(java.lang.CharSequence,java.util.regex.Pattern,int,int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int)
okhttp3.internal.Util: java.util.List immutableList(java.util.List)
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable: void subscribeActual(io.reactivex.Observer)
okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)
kotlinx.coroutines.AbstractCoroutine: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: byte[] sliceArray(byte[],kotlin.ranges.IntRange)
kotlin.Experimental$Level
androidx.appcompat.R$styleable: int TextAppearance_android_textColor
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension: RecyclerView$ViewCacheExtension()
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(float[],kotlin.jvm.functions.Function1)
io.reactivex.Flowable: java.lang.Object blockingFirst(java.lang.Object)
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mNeutralButtonListener
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_6
androidx.asynclayoutinflater.R$attr: int fontStyle
io.reactivex.internal.subscribers.BlockingSubscriber: void request(long)
androidx.appcompat.R$styleable: int AppCompatImageView_srcCompat
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(double)
androidx.swiperefreshlayout.R$color: int secondary_text_default_material_light
io.reactivex.internal.operators.single.SingleDoOnDispose$DoOnDisposeObserver: long serialVersionUID
com.jakewharton.rxbinding3.view.RxView
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke()
androidx.media.R$styleable: int FontFamily_fontProviderCerts
io.reactivex.functions.Function3: java.lang.Object apply(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.jvm.internal.IntCompanionObject: int MAX_VALUE
com.example.revolut.rates.R$style: int Base_DialogWindowTitle_AppCompat
io.reactivex.internal.operators.observable.ObservableIgnoreElements: void subscribeActual(io.reactivex.Observer)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_NULL_SHA
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: ConstraintTableLayout(int,int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(float[],java.lang.Iterable)
io.reactivex.Completable: io.reactivex.Completable retry(io.reactivex.functions.BiPredicate)
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: java.lang.Object updatedNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.reactivex.Completable: io.reactivex.Completable timeout(long,java.util.concurrent.TimeUnit)
androidx.loader.R$attr
androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)
com.jakewharton.rxbinding3.widget.SeekBarStartChangeEvent: int hashCode()
androidx.constraintlayout.solver.widgets.ConstraintWidget: ConstraintWidget(int,int)
com.example.revolut.rates.R$style: int Widget_AppCompat_ActionBar
kotlinx.coroutines.DispatchException
com.example.revolut.rates.R$id: int textSpacerNoButtons
kotlinx.coroutines.ExecutorCoroutineDispatcher: java.util.concurrent.Executor getExecutor()
io.reactivex.internal.schedulers.ScheduledRunnable: void setFuture(java.util.concurrent.Future)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-ZRhS8yI(long[],kotlin.ranges.IntRange)
kotlinx.coroutines.ScheduledKt: java.lang.Object withTimeout$default(long,java.util.concurrent.TimeUnit,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,int,java.lang.Object)
androidx.core.database.CursorWindowCompat
io.reactivex.Flowable: io.reactivex.Flowable concatMapSingleDelayError(io.reactivex.functions.Function)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable[] sortedArrayDescending(java.lang.Comparable[])
io.reactivex.internal.operators.flowable.FlowablePublishAlt: org.reactivestreams.Publisher source()
androidx.core.view.MenuItemCompat: void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Double min(java.lang.Iterable)
androidx.core.provider.FontRequest: java.lang.String getProviderAuthority()
androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)
android.support.v4.media.session.MediaSessionCompat: void setPlaybackToLocal(int)
kotlin.sequences.DropSequence$iterator$1
androidx.media.AudioAttributesCompat: int USAGE_VOICE_COMMUNICATION_SIGNALLING
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: int getSize()
androidx.collection.LongSparseArray: java.lang.String toString()
androidx.viewpager.R$layout
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
androidx.fragment.app.Fragment: android.view.View getView()
androidx.fragment.app.Fragment: java.lang.Object getEnterTransition()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setReverseLayout(boolean)
androidx.loader.R$id: int text2
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
androidx.legacy.v4.R$layout
io.reactivex.internal.operators.flowable.BlockingFlowableLatest: BlockingFlowableLatest(org.reactivestreams.Publisher)
io.reactivex.subjects.ReplaySubject: boolean hasThrowable()
androidx.core.text.SpannableStringBuilderKt
androidx.core.R$dimen: int notification_top_pad
android.support.v4.media.session.IMediaControllerCallback: void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
androidx.core.graphics.RectKt: float component3(android.graphics.RectF)
androidx.appcompat.app.WindowDecorActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,int)
com.jakewharton.rxbinding3.core.R$styleable: int FontFamilyFont_android_ttcIndex
dagger.android.support.R$attr: int collapseIcon
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: long serialVersionUID
androidx.appcompat.R$id: int checkbox
com.google.gson.FieldAttributes: java.lang.String getName()
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onStop()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: SupportActionModeWrapper$CallbackWrapper(android.content.Context,android.view.ActionMode$Callback)
androidx.appcompat.view.menu.MenuBuilder: void onItemsChanged(boolean)
androidx.collection.CircularArray: void removeFromEnd(int)
androidx.lifecycle.ViewModelStores: androidx.lifecycle.ViewModelStore of(androidx.fragment.app.FragmentActivity)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: boolean contains(boolean)
io.reactivex.internal.operators.flowable.FlowableMaterialize: FlowableMaterialize(io.reactivex.Flowable)
kotlin.UIntArray: kotlin.UIntArray box-impl(int[])
io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function8)
okhttp3.internal.http2.Http2Connection$Builder
androidx.core.app.NotificationCompat$BigPictureStyle: NotificationCompat$BigPictureStyle(androidx.core.app.NotificationCompat$Builder)
kotlin.LateinitKt: void isInitialized$annotations(kotlin.reflect.KProperty0)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(char[],java.util.Collection)
androidx.legacy.v4.R
androidx.databinding.adapters.SearchViewBindingAdapter$OnSuggestionClick
kotlinx.coroutines.channels.ConflatedChannel: ConflatedChannel()
io.reactivex.internal.schedulers.ScheduledRunnable: void run()
androidx.core.view.ActionProvider: void refreshVisibility()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] requireNoNulls(java.lang.Object[])
okhttp3.internal.http2.PushObserver: boolean onData(int,okio.BufferedSource,int,boolean)
com.example.revolut.rates.R$attr: int actionModeWebSearchDrawable
com.example.revolut.rates.R$id: int italic
androidx.databinding.ObservableChar: ObservableChar(androidx.databinding.Observable[])
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.Observable: io.reactivex.Single count()
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object getPrev()
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()
androidx.lifecycle.MediatorLiveData: MediatorLiveData()
androidx.documentfile.provider.DocumentFile: boolean isFile()
androidx.media.R$drawable: int notification_bg_low_normal
androidx.core.math.MathUtils
io.reactivex.internal.operators.observable.ObservableInternalHelper: java.util.concurrent.Callable replayCallable(io.reactivex.Observable)
androidx.appcompat.app.AppCompatDelegate: void setContentView(android.view.View)
io.reactivex.internal.observers.InnerQueuedObserver: io.reactivex.internal.fuseable.SimpleQueue queue()
dagger.android.support.R$color: int switch_thumb_disabled_material_dark
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: float getScrimOpacity(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
io.reactivex.Observable: io.reactivex.Observable switchIfEmpty(io.reactivex.ObservableSource)
io.reactivex.processors.MulticastProcessor: void start()
androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$1: void onTransitionPause(android.transition.Transition)
io.reactivex.internal.observers.BasicFuseableObserver: void afterDownstream()
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence removeSuffix(java.lang.CharSequence,java.lang.CharSequence)
androidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
kotlinx.coroutines.CoroutineId: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext)
dagger.android.support.R$style: int Base_AlertDialog_AppCompat_Light
io.reactivex.internal.operators.single.SingleDelayWithCompletable: SingleDelayWithCompletable(io.reactivex.SingleSource,io.reactivex.CompletableSource)
androidx.core.view.ViewGroupKt: void setMargins(android.view.ViewGroup$MarginLayoutParams,int)
io.reactivex.internal.operators.flowable.FlowableConcatWithSingle: void subscribeActual(org.reactivestreams.Subscriber)
kotlin.jvm.internal.LongCompanionObject: int SIZE_BITS
androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent[] getIntents()
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
kotlinx.coroutines.Deferred: java.lang.Object getCompleted()
okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine get(okhttp3.Response)
kotlin.random.XorWowRandom
okio.BufferedSink: void flush()
androidx.core.view.ViewGroupKt: void minusAssign(android.view.ViewGroup,android.view.View)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: int indexOf(double)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNotNull(java.lang.Object[])
com.example.revolut.rates.R$styleable: int SearchView_android_inputType
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setParent(androidx.constraintlayout.solver.widgets.ConstraintWidget)
com.example.revolut.rates.R$dimen: int tooltip_y_offset_non_touch
io.reactivex.internal.operators.mixed.MaterializeSingleObserver: MaterializeSingleObserver(io.reactivex.SingleObserver)
kotlin.collections.ArraysKt___ArraysKt: char last(char[])
io.reactivex.internal.observers.BlockingFirstObserver
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)
kotlin.contracts.CallsInPlace
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type CENTER
com.example.revolut.rates.R$attr: int alertDialogButtonGroupStyle
com.example.revolut.rates.R$attr: int colorControlNormal
kotlin.io.ByteStreamsKt: kotlin.collections.ByteIterator iterator(java.io.BufferedInputStream)
dagger.internal.MemoizedSentinel
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mSkipSolver
com.example.revolut.rates.R$dimen: int abc_dialog_min_width_major
androidx.core.util.AtomicFileKt
androidx.core.app.NotificationCompat: java.lang.String EXTRA_AUDIO_CONTENTS_URI
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.BiFunction getOnSingleSubscribe()
retrofit2.adapter.rxjava2.Result: retrofit2.adapter.rxjava2.Result response(retrofit2.Response)
dagger.android.support.R$attr: int indeterminateProgressStyle
com.google.gson.annotations.SerializedName: java.lang.String value()
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_PREMIUM_ACCOUNT_REQUIRED
kotlinx.coroutines.AbstractCoroutine: void onCancellation(java.lang.Throwable)
kotlin.coroutines.experimental.CombinedContext
kotlin.text.MatchResult
androidx.appcompat.app.ActionBar: androidx.appcompat.app.ActionBar$Tab getTabAt(int)
androidx.core.view.ViewCompat: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
com.example.revolut.rates.R$styleable: int AppCompatImageView_srcCompat
okio.Buffer: okio.Buffer writeUtf8(java.lang.String)
kotlinx.coroutines.sync.Mutex$DefaultImpls: void unlock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,int,java.lang.Object)
io.reactivex.subjects.UnicastSubject
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality COMMON_NUMBER_SEPARATOR
androidx.recyclerview.widget.RecyclerView$LayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
io.reactivex.subscribers.TestSubscriber: void onStart()
androidx.appcompat.R$color: int secondary_text_disabled_material_dark
kotlin.sequences.SequencesKt___SequencesKt: double averageOfShort(kotlin.sequences.Sequence)
io.reactivex.Single: io.reactivex.Single takeUntil(org.reactivestreams.Publisher)
kotlinx.coroutines.channels.ActorKt: kotlinx.coroutines.channels.ActorJob actor(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.ListPopupWindow: int WRAP_CONTENT
androidx.core.view.ViewCompat: android.view.ViewParent getParentForAccessibility(android.view.View)
io.reactivex.Single: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)
kotlinx.coroutines.channels.ChannelsKt
kotlin.coroutines.experimental.SequenceBuilder
androidx.constraintlayout.solver.widgets.Barrier: Barrier()
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(int[],kotlin.jvm.functions.Function1)
com.example.revolut.rates.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintTop_toBottomOf
io.reactivex.Observable: io.reactivex.Observable concatDelayError(io.reactivex.ObservableSource,int,boolean)
okio.Source
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$1: void onTransitionStart(android.transition.Transition)
androidx.viewpager.R$style: int Widget_Compat_NotificationActionContainer
androidx.core.util.LruCacheKt$lruCache$1: LruCacheKt$lruCache$1()
androidx.core.view.WindowInsetsCompat: boolean hasStableInsets()
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: int getDragDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)
dagger.android.support.R$styleable: int[] ActivityChooserView
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.ChildJob: kotlinx.coroutines.Job childJob
com.example.revolut.rates.R$style: int Base_Animation_AppCompat_Tooltip
kotlin.jvm.internal.markers.KMutableMap
okhttp3.internal.io.FileSystem: okio.Sink sink(java.io.File)
io.reactivex.internal.operators.observable.ObservableSubscribeOn: void subscribeActual(io.reactivex.Observer)
androidx.slidingpanelayout.R$drawable: int notification_template_icon_low_bg
okhttp3.internal.annotations.EverythingIsNonNull
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer: long serialVersionUID
kotlin.collections.ArraysKt___ArraysKt: double average(byte[])
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget getLast()
